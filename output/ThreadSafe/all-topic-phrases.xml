<?xml version='1.0' ?>
<topics>
  <topic id="0" alpha="0.007594003556090343" totalTokens="498" titles="checkpoint, barrier, receive, current, future, buffer, channel, num, exception, store">
	<word weight="0.12650602409638553" count="63">checkpoint</word>
	<word weight="0.09036144578313253" count="45">barrier</word>
	<word weight="0.0783132530120482" count="39">receive</word>
	<word weight="0.04618473895582329" count="23">current</word>
	<word weight="0.04618473895582329" count="23">future</word>
	<word weight="0.04417670682730924" count="22">buffer</word>
	<word weight="0.040160642570281124" count="20">channel</word>
	<word weight="0.02610441767068273" count="13">num</word>
	<word weight="0.02610441767068273" count="13">exception</word>
	<word weight="0.024096385542168676" count="12">store</word>
	<word weight="0.024096385542168676" count="12">handler</word>
	<word weight="0.024096385542168676" count="12">info</word>
	<word weight="0.020080321285140562" count="10">input</word>
	<word weight="0.020080321285140562" count="10">synchronize</word>
	<word weight="0.018072289156626505" count="9">complete</word>
	<word weight="0.01606425702811245" count="8">coordinator</word>
	<word weight="0.01606425702811245" count="8">notify</word>
	<word weight="0.014056224899598393" count="7">request</word>
	<word weight="0.012048192771084338" count="6">pend</word>
	<word weight="0.012048192771084338" count="6">unaligner</word>
	<phrase weight="0.020833333333333332" count="1">exception checkpoint checkpoint</phrase>
	<phrase weight="0.020833333333333332" count="1">exception exception checkpoint exception barrier barrier checkpoint decline subsume checkpoint pend complete current checkpoint</phrase>
	<phrase weight="0.020833333333333332" count="1">synchronize set cancel checkpoint cancel current receive checkpoint cancel current receive checkpoint cancel num barrier receive false reset pend checkpoint current receive checkpoint cancel true synchronize</phrase>
	<phrase weight="0.020833333333333332" count="1">checkpoint current receive checkpoint future util complete future checkpoint current receive checkpoint</phrase>
	<phrase weight="0.020833333333333332" count="1">synchronize notify barrier receive checkpoint barrier barrier input</phrase>
	<phrase weight="0.020833333333333332" count="1">num barrier receive num open channel barrier receive future complete override synchronize notify buffer receive buffer buffer input channel info channel info store buffer channel info checkpoint coordinator channel</phrase>
	<phrase weight="0.020833333333333332" count="1">safe unaligner</phrase>
	<phrase weight="0.020833333333333332" count="1">barrier receive future complete exceptionally exception current receive checkpoint barrier store buffer entry set store buffer store buffer set true num barrier receive barrier receive future completable future checkpoint coordinator</phrase>
	<phrase weight="0.020833333333333332" count="1">deregister completable future await</phrase>
	<phrase weight="0.020833333333333332" count="1">input gate flat map gate gate channel info</phrase>
	<phrase weight="0.020833333333333332" count="1">synchronize completable future barrier receive future</phrase>
	<phrase weight="0.020833333333333332" count="1">safe unaligner subtask checkpoint coordinator checkpoint coordinator checkpoint barrier unaligner handler input gate input gate store buffer</phrase>
	<phrase weight="0.020833333333333332" count="1">deregister flight request deregister request phaser arrive deregister future complete flight request register prior</phrase>
	<phrase weight="0.020833333333333332" count="1">checkpoint barrier barrier checkpoint</phrase>
	<phrase weight="0.020833333333333332" count="1">barrier current receive checkpoint</phrase>
	<phrase weight="0.020833333333333332" count="1">warn receive checkpoint barrier checkpoint complete current</phrase>
	<phrase weight="0.020833333333333332" count="1">checkpoint barrier unaligner current consume checkpoint current receive checkpoint num open channel subtask checkpoint coordinator checkpoint coordinator</phrase>
	<phrase weight="0.020833333333333332" count="1">input channel receive barrier newly arrive buffer</phrase>
	<phrase weight="0.020833333333333332" count="1">store buffer</phrase>
	<phrase weight="0.020833333333333332" count="1">collect collector map function identity info false num open</phrase>
  </topic>
  <topic id="1" alpha="0.027203185319070018" totalTokens="911" titles="buffer, result, operation, partition, key, access, size, tracker, complete, error">
	<word weight="0.10428100987925357" count="95">buffer</word>
	<word weight="0.0845225027442371" count="77">result</word>
	<word weight="0.07244785949506037" count="66">operation</word>
	<word weight="0.04720087815587267" count="43">partition</word>
	<word weight="0.04610318331503842" count="42">key</word>
	<word weight="0.04500548847420417" count="41">access</word>
	<word weight="0.036223929747530186" count="33">size</word>
	<word weight="0.02305159165751921" count="21">tracker</word>
	<word weight="0.02305159165751921" count="21">complete</word>
	<word weight="0.02305159165751921" count="21">error</word>
	<word weight="0.019758507135016465" count="18">future</word>
	<word weight="0.01646542261251372" count="15">cache</word>
	<word weight="0.01646542261251372" count="15">check</word>
	<word weight="0.014270032930845226" count="13">create</word>
	<word weight="0.012074643249176729" count="11">recycler</word>
	<word weight="0.012074643249176729" count="11">track</word>
	<word weight="0.012074643249176729" count="11">datum</word>
	<word weight="0.010976948408342482" count="10">precondition</word>
	<word weight="0.010976948408342482" count="10">give</word>
	<word weight="0.009879253567508232" count="9">register</word>
	<phrase weight="0.05405405405405406" count="2">process buffer</phrase>
	<phrase weight="0.05405405405405406" count="2">result partition</phrase>
	<phrase weight="0.05405405405405406" count="2">buffer builder buffer builder</phrase>
	<phrase weight="0.05405405405405406" count="2">buffer provider</phrase>
	<phrase weight="0.05405405405405406" count="2">buffer builder</phrase>
	<phrase weight="0.02702702702702703" count="1">completable future</phrase>
	<phrase weight="0.02702702702702703" count="1">flush process buffer</phrase>
	<phrase weight="0.02702702702702703" count="1">buffer buffer</phrase>
	<phrase weight="0.02702702702702703" count="1">flush subpartition index flush protect deserialize buffer buffer buffer</phrase>
	<phrase weight="0.02702702702702703" count="1">track partition key compute key ignore partition partition partition hash set partition</phrase>
	<phrase weight="0.02702702702702703" count="1">number subpartition buffer</phrase>
	<phrase weight="0.02702702702702703" count="1">async complete operation result cache duration seconds logger logger logger factory logger complete operation cache progress asynchronous operation map result access tracker register operation trigger concurrent hash map cache result complete operation cache result access tracker complete operation complete operation cache ticker system ticker visible test complete operation cache ticker ticker complete operation cache builder builder expire write complete operation result cache duration seconds time unit seconds removal listener removal listener result access tracker removal notification removal notification evict precondition check state removal notification key precondition check state removal notification shut cache</phrase>
	<phrase weight="0.02702702702702703" count="1">build deserialize buffer buffer buffer</phrase>
	<phrase weight="0.02702702702702703" count="1">key set</phrase>
	<phrase weight="0.02702702702702703" count="1">result access result evict cache access longer process shut mark result access avoid wait indefinitely removal notification mark access logger info evict result trigger ttl expire removal notification key trigger complete operation result cache duration seconds ticker ticker build register ongoing operation cache param operation result future future operation result register ongoing operation operation key completable future operation result future result access tracker progress result access tracker progress register operation trigger put operation key progress operation result future complete result error error complete operation put operation key progress finish operation result complete operation put operation key progress finish operation left error register operation trigger remove operation key operation result code throwable code completable future finish code unknown operation key</phrase>
	<phrase weight="0.02702702702702703" count="1">buffer provider buffer provider</phrase>
	<phrase weight="0.02702702702702703" count="1">operation key result access tracker access operation result error</phrase>
	<phrase weight="0.02702702702702703" count="1">safe collect result partition</phrase>
	<phrase weight="0.02702702702702703" count="1">result access tracker result access tracker result access tracker register operation trigger operation key result access tracker complete operation present operation key unknown operation key</phrase>
	<phrase weight="0.02702702702702703" count="1">finish buffer</phrase>
  </topic>
  <topic id="2" alpha="0.0037156679263672795" totalTokens="530" titles="job, leader, master, connection, rpc, manager, address, registration, log, target">
	<word weight="0.16792452830188678" count="89">job</word>
	<word weight="0.08679245283018867" count="46">leader</word>
	<word weight="0.07169811320754717" count="38">master</word>
	<word weight="0.0509433962264151" count="27">connection</word>
	<word weight="0.0509433962264151" count="27">rpc</word>
	<word weight="0.03962264150943396" count="21">manager</word>
	<word weight="0.033962264150943396" count="18">address</word>
	<word weight="0.02830188679245283" count="15">registration</word>
	<word weight="0.02830188679245283" count="15">log</word>
	<word weight="0.024528301886792454" count="13">target</word>
	<word weight="0.022641509433962263" count="12">listener</word>
	<word weight="0.022641509433962263" count="12">current</word>
	<word weight="0.018867924528301886" count="10">lock</word>
	<word weight="0.016981132075471698" count="9">stop</word>
	<word weight="0.01509433962264151" count="8">success</word>
	<word weight="0.01509433962264151" count="8">debug</word>
	<word weight="0.01509433962264151" count="8">service</word>
	<word weight="0.013207547169811321" count="7">register</word>
	<word weight="0.011320754716981131" count="6">leadership</word>
	<word weight="0.009433962264150943" count="5">failure</word>
	<phrase weight="0.08333333333333333" count="1">job manager leader listener</phrase>
	<phrase weight="0.08333333333333333" count="1">exception exception stop log debug leader retrieval listener report exception job service longer run job leader service simple job exception job leader listener handle</phrase>
	<phrase weight="0.08333333333333333" count="1">exception rpc connection job manager task manager connection job manager register rpc connection extend register rpc connection job master job master gateway registration success job manager register rpc connection logger log string target address job master job master executor executor log target address job master executor override protect retry registration job master job master gateway registration success generate registration job leader service job manager retry registration log rpc service job manager job master gateway target address target leader retry registration configuration owner address location override protect registration success registration success success filter registration attempt object equal target leader current job master log info successful registration job manager job target address job job leader listener job manager gain leadership job target gateway success log debug encounter obsolete job manager registration success leader session target address target leader override protect registration failure</phrase>
	<phrase weight="0.08333333333333333" count="1">leader job service longer run job leader service simple job job master job master job master uuid leader log debug leader information job address leader job leader address job master leader address leader address empty leader lose leadership leader job manager lose leadership optional nullable current job master close rpc connection check connect leader object equal job master current job master log debug ongoing attempt connect leader job ignore duplicate leader information job close rpc connection open rpc connection leader address job master send callback lock scope job manager lose leadership present job master job leader listener job manager lose leadership job job master guard lock open rpc connection string leader address job master job master precondition check state current job master rpc connection open rpc connection previous connection</phrase>
	<phrase weight="0.08333333333333333" count="1">modification job manager leader listener rpc connection log debug reconnect unknown job master override</phrase>
	<phrase weight="0.08333333333333333" count="1">failure filter registration attempt object equal target leader current job master log info fail register job manager job target address job job leader listener handle</phrase>
	<phrase weight="0.08333333333333333" count="1">rpc connection current job master job master current job master synchronize lock current job master stop synchronize lock stop stop true close rpc connection reconnect synchronize lock stop log debug reconnect job manager leader listener stop rpc connection precondition check state rpc connection reconnect illegal</phrase>
	<phrase weight="0.08333333333333333" count="1">leader service</phrase>
	<phrase weight="0.08333333333333333" count="1">rpc connection rpc connection rpc connection close rpc connection current job master override handle</phrase>
	<phrase weight="0.08333333333333333" count="1">current job master job master rpc connection job manager register rpc connection log leader address job master rpc service executor log info register job manager leader leader address job master rpc connection start guard lock</phrase>
	<phrase weight="0.08333333333333333" count="1">leader address nullable string leader address nullable uuid leader optional job master job manager lose leadership optional empty synchronize lock stop log debug leader retrieval listener</phrase>
	<phrase weight="0.08333333333333333" count="1">leader retrieval listener object lock object job identify job leader job job rpc connection job leader guard lock nullable register rpc connection job master job master gateway registration success rpc connection leader current job leader guard lock nullable job master current job master state listener stop job manager leader listener job job job precondition check job stop</phrase>
  </topic>
  <topic id="3" alpha="0.012458318734061813" totalTokens="534" titles="lock, mail, state, thread, mailbox, empty, batch, check, queue, override">
	<word weight="0.1254681647940075" count="67">lock</word>
	<word weight="0.10112359550561797" count="54">mail</word>
	<word weight="0.06367041198501873" count="34">state</word>
	<word weight="0.05805243445692884" count="31">thread</word>
	<word weight="0.056179775280898875" count="30">mailbox</word>
	<word weight="0.03932584269662921" count="21">empty</word>
	<word weight="0.03745318352059925" count="20">batch</word>
	<word weight="0.0299625468164794" count="16">check</word>
	<word weight="0.028089887640449437" count="15">queue</word>
	<word weight="0.024344569288389514" count="13">override</word>
	<word weight="0.020599250936329586" count="11">condition</word>
	<word weight="0.020599250936329586" count="11">reentrant</word>
	<word weight="0.018726591760299626" count="10">unlock</word>
	<word weight="0.016853932584269662" count="9">head</word>
	<word weight="0.016853932584269662" count="9">put</word>
	<word weight="0.016853932584269662" count="9">priority</word>
	<word weight="0.016853932584269662" count="9">task</word>
	<word weight="0.0149812734082397" count="8">nonnull</word>
	<word weight="0.013108614232209739" count="7">optional</word>
	<word weight="0.013108614232209739" count="7">add</word>
	<phrase weight="0.125" count="1">override put nonnull mail mail reentrant lock lock lock lock lock check put state condition queue add mail mail true empty signal lock unlock override put nonnull mail mail mailbox thread check put state condition batch add mail reentrant lock lock lock lock lock check put state condition queue add mail mail true empty signal lock unlock nullable mail deque mail queue priority queue empty iterator mail iterator queue iterator iterator mail mail iterator mail priority priority iterator remove mail override list mail drain list mail drain mail array list batch batch clear reentrant lock lock lock lock lock drain mail add queue queue clear mail false drain mail lock unlock check mailbox thread mailbox thread illegal state</phrase>
	<phrase weight="0.125" count="1">guard lock state state open reference thread execute mailbox mail nonnull thread task mailbox thread current batch mail batch create</phrase>
	<phrase weight="0.125" count="1">illegal thread detect</phrase>
	<phrase weight="0.125" count="1">check mailbox thread check state condition mail head batch priority head head reentrant lock lock lock lock lock interruptibly mail head mail head mail queue priority empty await mail queue empty head mail lock unlock override create batch check mailbox thread mail batch deplete previous mailbox processor run main loop put add message directly batch call mailbox thread batch empty reentrant lock lock lock lock lock mail mail mail queue</phrase>
	<phrase weight="0.125" count="1">exception illegal state</phrase>
	<phrase weight="0.125" count="1">batch add mail mail false batch empty lock unlock override optional mail batch check mailbox thread check state condition optional nullable batch</phrase>
	<phrase weight="0.125" count="1">impl thread safe task mailbox impl implement task mailbox lock concurrent reentrant lock lock reentrant lock internal queue mail guard lock deque mail queue array deque condition trigger mailbox longer empty guard lock condition empty lock condition state mailbox lifecycle open quiesce</phrase>
	<phrase weight="0.125" count="1">create batch consume link batch deque mail batch array deque performance optimization mail queue empty reflect state link batch mail false task mailbox impl nonnull thread task mailbox thread task mailbox thread task mailbox thread visible test task mailbox impl thread current thread override mailbox thread thread current thread task mailbox thread override mail check mailbox thread batch empty mail override optional mail priority check mailbox thread check state condition mail head batch priority head optional head mail optional empty reentrant lock lock lock lock lock mail queue priority optional empty mail queue empty optional nullable lock unlock override nonnull mail priority</phrase>
  </topic>
  <topic id="4" alpha="0.029767053408670273" totalTokens="1683" titles="metric, store, heartbeat, task, job, string, manager, component, map, subtask">
	<word weight="0.1259655377302436" count="212">metric</word>
	<word weight="0.07308377896613191" count="123">store</word>
	<word weight="0.06654783125371361" count="112">heartbeat</word>
	<word weight="0.0629827688651218" count="106">task</word>
	<word weight="0.0451574569221628" count="76">job</word>
	<word weight="0.040998217468805706" count="69">string</word>
	<word weight="0.030303030303030304" count="51">manager</word>
	<word weight="0.027926322043969103" count="47">component</word>
	<word weight="0.027926322043969103" count="47">map</word>
	<word weight="0.027332144979203804" count="46">subtask</word>
	<word weight="0.026143790849673203" count="44">info</word>
	<word weight="0.0243612596553773" count="41">target</word>
	<word weight="0.021984551396316103" count="37">resource</word>
	<word weight="0.0196078431372549" count="33">monitor</word>
	<word weight="0.015448603683897801" count="26">dump</word>
	<word weight="0.0142602495543672" count="24">unmodifiable</word>
	<word weight="0.013071895424836602" count="22">source</word>
	<word weight="0.0106951871657754" count="18">scope</word>
	<word weight="0.0106951871657754" count="18">listener</word>
	<word weight="0.0106951871657754" count="18">add</word>
	<phrase weight="0.03225806451612903" count="1">executor main thread executor heartbeat target method</phrase>
	<phrase weight="0.03225806451612903" count="1">origin heartbeat target heartbeat payload heartbeat listener report payload</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat target remove resource</phrase>
	<phrase weight="0.03225806451612903" count="1">main thread executor log precondition check log heartbeat monitor factory heartbeat monitor factory heartbeat target concurrent hash map stop</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat target clear</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat resource</phrase>
	<phrase weight="0.03225806451612903" count="1">unmonitor target resource resource stop heartbeat monitor heartbeat monitor heartbeat target remove resource heartbeat monitor heartbeat monitor</phrase>
	<phrase weight="0.03225806451612903" count="1">thread safe heartbeat manager</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat timeout interval resource resource heartbeat listener heartbeat listener schedule</phrase>
	<phrase weight="0.03225806451612903" count="1">implement heartbeat manager heartbeat timeout interval milli seconds heartbeat timeout interval resource mark heartbeat signal resource resource heartbeat listener heartbeat manager associate heartbeat listener heartbeat listener executor service</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat monitor heartbeat monitor heartbeat target heartbeat monitor</phrase>
	<phrase weight="0.03225806451612903" count="1">check heartbeat listener heartbeat listener main thread executor precondition</phrase>
	<phrase weight="0.03225806451612903" count="1">target resource monitor resource heartbeat monitor heartbeat monitor heartbeat monitor</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat monitor resource heartbeat target main thread</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat listener heartbeat timeout interval heartbeat target put resource heartbeat monitor check stop meantime concurrent stop operation stop heartbeat monitor</phrase>
	<phrase weight="0.03225806451612903" count="1">receive heartbeat resource heartbeat origin heartbeat payload stop log debug receive heartbeat heartbeat origin report heartbeat heartbeat origin heartbeat payload heartbeat listener report payload heartbeat origin heartbeat payload</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat manager protect stop heartbeat manager</phrase>
	<phrase weight="0.03225806451612903" count="1">monitor target resource resource heartbeat target heartbeat target stop heartbeat target key resource log</phrase>
	<phrase weight="0.03225806451612903" count="1">getter resource resource resource heartbeat listener heartbeat listener heartbeat listener map resource heartbeat monitor heartbeat target heartbeat target heartbeat manager method</phrase>
	<phrase weight="0.03225806451612903" count="1">heartbeat resource resource heartbeat monitor heartbeat monitor heartbeat target resource heartbeat monitor heartbeat monitor heartbeat schedule executor main</phrase>
  </topic>
  <topic id="5" alpha="0.032338927720901085" totalTokens="899" titles="checkpoint, channel, request, state, write, task, exception, impl, override, result">
	<word weight="0.07897664071190211" count="71">checkpoint</word>
	<word weight="0.06117908787541713" count="55">channel</word>
	<word weight="0.06117908787541713" count="55">request</word>
	<word weight="0.05672969966629588" count="51">state</word>
	<word weight="0.041156840934371525" count="37">write</word>
	<word weight="0.04004449388209121" count="36">task</word>
	<word weight="0.030033370411568408" count="27">exception</word>
	<word weight="0.026696329254727477" count="24">impl</word>
	<word weight="0.025583982202447165" count="23">override</word>
	<word weight="0.024471635150166853" count="22">result</word>
	<word weight="0.02335928809788654" count="21">executor</word>
	<word weight="0.02335928809788654" count="21">thread</word>
	<word weight="0.018909899888765295" count="17">writer</word>
	<word weight="0.018909899888765295" count="17">start</word>
	<word weight="0.018909899888765295" count="17">log</word>
	<word weight="0.017797552836484983" count="16">max</word>
	<word weight="0.01557285873192436" count="14">debug</word>
	<word weight="0.014460511679644048" count="13">deque</word>
	<word weight="0.013348164627363738" count="12">dispatcher</word>
	<word weight="0.013348164627363738" count="12">factory</word>
	<phrase weight="0.031746031746031744" count="2">log debug</phrase>
	<phrase weight="0.031746031746031744" count="2">channel state write</phrase>
	<phrase weight="0.015873015873015872" count="1">check argument result task channel state write result find checkpoint checkpoint</phrase>
	<phrase weight="0.015873015873015872" count="1">cleanup request dispatcher fail cancellation exception exception noinspection atomic operation field exception</phrase>
	<phrase weight="0.015873015873015872" count="1">thread alive</phrase>
	<phrase weight="0.015873015873015872" count="1">task checkpoint info start seq num datum datum length enqueue write checkpoint info datum false override finish input checkpoint log debug finish input datum checkpoint task checkpoint enqueue</phrase>
	<phrase weight="0.015873015873015872" count="1">max checkpoint max checkpoint executor executor override start checkpoint checkpoint option checkpoint option log debug start checkpoint task checkpoint checkpoint option channel state write result</phrase>
	<phrase weight="0.015873015873015872" count="1">capacity channel state write request dispatcher dispatcher blocking deque channel state write request deque thread thread exception</phrase>
	<phrase weight="0.015873015873015872" count="1">absent checkpoint precondition check state result</phrase>
	<phrase weight="0.015873015873015872" count="1">deque interrupted</phrase>
	<phrase weight="0.015873015873015872" count="1">open executor start override close exception log debug close dropping checkpoint</phrase>
	<phrase weight="0.015873015873015872" count="1">state exception</phrase>
	<phrase weight="0.015873015873015872" count="1">channel priority event</phrase>
	<phrase weight="0.015873015873015872" count="1">cleanup log debug aborting checkpoint task checkpoint enqueue channel state write request abort checkpoint true abort start enqueue channel state write request abort checkpoint false abort enqueue start cleanup result remove checkpoint override channel state write result</phrase>
	<phrase weight="0.015873015873015872" count="1">drain stream auto closeable map request request cancel collect collector list override start</phrase>
	<phrase weight="0.015873015873015872" count="1">test run loop exception</phrase>
	<phrase weight="0.015873015873015872" count="1">writer impl internal thread safe channel state writer impl implement channel state writer logger log logger factory logger channel</phrase>
	<phrase weight="0.015873015873015872" count="1">perform inside worker front executor submit priority request executor</phrase>
	<phrase weight="0.015873015873015872" count="1">clear executor close enqueue channel state write request request front state check previous</phrase>
	<phrase weight="0.015873015873015872" count="1">result max checkpoint create link channel state writer impl link max checkpoint link max checkpoint channel state writer impl string task checkpoint storage worker view stream factory resolver task stream factory resolver max checkpoint create link channel state writer impl link channel state serializer impl link channel state serializer link channel state write request executor impl param task param stream factory resolver factory obtain output stream factory</phrase>
  </topic>
  <topic id="6" alpha="0.04335990485502754" totalTokens="794" titles="exception, consumer, link, close, method, error, element, producer, wakeup, lock">
	<word weight="0.11712846347607053" count="93">exception</word>
	<word weight="0.060453400503778336" count="48">consumer</word>
	<word weight="0.05667506297229219" count="45">link</word>
	<word weight="0.05415617128463476" count="43">close</word>
	<word weight="0.04408060453400504" count="35">method</word>
	<word weight="0.04408060453400504" count="35">error</word>
	<word weight="0.037783375314861464" count="30">element</word>
	<word weight="0.037783375314861464" count="30">producer</word>
	<word weight="0.0327455919395466" count="26">wakeup</word>
	<word weight="0.0327455919395466" count="26">lock</word>
	<word weight="0.0327455919395466" count="26">handover</word>
	<word weight="0.027707808564231738" count="22">block</word>
	<word weight="0.027707808564231738" count="22">record</word>
	<word weight="0.021410579345088162" count="17">report</word>
	<word weight="0.020151133501259445" count="16">thread</word>
	<word weight="0.020151133501259445" count="16">poll</word>
	<word weight="0.018891687657430732" count="15">call</word>
	<word weight="0.0163727959697733" count="13">throwable</word>
	<word weight="0.015113350125944584" count="12">produce</word>
	<word weight="0.015113350125944584" count="12">closed</word>
	<phrase weight="0.5" count="1">consumer empty</phrase>
	<phrase weight="0.5" count="1">pop close</phrase>
  </topic>
  <topic id="7" alpha="0.013273384890236965" totalTokens="1392" titles="loader, plugin, library, resolve, parent, cache, job, entry, flink, string">
	<word weight="0.1206896551724138" count="168">loader</word>
	<word weight="0.05100574712643678" count="71">plugin</word>
	<word weight="0.041666666666666664" count="58">library</word>
	<word weight="0.028735632183908046" count="40">resolve</word>
	<word weight="0.02658045977011494" count="37">parent</word>
	<word weight="0.02586206896551724" count="36">cache</word>
	<word weight="0.022988505747126436" count="32">job</word>
	<word weight="0.022270114942528736" count="31">entry</word>
	<word weight="0.01867816091954023" count="26">flink</word>
	<word weight="0.01867816091954023" count="26">string</word>
	<word weight="0.01867816091954023" count="26">exception</word>
	<word weight="0.017959770114942528" count="25">descriptor</word>
	<word weight="0.017241379310344827" count="24">pattern</word>
	<word weight="0.016522988505747127" count="23">require</word>
	<word weight="0.015086206896551725" count="21">blob</word>
	<word weight="0.014367816091954023" count="20">path</word>
	<word weight="0.014367816091954023" count="20">url</word>
	<word weight="0.013649425287356323" count="19">release</word>
	<word weight="0.013649425287356323" count="19">service</word>
	<word weight="0.013649425287356323" count="19">lock</word>
	<phrase weight="0.022727272727272728" count="1">job param job job number reference holder number reference holder job job synchronize lock object library cache entry entry cache entry job entry entry reference count number</phrase>
	<phrase weight="0.022727272727272728" count="1">blob library cache manager set permanent blob key library set path</phrase>
	<phrase weight="0.022727272727272728" count="1">loader flink user code loader resolve order loader resolve order list pattern resolve parent loader string parent pattern loading exception handler</phrase>
	<phrase weight="0.022727272727272728" count="1">library collection url path exception synchronize lock object verify release resolve loader resolve loader resolve loader create user code loader job library path library path resolve loader verify loader library path resolve loader loader guard lock object loader create user code loader job job collection permanent blob</phrase>
	<phrase weight="0.022727272727272728" count="1">job guard lock object release loader resolve loader resolve loader release loader resolve loader release</phrase>
	<phrase weight="0.022727272727272728" count="1">guard lock object verify release</phrase>
	<phrase weight="0.022727272727272728" count="1">job task registration purpose make future registration differ content contract</phrase>
	<phrase weight="0.022727272727272728" count="1">handler library cache entry job job guard lock object reference count guard lock object nullable resolve loader resolve loader guard lock object release library cache entry job job job job reference count resolve loader release</phrase>
	<phrase weight="0.022727272727272728" count="1">platform loader invoke</phrase>
	<phrase weight="0.022727272727272728" count="1">loading exception flink user</phrase>
	<phrase weight="0.022727272727272728" count="1">file descriptor closed cached library delete immediately release loader loader</phrase>
	<phrase weight="0.022727272727272728" count="1">exception java</phrase>
	<phrase weight="0.022727272727272728" count="1">implement loader factory resolve order create</phrase>
	<phrase weight="0.022727272727272728" count="1">url url require path path add url string library hash set require library loader loader loader verify loader collection permanent blob key require library collection url require path make previous registration refer library path note original collection duplicate set collection fast check item lazy construction set faster comparison library</phrase>
	<phrase weight="0.022727272727272728" count="1">loader resolve loader</phrase>
	<phrase weight="0.022727272727272728" count="1">loader noop</phrase>
	<phrase weight="0.022727272727272728" count="1">throwable create loading exception handler nullable fatal error handler fatal error handler jvm metaspace oom</phrase>
	<phrase weight="0.022727272727272728" count="1">check state release library cache entry release loader lease implement library cache manager loader lease library cache entry library cache entry closed loader lease library cache entry library cache entry library cache entry library cache entry closed false override loader resolve loader collection permanent blob</phrase>
	<phrase weight="0.022727272727272728" count="1">blob library cache manager set string path resolve loader loader loader collection permanent blob key require library collection url require path loader loader note</phrase>
	<phrase weight="0.022727272727272728" count="1">exception exception library cache register user code library guard lock object reference count reference count guard lock object loader lease obtain lease verify release reference count loader lease create release synchronize lock object release reference count reference count reference count release loader cache entry</phrase>
  </topic>
  <topic id="8" alpha="0.004114555663021761" totalTokens="1350" titles="actor, rpc, future, akka, ref, endpoint, address, termination, system, executor">
	<word weight="0.11259259259259259" count="152">actor</word>
	<word weight="0.07925925925925927" count="107">rpc</word>
	<word weight="0.05407407407407407" count="73">future</word>
	<word weight="0.04814814814814815" count="65">akka</word>
	<word weight="0.04" count="54">ref</word>
	<word weight="0.034074074074074076" count="46">endpoint</word>
	<word weight="0.03259259259259259" count="44">address</word>
	<word weight="0.02666666666666667" count="36">termination</word>
	<word weight="0.023703703703703703" count="32">system</word>
	<word weight="0.02148148148148148" count="29">executor</word>
	<word weight="0.017037037037037038" count="23">supervisor</word>
	<word weight="0.015555555555555555" count="21">configuration</word>
	<word weight="0.015555555555555555" count="21">loader</word>
	<word weight="0.014814814814814815" count="20">server</word>
	<word weight="0.014814814814814815" count="20">completable</word>
	<word weight="0.014814814814814815" count="20">handler</word>
	<word weight="0.014814814814814815" count="20">string</word>
	<word weight="0.014814814814814815" count="20">invocation</word>
	<word weight="0.014074074074074074" count="19">hostname</word>
	<word weight="0.014074074074074074" count="19">service</word>
	<phrase weight="0.043478260869565216" count="1">stack internal schedule executor actor system schedule executor adapter actor system termination future completable future stop</phrase>
	<phrase weight="0.043478260869565216" count="1">configuration timeout completable future exceptionally error completion</phrase>
	<phrase weight="0.043478260869565216" count="1">completable future akka rpc actor termination future array list actor size map entry actor ref rpc endpoint actor ref rpc endpoint entry actor entry set akka rpc actor termination future add terminate akka rpc actor actor ref rpc endpoint entry key actor ref rpc endpoint entry actor clear future util</phrase>
	<phrase weight="0.043478260869565216" count="1">test akka rpc service actor system actor system akka rpc service configuration configuration actor system check actor system actor system configuration check configuration akka rpc service configuration address actor system address akka util address actor system actor system address host define address actor system address host address actor system address port define port integer actor system address port port capture callstack configuration capture</phrase>
	<phrase weight="0.043478260869565216" count="1">supervisor start supervisor actor supervisor start supervisor actor executor service termination future executor executor single thread executor executor thread factory akka rpc service supervisor termination future executor actor ref actor ref supervisor actor start supervisor actor actor system termination future executor supervisor create actor ref termination future executor actor system actor system actor system protect version version override string address address override port port method mutate</phrase>
	<phrase weight="0.043478260869565216" count="1">rpc connection</phrase>
	<phrase weight="0.043478260869565216" count="1">hostname localhost hostname host tuple actor address hostname extend rpc gateway completable future connect internal string address clazz function actor ref invocation handler invocation handler factory check state stop rpc service stop log debug connect remote rpc endpoint address gateway address clazz completable future actor ref actor ref future resolve actor address address completable future handshake success</phrase>
	<phrase weight="0.043478260869565216" count="1">thread safe override extend rpc gateway completable future connect string address clazz connect internal address clazz actor ref actor ref tuple string string address hostname extract address hostname actor ref akka invocation handler address hostname address hostname actor ref configuration timeout configuration maximum framesize capture callstack method mutate state thread safe override extend serializable extend fence rpc gateway completable future connect string address fencing token clazz connect internal address clazz actor ref actor ref tuple string string address hostname extract address hostname actor ref fence akka invocation handler address hostname address hostname actor ref configuration timeout configuration maximum framesize fencing token capture callstack override extend rpc endpoint rpc gateway rpc server start server rpc endpoint check rpc endpoint rpc endpoint supervisor actor actor registration actor registration register akka rpc actor rpc endpoint actor ref actor ref actor registration actor ref completable future actor termination future actor registration termination future log info start rpc endpoint rpc endpoint actor ref path string akka address akka util akka actor system actor ref string hostname option string host actor ref path address host host</phrase>
	<phrase weight="0.043478260869565216" count="1">fence override stop server rpc server gateway gateway akka base endpoint akka base endpoint akka client akka base endpoint gateway rpc endpoint rpc endpoint synchronize lock stop rpc endpoint actor remove akka client actor ref rpc endpoint terminate akka rpc actor akka client actor ref rpc endpoint log debug rpc endpoint stop rpc service gateway address override completable future stop service completable future akka rpc actor termination future synchronize lock stop termination future log info stop akka rpc service stop true akka rpc actor termination future terminate akka rpc actor completable future supervisor termination future future util compose akka rpc actor termination future supervisor</phrase>
	<phrase weight="0.043478260869565216" count="1">handshake future actor ref future compose actor ref actor ref future util java pattern actor ref remote handshake message clazz version configuration timeout millisecond handshake success message map tag module handshake success message apply handshake success message actor ref future combine async handshake future actor ref actor ref handshake success message ignore invocation handler invocation handler invocation handler factory apply actor ref system loader directly derive loader work flink run embed flink code load dynamically osgi bundle custom loader loader loader loader suppress warning unchecked proxy proxy proxy instance loader clazz invocation handler proxy actor system dispatcher completable future actor ref resolve actor address string address actor selection actor sel actor system actor selection address actor sel resolve time util</phrase>
	<phrase weight="0.043478260869565216" count="1">safe akka rpc service implement rpc service logger log logger factory logger akka rpc service version object lock object actor system actor system akka rpc service configuration configuration guard lock map actor ref rpc endpoint actor hash map string address port capture callstack schedule executor internal schedule executor completable future termination future supervisor supervisor stop</phrase>
	<phrase weight="0.043478260869565216" count="1">actor registration actor ref rpc endpoint actor registration override extend serializable rpc server fence rpc server rpc server rpc server fencing token rpc server akka base endpoint invocation handler fence invocation handler fence akka invocation handler rpc server address rpc server hostname akka base endpoint rpc server actor ref configuration timeout configuration maximum framesize fencing token capture callstack system loader directly derive loader work flink run embed flink code load dynamically osgi bundle custom loader loader loader loader rpc server proxy proxy instance loader rpc server akka base endpoint fence invocation handler runtime</phrase>
	<phrase weight="0.043478260869565216" count="1">async completable future actor system termination future future util compose supervisor termination future future util java actor system terminate actor system termination future complete ignore throwable throwable throwable termination future complete exceptionally throwable termination future complete log info stop akka rpc service termination future guard</phrase>
	<phrase weight="0.043478260869565216" count="1">akka rpc actor termination future completable future terminate akka rpc actor actor ref akka rpc actor ref rpc endpoint rpc endpoint akka rpc actor ref control message terminate actor ref sender rpc endpoint termination future override completable future termination future termination future override executor executor actor system dispatcher override schedule executor schedule executor internal schedule executor override schedule future schedule runnable runnable runnable delay time unit unit check runnable runnable check unit unit check argument delay delay larger internal schedule executor schedule runnable delay unit override execute runnable runnable actor system dispatcher execute runnable override completable future execute callable callable future scala future future future callable actor system dispatcher future util java scala future helper</phrase>
	<phrase weight="0.043478260869565216" count="1">stop rpc service stop supervisor actor start akka rpc actor response start akka rpc actor response supervisor actor start akka rpc actor supervisor actor actor termination future</phrase>
	<phrase weight="0.043478260869565216" count="1">supervisor implement auto closeable async actor ref actor executor service termination future executor supervisor actor ref actor executor service termination future executor actor actor termination future executor termination future executor supervisor create actor ref actor ref executor service termination future executor supervisor actor ref termination future executor actor ref actor actor override completable future</phrase>
	<phrase weight="0.043478260869565216" count="1">create akka rpc actor type rpc endpoint actor termination future version configuration maximum framesize rpc endpoint endpoint supervisor actor actor registration actor registration start akka rpc actor response akka rpc runtime</phrase>
	<phrase weight="0.043478260869565216" count="1">hostname localhost hostname host set implement rpc gateway hash set rpc util extract implement rpc gateway rpc endpoint implement rpc gateway add rpc server implement rpc gateway add akka base endpoint invocation handler akka invocation handler rpc endpoint fence rpc endpoint fence rpc endpoint fence akka invocation handler akka invocation handler fence akka invocation handler akka address hostname actor ref configuration timeout configuration maximum framesize actor termination future fence rpc endpoint rpc endpoint fencing token capture callstack implement rpc gateway add fence main thread executable akka invocation handler akka invocation handler akka address hostname actor ref configuration timeout configuration maximum framesize actor termination future capture callstack system loader directly derive loader work flink run embed flink code load dynamically osgi bundle custom loader loader loader loader suppress warning unchecked rpc server server rpc server proxy proxy instance loader implement rpc gateway array implement rpc gateway size akka invocation handler server extend rpc endpoint rpc gateway supervisor actor actor registration register akka rpc actor rpc endpoint extend actor akka rpc actor type rpc endpoint fence rpc endpoint akka rpc actor type fence akka rpc actor akka rpc actor type akka rpc actor synchronize</phrase>
	<phrase weight="0.043478260869565216" count="1">string format connect rpc endpoint address address</phrase>
	<phrase weight="0.043478260869565216" count="1">tuple string string extract address hostname actor ref actor ref string actor address akka util akka actor system actor ref string hostname option string host actor ref path address host host</phrase>
  </topic>
  <topic id="9" alpha="0.0037255886227481817" totalTokens="531" titles="cpu, tick, network, load, processor, irq, usage, index, system, type">
	<word weight="0.13559322033898305" count="72">cpu</word>
	<word weight="0.12429378531073447" count="66">tick</word>
	<word weight="0.0583804143126177" count="31">network</word>
	<word weight="0.05084745762711865" count="27">load</word>
	<word weight="0.03766478342749529" count="20">processor</word>
	<word weight="0.030131826741996232" count="16">irq</word>
	<word weight="0.02824858757062147" count="15">usage</word>
	<word weight="0.026365348399246705" count="14">index</word>
	<word weight="0.026365348399246705" count="14">system</word>
	<word weight="0.026365348399246705" count="14">type</word>
	<word weight="0.02448210922787194" count="13">length</word>
	<word weight="0.02071563088512241" count="11">rate</word>
	<word weight="0.02071563088512241" count="11">send</word>
	<word weight="0.02071563088512241" count="11">previous</word>
	<word weight="0.018832391713747645" count="10">receive</word>
	<word weight="0.01694915254237288" count="9">idle</word>
	<word weight="0.01694915254237288" count="9">nice</word>
	<word weight="0.01694915254237288" count="9">probe</word>
	<word weight="0.01694915254237288" count="9">user</word>
	<word weight="0.015065913370998116" count="8">average</word>
  </topic>
</topics>
