execution config option documentation table option exec mode documentation exec mode stream public static final config option string table exec source idle timeout key table exec source idle timeout default value ms with description when a source do not receive any element for the timeout time it will be mark as temporarily idle this allow downstream task to advance they watermark without the need to wait for watermark from this source while it be idle 
execution config option documentation table option exec mode documentation exec mode batch stream public static final config option not null enforcer table exec sink not null enforcer key table exec sink not null enforcer enum type not null enforcer class default value not null enforcer error with description the not null column constraint on a table enforce that null value can t be insert into the table flink support error default and drop enforcement behavior by default flink will check value and throw runtime exception when null value write into not null column user can change the behavior to drop to silently drop such record without throw exception 
execution config option documentation table option exec mode documentation exec mode batch public static final config option integer table exec sort default limit key table exec sort default limit default value with description default limit when user don t set a limit after order by indicate that this configuration be ignore 
execution config option documentation table option exec mode documentation exec mode batch public static final config option integer table exec sort max num file handle key table exec sort max num file handle default value with description the maximal fan in for external merge sort it limit the number of file handle per operator if it be too small may cause intermediate merging but if it be too large it will cause too many file open at the same time consume memory and lead to random reading 
execution config option documentation table option exec mode documentation exec mode batch public static final config option boolean table exec sort async merge enable key table exec sort async merge enable default value true with description whether to asynchronously merge sort spill file 
execution config option documentation table option exec mode documentation exec mode batch public static final config option boolean table exec spill compression enable key table exec spill compression enable default value true with description whether to compress spill datum currently we only support compress spill datum for sort and hash agg and hash join operator 
execution config option documentation table option exec mode documentation exec mode batch public static final config option string table exec spill compression block size key table exec spill compression block size default value kb with description the memory size use to do compress when spill datum the larger the memory the higher the compression ratio but more memory resource will be consume by the job 
execution config option documentation table option exec mode documentation exec mode batch stream public static final config option integer table exec resource default parallelism key table exec resource default parallelism default value with description set default parallelism for all operator such as aggregate join filter to run with parallel instance this config have a higher priority than parallelism of stream execution environment actually this config override the parallelism of stream execution environment a value of indicate that no default parallelism be set then it will fallback to use the parallelism of stream execution environment 
execution config option documentation table option exec mode documentation exec mode batch public static final config option integer table exec window agg buffer size limit key table exec window agg buffer size limit default value with description set the window element buffer size limit use in group window agg operator 
execution config option documentation table option exec mode documentation exec mode batch stream public static final config option integer table exec async lookup buffer capacity key table exec async lookup buffer capacity default value with description the max number of async i o operation that the async lookup join can trigger 
execution config option documentation table option exec mode documentation exec mode batch stream public static final config option string table exec async lookup timeout key table exec async lookup timeout default value min with description the async timeout for the asynchronous operation to complete 
execution config option documentation table option exec mode documentation exec mode stream public static final config option boolean table exec minibatch enable key table exec mini batch enable default value false with description specify whether to enable mini batch optimization mini batch be a optimization to buffer input record to reduce state access this be disabled by default to enable this user should set this config to true note if mini batch be enable table exec mini batch allow latency and table exec mini batch size must be set 
execution config option documentation table option exec mode documentation exec mode stream public static final config option string table exec minibatch allow latency key table exec mini batch allow latency default value ms with description the maximum latency can be use for mini batch to buffer input record mini batch be a optimization to buffer input record to reduce state access mini batch be trigger with the allow latency interval and when the maximum number of buffer record reach note if table exec minibatch enable key be set true its value must be greater than zero 
execution config option documentation table option exec mode documentation exec mode stream public static final config option long table exec minibatch size key table exec mini batch size default value 1 l with description the maximum number of input record can be buffer for mini batch mini batch be a optimization to buffer input record to reduce state access mini batch be trigger with the allow latency interval and when the maximum number of buffer record reach note mini batch only work for non window aggregation currently if table exec minibatch enable key be set true its value must be positive 
execution config option documentation table option exec mode documentation exec mode batch public static final config option string table exec disabled operator key table exec disabled operator no default value with description mainly for test a comma separate list of operator name each name represent a kind of disabled operator n operator that can be disabled include nest loop join shuffle hash join broadcast hash join sort merge join hash agg sort agg n by default no operator be disabled 
execution config option documentation table option exec mode documentation exec mode batch public static final config option string table exec shuffle mode key table exec shuffle mode string type default value all edge block with description description builder text set exec shuffle mode linebreak text accept value be list text s all edge will use block shuffle code all edge block text s forward edge will use pipelined shuffle other block code forward edge pipelined text s pointwise edge will use pipelined shuffle other block pointwise edge include forward and rescale edge code pointwise edge pipelined text s all edge will use pipelined shuffle code all edge pipelined text s the same as s deprecate code batch code all edge block text s the same as s deprecate code pipelined code all edge pipelined text note block shuffle mean datum will be fully produce before send to consumer task pipelined shuffle mean datum will be send to consumer task once produce build 
optimizer config option documentation table option exec mode documentation exec mode batch stream public static final config option string table optimizer agg phase strategy key table optimizer agg phase strategy default value auto with description strategy for aggregate phase only auto two phase or one phase can be set n auto no special enforcer for aggregate stage whether to choose two stage aggregate or one stage aggregate depend on cost n two phase enforce to use two stage aggregate which have local aggregate and global aggregate note that if aggregate call do not support optimize into two phase we will still use one stage aggregate n one phase enforce to use one stage aggregate which only have complete global aggregate 
optimizer config option documentation table option exec mode documentation exec mode batch public static final config option long table optimizer broadcast join threshold key table optimizer join broadcast threshold default value l with description configure the maximum size in byte for a table that will be broadcast to all worker node when perform a join by set this value to to disable broadcasting 
optimizer config option documentation table option exec mode documentation exec mode stream public static final config option boolean table optimizer distinct agg split enable key table optimizer distinct agg split enable default value false with description tell the optimizer whether to split distinct aggregation e g count distinct col sum distinct col into two level the first aggregation be shuffle by a additional key which be calculate use the hashcode of distinct key and number of bucket this optimization be very useful when there be data skew in distinct aggregation and give the ability to scale up the job default be false 
optimizer config option documentation table option exec mode documentation exec mode stream public static final config option integer table optimizer distinct agg split bucket num key table optimizer distinct agg split bucket num default value with description configure the number of bucket when splitting distinct aggregation the number be use in the first level aggregation to calculate a bucket key hash code distinct key bucket num which be use as a additional group key after splitting 
optimizer config option documentation table option exec mode documentation exec mode batch stream public static final config option boolean table optimizer reuse sub plan enable key table optimizer reuse sub plan enable default value true with description when it be true the optimizer will try to find out duplicate sub plan and reuse they 
optimizer config option documentation table option exec mode documentation exec mode batch stream public static final config option boolean table optimizer reuse source enable key table optimizer reuse source enable default value true with description when it be true the optimizer will try to find out duplicate table source and reuse they this work only when table optimizer reuse sub plan enable key be true 
optimizer config option documentation table option exec mode documentation exec mode batch stream public static final config option boolean table optimizer source predicate pushdown enable key table optimizer source predicate pushdown enable default value true with description when it be true the optimizer will push down predicate into the filterable table source default value be true 
optimizer config option documentation table option exec mode documentation exec mode batch stream public static final config option boolean table optimizer join reorder enable key table optimizer join reorder enable default value false with description enable join reorder in optimizer default be disabled 
table config option documentation table option exec mode documentation exec mode batch stream public static final config option boolean table dynamic table option enable key table dynamic table option enable boolean type default value false with description enable or disable the option hint use to specify table option dynamically if disable a exception would be throw if any option hint be specify 
table config option documentation table option exec mode documentation exec mode batch stream public static final config option string table sql dialect key table sql dialect string type default value sql dialect default name to lower case with description the sql dialect define how to parse a sql query a different sql dialect may support different sql grammar currently support dialect be default and hive 
