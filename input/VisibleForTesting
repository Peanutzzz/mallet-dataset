application dispatcher bootstrap visible for test schedule future get application execution future return application execution task 
application dispatcher bootstrap visible for test completable future acknowledge run application and shutdown cluster async final dispatcher gateway dispatcher final schedule executor schedule executor application completion future fix job id and run application async dispatcher schedule executor return application completion future handle r t final application status application status if t null final optional job cancellation exception cancellation exception exception util find throwable t job cancellation exception class if cancellation exception be present this mean the flink job be cancel application status application status cancel else if t instanceof cancellation exception this mean that the future be cancel application status application status unknown else application status application status fail log warn application application status t else application status application status succeed log info application complete successfully return dispatcher shut down cluster application status then compose function identity 
application dispatcher bootstrap visible for test completable future void fix job id and run application async final dispatcher gateway dispatcher final schedule executor schedule executor final optional string configure job id configuration get optional pipeline option internal pipeline fix job id if high availability mode be high availability mode activate configuration configure job id be present return run application async dispatcher schedule executor false if configure job id be present configuration set pipeline option internal pipeline fix job id zero job id to hex string return run application async dispatcher schedule executor true 
class path package program retriever visible for test enum jar on class path implement supplier iterable file instance static final string java class path java class path static final string path separator path separator static final string default path separator override public iterable file get string class path system get property java class path string path separator system get property path separator default path separator return array stream class path split path separator filter jar on class path not null and not empty map file new filter file be file collect collector to list private static boolean not null and not empty string string return string null string equal 
jar manifest parser visible for test static optional string find entry class file jar file throw i o exception return find first manifest attribute jar file package program manifest attribute assembler class package program manifest attribute main class 
job status polling util visible for test static completable future job result poll job result async final supplier completable future job status job status supplier final supplier completable future job result job result supplier final schedule executor schedule executor final long retry ms timeout return poll job result async job status supplier job result supplier schedule executor new completable future retry ms timeout 
rest cluster client visible for test rest cluster client configuration configuration nullable rest client rest client t cluster id wait strategy wait strategy throw exception this configuration rest client cluster id wait strategy high availability service util create client h a service configuration 
rest cluster client visible for test m extend message header empty request body p empty message parameter p extend response body completable future p send request m message header return send request message header empty message parameter get instance empty request body get instance 
rest cluster client visible for test public m extend message header be p u u extend message parameter be extend request body p extend response body completable future p send request m message header u message parameter be request return send retriable request message header message parameter request be connection problem or service unavailable 
rest cluster client visible for test completable future url get web monitor base url return future util or timeout web monitor leader retriever get leader future rest cluster client configuration get await leader timeout time unit millisecond then apply async leader address session id final string url leader address session id f0 try return new url url catch malformed u r l exception e throw new illegal argument exception could not parse url from url e executor service 
cassandra sink base visible for test int get available permit return semaphore available permit 
cassandra sink base visible for test int get acquire permit return config get max concurrent request semaphore available permit 
elasticsearch sink base visible for testing protect bulk processor build bulk processor bulk processor listener listener check not null listener bulk processor builder bulk processor builder call bridge create bulk processor builder client listener this make flush block bulk processor builder set concurrent request if bulk processor flush max action null bulk processor builder set bulk action bulk processor flush max action if bulk processor flush max size mb null bulk processor builder set bulk size new byte size value bulk processor flush max size mb byte size unit mb if bulk processor flush interval millis null bulk processor builder set flush interval time value time value milli bulk processor flush interval millis if backoff retry be disabled bulk processor flush backoff policy will be null call bridge configure bulk processor backoff bulk processor builder bulk processor flush backoff policy return bulk processor builder build 
elasticsearch sink base visible for test long get num pend request if flush on checkpoint return num pend request get else throw new unsupported operation exception the number of pend request be not maintain when flush on checkpoint be disabled 
elasticsearch6 dynamic sink visible for test static final elasticsearch6 request factory request factory new elasticsearch6 request factory 
elasticsearch6 dynamic sink visible for test static class default rest client factory implement rest client factory private final string path prefix public default rest client factory nullable string path prefix this path prefix path prefix override public void configure rest client builder rest client builder rest client builder if path prefix null rest client builder set path prefix path prefix override public boolean equal object o if this o return true if o null get class o get class return false default rest client factory that default rest client factory o return object equal path prefix that path prefix override public int hash code return object hash path prefix 
elasticsearch6 dynamic sink visible for test static class auth rest client factory implement rest client factory private final string path prefix private final string username private final string password private transient credentials provider credentials provider public auth rest client factory nullable string path prefix string username string password this path prefix path prefix this password password this username username override public void configure rest client builder rest client builder rest client builder if path prefix null rest client builder set path prefix path prefix if credentials provider null credentials provider new basic credentials provider credentials provider set credentials auth scope any new username password credentials username password rest client builder set http client config callback http async client builder http async client builder set default credentials provider credentials provider override public boolean equal object o if this o return true if o null get class o get class return false auth rest client factory that auth rest client factory o return object equal path prefix that path prefix object equal username that username object equal password that password override public int hash code return object hash path prefix username password 
elasticsearch6 upsert table sink visible for test static final request factory update request factory new elasticsearch6 request factory 
elasticsearch6 upsert table sink visible for test elasticsearch sink builder tuple2 boolean row create builder elasticsearch upsert sink function upsert sink function list http host http host return new elasticsearch sink builder http host upsert sink function 
elasticsearch6 upsert table sink visible for test static class default rest client factory implement rest client factory private integer max retry timeout private string path prefix public default rest client factory nullable integer max retry timeout nullable string path prefix this max retry timeout max retry timeout this path prefix path prefix override public void configure rest client builder rest client builder rest client builder if max retry timeout null rest client builder set max retry timeout millis max retry timeout if path prefix null rest client builder set path prefix path prefix override public boolean equal object o if this o return true if o null get class o get class return false default rest client factory that default rest client factory o return object equal max retry timeout that max retry timeout object equal path prefix that path prefix override public int hash code return object hash max retry timeout path prefix 
elasticsearch7 dynamic sink visible for test static final elasticsearch7 request factory request factory new elasticsearch7 dynamic sink elasticsearch7 request factory 
elasticsearch7 dynamic sink visible for test static class default rest client factory implement rest client factory private final string path prefix public default rest client factory nullable string path prefix this path prefix path prefix override public void configure rest client builder rest client builder rest client builder if path prefix null rest client builder set path prefix path prefix override public boolean equal object o if this o return true if o null get class o get class return false default rest client factory that default rest client factory o return object equal path prefix that path prefix override public int hash code return object hash path prefix 
elasticsearch7 dynamic sink visible for test static class auth rest client factory implement rest client factory private final string path prefix private final string username private final string password private transient credentials provider credentials provider public auth rest client factory nullable string path prefix string username string password this path prefix path prefix this password password this username username override public void configure rest client builder rest client builder rest client builder if path prefix null rest client builder set path prefix path prefix if credentials provider null credentials provider new basic credentials provider credentials provider set credentials auth scope any new username password credentials username password rest client builder set http client config callback http async client builder http async client builder set default credentials provider credentials provider override public boolean equal object o if this o return true if o null get class o get class return false auth rest client factory that auth rest client factory o return object equal path prefix that path prefix object equal username that username object equal password that password override public int hash code return object hash path prefix password username 
elasticsearch7 upsert table sink visible for test static final request factory update request factory new elasticsearch7 request factory 
elasticsearch7 upsert table sink visible for test elasticsearch7 upsert table sink boolean be append only table schema schema list host host string index string doc type string key delimiter string key null literal serialization schema row serialization schema x content type content type action request failure handler failure handler map sink option string sink option super be append only schema host index doc type key delimiter key null literal serialization schema content type failure handler sink option update request factory 
elasticsearch7 upsert table sink visible for test elasticsearch sink builder tuple2 boolean row create builder elasticsearch upsert sink function upsert sink function list http host http host return new elasticsearch sink builder http host upsert sink function 
elasticsearch7 upsert table sink visible for test static class default rest client factory implement rest client factory private string path prefix public default rest client factory nullable string path prefix this path prefix path prefix override public void configure rest client builder rest client builder rest client builder if path prefix null rest client builder set path prefix path prefix override public boolean equal object o if this o return true if o null get class o get class return false default rest client factory that default rest client factory o return object equal path prefix that path prefix override public int hash code return object hash path prefix 
bucket sink visible for test public state t get state return state 
h base dynamic table sink visible for test public h base table schema get h base table schema return this hbase table schema 
h base dynamic table sink visible for test public h base option get h base option return hbase option 
h base dynamic table sink visible for test public h base write option get write option return write option 
h base upsert table sink visible for test public h base table schema get h base table schema return hbase table schema 
h base upsert table sink visible for test public h base option get h base option return hbase option 
h base upsert table sink visible for test public h base write option get write option return write option 
h base dynamic table source visible for test public h base table schema get h base table schema return this hbase schema 
h base lookup function visible for test public string get h table name return h table name 
h base row datum lookup function visible for test public string get h table name return h table name 
h base table source visible for test public h base table schema get h base table schema return this hbase schema 
hive table source visible for test hive table input format get input format list hive table partition all hive partition boolean use map red reader return new hive table input format job conf catalog table all hive partition project field limit hive version use map red reader 
directory monitor discovery visible for test static list tuple2 list string long suitable partition context context long previous timestamp file status status list tuple2 list string long part value list new array list for file status status status list string part value extract partition value new org apache flink core f path status get path to string long timestamp context extract timestamp context partition key part value to utc millisecond timestamp datum from timestamp new timestamp status get modification time get millisecond if timestamp previous timestamp part value list add new tuple2 part value timestamp return part value list 
hive table file input format visible for test static file split to hadoop file split file input split file split throw i o exception uri uri file split get path to uri long length file split get length hadoop file split should not have length if length length file split get path get file system get file status file split get path get len file split get start return new file split new path uri file split get start length string null 
hive table input format visible for testing protect transient split reader reader 
hive catalog visible for testing protect hive catalog string catalog name string default database nullable hive conf hive conf string hive version boolean allow embed super catalog name default database null default db default database this hive conf hive conf null create hive conf null hive conf if allow embed check argument string util be null or whitespace only this hive conf get var hive conf conf var metastoreuris embed metastore be not allow make sure you have set a valid value for hive conf conf var metastoreuris to string check argument string util be null or whitespace only hive version hive version can not be null or empty this hive version hive version hive shim hive shim loader load hive shim hive version add this to hive conf to make sure table factory and source sink see the same hive version as hive catalog this hive conf set hive catalog validator catalog hive version hive version log info create hive catalog catalog name 
hive catalog visible for test public hive conf get hive conf return hive conf 
hive catalog visible for test public string get hive version return hive version 
hive catalog visible for test public database get hive database string database name throw database not exist exception try return client get database database name catch no such object exception e throw new database not exist exception get name database name catch t exception e throw new catalog exception string format fail to get database s from s database name get name e 
hive catalog visible for test public table get hive table object path table path throw table not exist exception try return client get table table path get database name table path get object name catch no such object exception e throw new table not exist exception get name table path catch t exception e throw new catalog exception string format fail to get table s from hive metastore table path get full name e 
hive catalog visible for test public partition get hive partition table hive table catalog partition spec partition spec throw partition spec invalid exception t exception return client get partition hive table get db name hive table get table name get order full partition value partition spec get field name hive table get partition key new object path hive table get db name hive table get table name 
hive generic u d t f visible for testing protect final void set collector collector collector function set collector collector 
hive module visible for test static final set string build in func blacklist collection unmodifiable set new hash set array as list count dense rank first value lag last value lead rank row number hop hop end hop proctime hop rowtime hop start session session end session proctime session rowtime session start tumble tumble end tumble proctime tumble rowtime tumble start 
j d b c input format override visible for testing protect prepared statement get statement return super get statement 
j d b c input format override visible for testing protect connection get db conn return super get db conn 
jdbc catalog visible for test public abstract jdbc catalog get internal return internal 
abstract jdbc output format visible for test public connection get connection return connection 
jdbc input format visible for testing protect prepared statement get statement return statement 
jdbc input format visible for testing protect connection get db conn return db conn 
jdbc lookup function visible for test public connection get db connection return db conn 
jdbc row datum lookup function visible for test public connection get db connection return db conn 
flink kafka producer visible for test internal public static class kafka transaction state private final transient flink kafka internal producer byte byte producer nullable final string transactional id final long producer id final short epoch visible for test public kafka transaction state string transactional id flink kafka internal producer byte byte producer this transactional id producer get producer id producer get epoch producer visible for test public kafka transaction state flink kafka internal producer byte byte producer this null short producer visible for test public kafka transaction state nullable string transactional id long producer id short epoch flink kafka internal producer byte byte producer this transactional id transactional id this producer id producer id this epoch epoch this producer producer boolean be transactional return transactional id null public flink kafka internal producer byte byte get producer return producer override public string to string return string format s transactional id s producer id s epoch be this get class get simple name transactional id producer id epoch override public boolean equal object o if this o return true if o null get class o get class return false flink kafka producer kafka transaction state that flink kafka producer kafka transaction state o if producer id that producer id return false if epoch that epoch return false return transactional id null transactional id equal that transactional id that transactional id null override public int hash code int result transactional id null transactional id hash code result result int producer id producer id result result int epoch return result 
flink kafka producer visible for test public kafka transaction state string transactional id flink kafka internal producer byte byte producer this transactional id producer get producer id producer get epoch producer 
flink kafka producer visible for test public kafka transaction state flink kafka internal producer byte byte producer this null short producer 
flink kafka producer visible for test public kafka transaction state nullable string transactional id long producer id short epoch flink kafka internal producer byte byte producer this transactional id transactional id this producer id producer id this epoch epoch this producer producer 
flink kafka producer visible for test internal public static class kafka transaction context final set string transactional id visible for test public kafka transaction context set string transactional id check not null transactional id this transactional id transactional id override public boolean equal object o if this o return true if o null get class o get class return false flink kafka producer kafka transaction context that flink kafka producer kafka transaction context o return transactional id equal that transactional id override public int hash code return transactional id hash code 
flink kafka producer visible for test public kafka transaction context set string transactional id check not null transactional id this transactional id transactional id 
flink kafka producer visible for test internal public static class transaction state serializer extend type serializer singleton flink kafka producer kafka transaction state private static final long serial version u i d 1 l override public boolean be immutable type return true override public flink kafka producer kafka transaction state create instance return null override public flink kafka producer kafka transaction state copy flink kafka producer kafka transaction state from return from override public flink kafka producer kafka transaction state copy flink kafka producer kafka transaction state from flink kafka producer kafka transaction state reuse return from override public int get length return override public void serialize flink kafka producer kafka transaction state record datum output view target throw i o exception if record transactional id null target write boolean false else target write boolean true target write u t f record transactional id target write long record producer id target write short record epoch override public flink kafka producer kafka transaction state deserialize datum input view source throw i o exception string transactional id null if source read boolean transactional id source read u t f long producer id source read long short epoch source read short return new flink kafka producer kafka transaction state transactional id producer id epoch null override public flink kafka producer kafka transaction state deserialize flink kafka producer kafka transaction state reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception boolean have transactional id source read boolean target write boolean have transactional id if have transactional id target write u t f source read u t f target write long source read long target write short source read short override public type serializer snapshot flink kafka producer kafka transaction state snapshot configuration return new transaction state serializer snapshot serializer configuration snapshot for compatibility and format evolution suppress warning weaker access public static final class transaction state serializer snapshot extend simple type serializer snapshot flink kafka producer kafka transaction state public transaction state serializer snapshot super transaction state serializer new 
flink kafka producer visible for test internal public static class context state serializer extend type serializer singleton flink kafka producer kafka transaction context private static final long serial version u i d 1 l override public boolean be immutable type return true override public flink kafka producer kafka transaction context create instance return null override public flink kafka producer kafka transaction context copy flink kafka producer kafka transaction context from return from override public flink kafka producer kafka transaction context copy flink kafka producer kafka transaction context from flink kafka producer kafka transaction context reuse return from override public int get length return override public void serialize flink kafka producer kafka transaction context record datum output view target throw i o exception int num id record transactional id size target write int num id for string id record transactional id target write u t f id override public flink kafka producer kafka transaction context deserialize datum input view source throw i o exception int num id source read int set string id new hash set num id for int i i num id i id add source read u t f return new flink kafka producer kafka transaction context id override public flink kafka producer kafka transaction context deserialize flink kafka producer kafka transaction context reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception int num id source read int target write int num id for int i i num id i target write u t f source read u t f override public type serializer snapshot kafka transaction context snapshot configuration return new context state serializer snapshot serializer configuration snapshot for compatibility and format evolution suppress warning weaker access public static final class context state serializer snapshot extend simple type serializer snapshot kafka transaction context public context state serializer snapshot super context state serializer new 
flink kafka producer visible for test internal public static class next transactional id hint serializer extend type serializer singleton next transactional id hint private static final long serial version u i d 1 l override public boolean be immutable type return true override public next transactional id hint create instance return new next transactional id hint override public next transactional id hint copy next transactional id hint from return from override public next transactional id hint copy next transactional id hint from next transactional id hint reuse return from override public int get length return long byte integer byte override public void serialize next transactional id hint record datum output view target throw i o exception target write long record next free transactional id target write int record last parallelism override public next transactional id hint deserialize datum input view source throw i o exception long next free transactional id source read long int last parallelism source read int return new next transactional id hint last parallelism next free transactional id override public next transactional id hint deserialize next transactional id hint reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception target write long source read long target write int source read int override public type serializer snapshot next transactional id hint snapshot configuration return new next transactional id hint serializer snapshot serializer configuration snapshot for compatibility and format evolution suppress warning weaker access public static final class next transactional id hint serializer snapshot extend simple type serializer snapshot next transactional id hint public next transactional id hint serializer snapshot super next transactional id hint serializer new 
flink kafka internal producer visible for test public int get transaction coordinator id object transaction manager get field kafka producer transaction manager node node node invoke transaction manager coordinator find coordinator request coordinator type transaction return node id 
kafka consumer thread visible for testing void reassign partition list kafka topic partition state t topic partition new partition throw exception if new partition size return have assign partition true boolean reassignment start false since the reassignment may introduce several kafka block call that can not be interrupt the consumer need to be isolate from external wakeup call in set offset to commit and shutdown until the reassignment be complete final kafka consumer byte byte consumer tmp synchronize consumer reassignment lock consumer tmp this consumer this consumer null final map topic partition long old partition assignment to position new hash map try for topic partition old partition consumer tmp assignment old partition assignment to position put old partition consumer tmp position old partition final list topic partition new partition assignment new array list new partition size old partition assignment to position size new partition assignment add all old partition assignment to position key set new partition assignment add all convert kafka partition new partition reassign with the new partition consumer tmp assign new partition assignment reassignment start true old partition should be seek to they previous position for map entry topic partition long old partition to position old partition assignment to position entry set consumer tmp seek old partition to position get key old partition to position get value offset in the state of new partition may still be placeholder sentinel value if we be start fresh checkpoint savepoint state we be restore with have not completely be replace with actual offset value yet or the partition be newly discover after startup replace those with actual offset accord to what the sentinel value represent for kafka topic partition state t topic partition new partition state new partition if new partition state get offset kafka topic partition state sentinel earliest offset consumer tmp seek to begin collection singleton list new partition state get kafka partition handle new partition state set offset consumer tmp position new partition state get kafka partition handle else if new partition state get offset kafka topic partition state sentinel latest offset consumer tmp seek to end collection singleton list new partition state get kafka partition handle new partition state set offset consumer tmp position new partition state get kafka partition handle else if new partition state get offset kafka topic partition state sentinel group offset the kafka consumer by default will automatically seek the consumer position to the committed group offset so we do not need to do it new partition state set offset consumer tmp position new partition state get kafka partition handle else consumer tmp seek new partition state get kafka partition handle new partition state get offset catch wakeup exception e a wakeup exception may be throw if the consumer be invoke wakeup before it be isolate for the reassignment in this case we abort the reassignment and just re expose the original consumer synchronize consumer reassignment lock this consumer consumer tmp if reassignment have already start and affect the consumer we do a full roll back so that it be as if it be leave untouched if reassignment start this consumer assign new array list old partition assignment to position key set for map entry topic partition long old partition to position old partition assignment to position entry set this consumer seek old partition to position get key old partition to position get value no need to restore the wakeup state in this case since only the last wakeup call be effective anyways have buffer wakeup false re add all new partition back to the unassigned partition queue to be pick up again for kafka topic partition state t topic partition new partition new partition unassigned partition queue add new partition this signal the main fetch loop to continue through the loop throw new aborted reassignment exception reassignment complete expose the reassign consumer synchronize consumer reassignment lock this consumer consumer tmp restore wakeup state for the consumer if necessary if have buffer wakeup this consumer wakeup have buffer wakeup false 
kafka consumer thread visible for test kafka consumer byte byte get consumer property kafka property return new kafka consumer kafka property 
kafka shuffle fetcher visible for test public abstract static class kafka shuffle element public boolean be record return get class kafka shuffle record class public boolean be watermark return get class kafka shuffle watermark class public t kafka shuffle record t as record return kafka shuffle record t this public kafka shuffle watermark as watermark return kafka shuffle watermark this 
kafka shuffle fetcher visible for test public static class kafka shuffle watermark extend kafka shuffle element final int subtask final long watermark kafka shuffle watermark int subtask long watermark this subtask subtask this watermark watermark public int get subtask return subtask public long get watermark return watermark 
kafka shuffle fetcher visible for test public static class kafka shuffle record t extend kafka shuffle element final t value final long timestamp kafka shuffle record t value this value value this timestamp null kafka shuffle record long timestamp t value this value value this timestamp timestamp public t get value return value public long get timestamp return timestamp 
kafka shuffle fetcher visible for test public static class kafka shuffle element deserializer t implement serializable private static final long serial version u i d l private final type serializer t type serializer private transient datum input deserializer dis visible for test public kafka shuffle element deserializer type serializer t type serializer this type serializer type serializer visible for test public kafka shuffle element deserialize consumer record byte byte record throw exception byte value record value if dis null dis set buffer value else di new datum input deserializer value version byte byte serializer instance deserialize dis int tag byte serializer instance deserialize dis if tag tag rec without timestamp return new kafka shuffle record type serializer deserialize dis else if tag tag rec with timestamp return new kafka shuffle record long serializer instance deserialize dis type serializer deserialize dis else if tag tag watermark return new kafka shuffle watermark int serializer instance deserialize dis long serializer instance deserialize dis throw new unsupported operation exception unsupported tag format 
kafka shuffle fetcher visible for test public kafka shuffle element deserializer type serializer t type serializer this type serializer type serializer 
kafka shuffle fetcher visible for test public kafka shuffle element deserialize consumer record byte byte record throw exception byte value record value if dis null dis set buffer value else di new datum input deserializer value version byte byte serializer instance deserialize dis int tag byte serializer instance deserialize dis if tag tag rec without timestamp return new kafka shuffle record type serializer deserialize dis else if tag tag rec with timestamp return new kafka shuffle record long serializer instance deserialize dis type serializer deserialize dis else if tag tag watermark return new kafka shuffle watermark int serializer instance deserialize dis long serializer instance deserialize dis throw new unsupported operation exception unsupported tag format 
kafka consumer thread visible for testing void reassign partition list kafka topic partition state t topic partition new partition throw exception if new partition size return have assign partition true boolean reassignment start false since the reassignment may introduce several kafka block call that can not be interrupt the consumer need to be isolate from external wakeup call in set offset to commit and shutdown until the reassignment be complete final consumer byte byte consumer tmp synchronize consumer reassignment lock consumer tmp this consumer this consumer null final map topic partition long old partition assignment to position new hash map try for topic partition old partition consumer tmp assignment old partition assignment to position put old partition consumer tmp position old partition final list topic partition new partition assignment new array list new partition size old partition assignment to position size new partition assignment add all old partition assignment to position key set new partition assignment add all convert kafka partition new partition reassign with the new partition consumer tmp assign new partition assignment reassignment start true old partition should be seek to they previous position for map entry topic partition long old partition to position old partition assignment to position entry set consumer tmp seek old partition to position get key old partition to position get value offset in the state of new partition may still be placeholder sentinel value if we be start fresh checkpoint savepoint state we be restore with have not completely be replace with actual offset value yet or the partition be newly discover after startup replace those with actual offset accord to what the sentinel value represent for kafka topic partition state t topic partition new partition state new partition if new partition state get offset kafka topic partition state sentinel earliest offset consumer tmp seek to begin collection singleton list new partition state get kafka partition handle new partition state set offset consumer tmp position new partition state get kafka partition handle else if new partition state get offset kafka topic partition state sentinel latest offset consumer tmp seek to end collection singleton list new partition state get kafka partition handle new partition state set offset consumer tmp position new partition state get kafka partition handle else if new partition state get offset kafka topic partition state sentinel group offset the kafka consumer by default will automatically seek the consumer position to the committed group offset so we do not need to do it new partition state set offset consumer tmp position new partition state get kafka partition handle else consumer tmp seek new partition state get kafka partition handle new partition state get offset catch wakeup exception e a wakeup exception may be throw if the consumer be invoke wakeup before it be isolate for the reassignment in this case we abort the reassignment and just re expose the original consumer synchronize consumer reassignment lock this consumer consumer tmp if reassignment have already start and affect the consumer we do a full roll back so that it be as if it be leave untouched if reassignment start this consumer assign old partition assignment to position key set for map entry topic partition long old partition to position old partition assignment to position entry set this consumer seek old partition to position get key old partition to position get value no need to restore the wakeup state in this case since only the last wakeup call be effective anyways have buffer wakeup false re add all new partition back to the unassigned partition queue to be pick up again for kafka topic partition state t topic partition new partition new partition unassigned partition queue add new partition this signal the main fetch loop to continue through the loop throw new aborted reassignment exception reassignment complete expose the reassign consumer synchronize consumer reassignment lock this consumer consumer tmp restore wakeup state for the consumer if necessary if have buffer wakeup this consumer wakeup have buffer wakeup false 
kafka consumer thread visible for test consumer byte byte get consumer property kafka property return new kafka consumer kafka property 
kafka consumer thread visible for test flink connector rate limiter get rate limiter return rate limiter 
kafka consumer thread visible for testing protect consumer record byte byte get record from kafka consumer record byte byte record consumer poll poll timeout if rate limiter null int byte read get record batch size record rate limiter acquire byte read return record 
flink kafka producer011 visible for test internal public static class kafka transaction state private final transient flink kafka producer byte byte producer nullable final string transactional id final long producer id final short epoch visible for test internal public kafka transaction state string transactional id flink kafka producer byte byte producer this transactional id producer get producer id producer get epoch producer visible for test internal public kafka transaction state flink kafka producer byte byte producer this null short producer visible for test internal public kafka transaction state nullable string transactional id long producer id short epoch flink kafka producer byte byte producer this transactional id transactional id this producer id producer id this epoch epoch this producer producer boolean be transactional return transactional id null override public string to string return string format s transactional id s producer id s epoch be this get class get simple name transactional id producer id epoch override public boolean equal object o if this o return true if o null get class o get class return false kafka transaction state that kafka transaction state o if producer id that producer id return false if epoch that epoch return false return transactional id null transactional id equal that transactional id that transactional id null override public int hash code int result transactional id null transactional id hash code result result int producer id producer id result result int epoch return result 
flink kafka producer011 visible for test internal public kafka transaction state string transactional id flink kafka producer byte byte producer this transactional id producer get producer id producer get epoch producer 
flink kafka producer011 visible for test internal public kafka transaction state flink kafka producer byte byte producer this null short producer 
flink kafka producer011 visible for test internal public kafka transaction state nullable string transactional id long producer id short epoch flink kafka producer byte byte producer this transactional id transactional id this producer id producer id this epoch epoch this producer producer 
flink kafka producer011 visible for test internal public static class kafka transaction context final set string transactional id visible for test internal public kafka transaction context set string transactional id check not null transactional id this transactional id transactional id override public boolean equal object o if this o return true if o null get class o get class return false kafka transaction context that kafka transaction context o return transactional id equal that transactional id override public int hash code return transactional id hash code 
flink kafka producer011 visible for test internal public kafka transaction context set string transactional id check not null transactional id this transactional id transactional id 
flink kafka producer011 visible for test internal public static class transaction state serializer extend type serializer singleton kafka transaction state private static final long serial version u i d 1 l override public boolean be immutable type return true override public kafka transaction state create instance return null override public kafka transaction state copy kafka transaction state from return from override public kafka transaction state copy kafka transaction state from kafka transaction state reuse return from override public int get length return override public void serialize kafka transaction state record datum output view target throw i o exception if record transactional id null target write boolean false else target write boolean true target write u t f record transactional id target write long record producer id target write short record epoch override public kafka transaction state deserialize datum input view source throw i o exception string transactional id null if source read boolean transactional id source read u t f long producer id source read long short epoch source read short return new kafka transaction state transactional id producer id epoch null override public kafka transaction state deserialize kafka transaction state reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception boolean have transactional id source read boolean target write boolean have transactional id if have transactional id target write u t f source read u t f target write long source read long target write short source read short override public type serializer snapshot kafka transaction state snapshot configuration return new transaction state serializer snapshot serializer configuration snapshot for compatibility and format evolution suppress warning weaker access public static final class transaction state serializer snapshot extend simple type serializer snapshot kafka transaction state public transaction state serializer snapshot super transaction state serializer new 
flink kafka producer011 visible for test internal public static class context state serializer extend type serializer singleton kafka transaction context private static final long serial version u i d 1 l override public boolean be immutable type return true override public kafka transaction context create instance return null override public kafka transaction context copy kafka transaction context from return from override public kafka transaction context copy kafka transaction context from kafka transaction context reuse return from override public int get length return override public void serialize kafka transaction context record datum output view target throw i o exception int num id record transactional id size target write int num id for string id record transactional id target write u t f id override public kafka transaction context deserialize datum input view source throw i o exception int num id source read int set string id new hash set num id for int i i num id i id add source read u t f return new kafka transaction context id override public kafka transaction context deserialize kafka transaction context reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception int num id source read int target write int num id for int i i num id i target write u t f source read u t f override public type serializer snapshot kafka transaction context snapshot configuration return new context state serializer snapshot serializer configuration snapshot for compatibility and format evolution suppress warning weaker access public static final class context state serializer snapshot extend simple type serializer snapshot kafka transaction context public context state serializer snapshot super context state serializer new 
flink kafka producer011 visible for test internal public static class next transactional id hint serializer extend type serializer singleton next transactional id hint private static final long serial version u i d 1 l override public boolean be immutable type return true override public next transactional id hint create instance return new next transactional id hint override public next transactional id hint copy next transactional id hint from return from override public next transactional id hint copy next transactional id hint from next transactional id hint reuse return from override public int get length return long byte integer byte override public void serialize next transactional id hint record datum output view target throw i o exception target write long record next free transactional id target write int record last parallelism override public next transactional id hint deserialize datum input view source throw i o exception long next free transactional id source read long int last parallelism source read int return new next transactional id hint last parallelism next free transactional id override public next transactional id hint deserialize next transactional id hint reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception target write long source read long target write int source read int override public type serializer snapshot next transactional id hint snapshot configuration return new next transactional id hint serializer snapshot serializer configuration snapshot for compatibility and format evolution suppress warning weaker access public static final class next transactional id hint serializer snapshot extend simple type serializer snapshot next transactional id hint public next transactional id hint serializer snapshot super next transactional id hint serializer new 
flink kafka producer visible for test public int get transaction coordinator id object transaction manager get value kafka producer transaction manager node node node invoke transaction manager coordinator find coordinator request coordinator type transaction return node id 
flink kafka consumer base visible for testing void join discovery loop thread throw interrupted exception if discovery loop thread null discovery loop thread join 
flink kafka consumer base visible for test map kafka topic partition long get subscribe partition to start offset return subscribe partition to start offset 
flink kafka consumer base visible for test tree map kafka topic partition long get restore state return restore state 
flink kafka consumer base visible for test offset commit mode get offset commit mode return offset commit mode 
flink kafka consumer base visible for test link map get pend offset to commit return pend offset to commit 
flink kafka consumer base visible for test public boolean get enable commit on checkpoint return enable commit on checkpoint 
flink kafka consumer base visible for test static tuple serializer tuple2 kafka topic partition long create state serializer execution config execution config explicit serializer will keep the compatibility with generic type information and allow to disable generic type for user type serializer field serializer new type serializer new kryo serializer kafka topic partition class execution config long serializer instance suppress warning unchecked class tuple2 kafka topic partition long tuple class class tuple2 kafka topic partition long class tuple2 class return new tuple serializer tuple class field serializer 
flink kafka producer base visible for testing protect k v kafka producer k v get kafka producer property prop return new kafka producer prop 
flink kafka producer base visible for testing protect long num pend record synchronize pend record lock return pend record 
flink kinesis consumer visible for test hash map stream shard metadata equivalence wrapper sequence number get restore state return sequence num to restore 
flink kinesis producer visible for testing protect kinesis producer get kinesis producer kinesis producer configuration producer config return new kinesis producer producer config 
kinesis datum fetcher visible for testing protect kinesis datum fetcher list string stream source function source context t source context object checkpoint lock runtime context runtime context property config prop kinesis deserialization schema t deserialization schema kinesis shard assigner shard assigner assigner with periodic watermark t periodic watermark assigner watermark tracker watermark tracker atomic reference throwable error list kinesis stream shard state subscribe shard state hash map string string subscribe stream to last discover shard id flink kinesis proxy factory kinesis proxy factory this stream check not null stream this config prop check not null config prop this source context check not null source context this checkpoint lock check not null checkpoint lock this runtime context check not null runtime context this total number of consumer subtask runtime context get number of parallel subtask this index of this consumer subtask runtime context get index of this subtask this deserialization schema check not null deserialization schema this shard assigner check not null shard assigner this periodic watermark assigner periodic watermark assigner this watermark tracker watermark tracker this kinesis proxy factory check not null kinesis proxy factory this kinesis kinesis proxy factory create config prop this consumer metric group runtime context get metric group add group kinesis consumer metric constant kinesis consumer metric group this error check not null error this subscribe shard state check not null subscribe shard state this subscribe stream to last discover shard id check not null subscribe stream to last discover shard id this shard consumer executor create shard consumer thread pool runtime context get task name with subtask this record emitter create record emitter config prop 
kinesis datum fetcher visible for testing protect long get current time millis return system current time millis 
kinesis datum fetcher visible for testing protect void emit watermark log debug evaluate watermark for subtask time index of this consumer subtask get current time millis long potential watermark long max value long potential next watermark long max value long idle time shard idle interval milli get current time millis shard idle interval milli long max value for map entry integer shard watermark state e shard watermark entry set watermark w e get value last emitted record watermark consider only active shard or those that would advance the watermark if w null e get value last update idle time e get value emit queue get size w get timestamp last watermark potential watermark math min potential watermark w get timestamp for sync use the watermark of the next record when available otherwise watermark may stall when record be block by synchronization record emitter record queue record wrapper t q e get value emit queue record wrapper t next record q peek watermark next watermark next record null next record watermark w potential next watermark math min potential next watermark next watermark get timestamp advance watermark if possible watermark can only be ascend if potential watermark long max value if shard watermark be empty shard idle interval milli log info no active shard for subtask mark the source idle index of this consumer subtask no active shard signal downstream operator to not wait for a watermark source context mark as temporarily idle be idle true else if potential watermark last watermark log debug emit watermark from subtask potential watermark index of this consumer subtask source context emit watermark new watermark potential watermark last watermark potential watermark be idle false next watermark potential next watermark 
kinesis datum fetcher visible for testing protect executor service create shard consumer thread pool final string subtask name return executor new cached thread pool new thread factory override public thread new thread runnable runnable final atomic long thread count new atomic long thread thread new thread runnable thread set name shard consumer subtask name thread thread count get and increment thread set daemon true return thread 
kinesis datum fetcher visible for test public list kinesis stream shard state get subscribe shard state return subscribe shard state 
standalone application cluster entry point visible for test static configuration load configuration from cluster config standalone application cluster configuration cluster configuration configuration configuration load configuration cluster configuration set static job id cluster configuration configuration savepoint restore setting to configuration cluster configuration get savepoint restore setting configuration return configuration 
watermark with idleness visible for test watermark with idleness watermark generator t watermark duration idle timeout clock clock check not null idle timeout idle timeout check argument idle timeout be zero idle timeout be negative idle timeout must be greater than zero this watermark check not null watermark watermark this idleness timer new idleness timer clock idle timeout 
watermark with idleness visible for test static final class idleness timer the clock use to measure elapse time private final clock clock counter to detect change no problem if it overflow private long counter the value of the counter at the last activity check private long last counter the first time relative to link clock relative time nano when the activity check find that no activity happen since the last check special value no timer private long start of inactivity nano the duration before the output be mark as idle private final long max idle time nano idleness timer clock clock duration idle timeout this clock clock long idle nano try idle nano idle timeout to nano catch arithmetic exception ignore long integer overflow idle nano long max value this max idle time nanos idle nano public void activity counter public boolean check if idle if counter last counter activity since the last check we reset the timer last counter counter start of inactivity nano 0 l return false else timer start but have not yet reach idle timeout if start of inactivity nano 0 l first time that we see no activity since the last periodic probe begin the timer start of inactivity nano clock relative time nanos return false else return clock relative time nano start of inactivity nano max idle time nano 
abstract runtime u d f context internal visible for test public string get allocation i d as string return task info get allocation i d as string 
state descriptor visible for test final type serializer t get original serializer type serializer t serializer serializer atomic reference get if serializer null return serializer else throw new illegal state exception serializer not yet initialize 
enum serializer visible for test t get value return value 
enum serializer visible for test map t integer get value to ordinal return value to ordinal 
type serializer snapshot serialization util visible for test static t type serializer snapshot t deserialize v2 datum input view in class loader cl throw i o exception return type serializer snapshot read version snapshot in cl 
type serializer snapshot serialization util visible for testing suppress warning deprecation static t type serializer snapshot t deserialize v1 datum input view in class loader cl nullable type serializer t serializer throw i o exception type serializer snapshot t snapshot read and instantiate snapshot class in cl if the snapshot be create before flink 1.7 we need to distinguish the follow case old snapshot type that need serializer from the outside new snapshot type that understand the old format and can produce a restore serializer from it if snapshot instanceof type serializer config snapshot type serializer config snapshot t old type snapshot type serializer config snapshot t snapshot old type snapshot set prior serializer serializer old type snapshot set user code class loader cl old type snapshot read in else new type simple case int read version in read int snapshot read snapshot read version in cl return snapshot 
kryo serializer visible for test public kryo get kryo check kryo initialize return this kryo 
tuple serializer base visible for test public type serializer object get field serializer return field serializer 
configuration util visible for test public static map string string parse tm resource dynamic configs string dynamic configs str map string string config new hash map string config str dynamic configs str split check argument config str length dynamic option string contain odd number of argument argument s s config str length dynamic config str for int i i config str length i string config str config str i if i check argument config str equal d else string config k v config str split check argument config k v length config put config k v config k v check config contain config task manager option framework heap memory key check config contain config task manager option framework off heap memory key check config contain config task manager option task heap memory key check config contain config task manager option task off heap memory key check config contain config task manager option network memory max key check config contain config task manager option network memory min key check config contain config task manager option manage memory size key return config 
configuration util visible for test public static map string string parse jvm arg string string jvm param str final string xmx xmx final string xms xms final string max direct xx max direct memory size final string max metadata xx max metaspace size map string string config new hash map for string param str jvm param str split if param str start with xmx config put xmx param str substring xmx length else if param str start with xms configs put xms param str substr xms length else if param str start with max direct config put max direct param str substr max direct length else if param str start with max metadata config put max metadata param str substr max metadata length check argument configs contain key xmx check argument configs contain key xms check argument configs contain key max metadata return config 
entropy injector visible for test static path resolve entropy path path entropy inject file system ef boolean inject entropy throw i o exception final string entropy injection key ef get entropy injection key if entropy injection key null return path else final uri original uri path to uri final string checkpoint path original uri get path final int index of key checkpoint path index of entropy injection key if index of key return path else final string builder buffer new string builder checkpoint path length buffer append checkpoint path index of key if inject entropy buffer append ef generate entropy buffer append checkpoint path index of key entropy injection key length checkpoint path length final string rewrite path buffer to string try return new path new uri original urus get scheme original uri get authority rewrite path original uri get query original uri get fragment normalize catch u be i syntax exception e this could only happen if the inject entropy string contain invalid character throw new i o exception uri format error while process path for entropy injection e 
local recoverable writer visible for test static file generate staging temp file path file target file check argument target file be directory target file must not be a directory final file parent target file get parent file final string name target file get name check argument parent null target file must not be the root directory while true file candidate new file parent name inprogress uuid random u u i d to string if candidate exist return candidate 
ref count file visible for test public int get reference counter return reference get 
safety net closeable registry visible for test safety net closeable registry supplier closeable reaper thread reaper thread supplier super new identity hash map synchronize reaper thread lock if global safety net registry count precondition check state null reaper thread try reaper thread reaper thread supplier get reaper thread start catch throwable throwable reaper thread null throw throwable global safety net registry count 
safety net closeable registry visible for test static boolean be reaper thread run synchronize reaper thread lock return null reaper thread reaper thread be alive 
memory segment factory visible for test public static memory segment allocate off heap unsafe memory int size return allocate off heap unsafe memory size null no op 
default plugin manager visible for test default plugin manager parent class loader null plugin descriptor null always parent first pattern null 
plugin loader visible for test public plugin loader class loader plugin class loader this plugin class loader plugin class loader 
plugin loader visible for test public static class loader create plugin class loader plugin descriptor plugin descriptor class loader parent class loader string always parent first pattern return new plugin class loader plugin descriptor get plugin resource u be l parent class loader array util concat always parent first pattern plugin descriptor get loader exclude pattern 
abstract closeable registry visible for test public final int get number of register closeable synchronize get synchronization lock return closeable to ref size 
abstract closeable registry visible for test public final boolean be closeable registered closeable c synchronize get synchronization lock return closeable to ref contain key c 
link optional map visible for test static k v boolean be leave prefix of right link optional map k v leave link optional map k v right iterator string right key right key name iterator for string leave key left key name if right key have next return false string right key right key next if leave key equal right key return false return true 
wrapping proxy util visible for test static final int safety net max iteration 
config option doc generator visible for test static final string common section file name common section html 
config option doc generator visible for test static void generate common section string root dir string output directory option class location location string path prefix throw i o exception class not find exception list option with meta info all section option new array list for option class location location location all section option add all find section option root dir location get module location get package path prefix map string list option with meta info option group by section all section option stream flat map option final string section option field get annotation documentation section class value if section length throw new runtime exception string format option s be annotate with s but the list of section be empty option option key documentation section class get simple name return array stream section map section tuple2 of section option collect collector grouping by option option f0 collector map option option f1 collector to list option group by section for each section option option sort o1 o2 int position1 o1 field get annotation documentation section class position int position2 o2 field get annotation documentation section class position if position1 position2 return o1 option key compare to o2 option key else return integer compare position1 position2 string section html table to html table option try file write path get output directory get section file name section section html table get byte standard charset utf catch exception e throw new runtime exception e 
config option doc generator visible for test static string get section file name string section return section section html 
config option doc generator visible for test static void process config option string root dir string module string package name string path prefix throw consumer class i o exception class consumer throw i o exception class not find exception path config dir path get root dir module path prefix package name replace all try directory stream path stream file new directory stream config dir for path entry stream string file name entry get file name to string matcher matcher class name pattern matcher file name if matcher match final string class name package name matcher group class name group if exclusion contain class name class option class class for name class name class consumer accept option class 
config option doc generator visible for test static list tuple2 config group string generate table for class class option class config group config group option class get annotation config group class list option with meta info all option extract config option option class list tuple2 config group string table if config group null table new array list config group group length tree tree new tree config group group all option for config group group config group group list option with meta info config option tree find config option group sort option config option table add tuple2 of group to html table config option list option with meta info config option tree get default option sort option config option table add tuple2 of null to html table config option else sort option all option table collection singleton list tuple2 of null to html table all option return table 
config option doc generator visible for test static list option with meta info extract config option class clazz try list option with meta info config option new array list field field clazz get field for field field field if be config option field should be document field config option add new option with meta info config option field get null field return config option catch exception e throw new runtime exception fail to extract config option from class clazz e 
config option doc generator visible for test static string type to html option with meta info option with meta info config option option option with meta info option class clazz get clazz option boolean be list be list option if clazz be enum return enum type to html clazz be list return atomic type to html clazz be list 
config option doc generator visible for test static string stringify default option with meta info option with meta info config option option option with meta info option documentation override default override document default option with meta info field get annotation documentation override default class if override document default null return override document default value else object value option default value return stringify object value 
rest a p i doc generator visible for test static void create html file document rest endpoint rest endpoint rest a p i version api version path output file throw i o exception string builder html new string builder list message header spec rest endpoint get spec stream filter spec spec get support a p i version contain api version filter rest a p i doc generator should be document collect collector to list spec for each spec html append create html entry spec file delete if exist output file file write output file html to string get byte standard charset utf 
g p u driver visible for test static final config option string discovery script path key discovery script path string type default value string format s external resource gpu nvidia gpu discovery sh config constant default flink plugin dir 
g p u driver visible for test static final config option string discovery script arg key discovery script arg string type no default value 
configuration visible for test public void set allow null value property boolean val this allow null value property val 
configuration visible for test public boolean only key exist string name string name handle deprecation deprecation context get name for string n name if get prop get property n default string check equal default string check return true return false 
configuration visible for test void log deprecation string message log deprecation info message 
hadoop recoverable writer visible for test static org apache hadoop f path generate staging temp file path org apache hadoop f file system f org apache hadoop f path target file throw i o exception check argument target file be absolute target file must be absolute final org apache hadoop f path parent target file get parent final string name target file get name check argument parent null target file must not be the root directory while true org apache hadoop f path candidate new org apache hadoop f path parent name inprogress uuid random u u i d to string if f exist candidate return candidate 
map r f factory visible for test static org apache hadoop f file system instantiate map r f class object arg throw i o exception final class extend org apache hadoop f file system f clazz try f clazz class for name mapr f class name as subclass org apache hadoop f file system class catch class not find exception e throw new i o exception can not load map r f class miss in classpath e catch class cast exception e throw new i o exception class mapr f class name be not a subclass of org apache hadoop f file system final class constructor args array stream arg map object get class to array class new try final constructor extend org apache hadoop f file system ctor f clazz get constructor constructor arg return ctor new instance arg catch exception e throw new i o exception can not instantiate map r f class e 
o s s file system factory visible for test org apache hadoop conf configuration get hadoop configuration org apache hadoop conf configuration conf new org apache hadoop conf configuration if flink config null return conf read all configuration with prefix flink config prefix for string key flink config key set for string prefix flink config prefix if key start with prefix string value flink config get string key null conf set key value if config key to shade contain key conf set key flink shade prefix value log debug add flink config entry for as to hadoop config key conf get key return conf 
ref count buffer file stream visible for test public ref count buffer file stream final ref count file with stream file final int buffer size check argument buffer size 0 l this current tmp file check not null file this buffer new byte buffer size this position in buffer this close false 
ref count buffer file stream visible for test int get position in buffer return position in buffer 
ref count buffer file stream visible for test public int get reference counter return current tmp file get reference counter 
recoverable multi part upload impl visible for test static string create incomplete part object name prefix string object name check not null object name final int last slash object name last index of final string parent final string child if last slash parent child object name else parent object name substring last slash child object name substring last slash return parent child be empty child tmp 
s3 recoverable writer visible for test s3 recoverable writer final s3 access helper s3 access helper final s3 recoverable multipart upload factory upload factory final function with exception file ref count file with stream i o exception temp file creator final long user define min part size this s3 access helper check not null s3 access helper this upload factory check not null upload factory this temp file creator check not null temp file creator this user define min part size user define min part size 
s3 file system factory visible for test static hadoop config loader create hadoop config loader return new hadoop config loader flink config prefix mirror config key fs s3a collection empty set collection empty set 
s3 file system factory visible for test static hadoop config loader create hadoop config loader return new hadoop config loader flink config prefix mirror config key presto s3 collection empty set collection empty set 
configuration visible for test public void set allow null value property boolean val this allow null value property val 
configuration visible for test public boolean only key exist string name string name handle deprecation deprecation context get name for string n name if get prop get property n default string check equal default string check return true return false 
avro serializer snapshot visible for test static t type serializer schema compatibility t resolve schema compatibility schema writer schema schema reader schema if object equal writer schema reader schema return type serializer schema compatibility compatible as be final schema pair compatibility compatibility schema compatibility check reader writer compatibility reader schema writer schema return avro compatibility to flink compatibility compatibility 
hadoop path base part file writer visible for test static class hadoop path base pend file recoverable implement pend file recoverable private final path target file path private final path temp file path public hadoop path base pend file recoverable path target file path path temp file path this target file path target file path this temp file path temp file path public path get target file path return target file path public path get temp file path return temp file path 
hadoop path base part file writer visible for test static class hadoop path base pend file recoverable serializer implement simple versioned serializer pend file recoverable static final hadoop path base pend file recoverable serializer instance new hadoop path base pend file recoverable serializer private static final charset charset standard charset utf private static final int magic number 0x2 c853c90 override public int get version return override public byte serialize pend file recoverable pend file recoverable if pend file recoverable instanceof hadoop path base part file writer hadoop path base pend file recoverable throw new unsupported operation exception only hadoop path base pend file recoverable be support hadoop path base pend file recoverable hadoop recoverable hadoop path base pend file recoverable pend file recoverable path path hadoop recoverable get target file path path in progress path hadoop recoverable get temp file path byte path byte path to uri to string get byte charset byte in progress byte in progress path to uri to string get byte charset byte target byte new byte path byte length in progress byte length byte buffer bb byte buffer wrap target byte order byte order little endian bb put int magic number bb put int path byte length bb put path byte bb put int in progress byte length bb put in progress byte return target byte override public hadoop path base pend file recoverable deserialize int version byte serialize throw i o exception switch version case return deserialize v1 serialize default throw new i o exception unrecognized version or corrupt state version private hadoop path base pend file recoverable deserialize v1 byte serialize throw i o exception final byte buffer bb byte buffer wrap serialize order byte order little endian if bb get int magic number throw new i o exception corrupt datum unexpected magic number byte target file path byte new byte bb get int bb get target file path byte string target file path new string target file path byte charset byte temp file path byte new byte bb get int bb get temp file path byte string temp file path new string temp file path byte charset return new hadoop path base pend file recoverable new path target file path new path temp file path 
orc input format visible for test orc split reader t get reader return reader 
orc input format visible for test configuration get configuration return conf 
orc input format visible for test int get batch size return batch size 
orc input format visible for test string get schema return schema to string 
orc split reader visible for test public record reader get record reader return orc row reader 
orc table source visible for testing protect orc row input format build orc input format return new orc row input format path orc schema orc config batch size 
orc shim v200 visible for test public static tuple2 long long get offset and length for split long split start long split length list stripe information stripe long split end split start split length long read start long max value long read end long min value for stripe information s stripe if split start s get offset s get offset split end stripe start in split so it be include read start math min read start s get offset read end math max read end s get offset s get length if read start long max value at least one split be include return tuple2 of read start read end read start else return tuple2 of 0 l 0 l 
parquet input format visible for testing protect filter predicate get predicate return this filter predicate 
kubernete worker resource spec factory visible for test static c p u resource get default cpus configuration configuration double fallback configuration get double kubernete config option task manager cpu return task executor process util get cpu core with fallback configuration fallback 
flink conf mount decorator visible for test string get flink conf datum map string string property map throw i o exception try string writer sw new string writer print writer out new print writer sw property map for each k v out print k out print out println v return sw to string 
flink conf mount decorator visible for test public static string get flink conf config map name string cluster id return config map prefix cluster id 
kubernete resource manager visible for test map resource i d kubernete worker node get worker node return worker node 
nfa visible for test public collection state t get state return state value 
lockable visible for testing type serializer e get element serializer return element serializer 
share buffer visible for test iterator map entry long integer get event counter throw exception return event count iterator 
share buffer visible for test public int get event buffer cache size return event buffer cache size 
share buffer visible for test public int get event buffer size throw exception return iterable size event buffer entry 
share buffer visible for test public int get share buffer node size throw exception return iterable size entry entry 
share buffer visible for test public int get share buffer node cache size throw exception return entry cache size 
cep operator visible for test boolean have non empty share buffer key key throw exception set current key key return partial match be empty 
cep operator visible for test boolean have non empty p q key key throw exception set current key key return element queue state be empty 
cep operator visible for test int get p q size key key throw exception set current key key int counter for list in element element queue state value counter element size return counter 
cep operator visible for test long get late record number return num late record drop get count 
bootstrap transformation visible for test map partition operator t tag operator subtask state write operator subtask state operator i d operator i d state backend state backend path savepoint path int local max parallelism datum set t input datum set if original key selector null input datum set partition custom new key group range partitioner local max parallelism hash key selector stream operator tag operator subtask state operator factory create operator system current time millis savepoint path operator datum set clean operator final stream config config get config operator i d state backend operator bound one input stream task runner t operator runner new bound one input stream task runner config local max parallelism map partition operator t tag operator subtask state subtask state input map partition operator runner name operator i d to hex string if operator instanceof broadcast state bootstrap operator subtask state subtask state set parallelism else int current parallelism get parallelism subtask state if current parallelism local max parallelism subtask state set parallelism local max parallelism return subtask state 
bootstrap transformation visible for test stream config get config operator i d operator i d state backend state backend stream operator tag operator subtask state operator eagerly perform a deep copy of the configuration otherwise it will result in undefined behavior when deploy with multiple bootstrap transformation configuration deep copy new configuration datum set get execution environment get configuration final stream config config new stream config deep copy config set chain start config set checkpoint enable true config set checkpoint mode checkpoint mode exactly once if key type null type serializer key serializer key type create serializer datum set get execution environment get config config set state key serializer key serializer config set state partitioner original key selector config set stream operator operator config set operator name operator i d to hex string config set operator i d operator i d config set state backend state backend return config 
meso resource manager test visible for test override public v completable future v call async callable v callable time timeout return super call async callable timeout 
schedule dropwizard reporter visible for test map counter string get counter return counter 
schedule dropwizard reporter visible for test map meter string get meter return meter 
schedule dropwizard reporter visible for test map gauge string get gauge return gauge 
schedule dropwizard reporter visible for test map histogram string get histogram return histogram 
measurement info provider visible for test static final char scope separator 
abstract prometheus reporter visible for test static string replace invalid char final string input http prometheus io doc instrument writing exporter only a z a z0 be valid in metric name any other character should be sanitize to a underscore return unallow char pattern matcher input replace all 
abstract prometheus reporter visible for test io prometheus client gauge child gauge from gauge gauge return new io prometheus client gauge child override public double get final object value gauge get value if value null log debug gauge be null value default to gauge return if value instanceof double return double value if value instanceof number return number value double value if value instanceof boolean return boolean value log debug invalid type for gauge only number type and boolean be support by this reporter gauge value get class get name return 
abstract prometheus reporter visible for test static class histogram summary proxy extend collector static final list double quantile array as list private final string metric name private final string help string private final list string label name with quantile private final map list string histogram histogram by label value new hash map histogram summary proxy final histogram histogram final string metric name final string help string final list string label name final list string label value this metric name metric name this help string help string this label name with quantile add to list label name quantile histogram by label value put label value histogram override public list metric family sample collect we can not use summary metric family because it be impossible to get a sum of all value at least for dropwizard histogram whose snapshot s value array only hold a sample of recent value list metric family sample sample sample new link list for map entry list string histogram label value to histogram histogram by label value entry set add sample label value to histogram get key label value to histogram get value sample return collection singleton list new metric family sample metric name type summary help string sample void add child final histogram histogram final list string label value histogram by label value put label value histogram void remove final list string label value histogram by label value remove label value private void add sample final list string label value final histogram histogram final list metric family sample sample sample sample add new metric family sample sample metric name count label name with quantile sub list label name with quantile size label value histogram get count final histogram statistics statistics histogram get statistics for final double quantile quantile sample add new metric family sample sample metric name label name with quantile add to list label value quantile to string statistics get quantile quantile 
prometheus reporter visible for test int get port precondition check state http server null server have not be initialize return port 
slf4j reporter visible for test map gauge string get gauge return gauge 
slf4j reporter visible for test map counter string get counter return counter 
slf4j reporter visible for test map histogram string get histogram return histogram 
slf4j reporter visible for test map meter string get meter return meter 
process python environment manager visible for test static final string pyflink gateway disabled pyflink gateway disabled 
process python environment manager visible for test public static final string python requirement file python requirement file 
process python environment manager visible for test public static final string python requirement cache python requirement cache 
process python environment manager visible for test public static final string python requirement install dir python requirement install dir 
process python environment manager visible for test public static final string python work dir python work dir 
process python environment manager visible for test static final string python requirement dir python requirement 
process python environment manager visible for test static final string python archive dir python archive 
process python environment manager visible for test static final string python file dir python file 
process python environment manager visible for test map string string construct environment variable throw i o exception illegal argument exception map string string env new hash map this system env construct file directory env construct archive directory env construct requirement directory env set boot log dir env put boot log dir base directory disable the launching of gateway server to prevent from this dead loop launch udf worker import udf import job code if the job code be not enclose in a if name main statement v execute job in local mode launch gateway server and submit job to local executor env put pyflink gateway disabled true set the path of python interpreter it will be use to execute the udf worker env put python dependency info get python exec log info python interpreter path dependency info get python exec return env 
process python environment manager visible for test string get base directory return base directory 
flink metric container visible for test static array list get name space array metric key metric key metric name metric name metric key metric name try return new object mapper read value metric name get namespace array list class catch json processing exception e throw new runtime exception string format parse namespace s error metric name get namespace e 
flink metric container visible for test static string get flink metric identifier string metric key metric key metric name metric name metric key metric name array list string scope component get name space array metric key list string result scope component sub list scope component size result add metric name get name return string join metric key separator result 
flink metric container visible for test static metric group register metric group metric key metric key metric group metric group array list string scope component get name space array metric key int size scope component size list string metric group name scope component sub list size list string metric group type scope component sub list size size for int i i metric group name size i if metric group type get i equal metric group type generic metric group metric group add group metric group name get i else if metric group type get i equal metric group type key metric group metric group add group metric group name get i metric group name get i return metric group 
python environment manager util visible for test public static final string pyflink udf runner dir pyflink udf runner dir 
abstract server base visible for test public boolean be event group shutdown return bootstrap null bootstrap group be terminate 
client visible for test public boolean be event group shutdown return bootstrap null bootstrap group be terminate 
blob key visible for test static blob key create key blob type type if type permanent blob return new permanent blob key else return new transient blob key 
blob key visible for test public byte get hash return key 
blob server visible for test public file get storage location nullable job i d job id blob key key throw i o exception return blob util get storage location storage dir job id key 
blob server visible for test concurrent map tuple2 job i d transient blob key long get blob expiry time return blob expiry time 
permanent blob cache visible for test static class ref count number of reference to a job public int reference timestamp in millisecond when any job datum should be clean up no cleanup for non positive value public long keep until 
permanent blob cache visible for test public file get storage location job i d job id blob key key throw i o exception check not null job id return blob util get storage location storage dir job id key 
permanent blob cache visible for test map job i d ref count get job ref counter return job ref counter 
permanent blob key visible for test public permanent blob key super blob type permanent blob 
transient blob cache visible for test concurrent map tuple2 job i d transient blob key long get blob expiry time return blob expiry time 
transient blob cache visible for test public file get storage location nullable job i d job id blob key key throw i o exception return blob util get storage location storage dir job id key 
transient blob key visible for test public transient blob key super blob type transient blob 
void blob writer visible for test public class void blob writer implement blob writer private static final void blob writer instance new void blob writer override public permanent blob key put permanent job i d job id byte value throw i o exception throw new i o exception the void blob writer can not write datum to the blob store override public permanent blob key put permanent job i d job id input stream input stream throw i o exception throw new i o exception the void blob writer can not write datum to the blob store override public int get min offloading size return integer max value public static void blob writer get instance return instance 
channel state write request executor impl visible for test void run try loop catch exception ex throw ex finally try close all this cleanup request dispatcher fail throw null new cancellation exception throw catch exception e noinspection non atomic operation on volatile field throw exception util first or suppress e throw log debug loop terminate task name 
channel state write request executor impl visible for test thread get thread return thread 
checkpoint coordinator visible for test public checkpoint coordinator job i d job checkpoint coordinator configuration chk config execution vertex task to trigger execution vertex task to wait for execution vertex task to commit to collection operator coordinator checkpoint context coordinator to checkpoint checkpoint i d counter checkpoint i d counter complete checkpoint store complete checkpoint store state backend checkpoint state backend executor executor schedule executor timer share state registry factory share state registry factory checkpoint failure manager failure manager clock clock sanity check check not null checkpoint state backend max in between duration can be one year this be to prevent numeric overflow long min pause between checkpoint chk config get min pause between checkpoint if min pause between checkpoint l min pause between checkpoint l it do not make sense to schedule checkpoint more often then the desire time between checkpoint long base interval chk config get checkpoint interval if base interval min pause between checkpoint base interval min pause between checkpoint this job check not null job this base interval base interval this checkpoint timeout chk config get checkpoint timeout this min pause between checkpoint min pause between checkpoint this task to trigger check not null task to trigger this task to wait for check not null task to wait for this task to commit to check not null task to commit to this coordinator to checkpoint collection unmodifiable collection coordinator to checkpoint this pend checkpoint new link hash map this checkpoint id counter check not null checkpoint i would counter this complete checkpoint store check not null complete checkpoint store this executor check not null executor this share state registry factory check not null share state registry factory this share state registry share state registry factory create executor this be prefer checkpoint for recovery chk config be prefer checkpoint for recovery this failure manager check not null failure manager this clock check not null clock this be exactly once mode chk config be exactly once this unaligned checkpoint enable chk config be unaligned checkpoint enable this recent pend checkpoint new array deque num ghost checkpoint id this master hook new hash map this timer timer this checkpoint property checkpoint property for checkpoint chk config get checkpoint retention policy try this checkpoint storage checkpoint state backend create checkpoint storage job checkpoint storage initialize base location catch i o exception e throw new flink runtime exception fail to create checkpoint storage at checkpoint coordinator side e try make sure the checkpoint id enumerator be run possibly issue a blocking call to zoo keeper checkpoint i d counter start catch throwable t throw new runtime exception fail to start checkpoint id counter t get message t this request decider new checkpoint request decider chk config get max concurrent checkpoint this reschedule trigger this clock this min pause between checkpoint this pend checkpoint size this lock 
checkpoint coordinator visible for test public completable future complete checkpoint trigger checkpoint checkpoint property prop nullable string external savepoint location boolean be periodic boolean advance to end of time if advance to end of time prop be synchronous prop be savepoint return future util complete exceptionally new illegal argument exception only synchronous savepoint be allow to advance the watermark to max checkpoint trigger request request new checkpoint trigger request prop external savepoint location be periodic advance to end of time request decider choose request to execute request be trigger last checkpoint completion relative time if present this start trigger checkpoint return request on completion promise 
checkpoint coordinator deprecate visible for test priority queue checkpoint trigger request get trigger request queue return request decider get trigger request queue 
checkpoint coordinator visible for test boolean be current periodic trigger available return current periodic trigger null 
checkpoint option visible for test public checkpoint option checkpoint type checkpoint type checkpoint storage location reference target location this checkpoint type target location true false 
checkpoint option visible for test public static checkpoint option for checkpoint with default location return checkpoint at default location 
checkpoint property visible for test checkpoint property boolean force checkpoint type checkpoint type boolean discard subsume boolean discard finish boolean discard cancel boolean discard fail boolean discard suspend this force force this checkpoint type check not null checkpoint type this discard subsume discard subsume this discard finish discard finish this discard cancel discard cancel this discard fail discard fail this discard suspend discard suspend 
checkpoint request decider visible for test deprecate priority queue checkpoint trigger request get trigger request queue synchronize lock return new priority queue queue request 
checkpoint stats tracker visible for test static final string number of checkpoint metric total number of checkpoint 
checkpoint stats tracker visible for test static final string number of in progress checkpoint metric number of in progress checkpoint 
checkpoint stats tracker visible for test static final string number of complete checkpoint metric number of complete checkpoint 
checkpoint stats tracker visible for test static final string number of fail checkpoint metric number of fail checkpoint 
checkpoint stats tracker visible for test static final string latest restore checkpoint timestamp metric last checkpoint restore timestamp 
checkpoint stats tracker visible for test static final string latest complete checkpoint size metric last checkpoint size 
checkpoint stats tracker visible for test static final string latest complete checkpoint duration metric last checkpoint duration 
checkpoint stats tracker visible for test static final string latest complete checkpoint external path metric last checkpoint external path 
metadata v3 serializer visible for test override public void serialize result subpartition state handle result subpartition state handle handle datum output stream do throw i o exception channel state handle serializer serialize handle do 
metadata v3 serializer visible for test override public state object collection result subpartition state handle deserialize result subpartition state handle datum input stream dis nullable deserialization context context throw i o exception return deserialize collection dis context channel state handle serializer deserialize result subpartition state handle 
metadata v3 serializer visible for test override public void serialize input channel state handle input channel state handle handle datum output stream do throw i o exception channel state handle serializer serialize handle do 
metadata v3 serializer visible for test override public state object collection input channel state handle deserialize input channel state handle datum input stream dis nullable deserialization context context throw i o exception return deserialize collection dis context channel state handle serializer deserialize input channel state handle 
metadata v3 serializer visible for test public static void serialize stream state handle stream state handle state handle datum output stream do throw i o exception metadata v2 v3 serializer base serialize stream state handle state handle do 
metadata v3 serializer visible for test public static stream state handle deserialize stream state handle datum input stream dis throw i o exception return metadata v2 v3 serializer base deserialize stream state handle dis null 
metadata v3 serializer visible for test public static void serialize operator state handle util operator state handle state handle datum output stream do throw i o exception instance serialize operator state handle state handle do 
metadata v3 serializer visible for test public static operator state handle deserialize operator state handle util datum input stream dis throw i o exception return instance deserialize operator state handle dis null 
metadata v3 serializer visible for test public static void serialize key state handle util key state handle state handle datum output stream do throw i o exception instance serialize key state handle state handle do 
metadata v3 serializer visible for test public static key state handle deserialize key state handle util datum input stream dis throw i o exception return instance deserialize key state handle dis null 
metadata v3 serializer visible for test public static state object collection input channel state handle deserialize input channel state handle datum input stream dis throw i o exception return instance deserialize input channel state handle dis null 
metadata v3 serializer visible for test public state object collection result subpartition state handle deserialize result subpartition state handle datum input stream dis throw i o exception return instance deserialize result subpartition state handle dis null 
state assignment operation visible for test public static void extract intersect state collection extend key state handle original subtask state handle key group range range to extract list key state handle extract state collector for key state handle key state handle original subtask state handle if key state handle null key state handle intersect key state handle key state handle get intersection range to extract if intersect key state handle null extract state collector add intersect key state handle 
bootstrap tool visible for test public static actor system start remote actor system configuration configuration string external address string external port range logger logger throw exception return start remote actor system configuration akka util get flink actor system name external address external port range net util get wildcard i p address optional empty logger fork join executor configuration from configuration configuration null 
task executor process spec visible for test public task executor process spec c p u resource cpu core memory size framework heap size memory size framework off heap size memory size task heap size memory size task off heap size memory size network mem size memory size manage memory size memory size jvm metaspace size memory size jvm overhead size this cpu core new task executor flink memory framework heap size framework off heap size task heap size task off heap size network mem size manage memory size new jvm metaspace and overhead jvm metaspace size jvm overhead size 
resource profile visible for test public static final resource profile any new builder set cpu core double max value set task heap memory memory size max value set task off heap memory memory size max value set manage memory memory size max value set network memory memory size max value build 
resource profile visible for test static resource profile from resource spec resource spec resource spec return from resource spec resource spec memory size zero 
resource profile visible for test public static resource profile from resource final double cpu core final int task heap memory m b return new builder set cpu core cpu core set task heap memory m b task heap memory m b build 
slot profile visible for test public static slot profile no requirement return no requirement 
slot profile visible for test public static slot profile no locality resource profile resource profile return prefer locality resource profile collection empty list 
slot profile visible for test public static slot profile prefer locality final resource profile resource profile final collection task manager location prefer location return prior allocation resource profile resource profile prefer location collection empty list collection empty set 
schedule future adapter visible for test schedule future adapter nonnull future v delegate long schedule time nano long tie breaker uid this delegate delegate this schedule time nanos schedule time nano this tie breaker uid tie breaker uid 
schedule future adapter visible for test long get tie breaker uid return tie breaker uid 
schedule future adapter visible for test long get schedule time nanos return schedule time nano 
task deployment descriptor factory visible for test static shuffle descriptor get consume partition shuffle descriptor result partition i d consume partition id result partition type result partition type boolean be consumable execution state producer state boolean allow unknown partition nullable result partition deployment descriptor consume partition descriptor the produce task need to be run or already finish if result partition type be pipelined be consumable consume partition descriptor null be producer available producer state partition be already register return consume partition descriptor get shuffle descriptor else if allow unknown partition the produce task might not have register the partition yet return new unknown shuffle descriptor consume partition id else throw respective exception handle consume partition shuffle descriptor error consume partition id result partition type be consumable producer state return null should never happen 
file archive execution graph store visible for test file get storage dir return storage dir 
file archive execution graph store visible for test loading cache job i would archive execution graph get archive execution graph cache return archive execution graph cache 
abstract dispatcher leader process visible for test state get state synchronize lock return state 
execution visible for test static completable future map intermediate result partition i d result partition deployment descriptor register produce partition execution vertex vertex task manager location location execution attempt i d attempt id boolean send schedule or update consumer message producer descriptor producer descriptor producer descriptor create location attempt id collection intermediate result partition partition vertex get produce partition value collection completable future result partition deployment descriptor partition registration new array list partition size for intermediate result partition partition partition partition descriptor partition descriptor partition descriptor from partition int max parallelism get partition max parallelism partition completable future extend shuffle descriptor shuffle descriptor future vertex get execution graph get shuffle master register partition with producer partition descriptor producer descriptor temporary hack the scheduler do not handle incomplete future properly precondition check state shuffle descriptor future be do shuffle descriptor future be incomplete completable future result partition deployment descriptor partition registration shuffle descriptor future then apply shuffle descriptor new result partition deployment descriptor partition descriptor shuffle descriptor max parallelism send schedule or update consumer message partition registration add partition registration return future util combine all partition registration then apply rpdd map intermediate result partition i d result partition deployment descriptor produce partition new link hash map partition size rpdd for each rpdd produce partition put rpdd get partition id rpdd return produce partition 
execution deprecate visible for test void mark fail throwable t map string accumulator user accumulator i o metric metric mark failed t user accumulator metric false 
execution visible for test void mark finish mark finish null null 
execution visible for test public completable future collection task manager location calculate preferred location location preference constraint location preference constraint final collection completable future task manager location prefer location future get vertex get prefer location final completable future collection task manager location prefer location future switch location preference constraint case all prefer location future future util combine all prefer location future break case any final array list task manager location complete task manager location new array list prefer location future size for completable future task manager location prefer location future prefer location future if prefer location future be do preferred location future be complete exceptionally final task manager location task manager location prefer location future get now null if task manager location null throw new flink runtime exception task manager location future be complete with null this indicate a programming bug complete task manager location add task manager location prefer location future completable future complete future complete task manager location break default throw new runtime exception unknown location preference constraint location preference constraint return prefer location future 
execution graph visible for test public job status wait until terminal throw interrupted exception try return termination future get catch execution exception e this should never happen it would be a bug so we don t expect this to be handle and throw a unchecked exception here throw new runtime exception e 
execution graph builder visible for test public static execution graph build graph nullable execution graph prior job graph job graph configuration job manager config schedule executor service future executor executor io executor slot provider slot provider class loader class loader checkpoint recovery factory recovery factory time rpc timeout restart strategy restart strategy metric group metric blob writer blob writer time allocation timeout logger log shuffle master shuffle master job master partition tracker partition tracker throw job execution exception job exception final failover strategy factory failover strategy failover strategy loader load failover strategy job manager config log return build graph prior job graph job manager config future executor io executor slot provider class loader recovery factory rpc timeout restart strategy metric blob writer allocation timeout log shuffle master partition tracker failover strategy execution host execution new state 
execution job vertex visible for test execution job vertex execution graph graph job vertex job vertex int default parallelism time timeout throw job exception this graph job vertex default parallelism job manager option max attempt history size default value timeout 1 l system current time millis 
execution vertex visible for test execution vertex execution job vertex job vertex int sub task index intermediate result produce datum set time timeout this job vertex sub task index produce datum set timeout 1 l system current time millis job manager option max attempt history size default value 
execution vertex visible for test public void deploy to slot logical slot slot throw job exception if current execution try assign resource slot current execution deploy else throw new illegal state exception could not assign resource slot to current execution current execution 
execution failure handler visible for test static boolean be unrecoverable error throwable cause optional throwable unrecoverable error throwable classifier find throwable of throwable type cause throwable type non recoverable error return unrecoverable error be present 
restart pipelined region failover strategy visible for test public restart pipelined region failover strategy scheduling topology topology this topology result partition i d true 
restart pipelined region failover strategy visible for test public scheduling pipelined region get failover region execution vertex i d vertex i d return topology get pipelined region of vertex vertex i d 
intermediate result visible for test void reset for new execution for intermediate result partition partition partition partition reset for new execution 
intermediate result visible for test int get number of run producer return number of run producer get 
static external resource info provider visible for test map string set extend external resource info get external resource return external resource 
file cache visible for test file cache string temp directory permanent blob service blob service schedule executor service executor service long cleanup interval throw i o exception precondition check not null temp directory this cleanup interval cleanup interval storage directory new file temp directory length for int i i temp directory length i string cache dir name flink dist cache uuid random u u i d to string storage directory i new file temp directory i cache dir name string path storage directory i get absolute path if storage directory i mkdir log info user file cache use directory path else log error user file cache can not create directory path delete all other directory we create so far for int k k i k if storage directory k delete log warn user file cache can not remove prior directory storage directory k get absolute path throw new i o exception file cache can not create temp storage directory path this shutdown hook create shutdown hook this log this entry new hash map this job ref holder new hash map this executor service executor service this blob service blob service 
file cache visible for test class delete process implement runnable private final job i d job i d delete process job i d job i d this job i would job i would override public void run try synchronize lock set execution attempt i d job ref job ref holder get job i d if job refs null job ref be empty abort the copy for future path file future entry get job i d value file future cancel true remove job specific entry in map entry remove job i d job ref holder remove job i d remove the job wide temp directory for file storage directory storage directory file temp dir new file storage directory job i d to string file util delete directory temp dir catch i o exception e log error could not delete file from local file cache e 
embed leader service visible for test public boolean be shutdown synchronize lock return shutdown 
embed leader service visible for test completable future void grant leadership synchronize lock if shutdown return get shut down future return update leader 
embed leader service visible for test completable future void revoke leadership synchronize lock if shutdown return get shut down future if current leader propose null current leader confirm null final embed leader election service leader service if current leader confirm null leader service current leader confirm else leader service current leader propose log info revoke leadership of leader service contender leader service be leader false completable future void revoke leadership call future execute new revoke leadership call leader service contender completable future void notify all listener future notify all listener null null current leader propose null current leader confirm null current leader address null current leader session id null return completable future all of revoke leadership call future notify all listener future else return completable future complete future null 
broadcast record writer visible for test void random emit t record int target channel index throw i o exception interrupt exception try finish current buffer builder target channel index random trigger true emit record target channel index random trigger false if buffer builder null for int index index number of channel index if index target channel index add buffer consumer random trigger consumer copy with reader position buffer builder get commit byte index 
record writer visible for test public static final string default output flush thread name output flusher 
record writer visible for test public meter get idle time ms per second return idle time ms per second 
record writer visible for test result partition writer get target partition return target partition 
buffer builder visible for test public buffer recycler get recycler return recycler 
buffer builder visible for test public memory segment get memory segment return memory segment 
buffer decompressor visible for test public buffer decompress to original buffer buffer buffer int decompress len decompress buffer copy the decompress data back int memory segment offset buffer get memory segment offset memory segment segment buffer get memory segment segment put memory segment offset internal buffer array decompress len return new read only slice network buffer buffer as byte buf decompress len memory segment offset false 
local buffer pool visible for test override public buffer recycler get subpartition buffer recycler return subpartition buffer recycler 
network buffer pool visible for test public network buffer pool int number of segment to allocate int segment size int number of segment to request this number of segment to allocate segment size number of segment to request duration of millis integer max value 
abstract buffer usage gauge visible for test public abstract int calculate use buffer single input gate input gate 
abstract buffer usage gauge visible for test public abstract int calculate total buffer single input gate input gate 
credit base partition request client handler visible for test void check error throw i o exception final throwable t channel error get if t null if t instanceof i o exception throw i o exception t else throw new i o exception there have be a error in the channel t 
credit base sequence numbering view reader visible for test int get num credit available return num credit available 
credit base sequence numbering view reader visible for test boolean have buffer available return subpartition view be available integer max value 
netty server visible for test static class server channel initializer extend channel initializer socket channel private final netty protocol protocol private final s s l handler factory ssl handler factory public server channel initializer netty protocol protocol s s l handler factory ssl handler factory this protocol protocol this ssl handler factory ssl handler factory override public void init channel socket channel channel throw exception if ssl handler factory null channel pipeline add last ssl ssl handler factory create netty s s l handler channel alloc channel pipeline add last protocol get server channel handler 
partition request queue visible for test array deque network sequence view reader get available reader return available reader 
netty shuffle environment visible for test public result partition manager get result partition manager return result partition manager 
netty shuffle environment visible for test public connection manager get connection manager return connection manager 
netty shuffle environment visible for test public network buffer pool get network buffer pool return network buffer pool 
netty shuffle environment visible for test public netty shuffle environment configuration get configuration return config 
netty shuffle environment visible for test public optional input gate get input gate input gate i d id return optional of nullable input gate by id get id 
netty shuffle service factory visible for test static netty shuffle environment create netty shuffle environment netty shuffle environment configuration config resource i d task executor resource id task event publisher task event publisher metric group metric group executor io executor return create netty shuffle environment config task executor resource id task event publisher new result partition manager metric group io executor 
netty shuffle service factory visible for test static netty shuffle environment create netty shuffle environment netty shuffle environment configuration config resource i d task executor resource id task event publisher task event publisher result partition manager result partition manager metric group metric group executor io executor check not null config check not null task executor resource id check not null task event publisher check not null result partition manager check not null metric group netty config netty config config netty config file channel manager file channel manager new file channel manager impl config get temp dir dir name prefix connection manager connection manager netty config null new netty connection manager result partition manager task event publisher netty config new local connection manager network buffer pool network buffer pool new network buffer pool config num network buffer config network buffer size config network buffer per channel config get request segment timeout register shuffle metric metric group network buffer pool result partition factory result partition factory new result partition factory result partition manager file channel manager network buffer pool config get block subpartition type config network buffer per channel config float network buffer per gate config network buffer size config be force partition release on consumption config be block shuffle compression enable config get compression codec config get max buffer per channel single input gate factory single input gate factory new single input gate factory task executor resource id config connection manager result partition manager task event publisher network buffer pool return new netty shuffle environment task executor resource id config network buffer pool connection manager result partition manager file channel manager result partition factory single input gate factory io executor 
buffer manager visible for test int unsynchronized get number of require buffer return num require buffer 
buffer manager visible for test boolean unsynchronized be wait for float buffer return be wait for float buffer 
buffer manager visible for test int get number of available buffer synchronize buffer queue return buffer queue get available buffer size 
buffer or event visible for test public buffer or event buffer buffer input channel info channel info this buffer channel info true 
buffer or event visible for test public buffer or event abstract event event input channel info channel info this event channel info true 
local input channel visible for test result subpartition view get subpartition view return subpartition view 
recover input channel visible for testing protect int get number of queue buffer synchronize receive buffer return receive buffer size 
remote input channel visible for test override public void request subpartition int subpartition index throw i o exception interrupt exception if partition request client null create a client and request the partition try partition request client connection manager create partition request client connection id catch i o exception e i o exception indicate that we could not open a connection to the remote task executor throw new partition connection exception partition id e partition request client request subpartition partition id subpartition index this 
remote input channel visible for test public int get number of available buffer return buffer manager get number of available buffer 
remote input channel visible for test public int get number of require buffer return buffer manager unsynchronize get number of require buffer 
remote input channel visible for test public int get sender backlog return get number of require buffer initial credit 
remote input channel visible for test boolean be wait for float buffer return buffer manager unsynchronize be wait for float buffer 
remote input channel visible for test public buffer get next receive buffer return receive buffer poll 
remote input channel visible for test buffer manager get buffer manager return buffer manager 
remote input channel visible for test partition request client get partition request client return partition request client 
single input gate visible for test void convert recover input channel for map entry intermediate result partition i d input channel entry input channel entry set input channel input channel entry get value if input channel instanceof recover input channel try input channel real input channel recover input channel input channel to input channel input channel release all resource entry set value real input channel channel input channel get channel index real input channel catch throwable t input channel set error t return 
single input gate visible for test public void assign exclusive segment throw i o exception synchronize request lock for input channel input channel input channel value note that although the initial channel would not be remote input channel at the moment we might change to generate different type channel base on config future if input channel instanceof remote input channel remote input channel input channel assign exclusive segment else if input channel instanceof remote recover input channel remote recover input channel input channel assign exclusive segment 
single input gate visible for test timer get retrigger local request timer return retrigger local request timer 
single input gate factory visible for testing protect input channel create know input channel single input gate input gate int index netty shuffle descriptor input channel descriptor channel statistics channel statistics input channel metric metric result partition i d partition id input channel descriptor get result partition i d if input channel descriptor be local to task executor resource id consume task be deploy to the same task manager as the partition local channel statistics num local channel return new local recover input channel input gate index partition id partition manager task event publisher partition request initial backoff partition request max backoff metric else different instance remote channel statistics num remote channel return new remote recover input channel input gate index partition id input channel descriptor get connection id connection manager partition request initial backoff partition request max backoff metric 
single input gate factory visible for test static supplier with exception buffer pool i o exception create buffer pool factory buffer pool factory buffer pool factory int network buffer per channel int float network buffer per gate int size result partition type type note that we should guarantee at least one float buffer for local channel state recovery return buffer pool factory create buffer pool float network buffer per gate 
datum set meta info visible for test public static datum set meta info with num register partition int num register partition int num total partition precondition check argument num register partition return new datum set meta info num register partition num total partition 
pipelined subpartition suppress warning field access not guard visible for test public int get buffer in backlog if flush request be finished return buffer in backlog else return math max buffer in backlog 
resource manager partition tracker impl visible for test boolean be all map empty return task executor to data set be empty datum set to task executor be empty datum set meta info be empty partition release completion future be empty 
result partition factory visible for test public result partition create string task name with subtask and id int partition index result partition i d id result partition type type int number of subpartition int max parallelism function with exception buffer pool owner buffer pool i o exception buffer pool factory buffer compressor buffer compressor null if type be block block shuffle compression enable buffer compressor new buffer compressor network buffer size compression codec result subpartition subpartition new result subpartition number of subpartition result partition partition force partition release on consumption type be block new release on consumption result partition task name with subtask and id partition index id type subpartition max parallelism partition manager buffer compressor buffer pool factory new result partition task name with subtask and id partition index id type subpartition max parallelism partition manager buffer compressor buffer pool factory create subpartition partition type block subpartition type subpartition log debug initialize task name with subtask and id this return partition 
result partition factory visible for test function with exception buffer pool owner buffer pool i o exception create buffer pool factory int number of subpartition result partition type type return buffer pool owner int max number of memory segment type be bound number of subpartition network buffer per channel float network buffer per gate integer max value if the partition type be back pressure free we register with the buffer pool for callback to release memory return buffer pool factory create buffer pool number of subpartition max number of memory segment type have back pressure null buffer pool owner number of subpartition max buffer per channel 
result partition i d visible for test public result partition i d this new intermediate result partition i d new execution attempt i d 
result subpartition visible for test abstract int get buffer in backlog 
intermediate result partition i d visible for test public intermediate result partition i d this partition num this intermediate datum set i d new intermediate datum set i d 
checkpoint coordinator configuration deprecate visible for test public checkpoint coordinator configuration long checkpoint interval long checkpoint timeout long min pause between checkpoint int max concurrent checkpoint checkpoint retention policy checkpoint retention policy boolean be exactly once boolean be unaligned checkpoint boolean be prefer checkpoint for recovery int tolerable cp failure number this checkpoint interval checkpoint timeout min pause between checkpoint max concurrent checkpoint checkpoint retention policy be exactly once be prefer checkpoint for recovery tolerable cp failure number be unaligned checkpoint 
job manager process util visible for test public static job manager process spec create default job manager process spec int total process memory mb configuration configuration new configuration configuration set job manager option total process memory memory size of mebi byte total process memory mb return process spec from config configuration 
schedule unit visible for test public schedule unit execution task this task null 
schedule unit visible for test public schedule unit job vertex i d job vertex id nullable slot sharing group id slot sharing group id nullable co location constraint co location constraint this new execution vertex i d job vertex id slot sharing group id co location constraint 
job manager runner impl visible for test boolean be shutdown return shutdown 
physical slot request bulk checker visible for test static boolean be slot request bulk fulfillable final physical slot request bulk slot request bulk final supplier set slot info slot retriever final set allocation i d assign slot new hash set slot request bulk get fulfil request value final set slot info reusable slot get reusable slot slot retriever assign slot return be request fulfillable with slot slot request bulk get pend request value reusable slot 
scheduler impl visible for test public scheduler impl nonnull slot selection strategy slot selection strategy nonnull slot pool slot pool nonnull map slot sharing group id slot sharing manager slot sharing manager this slot selection strategy slot selection strategy this slot sharing manager slot sharing manager this slot pool slot pool this component main thread executor new component main thread executor dummy component main thread executor scheduler be not initialize with proper main thread executor call to scheduler start require this bulk slot provider new bulk slot provider impl slot selection strategy slot pool 
single logical slot visible for test public single logical slot slot request id slot request id slot context slot context nullable slot sharing group id slot sharing group id locality locality slot owner slot owner this slot request id slot context slot sharing group id locality slot owner true 
slot pool impl visible for test allocate slot get allocate slot return allocate slot 
slot pool impl visible for testing available slot get available slot return available slot 
slot pool impl visible for test dual key link map slot request id allocation i d pend request get pend request return pend request 
slot pool impl visible for test map slot request id pend request get wait for resource manager return wait for resource manager 
slot pool impl visible for testing protect void timeout pend slot request slot request id slot request id log info pend slot request time out slot request id final pend request pend request remove pend request slot request id if pend request null pend request get allocate slot future complete exceptionally new timeout exception pend slot request time out in slot pool 
slot pool impl visible for test boolean contain resource final resource i would resource i d return allocate slot by task manager contain key resource i d 
slot pool impl visible for test int size return allocate slot by id size 
slot pool impl visible for testing set allocate slot get slot for task manager resource i d resource id return allocate slot by task manager get or default resource id collection empty set 
slot pool impl visible for test boolean contain task manager resource i d resource i d return available slot by task manager contain key resource i d 
slot pool impl visible for test public int size return available slot size 
slot pool impl visible for test void clear available slot clear available slot by task manager clear available slot by host clear 
slot sharing manager visible for test public collection multi task slot get resolve root slot return new resolve root slot value 
slot sharing manager visible for test collection multi task slot get unresolved root slot return unresolved root slot value 
memory manager visible for test public boolean be shutdown return be shut down 
share resource visible for test int get num resource return reserve resource size 
acknowledge checkpoint visible for test public acknowledge checkpoint job i d job id execution attempt i d task execution id long checkpoint id this job id task execution id checkpoint id new checkpoint metric null 
metric registry impl visible for test metric registry impl metric registry configuration config collection reporter setup reporter configuration schedule executor service schedule executor this maximum framesize config get query service message size limit this scope format config get scope format this global delimiter config get delimiter this termination future new completable future this be shutdown false second instantiate any custom configure reporter this reporter new array list this executor schedule executor this query service null this metric query service rpc service null if reporter configuration be empty no reporter define by default don t report anything log info no metric reporter configure no metric will be expose report else for reporter setup reporter setup reporter configuration final string name reporter reporter setup get name try final metric reporter reporter instance reporter setup get reporter final string class name reporter instance get class get name if reporter instance instanceof schedule final duration period get configure interval or default reporter setup log info periodically report metric in interval of for reporter of type time util format with highest unit period name reporter class name executor schedule with fix delay new metric registry impl reporter task schedule reporter instance period to millis period to millis time unit millisecond else log info report metric for reporter of type name reporter class name string delimiter for reporter reporter setup get delimiter or else string value of global delimiter if delimiter for reporter length log warn fail to parse delimiter for reporter use global delimiter delimiter for reporter name reporter global delimiter delimiter for reporter string value of global delimiter reporter add new reporter and setting reporter instance new reporter scop setting reporter size delimiter for reporter char at reporter setup get exclude variable catch throwable t log error could not instantiate metric reporter metric might not be expose report name reporter t 
metric registry impl visible for test nullable metric query service gateway get metric query service gateway if query service null return query service get self gateway metric query service gateway class else return null 
metric registry impl visible for test char get delimiter int reporter index try return reporter get reporter index get setting get delimiter catch index out of bound exception e log warn delimiter for reporter index not find return global delimiter reporter index return this global delimiter 
metric registry impl visible for test public list metric reporter get reporter return reporter stream map reporter and setting get reporter collect collector to list 
metric registry impl visible for test nullable metric query service get query service return query service 
reporter setup visible for test metric config get configuration return configuration 
reporter setup visible for test public static reporter setup for reporter string reporter name metric reporter reporter return create reporter setup reporter name new metric config reporter 
reporter setup visible for test public static reporter setup for reporter string reporter name metric config metric config metric reporter reporter return create reporter setup reporter name metric config reporter 
metric util visible for test static void instantiate heap memory metric final metric group metric group instantiate memory usage metric metric group management factory get memory m x bean get heap memory usage 
metric util visible for test static void instantiate non heap memory metric final metric group metric group instantiate memory usage metric metric group management factory get memory m x bean get non heap memory usage 
mini cluster visible for testing protect collection extend dispatcher resource manager component create dispatcher resource manager component configuration configuration rpc service factory rpc service factory high availability service ha service blob server blob server heartbeat service heartbeat service metric registry metric registry metric query service retriever metric query service retriever fatal error handler fatal error handler throw exception dispatcher resource manager component factory dispatcher resource manager component factory create dispatcher resource manager component factory return collection singleton dispatcher resource manager component factory create configuration io executor rpc service factory create rpc service ha service blob server heartbeat service metric registry new memory archive execution graph store metric query service retriever fatal error handler 
mini cluster visible for testing protect high availability service create high availability service configuration configuration executor executor throw exception log info start high availability service return high availability service util create available or embed service configuration executor 
mini cluster visible for test void start task executor throw exception synchronize lock final configuration configuration mini cluster configuration get configuration final task executor task executor task manager runner start task manager configuration new resource i d uuid random u u i d to string task manager rpc service factory create rpc service ha service heartbeat service metric registry blob cache service use local communication external resource info provider no external resource task manager terminate fatal error handler factory create task manager size task executor start task manager add task executor 
mini cluster visible for testing protect boolean use local communication return mini cluster configuration get num task manager 
mini cluster visible for test nonnull protect completable future void terminate task executor int index synchronize lock final task executor task executor task manager get index return task executor close async 
mini cluster visible for testing protect completable future dispatcher gateway get dispatcher gateway future synchronize lock check state run mini cluster be not yet run or have already be shut down return dispatcher gateway retriever get future 
s s l util visible for test static ssl provider get s s l provider final configuration config check not null config config must not be null string provider string config get string security option ssl provider if provider string equal ignore case openssl if open ssl be available return openssl else throw new illegal configuration exception open s s l not available open ssl unavailability cause else if provider string equal ignore case jdk return jdk else throw new illegal configuration exception unknown ssl provider s provider string 
s s l util nullable visible for test public static s s l context create rest s s l context configuration config boolean client mode throw exception client auth client auth be rest s s l authentication enable config client auth require client auth none jdk ssl context netty s s l context jdk ssl context create rest netty s s l context config client mode client auth jdk if netty s s l context null return netty s s l context context else return null 
operator coordinator holder visible for test void lazy initialize consumer throwable global failure handler component main thread executor main thread executor this global failure handler global failure handler this main thread executor main thread executor context lazy initialize global failure handler main thread executor 
operator coordinator holder visible for test static operator coordinator holder create final operator i d op id final operator coordinator provider coordinator provider final bi function serialize value operator event integer completable future acknowledge event sender final string operator name final int operator parallelism final int operator max parallelism final operator event valve valve new operator event valve event sender final lazy initialized coordinator context context new lazy initialized coordinator context op id valve operator name operator parallelism final operator coordinator coordinator coordinator provider create context return new operator coordinator holder op id coordinator context valve operator parallelism operator max parallelism 
recreate on reset operator coordinator visible for test public operator coordinator get internal coordinator return coordinator 
recreate on reset operator coordinator visible for test quiesceable context get quiesceable context return quiesceable context 
recreate on reset operator coordinator visible for test static class quiesceable context implement operator coordinator context private final operator coordinator context context private volatile boolean quiesce quiesceable context operator coordinator context context this context context quiesce false override public operator i would get operator id return context get operator id override public synchronize completable future acknowledge send event operator event evt int target subtask throw task not run exception do not enter the send procedure if the context have be quiesce if quiesce return completable future complete future acknowledge get return context send event evt target subtask override public synchronize void fail job throwable cause if quiesce return context fail job cause override public int current parallelism return context current parallelism visible for test synchronize void quiesce quiesce true visible for test boolean be quiesce return quiesce private operator coordinator context get context return context 
recreate on reset operator coordinator visible for test synchronize void quiesce quiesce true 
recreate on reset operator coordinator visible for test boolean be quiesce return quiesce 
kv state entry visible for test public int get cache size return serializer cache size 
active resource manager visible for test static class pend worker counter private final map worker resource spec integer pend worker num pend worker counter pend worker num new hash map int get total num return pend worker num value stream reduce integer sum int get num final worker resource spec worker resource spec return pend worker num get or default precondition check not null worker resource spec int increase and get final worker resource spec worker resource spec return pend worker num compute precondition check not null worker resource spec ignore num num null num int decrease and get final worker resource spec worker resource spec final integer new value pend worker num compute precondition check not null worker resource spec ignore num precondition check state num null num can not decrease no pend worker of spec s worker resource spec return num null num return new value null new value 
resource manager visible for test public abstract boolean start new worker worker resource spec worker resource spec 
slot manager visible for test void unregister task manager and release resource 
slot manager impl visible for test public int get number pend task manager slot return pend slot size 
slot manager impl visible for test public int get number assign pend task manager slot return int pend slot value stream filter slot slot get assign pend slot request null count 
slot manager impl visible for test public static resource profile generate default slot resource profile worker resource spec worker resource spec int num slot per worker return resource profile new builder set cpu core worker resource spec get cpu core divide num slot per worker set task heap memory worker resource spec get task heap size divide num slot per worker set task off heap memory worker resource spec get task off heap size divide num slot per worker set manage memory worker resource spec get manage mem size divide num slot per worker set network memory worker resource spec get network mem size divide num slot per worker build 
slot manager impl visible for test void check task manager timeout if task manager registration be empty long current time system current time millis array list task manager registration time out task manager new array list task manager registration size first retrieve the time out task manager for task manager registration task manager registration task manager registration value if current time task manager registration get idle since task manager timeout to millisecond we collect the instance id first in order to avoid concurrent modification by the resource action release resource call time out task manager add task manager registration second we trigger the release resource callback which can decide upon the resource release for task manager registration task manager registration time out task manager if wait result consume before release release task executor if possible task manager registration else release task executor task manager registration get instance id 
slot manager impl visible for test task manager slot get slot slot i d slot id return slot get slot id 
slot manager impl visible for test pend slot request get slot request allocation i d allocation id return pend slot request get allocation id 
slot manager impl visible for test boolean be task manager idle instance i d instance id task manager registration task manager registration task manager registration get instance id if null task manager registration return task manager registration be idle else return false 
slot manager impl override visible for test public void unregister task manager and release resource iterator map entry instance i d task manager registration task manager registration iterator task manager registration entry set iterator while task manager registration iterator have next task manager registration task manager registration task manager registration iterator next get value task manager registration iterator remove final flink exception cause new flink exception trigger of slot manager unregister task manager and release resource internal unregister task manager task manager registration cause resource action release resource task manager registration get instance id cause 
complete operation cache visible for test complete operation cache final ticker ticker complete operation cache builder new builder expire after write complete operation result cache duration seconds time unit seconds removal listener removal listener k result access tracker r removal notification if removal notification be evict precondition check state removal notification get key null precondition check state removal notification get value null when shut down the cache we wait until all result be access when a result get evict from the cache it will not be possible to access it any longer and we might be in the process of shut down so we mark the result as access to avoid wait indefinitely removal notification get value mark access logger info evict result with trigger id because its ttl of s have expire removal notification get key get trigger id complete operation result cache duration seconds ticker ticker build 
complete operation cache visible for test void clean up complete operation clean up 
back pressure request coordinator visible for test int get number of pend request synchronize lock return pend request size 
metric store visible for test public void add metric dump metric try query scope info info metric scope info task manager metric store tm job metric store job task metric store task component metric store subtask string name info scope be empty metric name info scope metric name if name be empty malformed transmission return switch info get category case info category jm add metric job manager metric name metric break case info category tm string tm i d query scope info task manager query scope info info task manager i d tm task manager compute if absent tm i d k new task manager metric store if name contain garbage collector string gc name name substring status jvm garbage collector length name last index of tm add garbage collector name gc name add metric tm metric name metric break case info category job query scope info job query scope info job info query scope info job query scope info info job job compute if absent job info job i d k new job metric store add metric job metric name metric break case info category task query scope info task query scope info task info query scope info task query scope info info job job compute if absent task info job i d k new job metric store task job task compute if absent task info vertex i d k new task metric store subtask task subtask compute if absent task info subtask index k new component metric store the duplication be intend metric scop by subtask be useful for several job task handler while the web interface task metric query currently do not account for subtask so we don t divide by subtask and instead use the concatenation of subtask index and metric name as the name for those add metric subtask metric name metric add metric task metric task info subtask index name metric break case info category operator query scope info operator query scope info operator info query scope info operator query scope info info job job compute if absent operator info job i d k new job metric store task job task compute if absent operator info vertex i d k new task metric store subtask task subtask compute if absent operator info subtask index k new component metric store as the web interface do not account for operator because it can t we don t divide by operator and instead use the concatenation of subtask index operator name and metric name as the name add metric subtask metric operator info operator name name metric add metric task metric operator info subtask index operator info operator name name metric break default log debug invalid metric dump category info get category catch exception e log debug malformed metric dump e 
rest server endpoint visible for test static void create upload dir final path upload dir final logger log final boolean initial creation throw i o exception if file exist upload dir if initial creation log info upload directory do not exist upload dir else log warn upload directory have be delete externally previously upload file be no longer available upload dir check and create upload dir upload dir log 
akka rpc service visible for test public akka rpc service final actor system actor system final akka rpc service configuration configuration this actor system check not null actor system actor system this configuration check not null configuration akka rpc service configuration address actor system address akka util get address actor system if actor system address host be define address actor system address host get else address if actor system address port be define port integer actor system address port get else port capture ask callstack configuration capture ask call stack internal schedule executor new actor system schedule executor adapter actor system termination future new completable future stop false supervisor start supervisor actor 
akka rpc service util visible for test public static akka rpc service builder remote service builder configuration configuration nullable string external address int external port return remote service builder configuration external address string value of external port 
abstract execution slot allocator visible for test static set allocation i d compute all prior allocation id final collection execution vertex scheduling requirement execution vertex scheduling requirement return execution vertex scheduling requirement stream map execution vertex scheduling requirement get previous allocation id filter object non null collect collector to set 
abstract execution slot allocator visible for test map execution vertex i d slot execution vertex assignment get pend slot assignment return collection unmodifiable map pend slot assignment 
scheduler base visible for test checkpoint coordinator get checkpoint coordinator return execution graph get checkpoint coordinator 
scheduler base visible for test job i would get job id return job graph get job i d 
hadoop module visible for test public security configuration get security config return security config 
netty shuffle descriptor visible for test public network partition connection info connection i d connection i d this connection i d connection i d 
partition descriptor visible for test public partition descriptor intermediate datum set i d result id int total number of partition intermediate result partition i d partition id result partition type partition type int number of subpartition int connection index this result id check not null result id check argument total number of partition this total number of partition total number of partition this partition id check not null partition id this partition type check not null partition type check argument number of subpartition this number of subpartition number of subpartition this connection index connection index 
producer descriptor visible for test public producer descriptor resource i d producer location execution attempt i d producer execution id inet address address int datum port this producer location check not null producer location this producer execution id check not null producer execution id this address check not null address this data port datum port 
source coordinator visible for test split enumerator split t enum chk t get enumerator return enumerator 
source coordinator visible for test source coordinator context split t get context return context 
split assignment tracker visible for test sort map long map integer link hash set split t assignment by checkpoint id return assignment by checkpoint id 
split assignment tracker visible for test map integer link hash set split t assignment by checkpoint id long checkpoint id return assignment by checkpoint id get checkpoint id 
split assignment tracker visible for test map integer link hash set split t uncheckpointed assignment return uncheckpointed assignment 
abstract key state backend visible for test public boolean support asynchronous snapshot return false 
abstract key state backend visible for test public stream compression decorator get key group compression decorator return key group compression decorator 
abstract key state backend visible for test public abstract int num key value state entry 
abstract key state backend visible for test public int num key value state by name return key value state by name size 
async snapshot callable visible for testing protect void cancel close snapshot i o if resource cleanup ownership take compare and set false true cleanup 
default operator state backend builder visible for testing protect final class loader user classloader 
default operator state backend builder visible for testing protect final execution config execution config 
default operator state backend builder visible for testing protect final boolean asynchronous snapshot 
default operator state backend builder visible for testing protect final collection operator state handle restore state handle 
default operator state backend builder visible for testing protect final closeable registry cancel stream registry 
duplicate checkpoint output stream visible for test checkpoint stream factory checkpoint state output stream get primary output stream return primary output stream 
duplicate checkpoint output stream visible for test checkpoint stream factory checkpoint state output stream get secondary output stream return secondary output stream 
f checkpoint storage visible for test path get checkpoint directory return checkpoint directory 
f checkpoint storage location visible for test file system get file system return file system 
abstract heap state visible for test public state table k n sv get state table return state table 
copy on write state map visible for test void release snapshot int snapshot version we guard against concurrent modification of highest require snapshot version between snapshot and release only stale read of from the result of release snapshot call be ok synchronize snapshot version precondition check state snapshot version remove snapshot version attempt to release unknown snapshot version highest require snapshot version snapshot version be empty snapshot version last 
copy on write state map visible for testing suppress warning unchecked state map entry k n s snapshot map array we guard against concurrent modification of highest require snapshot version between snapshot and release only stale read of from the result of release snapshot call be ok this be why we must call this method from the same thread that do all the modification to the map synchronize snapshot version increase the map version for copy on write and register the snapshot if state map version this be just a safety net against overflow but should never happen in practice i e only after 2 ^ 31 snapshot throw new illegal state exception version count overflow in copy on write state map enforce restart highest require snapshot version state map version snapshot version add highest require snapshot version state map entry k n s table primary table in order to reuse the copy array as the destination array for the partitioned record in copy on write state map snapshot transform snapshot iterator we need to make sure that the copy array be big enough to hold the flattened entry in fact give the current rehash algorithm we only need to do this check when be rehash be false but in order to get a more robust code in case that the rehash algorithm may change in the future we do this check for all the case final int total map index size rehash index table length final int copy array size math max total map index size size final state map entry k n s copy new state map entry copy array size if be rehash consider both map for the snapshot the rehash index tell we which part of the two map we need final int local rehash index rehash index final int local copy length table length local rehash index for the primary table take every index rh idx system arraycopy table local rehash index copy local copy length for the new table we be sure that two region contain all the entry rh idx and table length table length rh idx table incremental rehash table system arraycopy table copy local copy length local rehash index system arraycopy table table length copy local copy length local rehash index local rehash index else we only need to copy the primary table system arraycopy table copy table length return copy 
copy on write state map visible for test boolean be rehash if we rehash the secondary table be not empty return empty table incremental rehash table 
copy on write state map visible for testing set integer get snapshot version return snapshot version 
copy on write state map visible for testing protect static class state map entry k n s implement state entry k n s the key assume to be immumap and not null nonnull final k key the namespace assume to be immumap and not null nonnull final n namespace the state this be not final to allow exchange the object for copy on write can be null nullable s state link to another link state map entry this be use to resolve collision in the link copy on write state map through chain nullable state map entry k n s next the version of this link state map entry this be meta datum for copy on write of the map structure int entry version the version of the state object in this entry this be meta datum for copy on write of the state object itself int state version the compute secondary hash for the composite of key and namespace final int hash state map entry state map entry k n s other int entry version this other key other namespace other state other hash other next entry version other state version state map entry nonnull k key nonnull n namespace nullable s state int hash nullable state map entry k n s next int entry version int state version this key key this namespace namespace this hash hash this next next this entry version entry version this state state this state version state version public final void set state nullable s value int map version naturally we can update the state version every time we replace the old state with a different object if value state this state value this state version map version nonnull override public k get key return key nonnull override public n get namespace return namespace nullable override public s get state return state override public final boolean equal object o if o instanceof copy on write state map state map entry return false state entry e state entry o return e get key equal key e get namespace equal namespace object equal e get state state override public final int hash code return key hash code namespace hash code object hash code state override public final string to string return key namespace state 
heap key state backend visible for testing suppress warning unchecked override public int num key value state entry int sum for state snapshot restore state register k v state value sum state table state size return sum 
heap key state backend visible for test public int num key value state entry object namespace int sum for state table state register k v state value sum state size of namespace namespace return sum 
heap key state backend visible for test public local recovery config get local recovery config return local recovery config 
state map visible for test public abstract int size of namespace object namespace 
state table visible for test public state map k n s get state return key group state map 
state table visible for test state map k n s get map for key group int key group index final int po index to offset key group index if po pos key group state map length return key group state map pos else return null 
state table visible for test public int size of namespace object namespace int count for state map k n s state map key group state map count state map size of namespace namespace return count 
incremental remote key state handle visible for test public share state registry key create share state registry key from file name state handle i d sh id return new share state registry key string value of backend identifier key group range sh id 
incremental remote key state handle visible for test override public boolean equal object o if this o return true if o null get class o get class return false incremental remote key state handle that incremental remote key state handle o if get checkpoint id that get checkpoint id return false if get backend identifier equal that get backend identifier return false if get key group range equal that get key group range return false if get share state equal that get share state return false if get private state equal that get private state return false return get meta state handle equal that get meta state handle 
incremental remote key state handle visible for test override public int hash code int result get backend identifier hash code result result get key group range hash code result result int get checkpoint id get checkpoint id result result get share state hash code result result get private state hash code result result get meta state handle hash code return result 
java serializer internal visible for test public final class java serializer t extend serializable extend type serializer singleton t private static final long serial version u i d l override public boolean be immutable type return false override public t create instance return null override public t copy t from try return instantiation util clone from thread current thread get context class loader catch i o exception class not find exception e throw new flink runtime exception could not copy element via serialization from e override public t copy t from t reuse return copy from override public int get length return override public void serialize t record datum output view target throw i o exception try final datum output view stream out view wrapper new datum output view stream target instantiation util serialize object out view wrapper record override public t deserialize datum input view source throw i o exception try final datum input view stream in view wrapper new datum input view stream source return instantiation util deserialize object in view wrapper thread current thread get context class loader catch class not find exception e throw new i o exception could not deserialize object e override public t deserialize t reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception t tmp deserialize source serialize tmp target override public type serializer snapshot t snapshot configuration return new java serializer snapshot serializer configuration snapshot for compatibility and format evolution suppress warning weaker access public static final class java serializer snapshot t extend serializable extend simple type serializer snapshot t public java serializer snapshot super java serializer new 
local recovery directory provider impl visible for test string subtask dir string return path get jid job i d vtx job vertex i d sti subtask index to string 
local recovery directory provider impl visible for test string checkpoint dir string long checkpoint id return chk checkpoint id 
memory backend checkpoint storage visible for test path get checkpoint directory return checkpoint directory 
share state registry key visible for test public share state registry key string key string super key string 
state snapshot context synchronous impl visible for test public state snapshot context synchronous impl long checkpoint id long checkpoint timestamp this checkpoint id checkpoint id this checkpoint timestamp checkpoint timestamp this stream factory null this key group range key group range empty key group range this closable registry new closeable registry 
task executor local state store manager visible for test boolean be local recovery enable return local recovery enable 
task executor local state store manager visible for test file get local state root directory return local state root directory 
task executor local state store manager visible for test string allocation sub dir string allocation i d allocation i d return aid allocation i d to hex string 
task local state store impl visible for test static final task state snapshot null dummy new task state snapshot 
task local state store impl visible for test task local state store impl nonnull job i d job i d nonnull allocation i d allocation i d nonnull job vertex i d job vertex i d nonnegative int subtask index nonnull local recovery config local recovery config nonnull executor discard executor nonnull sort map long task state snapshot store task state by checkpoint i d nonnull object lock this job i d job i d this allocation i d allocation i d this job vertex i d job vertex i d this subtask index subtask index this discard executor discard executor this local recovery config local recovery config this store task state by checkpoint i d store task state by checkpoint i d this lock lock this disposed false 
default job leader service override visible for test public boolean contain job job i d job id precondition check state default job leader service state start state the service be currently not run return job leader service contain key job id 
task slot table visible for test boolean allocate slot int index job i d job id allocation i d allocation id time slot timeout 
task slot table impl visible for test public boolean be closed return state state close 
task slot table impl visible for test override public boolean allocate slot int index job i d job id allocation i d allocation id time slot timeout return allocate slot index job id allocation id default slot resource profile slot timeout 
task executor visible for test task executor to resource manager connection get resource manager connection return resource manager connection 
task executor visible for test heartbeat manager void task executor heartbeat payload get resource manager heartbeat manager return resource manager heartbeat manager 
task executor visible for test static final class task executor job service implement job table job service private final library cache manager class loader lease class loader lease private final runnable close hook private task executor job service library cache manager class loader lease class loader lease runnable close hook this class loader lease class loader lease this close hook close hook override public library cache manager class loader handle get class loader handle return class loader lease override public void close class loader lease release close hook run visible for test static task executor job service create library cache manager class loader lease class loader lease runnable close hook return new task executor job service class loader lease close hook 
task executor visible for test static task executor job service create library cache manager class loader lease class loader lease runnable close hook return new task executor job service class loader lease close hook 
task executor resource util visible for test public static task executor resource spec resource spec from config for local execution configuration config return resource spec from config adjust for local execution config 
task manager runner visible for test static final int runtime failure return code 
task manager runner visible for test static rpc service create rpc service final configuration configuration final high availability service ha service throw exception check not null configuration check not null ha service return akka rpc service util create remote rpc service configuration determine task manager bind address configuration ha service configuration get string task manager option rpc port configuration get string task manager option bind host configuration get optional task manager option rpc bind port 
task manager runner visible for test static string get task manager resource i d configuration config string rpc address int rpc port throw exception return config get string task manager option task manager resource id string util be null or whitespace only rpc address inet address get local host get host name new abstract i d to string substring rpc address rpc port new abstract i d to string substring 
task manager service visible for test public static final string local state sub directory root local state 
task visible for test long get task cancellation interval return task cancellation interval 
task visible for test long get task cancellation timeout return task cancellation timeout 
task nullable visible for test abstract invokable get invokable return invokable 
task visible for test public static void setup partition and gate result partition writer produce partition input gate input gate throw i o exception for result partition writer partition produce partition partition setup input gate must be initialize after the partition since during input gate setup we be request partition for input gate gate input gate gate setup 
task visible for testing void cancel or fail and cancel invokable internal execution state target state throwable cause while true execution state current execution state if the task be already cancel or cancel or finish or fail then we need not do anything if current be terminal current execution state cancel log info task be already in state task name with subtask current return if current execution state deploy current execution state create if transition state current target state cause if we manage this state transition then the invokable get never call we need not call cancel on it this failure cause cause return else if current execution state run if transition state execution state run target state cause we be cancel fail out of the run state we need to cancel the invokable copy reference to guard against concurrent null ing out the reference final abstract invokable invokable this invokable if invokable null invokable have be cancel compare and set false true this failure cause cause log info trigger cancellation of task code task name with subtask execution id because the cancel may block on user code we cancel from a separate thread we do not reuse the async call handler because that one may be block in which case the cancel could not continue the canceller call cancel and interrupt the execute thread once runnable canceler new task canceler log this close network resource invokable execute thread task name with subtask thread cancel thread new thread execute thread get thread group canceler string format canceler for s s task name with subtask execution id cancel thread set daemon true cancel thread set uncaught exception handler fatal exit exception handler instance cancel thread start the periodic interrupting thread a different thread than the canceller in case the application code do block stuff in its cancellation path if invokable should interrupt on cancel runnable interrupter new task interrupter log invokable execute thread task name with subtask task cancellation interval thread interrupt thread new thread execute thread get thread group interrupter string format canceler interrupt for s s task name with subtask execution id interrupt thread set daemon true interrupting thread set uncaught exception handler fatal exit exception handler instance interrupt thread start if a cancellation timeout be set the watchdog thread kill the process if graceful cancellation do not succeed if task cancellation timeout runnable cancel watchdog new task canceler watch dog execute thread task manager action task cancellation timeout thread watch dog thread new thread execute thread get thread group cancel watchdog string format cancellation watchdog for s s task name with subtask execution id watch dog thread set daemon true watch dog thread set uncaught exception handler fatal exit exception handler instance watch dog thread start return else throw new illegal state exception string format unexpected state s of task s s current task name with subtask execution id 
task visible for test class partition producer state response handle implement response handle private final either execution state throwable result partition producer state response handle nullable execution state producer state nullable throwable t this result producer state null either left producer state either right t override public execution state get consumer execution state return execution state override public either execution state throwable get producer execution state return result override public void cancel consumption cancel execution override public void fail consumption throwable cause fail externally cause 
task manager location visible for test public task manager location resource i d resource i d inet address inet address int datum port indicate a local instance connection info check argument datum port datum port datum port must be or local this resource i would check not null resource i d this inet address check not null inet address this data port datum port get fqdn hostname on this task manager this fqdn host name get fqdn host name inet address this host name get host name inet address this string representation string format s s datum port d resource i d fqdn host name datum port 
bash java util visible for test public static final string execution prefix bash java util exec result 
bash java util visible for test static list string get jm resource param configuration configuration job manager process spec job manager process spec job manager process util process spec from config with new option to interpret legacy heap configuration job manager option jvm heap memory log master configuration job manager process spec return collection singleton list job manager process util generate jvm parameter str job manager process spec configuration 
blocker checkpoint stream factory visible for test internal public class blocker checkpoint stream factory implement checkpoint stream factory protect final int max size protect volatile int after number invocation protect volatile one shot latch blocker protect volatile one shot latch waiter protect final set block checkpoint output stream all create stream public set block checkpoint output stream get all create stream return all create stream public blocker checkpoint stream factory int max size this max size max size this all create stream new hash set public void set after number invocation int after number invocation this after number invocation after number invocation public void set blocker latch one shot latch latch this blocker latch public void set waiter latch one shot latch latch this waiter latch public one shot latch get blocker latch return blocker public one shot latch get waiter latch return waiter override public checkpoint state output stream create checkpoint state output stream checkpoint state scope scope throw i o exception block checkpoint output stream block stream new blocking checkpoint output stream new mem checkpoint stream factory memory checkpoint output stream max size waiter blocker after number invocation all create stream add block stream return block stream 
jar handler util visible for test static list string tokenize argument nullable final string arg if arg null return collection empty list final matcher matcher argument tokenize pattern matcher arg final list string token new array list while matcher find token add matcher group trim replace replace return token 
history server visible for test int get web port return netty get server port 
copy on write skip list state map visible for test nullable s get node memory segment key segment int key offset int key len skip list iterate and process result result iterate and process key segment key offset key len pointer be remove long current node pointer current node return be remove null get node state helper current node return result be key find result state null 
copy on write skip list state map visible for testing s put value memory segment key segment int key offset int key len byte value boolean return old state skip list iterate and process result result iterate and process key segment key offset key len pointer be logically remove put value pointer current node value return old state if result be key find return result state long prev node result prev node long current node result current node int level get random index level level index header update level level int total meta key len skip list util get key meta len level key len long node allocate space total meta key len int total value len skip list util get value meta len value length long value pointer allocate space total value len do write key node level key segment key offset key len value pointer current node do write value value pointer value state map version node nil value pointer help set next node prev node node if level skip list util build level index node level key segment key offset level index header space allocator total size return null 
copy on write skip list state map visible for test int get highest require snapshot version plus one return highest require snapshot version plus one 
copy on write skip list state map visible for test int get highest finished snapshot version return highest finished snapshot version 
copy on write skip list state map visible for testing set integer get snapshot version return snapshot version 
copy on write skip list state map visible for testing set long get logically remove node return logically remove node 
copy on write skip list state map visible for testing set long get pruning value node return pruning value node 
copy on write skip list state map visible for test resource guard get resource guard return resource guard 
on heap level index header visible for test long get level index return level index 
rock d b key state backend visible for test column family handle get column family handle string state rock db kv state info column info kv state information get state return column info null column info column family handle null 
rock d b key state backend visible for test priority queue set factory get priority queue factory return priority queue factory 
rock d b key state backend visible for test boolean be disposed return this disposed 
rock d b key state backend visible for testing suppress warning unchecked override public int num key value state entry int count for rock db kv state info meta info kv state information value todo maybe filter or transform only for k v state try rock iterator wrapper rock iterator rock d b operation util get rock iterator db meta info column family handle read option rock iterator seek to first while rock iterator be valid count rock iterator next return count 
rock d b key state backend visible for test public void compact state state descriptor state desc throw rock d b exception rock db kv state info kv state info kv state information get state desc get name db compact range kv state info column family handle 
rock d b key state backend builder visible for test rock d b keyed state backend builder string operator identifier class loader user code class loader file instance base path rock d b resource container option container function string column family option column family option factory task kv state registry kv state registry type serializer k key serializer int number of key group key group range key group range execution config execution config local recovery config local recovery config rock d b state backend priority queue state type priority queue state type ttl time provider ttl time provider metric group metric group nonnull collection key state handle state handle stream compression decorator key group compression decorator rock d b inject test d b column family handle inject default column family handle closeable registry cancel stream registry this operator identifier user code class loader instance base path option container column family option factory kv state registry key serializer number of key group key group range execution config local recovery config priority queue state type ttl time provider metric group state handle key group compression decorator cancel stream registry this inject test d b inject test d b this inject default column family handle inject default column family handle 
rock d b memory controller util visible for test static long calculate actual cache capacity long total memory size double write buffer ratio return long write buffer ratio total memory size 
rock d b memory controller util visible for test static long calculate write buffer manager capacity long total memory size double write buffer ratio return long total memory size write buffer ratio 
rock d b memory controller util visible for test static cache create cache long cache capacity double high priority pool ratio todo use strict capacity limit until flink resolve return new l r u cache cache capacity false high priority pool ratio 
rock d b memory controller util visible for test static write buffer manager create write buffer manager long write buffer manager capacity cache cache return new write buffer manager write buffer manager capacity cache 
rock d b priority queue set factory visible for test static final int default cache size 
rock d b serialize composite key builder visible for test rock d b serialize composite key builder nonnull type serializer k key serializer nonnull datum output serializer key out view nonnegative int key group prefix byte boolean key serializer type variable sized nonnegative int after key mark this key serializer key serializer this key out view key out view this key group prefix byte key group prefix byte this key serializer type variable sized key serializer type variable sized this after key mark after key mark 
rock d b serialize composite key builder visible for test boolean be ambiguous composite key possible type serializer namespace serializer return key serializer type variable sized rock d b key serialization util be serializer type variable sized namespace serializer 
rock d b state backend visible for test public predefined option get predefined option if predefined option null predefined option predefined option default return predefined option 
rock d b state backend visible for test rock d b resource container create option and resource container return create option and resource container null 
rock d b state backend visible for test private rock d b resource container create option and resource container nullable opaque memory resource rock d b share resource share resource return new rock d b resource container predefined option null predefined option predefined option default rock db option factory share resource 
rock d b state backend visible for test static void ensure rock d b be load string temp directory throw i o exception synchronize rock d b state backend class if rock db initialize final file temp dir parent new file temp directory get absolute file log info attempt to load rock d b native library and store it under temp dir parent throwable last exception null for int attempt attempt rocksdb lib loading attempt attempt file rock lib folder null try when multiple instance of this class and rock d b exist in different class loader then we can see the follow exception java lang unsatisfied link error native library path to temp dir librocksdbjni linux64 so already load in another class loader to avoid that we need to add a random element to the library file path i know seem like a unnecessary hack since the jvm obviously can handle multiple instance of the same jni library be load in different class loader but apparently not when come from the same file path so there we go rock lib folder new file temp dir parent rocksdb lib new abstract i d make sure the temp path exist log debug attempt to create rock d b native library folder rock lib folder noinspection result of method call ignore rock lib folder mkdir explicitly load the jni dependency if it have not be load before native library loader get instance load library rock lib folder get absolute path this initialization here should validate that the loading succeed rock d b load library seem to have work log info successfully load rock d b native library rock db initialize true return catch throwable t last exception t log debug rock d b jni library loading attempt fail attempt t try to force rock d b to attempt reload the library try reset rock d b loaded flag catch throwable tt log debug fail to reset initialized flag in rock d b native code loader tt file util delete directory quietly rock lib folder throw new i o exception could not load the native rock d b library last exception 
rock d b state backend visible for test static void reset rock d b loaded flag throw exception final field init field org rocksdb native library loader class get declare field initialize init field set accessible true init field set boolean null false 
rock d b write batch wrapper visible for test long get datum size return batch get datum size 
rock full snapshot strategy visible for test private class snapshot asynchronous part callable extend async snapshot callable snapshot result key state handle supplier for the stream into which we write the snapshot nonnull private final supplier with exception checkpoint stream with result provider exception checkpoint stream supplier this lease protect the native rock d b resource nonnull private final resource guard lease db lease rock d b snapshot nonnull private final snapshot snapshot nonnull private list state meta info snapshot state meta info snapshot nonnull private list meta datum meta datum nonnull private final string log path string snapshot asynchronous part callable nonnull supplier with exception checkpoint stream with result provider exception checkpoint stream supplier nonnull resource guard lease db lease nonnull snapshot snapshot nonnull list state meta info snapshot state meta info snapshot nonnull list rock db kv state info meta datum copy nonnull string log path string this checkpoint stream supplier checkpoint stream supplier this db lease db lease this snapshot snapshot this state meta info snapshot state meta info snapshot this meta datum fill meta datum meta datum copy this log path string log path string override protect snapshot result key state handle call internal throw exception final key group range offset key group range offset new key group range offset key group range final checkpoint stream with result provider checkpoint stream with result provider checkpoint stream supplier get snapshot closeable registry register closeable checkpoint stream with result provider write snapshot to output stream checkpoint stream with result provider key group range offset if snapshot closeable registry unregister closeable checkpoint stream with result provider return checkpoint stream with result provider to key state handle snapshot result checkpoint stream with result provider close and finalize checkpoint stream result key group range offset else throw new i o exception stream be already unregistered closed override protect void cleanup provide resource db release snapshot snapshot i o util close quietly snapshot i o util close quietly db lease override protect void log async snapshot complete long start time log async complete log path string start time private void write snapshot to output stream nonnull checkpoint stream with result provider checkpoint stream with result provider nonnull key group range offset key group range offset throw i o exception interrupt exception final list tuple2 rock iterator wrapper integer kv state iterator new array list meta datum size final datum output view output view new datum output view stream wrapper checkpoint stream with result provider get checkpoint output stream final read option read option new read option try read option set snapshot snapshot write k v state meta datum kv state iterator read option output view write k v state datum kv state iterator checkpoint stream with result provider key group range offset finally for tuple2 rock iterator wrapper integer kv state iterator kv state iterator i o util close quietly kv state iterator f0 i o util close quietly read option private void write k v state meta datum final list tuple2 rock iterator wrapper integer kv state iterator final read option read option final datum output view output view throw i o exception int kv state id for meta datum meta datum entry meta datum rock iterator wrapper rock iterator wrapper get rock iterator db meta datum entry rock db kv state info column family handle meta datum entry state snapshot transformer read option kv state iterator add tuple2 of rock iterator wrapper kv state id kv state id key backend serialization proxy k serialization proxy new keyed backend serialization proxy todo this code assume that write a serializer be threadsafe we should support to get a serialize form already at state registration time in the future key serializer state meta info snapshot object equal uncompressed stream compression decorator instance key group compression decorator serialization proxy write output view private void write k v state datum final list tuple2 rock iterator wrapper integer kv state iterator final checkpoint stream with result provider checkpoint stream with result provider final key group range offset key group range offset throw i o exception interrupt exception byte previous key null byte previous value null datum output view kg out view null output stream kg out stream null checkpoint stream factory checkpoint state output stream checkpoint output stream checkpoint stream with result provider get checkpoint output stream try here we transfer ownership of rock iterator to the rock state per key group merge iterator try rock state per key group merge iterator merge iterator new rock state per key group merge iterator kv state iterator key group prefix byte preamble setup with first key group as we lookahead if merge iterator be valid begin first key group by record the offset key group range offset set key group offset merge iterator key group checkpoint output stream get po write the k v state id as metadata kg out stream key group compression decorator decorate with compression checkpoint output stream kg out view new datum output view stream wrapper kg out stream todo this could be aware of key group prefix byte and write only one byte if possible kg out view write short merge iterator kv state id previous key merge iterator key previous value merge iterator value merge iterator next main loop write k v pair order by key group kv state thereby track key group offset while merge iterator be valid assert have meta datum follow flag previous key set signal in first key byte that meta datum will follow in the stream after this k v pair if merge iterator be new key group merge iterator be new key value state be cooperative and check for interruption from time to time in the hot loop check interrupt set meta datum follow flag in key previous key write key value pair previous key previous value kg out view write meta datum if we have to if merge iterator be new key group todo this could be aware of key group prefix byte and write only one byte if possible kg out view write short end of key group mark this will just close the outer stream kg out stream close begin new key group key group range offset set key group offset merge iterator key group checkpoint output stream get po write the kev state todo this could be aware of key group prefix byte and write only one byte if possible kg out stream key group compression decorator decorate with compression checkpoint output stream kg out view new datum output view stream wrapper kg out stream kg out view write short merge iterator kv state id else if merge iterator be new key value state write the k v state todo this could be aware of key group prefix byte and write only one byte if possible kg out view write short merge iterator kv state id request next k v pair previous key merge iterator key previous value merge iterator value merge iterator next epilogue write last key group if previous key null assert have meta datum follow flag previous key set meta datum follow flag in key previous key write key value pair previous key previous value kg out view todo this could be aware of key group prefix byte and write only one byte if possible kg out view write short end of key group mark this will just close the outer stream kg out stream close kg out stream null finally this will just close the outer stream i o util close quietly kg out stream private void write key value pair byte key byte value datum output view out throw i o exception byte primitive array serializer instance serialize key out byte primitive array serializer instance serialize value out private void check interrupt throw interrupted exception if thread current thread be interrupted throw new interrupted exception rock d b snapshot interrupted 
co group stream visible for testing time get allow lateness return allow lateness 
co group stream visible for test window stream tag union t1 t2 key w get window stream return window stream 
co group stream visible for test internal public static class union serializer t1 t2 extend type serializer tag union t1 t2 private static final long serial version u i d 1 l private final type serializer t1 one serializer private final type serializer t2 two serializer public union serializer type serializer t1 one serializer type serializer t2 two serializer this one serializer one serializer this two serializer two serializer override public boolean be immutable type return false override public type serializer tag union t1 t2 duplicate type serializer t1 duplicate one one serializer duplicate type serializer t2 duplicate two two serializer duplicate compare reference of nest serializer if same instance return we can reuse this instance as well if duplicate one one serializer duplicate two two serializer return new union serializer duplicate one duplicate two else return this override public tag union t1 t2 create instance we arbitrarily always create instance of one return tag union one one serializer create instance override public tag union t1 t2 copy tag union t1 t2 from if from be one return tag union one one serializer copy from get one else return tag union two two serializer copy from get two override public tag union t1 t2 copy tag union t1 t2 from tag union t1 t2 reuse if from be one return tag union one one serializer copy from get one else return tag union two two serializer copy from get two override public int get length return override public void serialize tag union t1 t2 record datum output view target throw i o exception if record be one target write byte one serializer serialize record get one target else target write byte two serializer serialize record get two target override public tag union t1 t2 deserialize datum input view source throw i o exception byte tag source read byte if tag return tag union one one serializer deserialize source else return tag union two two serializer deserialize source override public tag union t1 t2 deserialize tag union t1 t2 reuse datum input view source throw i o exception byte tag source read byte if tag return tag union one one serializer deserialize source else return tag union two two serializer deserialize source override public void copy datum input view source datum output view target throw i o exception byte tag source read byte target write byte tag if tag one serializer copy source target else two serializer copy source target override public int hash code return one serializer hash code two serializer hash code override suppress warning unchecked public boolean equal object obj if obj instanceof union serializer union serializer t1 t2 other union serializer t1 t2 obj return one serializer equal other one serializer two serializer equal other two serializer else return false override public type serializer snapshot tag union t1 t2 snapshot configuration return new union serializer snapshot this 
join stream visible for testing time get allow lateness return allow lateness 
join stream visible for test co group stream with window t1 t2 key w get co group windowed stream return co group windowed stream 
window stream visible for test long get allow lateness return allow lateness 
bucket visible for test map long list in progress file writer pend file recoverable get pend file recoverable per checkpoint return pend file recoverable per checkpoint 
bucket nullable visible for testing in progress file writer in bucket i would get in progress part return in progress part 
bucket visible for testing list in progress file writer pend file recoverable get pend file recoverable for current checkpoint return pend file recoverable for current checkpoint 
bucket visible for test public bucket in bucket i d on element final in value final sink function context context throw exception return on element value context current processing time context timestamp context current watermark 
bucket visible for test public long get max part counter return max part counter 
bucket visible for test map bucket i d bucket in bucket i would get active bucket return active bucket 
stream file sink visible for test t with bucket factory final bucket factory in bucket i d factory this bucket factory precondition check not null factory return self 
stream file sink visible for test t with bucket factory final bucket factory in bucket i d factory this bucket factory precondition check not null factory return self 
two phase commit sink function visible for test two phase commit sink function type serializer txn transaction serializer type serializer context context serializer clock clock this state descriptor new list state descriptor state new state serializer transaction serializer context serializer this clock clock 
two phase commit sink function visible for test internal public static final class state txn context protect transaction holder txn pend transaction protect list transaction holder txn pend commit transaction new array list protect optional context context public state public state transaction holder txn pend transaction list transaction holder txn pend commit transaction optional context context this context require non null context context be null this pend transaction require non null pend transaction pend transaction be null this pend commit transaction require non null pend commit transaction pending commit transaction be null public transaction holder txn get pend transaction return pend transaction public void set pend transaction transaction holder txn pend transaction this pend transaction pend transaction public list transaction holder txn get pend commit transaction return pend commit transaction public void set pend commit transaction list transaction holder txn pend commit transaction this pend commit transaction pending commit transaction public optional context get context return context public void set context optional context context this context context override public boolean equal object o if this o return true if o null get class o get class return false state state state o if pend transaction null pend transaction equal state pend transaction state pend transaction null return false if pend commit transaction null pend commit transaction equal state pend commit transaction state pend commit transaction null return false return context null context equal state context state context null override public int hash code int result pend transaction null pend transaction hash code result result pend commit transaction null pend commit transaction hash code result result context null context hash code return result 
two phase commit sink function visible for test internal public static final class transaction holder txn private final txn handle the system time when link handle be create use to determine if the current transaction have exceed its timeout specify by link transaction timeout private final long transaction start time visible for test public transaction holder txn handle long transaction start time this handle handle this transaction start time transaction start time long elapse time clock clock return clock milli transaction start time override public boolean equal object o if this o return true if o null get class o get class return false transaction holder that transaction holder o if transaction start time that transaction start time return false return handle null handle equal that handle that handle null override public int hash code int result handle null handle hash code result result int transaction start time transaction start time return result override public string to string return transaction holder handle handle transaction start time transaction start time 
two phase commit sink function visible for test public transaction holder txn handle long transaction start time this handle handle this transaction start time transaction start time 
two phase commit sink function visible for test internal public static final class state serializer txn context extend type serializer state txn context private static final long serial version u i d 1 l private final type serializer txn transaction serializer private final type serializer context context serializer public state serializer type serializer txn transaction serializer type serializer context context serializer this transaction serializer check not null transaction serializer this context serializer check not null context serializer override public boolean be immutable type return transaction serializer be immutable type context serializer be immutable type override public type serializer state txn context duplicate return new state serializer transaction serializer duplicate context serializer duplicate override public state txn context create instance return null override public state txn context copy state txn context from final transaction holder txn pend transaction from get pend transaction final transaction holder txn copy pend transaction new transaction holder transaction serializer copy pend transaction handle pend transaction transaction start time final list transaction holder txn copy pend commit transaction new array list for transaction holder txn txn from get pend commit transaction final txn txn handle copy transaction serializer copy txn handle copy pend commit transaction add new transaction holder txn handle copy txn transaction start time final optional context copy context from get context map context serializer copy return new state copy pend transaction copy pend commit transaction copy context override public state txn context copy state txn context from state txn context reuse return copy from override public int get length return override public void serialize state txn context record datum output view target throw i o exception final transaction holder txn pend transaction record get pend transaction transaction serializer serialize pend transaction handle target target write long pend transaction transaction start time final list transaction holder txn pend commit transaction record get pend commit transaction target write int pend commit transaction size for transaction holder txn pend txn pend commit transaction transaction serializer serialize pend txn handle target target write long pend txn transaction start time optional context context record get context if context be present target write boolean true context serializer serialize context get target else target write boolean false override public state txn context deserialize datum input view source throw i o exception txn pend txn handle transaction serializer deserialize source final long pend txn start time source read long final transaction holder txn pend txn new transaction holder pend txn handle pend txn start time int num pend commit txn source read int list transaction holder txn pend commit txn new array list num pend commit txn for int i i num pend commit txn i final txn pend commit txn handle transaction serializer deserialize source final long pend commit txn start time source read long pend commit txn add new transaction holder pend commit txn handle pend commit txn start time optional context context optional empty boolean have context source read boolean if have context context optional of context serializer deserialize source return new state pend txn pend commit txn context override public state txn context deserialize state txn context reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception txn pend txn handle transaction serializer deserialize source transaction serializer serialize pend txn handle target final long pend txn start time source read long target write long pend txn start time int num pend commit txn source read int target write int num pend commit txn for int i i num pend commit txn i txn pend commit txn handle transaction serializer deserialize source transaction serializer serialize pend commit txn handle target final long pend commit txn start time source read long target write long pend commit txn start time boolean have context source read boolean target write boolean have context if have context context context context serializer deserialize source context serializer serialize context target override public boolean equal object o if this o return true if o null get class o get class return false state serializer that state serializer o if transaction serializer equal that transaction serializer return false return context serializer equal that context serializer override public int hash code int result transaction serializer hash code result result context serializer hash code return result override public state serializer snapshot txn context snapshot configuration return new state serializer snapshot this 
continuous file monitoring function visible for test public long get global modification time return this global modification time 
stream config visible for test public static final string serializedudf serialize u d f 
stream config visible for test public void set stream operator stream operator operator set stream operator factory simple operator factory of operator 
stream config visible for test public t extend stream operator t get stream operator class loader cl simple operator factory factory get stream operator factory cl return t factory get operator 
stream graph visible for test public list stream edge get stream edge int source id return get stream node source id get out edge 
stream graph visible for test public list stream edge get stream edge int source id int target id list stream edge result new array list for stream edge edge get stream node source id get out edge if edge get target id target id result add edge return result 
stream graph visible for test deprecate public list stream edge get stream edge or throw int source id int target id list stream edge result get stream edge source id target id if result be empty throw new runtime exception no such edge in stream graph source id target id return result 
streaming job graph generator visible for test static boolean be operator chainable stream node up stream vertex stream node down stream vertex stream graph stream graph stream operator factory up stream operator up stream vertex get operator factory stream operator factory down stream operator down stream vertex get operator factory if down stream operator null up stream operator null return false if up stream operator get chain strategy chain strategy never down stream operator get chain strategy chain strategy always return false yield operator can not be chain to legacy source if down stream operator instanceof yield operator factory unfortunately the information that vertice have be chain be not preserve at this point return get head operator up stream vertex stream graph be stream source return true 
stream node visible for test public stream node integer id nullable string slot sharing group nullable string co location group stream operator operator string operator name list output selector output selector class extend abstract invokable job vertex class this id slot sharing group co location group simple operator factory of operator operator name output selector job vertex class 
stream node visible for test public stream operator get operator return stream operator simple operator factory operator factory get operator 
abstract stream operator visible for test public streaming runtime context get runtime context return runtime context 
abstract stream operator visible for test public k key state backend k get key state backend return state handler get key state backend 
abstract stream operator visible for test public operator state backend get operator state backend return state handler get operator state backend 
abstract stream operator visible for test public processing time service get processing time service return processing time service 
abstract stream operator visible for test public int num processing time timer return time service manager null time service manager num processing time timer 
abstract stream operator visible for test public int num event time timer return time service manager null time service manager num event time timer 
abstract stream operator v2 suppress warning unchecked visible for test public k key state backend k get key state backend return key state backend k state handler get key state backend 
abstract stream operator v2 visible for test public operator state backend get operator state backend return state handler get operator state backend 
abstract stream operator v2 visible for test public processing time service get processing time service return processing time service 
abstract stream operator v2 visible for test public k n internal timer service n get internal timer service string name type serializer n namespace serializer triggerable k n triggerable if time service manager null throw new runtime exception the timer service have not be initialize internal time service manager k key time service handler internal time service manager k time service manager return key time service handler get internal timer service name namespace serializer triggerable state handler get key state backend 
abstract stream operator v2 visible for test public int num processing time timer return time service manager null time service manager num processing time timer 
abstract stream operator v2 visible for test public int num event time timer return time service manager null time service manager num event time timer 
interval join operator internal visible for test public static class buffer entry t private final t element private final boolean have be join public buffer entry t element boolean have be join this element element this have be join have be join visible for test public t get element return element visible for test public boolean have be join return have be join 
interval join operator visible for test public t get element return element 
interval join operator visible for test public boolean have be join return have be join 
interval join operator internal visible for test public static class buffer entry serializer t extend type serializer buffer entry t private static final long serial version u i d l private final type serializer t element serializer public buffer entry serializer type serializer t element serializer this element serializer precondition check not null element serializer override public boolean be immutable type return true override public type serializer buffer entry t duplicate return new buffer entry serializer element serializer duplicate override public buffer entry t create instance return null override public buffer entry t copy buffer entry t from return new buffer entry from element from have be join override public buffer entry t copy buffer entry t from buffer entry t reuse return copy from override public int get length return override public void serialize buffer entry t record datum output view target throw i o exception target write boolean record have be join element serializer serialize record element target override public buffer entry t deserialize datum input view source throw i o exception boolean have be join source read boolean t element element serializer deserialize source return new buffer entry element have be join override public buffer entry t deserialize buffer entry t reuse datum input view source throw i o exception return deserialize source override public void copy datum input view source datum output view target throw i o exception target write boolean source read boolean element serializer copy source target override public boolean equal object o if this o return true if o null get class o get class return false buffer entry serializer that buffer entry serializer o return object equal element serializer that element serializer override public int hash code return object hash element serializer override public type serializer snapshot buffer entry t snapshot configuration return new buffer entry serializer snapshot this 
interval join operator visible for test map state long list buffer entry t1 get leave buffer return leave buffer 
interval join operator visible for test map state long list buffer entry t2 get right buffer return right buffer 
collect result iterator visible for test public collect result iterator completable future operator i d operator id future type serializer t serializer string accumulator name int retry milli this fetcher new collect result fetcher operator id future serializer accumulator name retry millis this buffer result null 
collect sink function visible for test public static byte serialize accumulator result long offset string version long last checkpointed offset list byte buffer throw i o exception byte array output stream bao new byte array output stream datum output view stream wrapper wrapper new datum output view stream wrapper baos wrapper write long offset collect coordination response final response new collect coordination response version last checkpointed offset buffer final response serialize wrapper return bao to byte array 
internal timer service impl visible for test public int num processing time timer return this processing time timer queue size 
internal timer service impl visible for test public int num event time timer return this event time timer queue size 
internal timer service impl visible for test public int num processing time timer n namespace return count timer in namespace internal namespace processing time timer queue 
internal timer service impl visible for test public int num event time timer n namespace return count timer in namespace internal namespace event time timer queue 
internal timer service impl visible for test int get local key group range start idx return this local key group range start idx 
internal timer service impl visible for testing list set timer heap internal timer k n get event time timer per key group return partition element by key group event time timer queue 
internal timer service impl visible for testing list set timer heap internal timer k n get processing time timer per key group return partition element by key group processing time timer queue 
internal time service manager visible for test static final string timer state prefix timer state 
internal time service manager visible for test static final string processing timer prefix timer state prefix processing 
internal time service manager visible for test static final string event timer prefix timer state prefix event 
internal time service manager visible for test public int num processing time timer int count for internal timer service impl timer service timer service value count timer service num processing time timer return count 
internal time service manager visible for test public int num event time timer int count for internal timer service impl timer service timer service value count timer service num event time timer return count 
source operator visible for test public source reader out split t get source reader return source reader 
source operator visible for testing list state split t get reader state return reader state 
streaming runtime context visible for test public streaming runtime context abstract stream operator operator environment env map string accumulator accumulator this env accumulator operator get metric group operator get operator i d operator get processing time service operator get key state store env get external resource info provider 
stream operator state handler visible for test void snapshot state checkpointed stream operator stream operator optional internal time service manager time service manager string operator name long checkpoint id long timestamp checkpoint option checkpoint option checkpoint stream factory factory operator snapshot future snapshot in progress state snapshot context synchronous impl snapshot context throw checkpoint exception try if time service manager be present check state key state backend null key state backend should be available with time service manager time service manager get snapshot state key state backend snapshot context operator name stream operator snapshot state snapshot context snapshot in progress set key state raw future snapshot context get key state stream future snapshot in progress set operator state raw future snapshot context get operator state stream future if null operator state backend snapshot in progress set operator state manage future operator state backend snapshot checkpoint id timestamp factory checkpoint option if null key state backend snapshot in progress set key state manage future key state backend snapshot checkpoint id timestamp factory checkpoint option catch exception snapshot exception try snapshot in progress cancel catch exception e snapshot exception add suppress e string snapshot fail message could not complete snapshot checkpoint id for operator operator name try snapshot context close exceptionally catch i o exception e snapshot exception add suppress e throw new checkpoint exception snapshot fail message checkpoint failure reason checkpoint decline snapshot exception 
stream task state initializer impl visible for test public stream task state initializer impl environment environment state backend state backend ttl time provider ttl time provider this environment environment this task state manager precondition check not null environment get task state manager this state backend precondition check not null state backend this ttl time provider ttl time provider 
legacy source transformation visible for test public stream source t get operator return stream source t simple operator factory operator factory get operator 
one input transformation visible for test public one input stream operator in out get operator return one input stream operator in out simple operator factory operator factory get operator 
sink transformation visible for test public stream sink t get operator return stream sink t simple operator factory operator factory get operator 
two input transformation visible for test public two input stream operator i n1 i n2 out get operator return two input stream operator i n1 i n2 out simple operator factory operator factory get operator 
time evictor visible for test public long get window size return window size 
continuous event time trigger visible for test public long get interval return interval 
continuous processing time trigger visible for test public long get interval return interval 
purge trigger visible for test public trigger t w get nest trigger return nest trigger 
checkpoint barrier aligner visible for test public int get num closed channel return num close channel 
checkpoint barrier unaligner visible for test int get num open channel return thread safe unaligner get num open channel 
checkpoint barrier unaligner visible for test thread safe unaligner get thread safe unaligner return thread safe unaligner 
checkpoint barrier unaligner visible for test synchronize int get num open channel return num open channel 
checkpoint barrier unaligner visible for test synchronize long get current checkpoint id return current receive checkpoint id 
checkpoint barrier unaligner visible for test boolean be checkpoint pend return num barrier receive 
checkpointed input gate visible for test long get latest checkpoint id return barrier handler get latest checkpoint id 
checkpointed input gate visible for test long get alignment duration nano return barrier handler get alignment duration nano 
checkpointed input gate visible for test long get checkpoint start delay nano return barrier handler get checkpoint start delay nano 
checkpointed input gate visible for test checkpoint barrier handler get checkpoint barrier handler return barrier handler 
stream task network input visible for test stream task network input checkpoint input gate checkpoint input gate type serializer input serializer status watermark valve status watermark valve int input index record deserializer deserialization delegate stream element record deserializer this checkpoint input gate checkpoint input gate this deserialization delegate new non reuse deserialization delegate new stream element serializer input serializer this record deserializer record deserializer this status watermark valve status watermark valve this input index input index this channel index get channel index checkpoint input gate 
evict window operator visible for test public evictor super in super w get evictor return evictor 
evict window operator override visible for testing suppress warning unchecked rawtype public state descriptor extend append state in iterable in get state descriptor return state descriptor extend append state in iterable in evict window state descriptor 
window operator visible for test public trigger super in super w get trigger return trigger 
window operator visible for test public key selector in k get key selector return key selector 
window operator visible for test public window assigner super in w get window assigner return window assigner 
window operator visible for test public state descriptor extend append state in acc get state descriptor return window state descriptor 
status watermark valve visible for testing protect static class input channel status protect long watermark protect stream status stream status protect boolean be watermark align utility to check if at least one channel in a give array of input channel be active private static boolean have active channel input channel status channel status for input channel status status channel status if status stream status be active return true return false 
status watermark valve visible for testing protect input channel status get input channel status int channel index precondition check argument channel index channel index channel status length invalid channel index number of input channel channel status length return channel status channel index 
mailbox processor visible for test public boolean be default action unavailable return suspend default action null 
mailbox processor visible for test public boolean be mailbox loop run return mailbox loop running 
mailbox processor visible for test public meter get idle time return idle time 
mailbox processor visible for test public boolean have mail return mailbox have mail 
task mailbox impl visible for test public task mailbox impl this thread current thread 
one input stream task visible for test public one input stream task environment env nullable timer service time provider throw exception super env time provider 
operator chain visible for test operator chain list stream operator wrapper all operator wrapper record writer output stream output watermark gauge expose output stream record out chain entry point stream operator wrapper out op head operator wrapper this stream output check not null stream output this chain entry point check not null chain entry point this operator event dispatcher null check state all operator wrapper null all operator wrapper size this head operator wrapper check not null head operator wrapper this tail operator wrapper all operator wrapper get this num operator all operator wrapper size link operator wrapper all operator wrapper 
stream task visible for test completable future get input output joint future input status status if status input status nothing available record writer be available return completable future all of input processor get available future record writer get available future else if status input status nothing available return input processor get available future else return record writer get available future 
stream task visible for test optional long get synchronous savepoint id return sync savepoint id null optional long of sync savepoint id optional long empty 
stream task visible for test public boolean run mailbox step throw exception return mailbox processor run mailbox step 
stream task visible for test timer service get timer service return timer service 
stream task visible for test op get head operator return this head operator 
stream task visible for test stream task action executor get action executor return action executor 
stream task visible for test public static out record writer delegate serialization delegate stream record out create record writer delegate stream config configuration environment environment list record writer serialization delegate stream record out record write create record writer configuration environment if record write size return new single record writer record write get else if record write size return new non record writer else return new multiple record writer record write 
stream task visible for testing processing time callback defer callback to mailbox mailbox executor mailbox executor processing time callback callback return timestamp mailbox executor execute invoke processing time callback callback timestamp timer callback for s d callback timestamp 
subtask checkpoint coordinator impl visible for test subtask checkpoint coordinator impl checkpoint storage worker view checkpoint storage string task name stream task action executor action executor closeable registry closeable registry executor service executor service environment env async exception handler async exception handler bi function with exception channel state writer long completable future void i o exception prepare input snapshot int max record abort checkpoint channel state writer channel state writer throw i o exception this checkpoint storage new caching checkpoint storage worker view check not null checkpoint storage this task name check not null task name this checkpoint new hash map this lock new object this executor service check not null executor service this env check not null env this async exception handler check not null async exception handler this action executor check not null action executor this channel state writer check not null channel state writer this prepare input snapshot prepare input snapshot this aborted checkpoint id create aborted checkpoint set with limit size max record abort checkpoint this last checkpoint id 1 l closeable registry register closeable this this close false 
subtask checkpoint coordinator impl visible for test int get async checkpoint runnable size synchronize lock return checkpoint size 
subtask checkpoint coordinator impl visible for test int get abort checkpoint size return abort checkpoint id size 
system processing time service visible for test system processing time service exception handler exception handler this exception handler null 
system processing time service visible for test boolean be alive return status get status alive 
system processing time service visible for test boolean shutdown and await pend long time time unit time unit throw interrupted exception shutdown service return timer service await termination time time unit 
system processing time service visible for test int get num task schedule block queue queue timer service get queue if queue null return else return queue size 
abstract stream operator test harness visible for test public int num processing time timer if operator instanceof abstract stream operator return abstract stream operator operator num processing time timer else throw new unsupported operation exception 
abstract stream operator test harness visible for test public int num event time timer if operator instanceof abstract stream operator return abstract stream operator operator num event time timer else throw new unsupported operation exception 
abstract stream operator test harness visible for test public test processing time service get processing time service return processing time service 
abstract stream operator test harness visible for test public stream status get stream status return mock task get stream status maintainer get stream status 
abstract stream operator test harness visible for test public task mailbox get task mailbox return task mailbox 
cli client visible for test public cli client terminal terminal string session id executor executor path history file path this terminal terminal this session id session id this executor executor make space from previous output and test the writer terminal writer println terminal writer flush initialize line line reader line reader line reader builder builder terminal terminal app name cli string cli name parser new sql multi line parser completer new sql completer session id executor build this option be disabled for now for correct backslash escape a select query should return a string with a backslash line reader option line reader option disable event expansion true set strict typo distance between word when do code completion line reader set variable line reader error perform code completion case insensitive line reader option line reader option case insensitive true set history file path if file exist history file path cli util create file history file path string msg command history file path history file path print it in the command line as well as log file system out println msg log info msg line reader set variable line reader history file history file path else string msg unable to create history file history file path system out println msg log warn msg create prompt prompt new attribute string builder style attribute style default foreground attribute style green append flink sql style attribute style default append to ansi 
local executor visible for testing protect execution context get execution context string session id throw sql execution exception execution context context this context map get session id if context null throw new sql execution exception invalid session identifier session id return context 
materialize collect stream result visible for test public materialize collect stream result table schema table schema execution config config inet address gateway address int gateway port int max row count int overcommit threshold class loader class loader super table schema config gateway address gateway port class loader if max row count this max row count integer max value else this max row count max row count this overcommit threshold overcommit threshold prepare for materialization final int initial capacity compute materialize table capacity max row count avoid frequent resizing materialize table new array list initial capacity row position cache new hash map initial capacity snapshot new array list valid row position be last snapshot false page count 
materialize collect stream result visible for testing protect list row get materialize table return materialize table 
table environment impl visible for test public planner get planner return planner 
table environment impl visible for testing protect explain detail get explain detail boolean extend if extend if be stream mode return new explain detail explain detail estimate cost explain detail changelog mode else return new explain detail explain detail estimate cost else return new explain detail 
catalog manager visible for test public static table lookup result temporary catalog base table table table schema resolve schema return new table lookup result true table resolve schema 
catalog manager visible for test public static table lookup result permanent catalog base table table table schema resolve schema return new table lookup result false table resolve schema 
connector catalog table visible for testing protect connector catalog table table source t1 table source table sink t2 table sink table schema table schema boolean be batch super table schema collection empty map this table source table source this table sink table sink this be batch be batch 
datum gen table source factory visible for test datum generator source row datum create source return new datum generator source new row generator field generator schema get field name row per second 
binary segment util visible for test static boolean equal multi segment memory segment segments1 int offset1 memory segment segments2 int offset2 int len if len quick way and avoid seg size be zero return true int seg size1 segments1 size int seg size2 segments2 size find first seg index and seg offset of segment int seg index1 offset1 seg size1 int seg index2 offset2 seg size2 int seg offset1 offset1 seg size1 seg index1 equal to int seg offset2 offset2 seg size2 seg index2 equal to while len int equal len math min math min len seg size1 seg offset1 seg size2 seg offset2 if segments1 seg index1 equal to segments2 seg index2 seg offset1 seg offset2 equal len return false len equal len seg offset1 equal len if seg offset1 seg size1 seg offset1 seg index1 seg offset2 equal len if seg offset2 seg size2 seg offset2 seg index2 return true 
stream executor visible for test public stream executor stream execution environment execution environment this execution environment execution environment 
batch executor visible for test public batch executor stream execution environment execution environment super execution environment 
stream executor visible for test public stream executor stream execution environment execution environment super execution environment 
list agg with retract agg function visible for test override public boolean equal object o if this o return true if o null get class o get class return false list agg with retract accumulator that list agg with retract accumulator o return object equal list that list object equal retract list that retract list 
list agg w with retract agg function visible for test override public boolean equal object o if this o return true if o null get class o get class return false list agg w with retract accumulator that list agg w with retract accumulator o return object equal list that list object equal retract list that retract list object equal delimiter that delimiter 
catalog table statistics converter visible for test public static map string column stats convert to column stats map map string catalog column statistics data base column statistics datum map string column stats column stats map new hash map for map entry string catalog column statistics data base entry column statistics datum entry set if entry get value null column stats column stats convert to column stats entry get value column stats map put entry get key column stats return column stats map 
abstract binary writer visible for test public memory segment get segment return segment 
file system lookup function visible for test public duration get cache t t l return cache t t l 
binary hash table visible for test static int get num write behind buffer int num buffer int num i o buf int math log num buffer math log 1.5 return num i o buf num i o buf 
byte hash map visible for test boolean be hash set mode return hash set mode 
binary external sorter visible for test public void write mutable object iterator binary row datum iterator throw i o exception binary row datum row serializer create instance while row iterator next row null write row 
window operator builder visible for test window operator aggregate and build namespace agg handle function base aggregate function record equaliser equaliser logical type accumulator type logical type agg result type logical type window property type aggregate accumulator type agg result type window property type if aggregate function instanceof namespace agg handle function return new aggregate window operator builder namespace agg handle function aggregate function equaliser this build else return new table aggregate window operator builder namespace table agg handle function aggregate function this build 
array datum serializer visible for test public type serializer get ele ser return ele ser 
map datum serializer visible for test public type serializer get key serializer return key serializer 
map datum serializer visible for test public type serializer get value serializer return value serializer 
resettable external buffer visible for testing list channel with meta get spill channel return spill channel i d 
segment util visible for test static boolean equal multi segment memory segment segments1 int offset1 memory segment segments2 int offset2 int len if len quick way and avoid seg size be zero return true int seg size1 segments1 size int seg size2 segments2 size find first seg index and seg offset of segment int seg index1 offset1 seg size1 int seg index2 offset2 seg size2 int seg offset1 offset1 seg size1 seg index1 equal to int seg offset2 offset2 seg size2 seg index2 equal to while len int equal len math min math min len seg size1 seg offset1 seg size2 seg offset2 if segments1 seg index1 equal to segments2 seg index2 seg offset1 seg offset2 equal len return false len equal len seg offset1 equal len if seg offset1 seg size1 seg offset1 seg index1 seg offset2 equal len if seg offset2 seg size2 seg offset2 seg index2 return true 
yarn log config util visible for test public static configuration set log config file in config final configuration configuration final string configuration directory if configuration get yarn config option internal application log config file null return configuration discover log config file configuration directory if present file configuration set yarn config option internal application log config file file get path return configuration 
yarn worker resource spec factory visible for test static c p u resource get default cpus final configuration configuration int fallback configuration get integer yarn config option vcore double cpu core double task executor process util get cpu core with fallback configuration fallback get value double value suppress warning numeric cast that lose precision long cpu core long math max long math ceil cpu core double 1 l noinspection floating point equality if cpu core long cpu core double log info the amount of cpu core must be a positive integer on yarn round up to the closest positive integer cpu core double cpu core long if cpu core long integer max value throw new illegal configuration exception string format the amount of cpu core d can not exceed integer max value d cpu core long integer max value noinspection numeric cast that lose precision return new c p u resource cpu core long 
register application master response reflector visible for test register application master response reflector final logger log final class clazz this logger require non null log require non null clazz this method exist in hadoop 2.2 and later version get container from previous attempt method try get method clazz get container from previous attempt can not reconnect to previously allocate container this method exist in hadoop 2.6 and later version get scheduler resource type method try get method clazz get scheduler resource type can not get scheduler resource type 
register application master response reflector visible for testing list container get container from previous attempt unsafe final object response if get container from previous attempt method be present response null try suppress warning unchecked final list container container list container get container from previous attempt method get invoke response if container null container be empty return container catch exception t logger error error invoke get container from previous attempt t return collection empty list 
register application master response reflector visible for test optional method get get container from previous attempt method return get container from previous attempt method 
register application master response reflector visible for test optional set string get scheduler resource type name unsafe final object response if get scheduler resource type method be present response null try suppress warning unchecked final set extend enum scheduler resource type set extend enum get scheduler resource type method get invoke response return optional of precondition check not null scheduler resource type stream map enum name collect collector to set catch exception e logger error error invoke get scheduler resource type e return optional empty 
register application master response reflector visible for test optional method get get scheduler resource type method return get scheduler resource type method 
resource information reflector visible for test resource information reflector string resource class name string resource info class name method resource set resource information method null method resource get resource method null method resource information get name method null method resource information get value method null method resource information new instance method null boolean be yarn resource type available false try final class resource class class for name resource class name final class resource info class class for name resource info class name resource set resource information method resource class get method set resource information string class resource info class resource get resource method resource class get method get resource resource information get name method resource info class get method get name resource information get value method resource info class get method get value resource information new instance method resource info class get method new instance string class long class be yarn resource type available true catch exception e log debug the underlie yarn version do not support external resource e finally this resource set resource information method resource set resource information method this resource get resource method resource get resource method this resource information get name method resource information get name method this resource information get value method resource information get value method this resource information new instance method resource information new instance method this be yarn resource type available be yarn resource type available 
resource information reflector visible for test void set resource information un safe object resource string resource name long amount if be yarn resource type available log info will not request extended resource because the use yarn version do not support it resource name return try resource set resource information method invoke resource resource name resource information new instance method invoke null resource name amount catch exception e log warn error in set the external resource will not request this resource from yarn resource name e 
resource information reflector visible for test map string long get external resource un safe object resource if be yarn resource type available return collection empty map final map string long external resource new hash map final object external resource info try external resource info object resource get resource method invoke resource the first two element would be cpu and mem for int i i external resource info length i final string name string resource information get name method invoke external resource info i final long value long resource information get value method invoke external resource info i external resource put name value catch exception e log warn could not obtain the external resource support by the give resource e return collection empty map return external resource 
resource information reflector visible for test map string long get all resource info object resource if be yarn resource type available return collection empty map final map string long external resource new hash map final object external resource info try external resource info object resource get resource method invoke resource for int i i external resource info length i final string name string resource information get name method invoke external resource info i final long value long resource information get value method invoke external resource info i external resource put name value catch exception e log warn could not obtain the external resource support by the give resource e return collection empty map return external resource 
worker spec container resource adapter visible for test static final class internal container resource private final int memory private final int vcore private final map string long external resource visible for test internal container resource final int memory final int vcore final map string long external resource this memory memory this vcore vcore this external resource external resource entry set stream filter entry entry get value equal 0 l collect collector to map map entry get key map entry get value private internal container resource final resource resource this precondition check not null resource get memory precondition check not null resource get virtual core resource information reflector instance get external resource resource private resource to resource final resource resource resource new instance memory vcore try set external resource external resource resource return resource override public boolean equal object obj if obj this return true else if obj instanceof internal container resource final internal container resource other internal container resource obj return this memory other memory this vcore other vcore this external resource equal other external resource return false override public int hash code final int prime int result integer hash code memory result prime result integer hash code vcore result prime result external resource hash code return result override public string to string final string builder sb new string builder sb append memory append memory append v core append vcore final set string external resource name new tree set external resource key set for string external resource name external resource name sb append append external resource name append append external resource get external resource name sb append return sb to string 
worker spec container resource adapter visible for test internal container resource final int memory final int vcore final map string long external resource this memory memory this vcore vcore this external resource external resource entry set stream filter entry entry get value equal 0 l collect collector to map map entry get key map entry get value 
yarn cluster descriptor visible for testing list file get ship file return ship file 
yarn cluster descriptor visible for test void add lib folder to ship file collection file effective ship file add lib folder to the ship file if the environment variable be set this be for convenience when run from the command line for other file user explicitly set the ship file string lib dir system getenv get env flink lib dir if lib dir null file directory file new file lib dir if directory file be directory effective ship file add directory file else throw new yarn deployment exception the environment variable env flink lib dir be set to lib dir but the directory doesn t exist else if ship file be empty log warn environment variable not set and ship file have not be provide manually not ship any library file env flink lib dir 
yarn cluster descriptor visible for test void add plugin folder to ship file collection file effective ship file final optional file plugin dir plugin config get plugin dir plugin dir if present effective ship file add 
yarn resource manager visible for test optional resource get container resource worker resource spec worker resource spec return worker spec container resource adapter try compute container resource worker resource spec 
yarn resource manager nonnull visible for test a m r m client container request get container request resource container resource return new a m r m client container request container resource null null rm request priority 
yarn task executor runner visible for test static void setup configuration and install security context configuration configuration string curr dir map string string variable throw exception final string local dir variable get environment local dir key log info current work local directory local dir bootstrap tool update tmp directory in configuration configuration local dir setup configuration from variable configuration curr dir variable security util install new security configuration configuration 
