lock aspect slf4j aspect public class lock aspect autowired require false private distribute lock locker sp e l private spel expression parser spel expression parser new spel expression parser private default parameter name discoverer name discoverer new default parameter name discoverer around within lock annotation lock public object around lock proceeding join point point lock lock throw throwable object lock obj null if lock null lock point get target get class get declare annotation lock class string lock key lock key if locker null throw new lock exception distribute lock be null if str util be empty lock key throw new lock exception lock key be null if lock key contain method signature method signature method signature point get signature object arg point get arg lock key get val by sp e l lock key method signature arg try if lock wait time lock obj locker try lock lock key lock wait time lock lease time lock unit lock be fair else lock obj locker lock lock key lock lease time lock unit lock be fair if lock obj null return point proceed else throw new lock exception finally locker unlock lock obj sp e l private string get val by sp e l string sp e l method signature method signature object arg string param name name discoverer get parameter name method signature get method if param name null param name length expression expression spel expression parser parse expression sp e l spring evaluation context context new standard evaluation context for int i i arg length i context set variable param name i args i return expression get value context to string return null 
audit log aspect slf4j aspect conditional on class http servlet request class request context holder class public class audit log aspect value spring application name private string application name private audit log property audit log property private i audit service audit service public audit log aspect audit log property audit log property i audit service audit service this audit log property audit log property this audit service audit service sp e l private spel expression parser spel expression parser new spel expression parser private default parameter name discoverer name discoverer new default parameter name discoverer before within audit log annotation audit log public void before method join point join point audit log audit log if audit log property get enable if audit service null log warn audit log aspect audit service be null return if audit log null audit log join point get target get class get declare annotation audit log class audit audit get audit audit log join point audit service save audit sp e l private string get val by sp e l string sp e l method signature method signature object arg string param name name discoverer get parameter name method signature get method if param name null param name length expression expression spel expression parser parse expression sp e l spring evaluation context context new standard evaluation context for int i i arg length i context set variable param name i args i return expression get value context to string return null private audit get audit audit log audit log join point join point audit audit new audit audit set timestamp local date time now audit set application name application name method signature method signature method signature join point get signature audit set class name method signature get declare type name audit set method name method signature get name servlet request attribute attribute servlet request attribute request context holder get request attribute http servlet request request attribute get request string user id request get header x userid header string user name request get header x user header string client id request get header x tenant header audit set user id user id audit set user name user name audit set client id client id string operation audit log operation if operation contain object arg join point get arg operation get val by sp e l operation method signature arg audit set operation operation return audit 
oauth token aspect slf4j component aspect public class oauth token aspect around execution org springframework security oauth2 provider endpoint token endpoint post access token public object handle controller method proceeding join point join point throw throwable try object arg join point get arg principal principal principal arg if principal instanceof authentication throw new insufficient authentication exception there be no client authentication try add a appropriate authentication filter string client id get client id principal map string string parameter map string string arg string grant type parameter get o auth2 util grant type id tenant context holder set tenant client id object proceed join point proceed if security constant authorization code equal grant type enable o auth2 sso sso demo ss sso enable o auth2 sso token return proceed else response entity o auth2 access token response entity response entity o auth2 access token proceed o auth2 access token body response entity get body return response entity status http status ok body result succeed body catch exception e log error e return response entity status http status bad request body result fail e get message finally tenant context holder clear private string get client id principal principal authentication client authentication principal if client be authenticate throw new insufficient authentication exception the client be not authenticate string client id client get name if client instanceof o auth2 authentication client id o auth2 authentication client get o auth2 request get client id return client id 
oauth authorize aspect slf4j component aspect public class oauth authorize aspect autowired private user service user service around execution org springframework security oauth2 provider endpoint authorization endpoint authorize public object do around method proceeding join point join point throw throwable object arg join point get arg map string string parameter map string string arg principal principal principal arg if principal instanceof tenant username password authentication token tenant username password authentication token tenant token tenant username password authentication token principal string client id tenant token get client id string request client id parameter get o auth2 util client id if request client id equal client id try tenant context holder set tenant request client id login app user user user service find by username tenant token get name tenant token new tenant username password authentication token user tenant token get credentials user get authority request client id arg tenant token finally tenant context holder clear return join point proceed arg 
namespace acquire lock aspect aspect component public class namespace acquire lock aspect private static final logger logger logger factory get logger namespace acquire lock aspect class private final namespace lock service namespace lock service private final namespace service namespace service private final item service item service private final biz config biz config public namespace acquire lock aspect final namespace lock service namespace lock service final namespace service namespace service final item service item service final biz config biz config this namespace lock service namespace lock service this namespace service namespace service this item service item service this biz config biz config create item before annotation pre acquire namespace lock arg app id cluster name namespace name item public void require lock advice string app id string cluster name string namespace name item d t o item acquire lock app id cluster name namespace name item get datum change last modify by update item before annotation pre acquire namespace lock arg app id cluster name namespace name item id item public void require lock advice string app id string cluster name string namespace name long item id item d t o item acquire lock app id cluster name namespace name item get datum change last modify by update by change set before annotation pre acquire namespace lock arg app id cluster name namespace name change set public void require lock advice string app id string cluster name string namespace name item change set change set acquire lock app id cluster name namespace name change set get datum change last modify by delete item before annotation pre acquire namespace lock arg item id operator public void require lock advice long item id string operator item item item service find one item id if item null throw new bad request exception item not exist acquire lock item get namespace id operator void acquire lock string app id string cluster name string namespace name string current user if biz config be namespace lock switch off return namespace namespace namespace service find one app id cluster name namespace name acquire lock namespace current user void acquire lock long namespace id string current user if biz config be namespace lock switch off return namespace namespace namespace service find one namespace id acquire lock namespace current user private void acquire lock namespace namespace string current user if namespace null throw new bad request exception namespace not exist long namespace id namespace get id namespace lock namespace lock namespace lock service find lock namespace id if namespace lock null try try lock namespace id current user lock success catch data integrity violation exception e lock fail namespace lock namespace lock service find lock namespace id check lock namespace namespace lock current user catch exception e logger error try lock error e throw e else check lock owner be current user check lock namespace namespace lock current user private void try lock long namespace id string user namespace lock lock new namespace lock lock set namespace id namespace id lock set datum change create by user lock set datum change last modify by user namespace lock service try lock lock private void check lock namespace namespace namespace lock namespace lock string current user if namespace lock null throw new service exception string format check lock for s fail please retry namespace get namespace name string lock owner namespace lock get datum change create by if lock owner equal current user throw new bad request exception namespace namespace get namespace name be modify by lock owner 
namespace unlock aspect aspect component public class namespace unlock aspect private gson gson new gson private final namespace lock service namespace lock service private final namespace service namespace service private final item service item service private final release service release service private final biz config biz config public namespace unlock aspect final namespace lock service namespace lock service final namespace service namespace service final item service item service final release service release service final biz config biz config this namespace lock service namespace lock service this namespace service namespace service this item service item service this release service release service this biz config biz config create item after annotation pre acquire namespace lock arg app id cluster name namespace name item public void require lock advice string app id string cluster name string namespace name item d t o item try unlock namespace service find one app id cluster name namespace name update item after annotation pre acquire namespace lock arg app id cluster name namespace name item id item public void require lock advice string app id string cluster name string namespace name long item id item d t o item try unlock namespace service find one app id cluster name namespace name update by change set after annotation pre acquire namespace lock arg app id cluster name namespace name change set public void require lock advice string app id string cluster name string namespace name item change set change set try unlock namespace service find one app id cluster name namespace name delete item after annotation pre acquire namespace lock arg item id operator public void require lock advice long item id string operator item item item service find one item id if item null throw new bad request exception item not exist try unlock namespace service find one item get namespace id private void try unlock namespace namespace if biz config be namespace lock switch off return if be modify namespace namespace lock service unlock namespace get id boolean be modify namespace namespace release release release service find latest active release namespace list item item item service find item without order namespace get id if release null return have normal item item map string string release configuration gson from json release get configuration gson type config map string string configuration from item generate configuration from item namespace item map difference string string difference map difference release configuration configuration from item return difference be equal private boolean have normal item list item item for item item item if string util be empty item get key return true return false private map string string generate configuration from item namespace namespace list item namespace item map string string configuration from item map new hash map namespace parent namespace namespace service find parent namespace namespace parent namespace if parent namespace null generate map from item namespace item configuration from item else child namespace release parent release release service find latest active release parent namespace if parent release null configuration from item gson from json parent release get configuration gson type config generate map from item namespace item configuration from item return configuration from item private map string string generate map from item list item item map string string configuration from item for item item item string key item get key if string util be blank key continue configuration from item put key item get value return configuration from item 
repository aspect aspect component public class repository aspect pointcut execution public org springframework datum repository repository public void any repository method around any repository method public object invoke with cat transaction proceed join point join point throw throwable string name join point get signature get declare type get simple name join point get signature get name transaction cat transaction tracer new transaction sql name try object result join point proceed cat transaction set status transaction success return result catch throwable ex cat transaction set status ex throw ex finally cat transaction complete 
capacity management aspect aspect public class capacity management aspect private static final logger logger logger factory get logger capacity management aspect class private static final string sync update config all execution com alibaba naco config server controller config controller publish config arg request response datum id group content app name src user tenant tag private static final string delete config execution com alibaba naco config server controller config controller delete config arg request response datum id group tenant autowire private capacity service capacity service autowire private persist service persist service need to judge the size of content whether to exceed the limination around sync update config all public object around sync update config all proceeding join point pjp http servlet request request http servlet response response string datum id string group string content string app name string src user string tenant string tag throw throwable if property util be manage capacity return pjp proceed logger info capacity management around sync update config all string beta ip request get header beta ip if string util be blank beta ip if string util be blank tag do capacity management limination check for writting or update config info table if persist service find config info datum id group tenant null write operation return do4 insert pjp request response group tenant content update operation return do4 update pjp request response datum id group tenant content return pjp proceed update operation open the limination of capacity management and it will check the size of content throw throwable throw exception when actually operate private object do4 update proceeding join point pjp http servlet request request http servlet response response string datum id string group string tenant string content throw throwable if property util be capacity limit check return pjp proceed try boolean have tenant have tenant tenant capacity capacity get capacity group tenant have tenant if be size limited group tenant get current size content have tenant false capacity return response4 limit request response limit type over max size catch exception e logger error capacity management do4 update e return pjp proceed write operation step count whether to open the limination check funtion for capacity management step open limination check capacity management and check size of content and quota throw throwable expcetion private object do4 insert proceeding join point pjp http servlet request request http servlet response response string group string tenant string content throw throwable logger info capacity management do4 insert counter mode counter mode counter mode increment boolean have tenant have tenant tenant if property util be capacity limit check write or update usage limit type limit type get limit type counter mode group tenant content have tenant if limit type null return response4 limit request response limit type else write or update usage insert or update usage group tenant counter mode have tenant return get result pjp response group tenant counter mode have tenant private object response4 limit http servlet request request http servlet response response limit type limit type response set status limit type status return string value of limit type status private boolean have tenant string tenant return string util be not blank tenant the usage of capacity table for count module will subtracte one whether open the limination check of capacity management around delete config public object around delete config proceeding join point pjp http servlet request request http servlet response response string datum id string group string tenant throw throwable if property util be manage capacity return pjp proceed logger info capacity management around delete config config info config info persist service find config info datum id group tenant if config info null return pjp proceed return do4 delete pjp response group tenant config info delete operation throw throwable expcetion private object do4 delete proceeding join point pjp http servlet response response string group string tenant config info config info throw throwable boolean have tenant have tenant tenant if config info null config info null have two possible point concurrently deletion first new sub configuration be add and then all sub configuration be delete at this time the task asynchronous write to configinfo have not be execute about point then it will execute to merge to write config info s task orderly and delete config info s task active modification of usage when it happen to be in the above merging to write config info s task modify usage when the task of info be finish and usage the follow delete config info task will not be execute with usage because the request have already return therefore it be necessary to modify the usage job regularly correct usage group tenant have tenant return pjp proceed the same record can be delete concurrently this interface can be delete asynchronously submit merge datum task to merge task processor for process it may lead to more than one decrease in usage therefore it be necessary to modify the usage job regularly counter mode counter mode counter mode decrement insert or update usage group tenant counter mode have tenant return get result pjp response group tenant counter mode have tenant private void correct usage string group string tenant boolean have tenant try if have tenant logger info usage tenant tenant capacity service correct tenant usage tenant else logger info usage group group capacity service correct group usage group catch exception e logger error capacity management correct usage e private object get result proceeding join point pjp http servlet response response string group string tenant counter mode counter mode boolean have tenant throw throwable try execute operation actually object result pjp proceed execute whether to callback base on the sql operation result do result counter mode response group tenant result have tenant return result catch throwable throwable logger warn capacity management inner operation throw exception rollback group tenant group tenant throwable rollback counter mode group tenant have tenant throw throwable usage counting service it will count whether the limination check funtion will be open private void insert or update usage string group string tenant counter mode counter mode boolean have tenant try capacity service insert and update cluster usage counter mode true if have tenant capacity service insert and update tenant usage counter mode tenant true else capacity service insert and update group usage counter mode group true catch exception e logger error capacity management insert or update usage e private limit type get limit type counter mode counter mode string group string tenant string content boolean have tenant try boolean cluster limit capacity service insert and update cluster usage counter mode false if cluster limited logger warn capacity management cluster capacity reach quota return limit type over cluster quota if content null return null int current size get current size content limit type limit type get group or tenant limit type counter mode group tenant current size have tenant if limit type null rollback cluster usage counter mode return limit type catch exception e logger error capacity management be limited e return null get and return the byte size of encode private int get current size string content try return content get byte charset for name constant encode length catch exception e logger error capacity management get current size e return private limit type get group or tenant limit type counter mode counter mode string group string tenant int current size boolean have tenant if group null return null capacity capacity get capacity group tenant have tenant if be size limited group tenant current size have tenant false capacity return limit type over max size if capacity null insert capacity group tenant have tenant boolean update success be update success counter mode group tenant have tenant if update success return null if have tenant return limit type over tenant quota return limit type over group quota private boolean be update success counter mode counter mode string group string tenant boolean have tenant boolean update success if have tenant update success capacity service update tenant usage counter mode tenant if update success logger warn capacity management tenant capacity reach quota tenant tenant else update success capacity service update group usage counter mode group if update success logger warn capacity management group capacity reach quota group group return update success private void insert capacity string group string tenant boolean have tenant if have tenant capacity service init tenant capacity tenant else capacity service init group capacity group private capacity get capacity string group string tenant boolean have tenant capacity capacity if have tenant capacity capacity service get tenant capacity tenant else capacity capacity service get group capacity group return capacity private boolean be size limit string group string tenant int current size boolean have tenant boolean be aggr capacity capacity int default max size get default max size be aggr if capacity null integer max size get max size be aggr capacity if max size if there exist capacity info and max size then it use max size limination default value to compare return be over size group tenant current size default max size have tenant if there exist capacity info then max size return be over size group tenant current size max size have tenant if there no exist capacity info then it use max size limination default value to compare return be over size group tenant current size default max size have tenant private integer get max size boolean be aggr capacity capacity if be aggr return capacity get max aggr size return capacity get max size private int get default max size boolean be aggr if be aggr return property util get default max aggr size return property util get default max size private boolean be over size string group string tenant int current size int max size boolean have tenant if current size max size if have tenant logger warn capacity management tenant content be over max size tenant max size current size tenant max size current size else logger warn capacity management group content be over max size group max size current size group max size current size return true return false private void do result counter mode counter mode http servlet response response string group string tenant object result boolean have tenant try if be success response result logger warn capacity management inner operation be fail rollback counter mode group tenant counter mode group tenant rollback counter mode group tenant have tenant catch exception e logger error capacity management do result e private boolean be success http servlet response response object result int status response get status if status http servlet response sc ok return true logger warn capacity management response status be not status result status result return false private void rollback counter mode counter mode string group string tenant boolean have tenant try rollback cluster usage counter mode if have tenant capacity service update tenant usage counter mode reverse tenant else capacity service update group usage counter mode reverse group catch exception e logger error capacity management rollback e private void rollback cluster usage counter mode counter mode try if capacity service update cluster usage counter mode reverse logger error capacity management cluster usage rollback fail counter mode counter mode catch exception e logger error capacity management rollback e limit tyep author naco public enum limit type over limit over cluster quota over group quota group over tenant quota over max size public final string description public final int status limit type string description int status this description description this status status 
request log aspect aspect component public class request log aspect publish config private static final string client interface publish single config execution com alibaba naco config server controller config controller publish config arg request response datum id group tenant content get config private static final string client interface get config execution com alibaba naco config server controller config controller get config arg request response datum id group tenant remove config private static final string client interface remove all config execution com alibaba naco config server controller config controller delete config arg request response datum id group tenant publish single around client interface publish single config public object interface publish single proceeding join point pjp http servlet request request http servlet response response string datum id string group string tenant string content throw throwable final string md5 content null null m d5 util md5 hex content constant encode metric monitor get publish monitor increment and get return log client request publish pjp request response datum id group tenant md5 remove all around client interface remove all config public object interface remove all proceeding join point pjp http servlet request request http servlet response response string datum id string group string tenant throw throwable return log client request remove pjp request response datum id group tenant null get config around client interface get config public object interface get config proceeding join point pjp http servlet request request http servlet response response string datum id string group string tenant throw throwable final string group key group key2 get key datum id group tenant final string md5 config cache service get content md5 group key metric monitor get config monitor increment and get return log client request get pjp request response datum id group tenant md5 client api request log rt status request ip op type datum id group datum id md5 private object log client request string request type proceed join point pjp http servlet request request http servlet response response string datum id string group string tenant string md5 throw throwable final string request ip request util get remote ip request string app name request get header request util client appname header final long st system current time millis object ret val pjp proceed final long rt system current time millis st rt status request ip op type datum id group datum id md5 app name log util client log info rt ret val request ip request type datum id group tenant md5 app name return ret val 
sentinel resource aspect aspect public class sentinel resource aspect extend abstract sentinel aspect support pointcut annotation com alibaba csp sentinel annotation sentinel resource public void sentinel resource annotation pointcut around sentinel resource annotation pointcut public object invoke resource with sentinel proceeding join point pjp throw throwable method origin method resolve method pjp sentinel resource annotation origin method get annotation sentinel resource class if annotation null should not go through here throw new illegal state exception wrong state for sentinel resource annotation string resource name get resource name annotation value origin method entry type entry type annotation entry type int resource type annotation resource type entry entry null try entry sph u entry resource name resource type entry type pjp get arg object result pjp proceed return result catch block exception ex return handle block exception pjp annotation ex catch throwable ex class extend throwable exception to ignore annotation exception to ignore the ignore list will be check first if exception to ignore length exception belong to ex exception to ignore throw ex if exception belong to ex annotation exception to trace trace exception ex return handle fallback pjp annotation ex no fallback function can handle the exception so throw it out throw ex finally if entry null entry exit pjp get arg 
