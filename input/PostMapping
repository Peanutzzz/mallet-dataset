file controller post mapping file anon public file info upload request param file multipart file file throw exception return file service upload file 
search service post mapping value search index name page result j s o n object str query path variable index name string index name request body search dto search dto 
index controller post mapping index public result create index request body index dto index dto throw i o exception if index dto get number of shard null index dto set number of shard if index dto get number of replica null index dto set number of replica index service create index dto return result succeed 
search controller post mapping index name public page result j s o n object str query path variable string index name request body require false search dto search dto throw i o exception if search dto null search dto new search dto return search service str query index name search dto 
sy menu controller api operation value post mapping grant public result set menu to role request body sy menu sy menu menu service set menu to role sy menu get role id sy menu get menu id return result succeed 
sy menu controller api operation value post mapping save or update public result save or update request body sy menu menu try menu service save or update menu return result succeed catch exception ex log error memu save or update error ex return result fail 
sy role controller post mapping role save or update public result save or update request body sy role sy role throw exception return sy role service save or update role sy role 
sy user controller post map user id role public void set role to user path variable long id request body set long role id app user service set role to user id role id 
sy user controller cache evict value user key sy user username post map user save or update audit log operation sy user username public result save or update request body sy user sy user throw exception return app user service save or update user sy user 
sy user controller post map user export public void export user request param map string object param http servlet response response throw i o exception list sy user excel result app user service find all user param excel util export excel result null sy user excel class user response 
sy user controller post mapping value user import public result import excl request param file multipart file excl throw exception int row num if excl be empty list sy user excel list excel util import excel excl sy user excel class row num list size if row num list sy user user new array list row num list for each u sy user user new sy user bean util copy property u user user set password common constant def user password user set type user type backend name user add user app user service save batch user return result succeed row num 
account controller post mapping value account reduce public boolean reduce string user id integer money account service reduce user id money return true 
account feign client post map account reduce boolean reduce request param user id string user id request param money integer money 
client controller post mapping save or update api operation value public result save or update request body client dto client dto throw exception return client service save client client dto 
access key controller post mapping value app app id accesskey public access key d t o create path variable string app id request body access key d t o dto access key entity bean util transform access key class dto entity access key service create app id entity return bean util transform access key d t o class entity 
app controller post mapping app public app d t o create valid request body app d t o dto app entity bean util transform app class dto app manage entity app service find one entity get app id if manage entity null throw new bad request exception app already exist entity admin service create new app entity return bean util transform app d t o class entity 
app namespace controller post mapping app app id appnamespace public app namespace d t o create request body app namespace d t o app namespace request param default value false boolean silent creation app namespace entity bean util transform app namespace class app namespace app namespace manage entity app namespace service find one entity get app id entity get name if manage entity null if string util be empty entity get format entity set format config file format property get value entity app namespace service create app namespace entity else if silent creation app namespace service create namespace for app namespace in all cluster app namespace get app id app namespace get name app namespace get datum change create by entity manage entity else throw new bad request exception app namespace already exist return bean util transform app namespace d t o class entity 
cluster controller post mapping app app id cluster public cluster d t o create path variable app id string app id request param value auto create private namespace default value true boolean auto create private namespace valid request body cluster d t o dto cluster entity bean util transform cluster class dto cluster manage entity cluster service find one app id entity get name if manage entity null throw new bad request exception cluster already exist if auto create private namespace entity cluster service save with instance of app namespace entity else entity cluster service save without instance of app namespace entity return bean util transform cluster d t o class entity 
item controller pre acquire namespace lock post mapping app app id cluster cluster name namespace namespace name item public item d t o create path variable app id string app id path variable cluster name string cluster name path variable namespace name string namespace name request body item d t o dto item entity bean util transform item class dto config change content builder builder new config change content builder item manage entity item service find one app id cluster name namespace name entity get key if manage entity null throw new bad request exception item already exist entity item service save entity builder create item entity dto bean util transform item d t o class entity commit commit new commit commit set app id app id commit set cluster name cluster name commit set namespace name namespace name commit set change set builder build commit set datum change create by dto get datum change last modify by commit set datum change last modify by dto get datum change last modify by commit service save commit return dto 
item set controller pre acquire namespace lock post mapping app app id cluster cluster name namespace namespace name itemset public response entity void create path variable string app id path variable string cluster name path variable string namespace name request body item change set change set item set service update set app id cluster name namespace name change set return response entity status http status ok build 
namespace branch controller post mapping app app id cluster cluster name namespace namespace name branch public namespace d t o create branch path variable string app id path variable string cluster name path variable string namespace name request param operator string operator check namespace app id cluster name namespace name namespace create branch namespace branch service create branch app id cluster name namespace name operator return bean util transform namespace d t o class create branch 
namespace controller post mapping app app id cluster cluster name namespace public namespace d t o create path variable app id string app id path variable cluster name string cluster name valid request body namespace d t o dto namespace entity bean util transform namespace class dto namespace manage entity namespace service find one app id cluster name entity get namespace name if manage entity null throw new bad request exception namespace already exist entity namespace service save entity return bean util transform namespace d t o class entity 
release controller transactional post mapping app app id cluster cluster name namespace namespace name release public release d t o publish path variable app id string app id path variable cluster name string cluster name path variable namespace name string namespace name request param name string release name request param name comment require false string release comment request param operator string operator request param name be emergency publish default value false boolean be emergency publish namespace namespace namespace service find one app id cluster name namespace name if namespace null throw new not find exception string format could not find namespace for s s s app id cluster name namespace name release release release service publish namespace release name release comment operator be emergency publish send release message namespace parent namespace namespace service find parent namespace namespace string message cluster if parent namespace null message cluster parent namespace get cluster name else message cluster cluster name message sender send message release message key generator generate app id message cluster namespace name topic apollo release topic return bean util transform release d t o class release 
release controller transactional post mapping app app id cluster cluster name namespace namespace name update and publish public release d t o update and publish path variable app id string app id path variable cluster name string cluster name path variable namespace name string namespace name request param release name string release name request param branch name string branch name request param value delete branch default value true boolean delete branch request param name release comment require false string release comment request param name be emergency publish default value false boolean be emergency publish request body item change set change set namespace namespace namespace service find one app id cluster name namespace name if namespace null throw new not find exception string format could not find namespace for s s s app id cluster name namespace name release release release service merge branch change set and release namespace branch name release name release comment be emergency publish change set if delete branch namespace branch service delete branch app id cluster name namespace name branch name namespace branch status merge change set get datum change last modify by message sender send message release message key generator generate app id cluster name namespace name topic apollo release topic return bean util transform release d t o class release 
release controller transactional post mapping app app id cluster cluster name namespace namespace name gray del release public release d t o publish path variable app id string app id path variable cluster name string cluster name path variable namespace name string namespace name request param operator string operator request param release name string release name request param name comment require false string release comment request param name be emergency publish default value false boolean be emergency publish request param name gray del key set string gray del key namespace namespace namespace service find one app id cluster name namespace name if namespace null throw new not find exception string format could not find namespace for s s s app id cluster name namespace name release release release service gray deletion publish namespace release name release comment operator be emergency publish gray del key send release message namespace parent namespace namespace service find parent namespace namespace string message cluster if parent namespace null message cluster parent namespace get cluster name else message cluster cluster name message sender send message release message key generator generate app id message cluster namespace name topic apollo release topic return bean util transform release d t o class release 
cluster controller pre authorize value consumer permission validator have create cluster permission request app id post mapping value app app id cluster public open cluster d t o create cluster path variable string app id path variable string env valid request body open cluster d t o cluster http servlet request request if object equal app id cluster get app id throw new bad request exception string format app id not equal app id in path s app id in payload s app id cluster get app id string cluster name cluster get name string operator cluster get datum change create by request precondition check argument string util be contain empty cluster name operator name and datum change create by should not be null or empty if input validator be valid cluster namespace cluster name throw new bad request exception string format invalid cluster name format s input validator invalid cluster namespace message if user service find by user id operator null throw new bad request exception user operator doesn t exist cluster d t o to create open api bean util transform to cluster d t o cluster cluster d t o create cluster d t o cluster service create cluster env from string env to create return open api bean util transform from cluster d t o create cluster d t o 
item controller pre authorize value consumer permission validator have modify namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name item public open item d t o create item path variable string app id path variable string env path variable string cluster name path variable string namespace name request body open item d t o item http servlet request request request precondition check argument string util be contain empty item get key item get datum change create by key and datum change create by should not be null or empty if user service find by user id item get datum change create by null throw new bad request exception user item get datum change create by doesn t exist if string util be empty item get comment item get comment length throw new bad request exception comment length should not exceed character item d t o to create open api bean util transform to item d t o item protect to create set line num to create set id to create set datum change last modify by to create get datum change create by to create set datum change last modify time null to create set datum change create time null item d t o create item item service create item app id env from string env cluster name namespace name to create return open api bean util transform from item d t o create item 
namespace branch controller pre authorize value consumer permission validator have create namespace permission request app id post mapping value app app id cluster cluster name namespace namespace name branch public open namespace d t o create branch path variable string app id path variable string env path variable string cluster name path variable string namespace name request param operator string operator http servlet request request request precondition check argument string util be contain empty operator operator can not be empty if user service find by user id operator null throw new bad request exception operator operator not exist namespace d t o namespace d t o namespace branch service create branch app id env value of env to upper case cluster name namespace name operator if namespace d t o null return null return bean util transform open namespace d t o class namespace d t o 
namespace controller pre authorize value consumer permission validator have create namespace permission request app id post mapping value openapi v1 app app id appnamespace public open app namespace d t o create namespace path variable string app id request body open app namespace d t o app namespace d t o http servlet request request if object equal app id app namespace d t o get app id throw new bad request exception string format app id not equal app id in path s app id in payload s app id app namespace d t o get app id request precondition check argument not empty app namespace d t o get app id app namespace d t o get name app namespace d t o get format app namespace d t o get datum change create by if input validator be valid app namespace app namespace d t o get name throw new bad request exception string format invalid namespace format s input validator invalid cluster namespace message input validator invalid namespace namespace message if config file format be valid format app namespace d t o get format throw new bad request exception string format invalid namespace format format s app namespace d t o get format string operator app namespace d t o get datum change create by if user service find by user id operator null throw new bad request exception string format illegal user user s operator app namespace app namespace open api bean util transform to app namespace app namespace d t o app namespace create app namespace app namespace service create app namespace in local app namespace app namespace d t o be append namespace prefix publisher publish event new app namespace creation event create app namespace return open api bean util transform to open app namespace d t o create app namespace 
release controller pre authorize value consumer permission validator have release namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name release public open release d t o create release path variable string app id path variable string env path variable string cluster name path variable string namespace name request body namespace release d t o model http servlet request request request precondition check argument string util be contain empty model get release by model get release title param release title and release by can not be empty if user service find by user id model get release by null throw new bad request exception user release by not exist namespace release model release model bean util transform namespace release model class model release model set app id app id release model set env env from string env to string release model set cluster name cluster name release model set namespace name namespace name return open api bean util transform from release d t o release service publish release model 
release controller pre authorize value consumer permission validator have release namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name branch branch name merge public open release d t o merge path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request param value delete branch default value true boolean delete branch request body namespace release d t o model http servlet request request request precondition check argument string util be contain empty model get release by model get release title param release title and release by can not be empty if user service find by user id model get release by null throw new bad request exception user release by not exist release d t o merged release namespace branch service merge app id env value of env to upper case cluster name namespace name branch name model get release title model get release comment model be emergency publish delete branch model get release by return open api bean util transform from release d t o merged release 
release controller pre authorize value consumer permission validator have release namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name branch branch name release public open release d t o create gray release path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body namespace release d t o model http servlet request request request precondition check argument string util be contain empty model get release by model get release title param release title and release by can not be empty if user service find by user id model get release by null throw new bad request exception user release by not exist namespace release model release model bean util transform namespace release model class model release model set app id app id release model set env env from string env to string release model set cluster name branch name release model set namespace name namespace name return open api bean util transform from release d t o release service publish release model 
release controller pre authorize value consumer permission validator have release namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name branch branch name gray del release public open release d t o create gray del release path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body namespace gray del release d t o model http servlet request request request precondition check argument string util be contain empty model get release by model get release title param release title and release by can not be empty request precondition check argument model get gray del key null param gray del key can not be null if user service find by user id model get release by null throw new bad request exception user release by not exist namespace gray del release model release model bean util transform namespace gray del release model class model release model set app id app id release model set env env to upper case release model set cluster name branch name release model set namespace name namespace name return open api bean util transform from release d t o release service publish release model release model get release by 
access key controller pre authorize value permission validator be app admin app id post mapping value app app id envs env accesskey public access key d t o save path variable string app id path variable string env request body access key d t o access key d t o string secret uuid random u u i d to string replace all access key d t o set app id app id access key d t o set secret secret return access key service create access key env from string env access key d t o 
app controller pre authorize value permission validator have create application permission post map public app create valid request body app model app model app app transform to app app model app create app app service create app in local app publisher publish event new app creation event create app set string admin app model get admin if collection util be empty admin role permission service assign role to user role util build app master role name create app get app id admin user info holder get user get user id return create app 
app controller post mapping value env env consume application json public response entity void create path variable string env valid request body app app app service create app in remote env value of env app role initialization service init namespace specific env role app get app id config const namespace application env user info holder get user get user id return response entity ok build 
cluster controller pre authorize value permission validator have create cluster permission app id post mapping value app app id env env cluster public cluster d t o create cluster path variable string app id path variable string env valid request body cluster d t o cluster string operator user info holder get user get user id cluster set datum change last modify by operator cluster set datum change create by operator return cluster service create cluster env value of env cluster 
configs export controller pre authorize value permission validator have modify namespace permission app id namespace name env post mapping app app id env env cluster cluster name namespace namespace name item import public void import config file path variable string app id path variable string env path variable string cluster name path variable string namespace name request param file multipart file file if file be empty throw new bad request exception the file be empty namespace d t o namespace d t o namespace service load namespace base info app id env from string env cluster name namespace name if object be null namespace d t o throw new bad request exception string format namespace be not exist namespace name namespace text model model new namespace text model list string file name split splitter on split to list file get original filename if file name split size throw new bad request exception the file format be invalid string format file name split get file name split size model set format format model set app id app id model set env env model set cluster name cluster name model set namespace name namespace name model set namespace id namespace d t o get id string config text try input stream in file get input stream config text config to file util file to string in catch i o exception e throw new service exception read config file error e model set config text config text config service update config item by text model 
consumer controller transactional pre authorize value permission validator be super admin post mapping value consumer public consumer token create consumer request body consumer consumer request param value expire require false date time format pattern yyyy m mdd h hmmss date expire if string util be contain empty consumer get app id consumer get name consumer get owner name consumer get org id throw new bad request exception param app id name owner name org id can not be empty consumer create consumer consumer service create consumer consumer if object be null expire expire default expire return consumer service generate and save consumer token create consumer expire 
consumer controller pre authorize value permission validator be super admin post mapping value consumer token assign role public list consumer role assign namespace role to consumer path variable string token request param string type request param require false string env request body namespace d t o namespace string app id namespace get app id string namespace name namespace get namespace name if string util be empty app id throw new bad request exception param app id can not be empty if object equal app role type return collection singleton list consumer service assign app role to consumer token app id if string util be empty namespace name throw new bad request exception param namespace name can not be empty if null env string env array env split list string env list list new array list validate env parameter for string env env array if string be null or empty env continue if env unknown equal env transform env env throw new bad request exception string format env s be illegal env env list add env list consumer role consume role new array list for string env env list consume role add all consumer service assign namespace role to consumer token app id namespace name env return consume role return consumer service assign namespace role to consumer token app id namespace name 
favorite controller post mapping favorite public favorite add favorite request body favorite favorite return favorite service add favorite favorite 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env post mapping app app id env env cluster cluster name namespace namespace name item public item d t o create item path variable string app id path variable string env path variable string cluster name path variable string namespace name request body item d t o item check model be valid item item protect item set line num item set id string user id user info holder get user get user id item set datum change create by user id item set datum change last modify by user id item set datum change create time null item set datum change last modify time null return config service create item app id env value of env cluster name namespace name item 
item controller post mapping value namespace namespace name diff consume application json public list item diff diff request body namespace sync model model check model model be invalid list item diff item diff config service compare model get sync to namespace model get sync item for item diff diff item diff namespace identifier namespace diff get namespace if namespace null continue if permission validator should hide config to current user namespace get app id namespace get env name namespace get namespace name diff set diff new item change set diff set ext info you be not this project s administrator nor you have edit or release permission for the namespace in environment namespace get env return item diff 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name syntax check consume application json public response entity void syntax check text path variable string app id path variable string env path variable string cluster name path variable string namespace name request body namespace text model model do syntax check model return response entity ok build 
namespace branch controller pre authorize value permission validator have modify namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name branch public namespace d t o create branch path variable string app id path variable string env path variable string cluster name path variable string namespace name return namespace branch service create branch app id env value of env cluster name namespace name 
namespace branch controller pre authorize value permission validator have release namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name branch branch name merge public release d t o merge path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request param value delete branch default value true boolean delete branch request body namespace release model model if model be emergency publish portal config be emergency publish allow env from string env throw new bad request exception string format env s be not support emergency publish now env release d t o create release namespace branch service merge app id env value of env cluster name namespace name branch name model get release title model get release comment model be emergency publish delete branch config publish event event config publish event instance event with app id app id with cluster cluster name with namespace namespace name with release id create release get id set merge event true set env env value of env publisher publish event event return create release 
namespace controller pre authorize value permission validator have create namespace permission app id post mapping app app id namespace public response entity void create namespace path variable string app id request body list namespace creation model model check model collection util be empty model string namespace name model get get namespace get namespace name string operator user info holder get user get user id role initialization service init namespace role app id namespace name operator role initialization service init namespace env role app id namespace name operator for namespace creation model model model namespace d t o namespace model get namespace request precondition check argument not empty model get env namespace get app id namespace get cluster name namespace get namespace name try namespace service create namespace env value of model get env namespace catch exception e logger error create namespace fail e tracer log error string format create namespace fail env s namespace s model get env namespace get namespace name e namespace service assign namespace role to operator app id namespace name user info holder get user get user id return response entity ok build 
namespace controller pre authorize value permission validator have create app namespace permission app id app namespace post mapping app app id appnamespace public app namespace create app namespace path variable string app id request param default value true boolean append namespace prefix valid request body app namespace app namespace if input validator be valid app namespace app namespace get name throw new bad request exception string format invalid namespace format s input validator invalid cluster namespace message input validator invalid namespace namespace message app namespace create app namespace app namespace service create app namespace in local app namespace append namespace prefix if portal config can app admin create private namespace create app namespace be public namespace service assign namespace role to operator app id app namespace get name user info holder get user get user id publisher publish event new app namespace creation event create app namespace return create app namespace 
namespace controller post mapping app app id env env cluster cluster name miss namespace public response entity void create miss namespace path variable string app id path variable string env path variable string cluster name set string miss namespace find miss namespace name app id env cluster name for string miss namespace miss namespace namespace a p i create miss app namespace env from string env find app namespace app id miss namespace return response entity ok build 
permission controller post mapping app app id init permission public response entity void init app permission path variable string app id request body string namespace name role initialization service init namespace env role app id namespace name user info holder get user get user id return response entity ok build 
permission controller pre authorize value permission validator have assign role permission app id post mapping app app id envs env namespaces namespace name role role type public response entity void assign namespace env role to user path variable string app id path variable string env path variable string namespace name path variable string role type request body string user check user exist user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal validate env parameter if env unknown env transform env env throw new bad request exception env be illegal set string assign user role permission service assign role to user role util build namespace role name app id namespace name role type env set new hash set user user info holder get user get user id if collection util be empty assign user throw new bad request exception user already authorize return response entity ok build 
permission controller pre authorize value permission validator have assign role permission app id post mapping app app id namespace namespace name role role type public response entity void assign namespace role to user path variable string app id path variable string namespace name path variable string role type request body string user check user exist user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal set string assign user role permission service assign role to user role util build namespace role name app id namespace name role type set new hash set user user info holder get user get user id if collection util be empty assign user throw new bad request exception user already authorize return response entity ok build 
permission controller pre authorize value permission validator have manage app master permission app id post mapping app app id role role type public response entity void assign app role to user path variable string app id path variable string role type request body string user check user exist user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal set string assign user role permission service assign role to user role util build app role name app id role type set new hash set user user info holder get user get user id if collection util be empty assign user throw new bad request exception user already authorize return response entity ok build 
permission controller pre authorize value permission validator be super admin post mapping system role create application public response entity void add create application role to user request body list string user id user id for each this check user exist role permission service assign role to user system role manager service create application role name new hash set user id user info holder get user get user id return response entity ok build 
permission controller pre authorize value permission validator be super admin post mapping app app id system master user id public response entity void add manage app master role to user path variable string app id path variable string user id check user exist user id role initialization service init manage app master role app id user info holder get user get user id set string user id new hash set user id add user id role permission service assign role to user role util build app role name app id permission type manage app master user id user info holder get user get user id return response entity ok build 
release controller pre authorize value permission validator have release namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name release public release d t o create release path variable string app id path variable string env path variable string cluster name path variable string namespace name request body namespace release model model model set app id app id model set env env model set cluster name cluster name model set namespace name namespace name if model be emergency publish portal config be emergency publish allow env value of env throw new bad request exception string format env s be not support emergency publish now env release d t o create release release service publish model config publish event event config publish event instance event with app id app id with cluster cluster name with namespace namespace name with release id create release get id set normal publish event true set env env value of env publisher publish event event return create release 
release controller pre authorize value permission validator have release namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name branch branch name release public release d t o create gray release path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body namespace release model model model set app id app id model set env env model set cluster name branch name model set namespace name namespace name if model be emergency publish portal config be emergency publish allow env value of env throw new bad request exception string format env s be not support emergency publish now env release d t o create release release service publish model config publish event event config publish event instance event with app id app id with cluster cluster name with namespace namespace name with release id create release get id set gray publish event true set env env value of env publisher publish event event return create release 
server config controller pre authorize value permission validator be super admin post mapping server config public server config create or update valid request body server config server config string modify by user info holder get user get user id server config store config server config repository find by key server config get key if object be null store config create server config set datum change create by modify by server config set datum change last modify by modify by server config set id 0 l id jpa return server config repository save server config update bean util copy entity property server config store config store config set datum change last modify by modify by return server config repository save store config 
user info controller pre authorize value permission validator be super admin post map user public void create or update user request body user p o user if string util be contain empty user get username user get password throw new bad request exception username and password can not be empty if user service instanceof spring security user service spring security user service user service create or update user else throw new unsupported operation exception create or update user operation be unsupported 
capacity controller post map public rest result boolean update capacity http servlet response response request param require false string group request param require false string tenant request param require false integer quota request param require false integer max size request param require false integer max aggr count request param require false integer max aggr size if string util be blank group string util be blank tenant capacity service init all capacity rest result boolean rest result new rest result boolean set fail result response rest result rest result set message group tenant return rest result if quota null max size null max aggr count null max aggr size null rest result boolean rest result new rest result boolean set fail result response rest result rest result set message quota max size max aggr count max aggr size return rest result string target field name string target field value if tenant null target field name group target field value group else target field name tenant target field value tenant rest result boolean rest result new rest result boolean if string util be blank target field value set fail result response rest result rest result set message string format s target field name return rest result try boolean insert or update result capacity service insert or update capacity group tenant quota max size max aggr count max aggr size if insert or update result set success result response rest result rest result set message string format s s target field name target field value return rest result set fail result response rest result rest result set message string format s s target field name target field value return rest result catch exception e logger error update capacity e set fail result response rest result rest result set message e get message return rest result 
config controller post mapping secure action action type write parser config resource parser class public boolean publish config http servlet request request http servlet response response request param value datum id string data id request param value group string group request param value tenant require false default value string util empty string tenant request param value content string content request param value tag require false string tag request param value app name require false string app name request param value src user require false string src user request param value config tag require false string config tag request param value desc require false string desc request param value use require false string use request param value effect require false string effect request param value type require false string type request param value schema require false string schema throw naco exception final string src ip request util get remote ip request final string request ip app request util get app name request check tenant param util check tenant tenant param util check param datum id group datum id content param util check param tag map string object config advance info new hash map string object map util put if val no null config advance info config tag config tag map util put if val no null config advance info desc desc map util put if val no null config advance info use use map util put if val no null config advance info effect effect map util put if val no null config advance info type type map util put if val no null config advance info schema schema param util check param config advance info if aggr whitelist be aggr datum id datum id logger warn aggr conflict attemp to publish single datum request util get remote ip request datum id group throw new naco exception naco exception no right datum id datum id be aggr final timestamp time time util get current time string beta ip request get header beta ip config info config info new config info datum id group tenant app name content config info set type type if string util be blank beta ip if string util be blank tag persist service insert or update src ip src user config info time config advance info true config change publisher notify config change new config datum change event false datum id group tenant time get time else persist service insert or update tag config info tag src ip src user time true config change publisher notify config change new config datum change event false datum id group tenant tag time get time else beta publish persist service insert or update beta config info beta ip src ip src user time true config change publisher notify config change new config datum change event true datum id group tenant time get time config trace service log persistence event datum id group tenant request ip app time get time inet util get self ip config trace service persistence event pub content return true 
config controller post mapping listener secure action action type read parser config resource parser class public void listener http servlet request request http servlet response response throw servlet exception i o exception request set attribute org apache catalina async support true string probe modify request get parameter listen config if string util be blank probe modify throw new illegal argument exception invalid probe modify probe modify u r l decoder decode probe modify constant encode map string string client md5 map try client md5 map m d5 util get client md5 map probe modify catch throwable e throw new illegal argument exception invalid probe modify do long polling inner do polling config request response client md5 map probe modify length 
config controller post mapping param import true secured action action type write parser config resource parser class public rest result map string object import and publish config http servlet request request request param value src user require false string src user request param value namespace require false string namespace request param value policy default value abort same config policy policy multipart file file throw naco exception map string object fail datum new hash map if object be null file return result builder build result result code enum datum empty fail datum if string util be not blank namespace if persist service tenant info count by tenant id namespace fail datum put succ count return result builder build result result code enum namespace not exist fail datum list config all info config info list null try zip util un zip result unziped zip util unzip file get byte zip util zip item meta datum zip item unziped get meta datum item map string string meta datum map new hash map if meta datum zip item null string meta datum str meta datum zip item get item datum string meta datum arr meta datum str split be n for string meta datum item meta datum arr string meta datum item arr meta datum item split if meta datum item arr length fail datum put succ count return result builder build result result code enum metadata illegal fail datum meta datum map put meta datum item arr meta datum item arr list zip util zip item item list unziped get zip item list if item list null item list be empty config info list new array list item list size for zip util zip item item item list string group adn data id item get item name split if item get item name contain group adn datum id length fail datum put succ count return result builder build result result code enum datum validation fail fail datum string group group adn datum id string datum id group adn datum id string temp datum id data id if temp datum id contain temp datum id temp datum id substr temp datum id last index of temp datum id substr temp datum id last index of final string meta datum id group temp datum id app config all info ci new config all info ci set tenant namespace ci set group group ci set datum id data id ci set content item get item datum if meta datum map get meta datum id null ci set app name meta datum map get meta datum id config info list add ci catch i o exception e fail datum put succ count logger error parse datum fail e return result builder build result result code enum parse datum fail fail datum if config info list null config info list be empty fail datum put succ count return result builder build result result code enum datum empty fail datum final string src ip request util get remote ip request string request ip app request util get app name request final timestamp time time util get current time map string object save result persist service batch insert or update config info list src user src ip null time false policy for config info config info config info list config change publisher notify config change new config datum change event false config info get datum id config info get group config info get tenant time get time config trace service log persistence event config info get datum id config info get group config info get tenant request ip app time get time inet util get self ip config trace service persistence event pub config info get content return result builder build success result save result 
config controller post mapping param clone true secured action action type write parser config resource parser class public rest result map string object clone config http servlet request request request param value src user require false string src user request param value tenant require true string namespace request body require true list same namespace clone config bean config bean list request param value policy default value abort same config policy policy throw naco exception map string object fail datum new hash map if collection util be empty config bean list fail datum put succ count return result builder build result result code enum no select config fail datum config bean list remove all collection singleton null if namespace public key equal ignore case namespace namespace else if persist service tenant info count by tenant id namespace fail datum put succ count return result builder build result result code enum namespace not exist fail datum list long id list new array list config bean list size map long same namespace clone config bean config bean map config bean list stream collect collector to map same namespace clone config bean get cfg id cfg id list add cfg get cfg id return cfg k1 k2 k1 list config all info querye datum list persist service find all config info4 export null null null null id list if querye datum list null querye datum list be empty fail datum put succ count return result builder build result result code enum datum empty fail datum list config all info config info list4 clone new array list querye datum list size for config all info ci querye datum list same namespace clone config bean prarm bean config bean map get ci get id config all info ci4save new config all info ci4save set tenant namespace ci4save set type ci get type ci4save set group prarm bean null string util be not blank prarm bean get group prarm bean get group ci get group ci4save set datum id prarm bean null string util be not blank prarm bean get datum id prarm bean get datum id ci get datum id ci4save set content ci get content if string util be not blank ci get app name ci4save set app name ci get app name config info list4 clone add ci4save if config info list4 clone be empty fail datum put succ count return result builder build result result code enum datum empty fail datum final string src ip request util get remote ip request string request ip app request util get app name request final timestamp time time util get current time map string object save result persist service batch insert or update config info list4 clone src user src ip null time false policy for config info config info config info list4 clone config change publisher notify config change new config datum change event false config info get datum id config info get group config info get tenant time get time config trace service log persistence event config info get datum id config info get group config info get tenant request ip app time get time inet util get self ip config trace service persistence event pub config info get content return result builder build success result clone complete successfully save result 
config op controller post mapping value local cache public string update local cache from store logger info start to dump all datum from store dump service dump all logger info finish to dump all datum from store return http servlet response sc ok 
config op controller post mapping value datum removal secure action action type write resource naco admin public defer result rest result string import derby request param value file multipart file multipart file defer result rest result string response new deferred result if property util be embed storage response set result rest result util fail limit to embed storage mode return response database operate database operate application util get bean database operate class web util on file upload multipart file file notify center publish event new derby import event false database operate datum import file when complete result ex notify center publish event new derby import event true if object non null ex response set result rest result util fail ex get message return response set result result response return response 
namespace controller post mapping secure resource naco auth config console resource name prefix namespace action action type write public boolean create namespace http servlet request request http servlet response response request param custom namespace id string namespace id request param namespace name string namespace name request param value namespace desc require false string namespace desc todo kp if string util be blank namespace id namespace id uuid random u u i d to string else namespace id namespace id trim if namespace id check pattern matcher namespace id match return false if namespace id length namespace id max length return false if persist service tenant info count by tenant id namespace id return false persist service insert tenant info atomic namespace id namespace name namespace desc naco system current time millis return true 
permission controller post mapping secure resource naco auth config console resource name prefix permission action action type write public object add permission request param string role request param string resource request param string action naco role service add permission role resource action return new rest result add permission ok 
role controller post mapping secure resource naco auth config console resource name prefix role action action type write public object add role request param string role request param string username role service add role role username return new rest result add role ok 
user controller secure resource naco auth config console resource name prefix user action action type write post map public object create user request param string username request param string password user user user detail service get user from database username if user null throw new illegal argument exception user username already exist user detail service create user username password encoder util encode password return new rest result create user ok 
user controller post mapping login public object login request param string username request param string password http servlet response response http servlet request request throw access exception if auth system type naco name equal ignore case auth config get naco auth system type naco user user naco user auth manager login request response add header naco auth config authorization header naco auth config token prefix user get token object node result jackson util create empty json node j s o n object result new j s o n object result put constant access token user get token result put constant token ttl auth config get token validity in seconds result put constant global admin user be global admin return result authentication username password authentication token username password authentication token authentication token new username password authentication token username password rest result string rr new rest result string try authentication manager provider manager authenticate authentication authentication authentication authentication manager authenticate authentication token authentication security context security context holder get context set authentication authentication token string token jwt token util create token authentication token http response add header naco auth config authorization header bearer token rr set code rr set data bearer token return rr catch bad credentials exception authentication rr set code rr set message login fail return rr 
core op controller post mapping value raft public rest result string raft op request body map string string command return protocol manager get cp protocol execute command 
naco cluster controller post mapping value report public rest result string report request body member node if node check return rest result util fail with msg node information be illegal logger util print if debug enable logger cluster node state report receive info node node set state node state up node set fail access cnt boolean result member manager update node return rest result util success boolean to string result 
naco cluster controller post mapping value switch lookup public rest result string switch lookup request param name type string type try member manager switch lookup type return rest result util success catch throwable ex return rest result util fail ex get message 
naco cluster controller post mapping server leave public rest result string leave request body collection string param throw exception collection member member list member util multi parse param member manager member leave member list final n async http client async http client http client manager get async http client final generic type rest result string generic type new generic type rest result string final collection member notify list member manager all member without self notify list remove all member list count down latch latch new count down latch notify list size for member member notify list final string url http util build url false member get address application util get context path common naco core context cluster server leave async http client post url header empty query empty param generic type get type new callback string override public void on receive rest result string result try if result ok logger util print if debug enable logger cluster the node success to process the request member member util on success member else logger cluster warn the node fail to process the request response be member result member util on fail member finally latch count down override public void on error throwable throwable try logger cluster error fail to communicate with the node member member util on fail member finally latch count down try latch await time unit millisecond return rest result util success ok catch throwable ex return rest result util fail ex get message 
instance controller can distro post mapping secure parser name resource parser class action action type write public string register http servlet request request throw exception final string service name web util require request common param service name final string namespace id web util optional request common param namespace id constant default namespace id final instance instance parse instance request service manager register instance namespace id service name instance return ok 
raft controller post mapping vote public json node vote http servlet request request http servlet response response throw exception raft peer peer raft core receive vote jackson util to obj web util require request vote raft peer class return jackson util transfer to json node peer 
raft controller post mapping beat public json node beat http servlet request request http servlet response response throw exception string entity new string io util try decompress request get input stream standard charset utf string value u r l decoder decode entity utf value u r l decoder decode value utf json node json jackson util to obj value raft peer peer raft core receive beat jackson util to obj json get beat as text return jackson util transfer to json node peer 
raft controller post mapping datum public string publish http servlet request request http servlet response response throw exception response set header content type application json charset get accept encode request response set header cache control no cache response set header content encode gzip string entity io util to string request get input stream utf string value u r l decoder decode entity utf json node json jackson util to obj value string key json get key as text if key builder match instance list key key raft consistency service put key jackson util to obj json get value to string instance class return ok if key builder match switch key key raft consistency service put key jackson util to obj json get value to string switch domain class return ok if key builder match service meta key key raft consistency service put key jackson util to obj json get value to string service class return ok throw new naco exception naco exception invalid param unknown type publish key key 
raft controller post mapping datum commit public string on publish http servlet request request http servlet response response throw exception response set header content type application json charset get accept encode request response set header cache control no cache response set header content encode gzip string entity io util to string request get input stream utf string value u r l decoder decode entity utf json node json object jackson util to obj value string key key raft peer source jackson util to obj json object get source to string raft peer class json node datum json json object get datum datum datum null if key builder match instance list key datum json get key as text datum jackson util to obj json object get datum to string new type reference datum instance else if key builder match switch key datum json get key as text datum jackson util to obj json object get datum to string new type reference datum switch domain else if key builder match service meta key datum json get key as text datum jackson util to obj json object get datum to string new type reference datum service raft consistency service on put datum source return ok 
service controller post mapping secure parser name resource parser class action action type write public string create request param default value constant default namespace id string namespace id request param string service name request param require false float protect threshold request param default value string util empty string metadata request param default value string util empty string selector throw exception if service manager get service namespace id service name null throw new illegal argument exception specify service already exist service name service name map string string metadata map new hash map if string util be not blank metadata metadata map util and common parse metadata metadata service service new service service name service set protect threshold protect threshold service set enable true service set metadata metadata map service set selector parse selector selector service set namespace id namespace id now valid the service if fail exception will be throw service set last modify millis system current time millis service recalculate checksum service validate service manager add or replace service service return ok 
service controller post mapping status public string service status http servlet request request throw exception string entity io util to string request get input stream utf string value u r l decoder decode entity utf json node json jackson util to obj value format service1 checksum service2 checksum string status json get status as text string server ip json get client i p as text if member manager have member server ip throw new naco exception naco exception invalid param ip server ip be not in serverlist try service manager service checksum checksum jackson util to obj status service manager service checksum class if checksum null logger srv log warn domain status receive malformed datum null return fail for map entry string string entry checksum service name2 checksum entry set if entry null string util be empty entry get key string util be empty entry get value continue string service name entry get key string checksum entry get value service service service manager get service checksum namespace id service name if service null continue service recalculate checksum if checksum equal service get checksum if logger srv log be debug enable logger srv log debug checksum of be not consistent remote checksum local service name server ip checksum service get checksum service manager add updated service to queue checksum namespace id service name server ip checksum catch exception e logger srv log warn domain status receive malformed datum status e return ok 
test method controller post mapping hello public string api hello post return hello post 
auth controller post mapping login public result auth service auth user login http servlet request request string username string password if string util be not blank dashboard config get auth username auth username dashboard config get auth username if string util be not blank dashboard config get auth password auth password dashboard config get auth password if auth username or auth password be blank set in application property or vm argument auth will pass as the front side validate the input which can t be blank so user can input any username or password both be not blank to login in that case if string util be not blank auth username auth username equal username string util be not blank auth password auth password equal password logger error login fail invalid username or password username username return result of fail invalid username or password auth service auth user auth user new simple web auth service impl simple web auth user impl username request get session set attribute simple web auth service impl web session key auth user return result of success auth user 
auth controller post mapping value logout public result logout http servlet request request request get session invalidate return result of success null 
auth controller post mapping value check public result check http servlet request request auth service auth user auth user auth service get auth user request if auth user null return result of fail not log in return result of success auth user 
authority rule controller post mapping rule auth action privilege type write rule public result authority rule entity api add authority rule request body authority rule entity entity result authority rule entity check result check entity internal entity if check result null return check result entity set id null date date new date entity set gmt create date entity set gmt modify date try entity repository save entity catch throwable throwable logger error fail to add authority rule throwable return result of throwable throwable if publish rule entity get app entity get ip entity get port logger info publish authority rule fail after rule add return result of success entity 
cluster assign controller post map all server app public result cluster app assign result v o api assign all cluster server of app path variable string app request body cluster app full assign request assign request if string util be empty app return result of fail app can not be null or empty if assign request null assign request get cluster map null assign request get remaining list null return result of fail bad request body try return result of success cluster assign service apply assign to app app assign request get cluster map assign request get remaining list catch throwable throwable logger error error when assign full cluster server for app app throwable return result of fail throwable get message 
cluster assign controller post mapping single server app public result cluster app assign result v o api assign single cluster server of app path variable string app request body cluster app single server assign request assign request if string util be empty app return result of fail app can not be null or empty if assign request null assign request get cluster map null return result of fail bad request body try return result of success cluster assign service apply assign to app app collection singleton list assign request get cluster map assign request get remaining list catch throwable throwable logger error error when assign single cluster server for app app throwable return result of fail throwable get message 
cluster assign controller post mapping unbind server app public result cluster app assign result v o api unbind cluster server of app path variable string app request body set string machine id if string util be empty app return result of fail app can not be null or empty if machine id null machine id be empty return result of fail bad request body try return result of success cluster assign service unbind cluster server app machine id catch throwable throwable logger error error when unbind cluster server for app machine id app throwable return result of fail throwable get message 
cluster config controller post mapping config modify single public result boolean api modify cluster config request body string payload if string util be blank payload return result of fail empty request body try j s o n object body json parse object payload if body contain key key mode int mode body get integer key mode switch mode case cluster state manager cluster client cluster client modify request datum json parse object payload cluster client modify request class result boolean re check valid request datum if res null return re cluster config service modify cluster client config datum get return result of success true case cluster state manager cluster server cluster server modify request d json parse object payload cluster server modify request class result boolean r check valid request d if r null return r todo bad design here should refactor cluster config service modify cluster server config d get return result of success true default return result of fail invalid mode return result of fail invalid parameter catch execution exception ex logger error error when modify cluster config ex get cause return error response ex catch throwable ex logger error error when modify cluster config ex return result of fail ex get message 
flow controller v1 post mapping rule auth action privilege type write rule public result flow rule entity api add flow rule request body flow rule entity entity result flow rule entity check result check entity internal entity if check result null return check result entity set id null date date new date entity set gmt create date entity set gmt modify date entity set limit app entity get limit app trim entity set resource entity get resource trim try entity repository save entity publish rule entity get app entity get ip entity get port get time unit millisecond return result of success entity catch throwable t throwable e t instanceof execution exception t get cause t logger error fail to add new flow rule app ip entity get app entity get ip e return result of fail e get message 
gateway api controller post map new json auth action auth service privilege type write rule public result api definition entity add api http servlet request request request body add api req vo req vo string app req vo get app if string util be blank app return result of fail app can t be null or empty api definition entity entity new api definition entity entity set app app trim string ip req vo get ip if string util be blank ip return result of fail ip can t be null or empty entity set ip ip trim integer port req vo get port if port null return result of fail port can t be null entity set port port api string api name req vo get api name if string util be blank api name return result of fail api name can t be null or empty entity set api name api name trim list api predicate item vo predicate item req vo get predicate item if collection util be empty predicate item return result of fail predicate item can t empty list api predicate item entity predicate item entity new array list for api predicate item vo predicate item predicate item api predicate item entity predicate item entity new api predicate item entity integer match strategy predicate item get match strategy if array as list url match strategy exact url match strategy prefix url match strategy regex contain match strategy return result of fail invalid match strategy match strategy predicate item entity set match strategy match strategy string pattern predicate item get pattern if string util be blank pattern return result of fail pattern can t be null or empty predicate item entity set pattern pattern predicate item entity add predicate item entity entity set predicate item new link hash set predicate item entity api list api definition entity all apis repository find all by machine machine info of app trim ip trim port if all api stream map o o get api name any match o o equal api name trim return result of fail api name exist api name date date new date entity set gmt create date entity set gmt modify date try entity repository save entity catch throwable throwable logger error add gateway api error throwable return result of throwable throwable if publish apis app ip port logger warn publish gateway apis fail after add return result of success entity 
gateway api controller post mapping save json auth action auth service privilege type write rule public result api definition entity update api request body update api req vo req vo string app req vo get app if string util be blank app return result of fail app can t be null or empty long id req vo get id if id null return result of fail id can t be null api definition entity entity repository find by id id if entity null return result of fail api do not exist id id list api predicate item vo predicate item req vo get predicate item if collection util be empty predicate item return result of fail predicate item can t empty list api predicate item entity predicate item entity new array list for api predicate item vo predicate item predicate item api predicate item entity predicate item entity new api predicate item entity int match strategy predicate item get match strategy if array as list url match strategy exact url match strategy prefix url match strategy regex contain match strategy return result of fail invalid match strategy match strategy predicate item entity set match strategy match strategy string pattern predicate item get pattern if string util be blank pattern return result of fail pattern can t be null or empty predicate item entity set pattern pattern predicate item entity add predicate item entity entity set predicate item new link hash set predicate item entity date date new date entity set gmt modify date try entity repository save entity catch throwable throwable logger error update gateway api error throwable return result of throwable throwable if publish apis app entity get ip entity get port logger warn publish gateway apis fail after update return result of success entity 
gateway api controller post mapping delete json auth action auth service privilege type delete rule public result long delete api long id if id null return result of fail id can t be null api definition entity old entity repository find by id id if old entity null return result of success null try repository delete id catch throwable throwable logger error delete gateway api error throwable return result of throwable throwable if publish apis old entity get app old entity get ip old entity get port logger warn publish gateway apis fail after delete return result of success id 
gateway flow rule controller post map new json auth action auth service privilege type write rule public result gateway flow rule entity add flow rule request body add flow rule req vo req vo string app req vo get app if string util be blank app return result of fail app can t be null or empty gateway flow rule entity entity new gateway flow rule entity entity set app app trim string ip req vo get ip if string util be blank ip return result of fail ip can t be null or empty entity set ip ip trim integer port req vo get port if port null return result of fail port can t be null entity set port port api route id api integer resource mode req vo get resource mode if resource mode null return result of fail resource mode can t be null if array as list resource mode route id resource mode custom api name contain resource mode return result of fail invalid resource mode resource mode entity set resource mode resource mode api string resource req vo get resource if string util be blank resource return result of fail resource can t be null or empty entity set resource resource trim gateway param flow item vo param item req vo get param item if param item null gateway param flow item entity item entity new gateway param flow item entity entity set param item item entity client i p remote host header url cookie integer parse strategy param item get parse strategy if array as list param parse strategy client ip param parse strategy host param parse strategy header param parse strategy url param param parse strategy cookie contain parse strategy return result of fail invalid parse strategy parse strategy item entity set parse strategy param item get parse strategy header url cookie if array as list param parse strategy header param parse strategy url param param parse strategy cookie contain parse strategy string field name param item get field name if string util be blank field name return result of fail field name can t be null or empty item entity set field name param item get field name string pattern param item get pattern if string util be not empty pattern item entity set pattern pattern integer match strategy param item get match strategy if array as list param match strategy exact param match strategy contain param match strategy regex contain match strategy return result of fail invalid match strategy match strategy item entity set match strategy match strategy qp integer grade req vo get grade if grade null return result of fail grade can t be null if array as list flow grade thread flow grade qp contain grade return result of fail invalid grade grade entity set grade grade qp double count req vo get count if count null return result of fail count can t be null if count return result of fail count should be at lease zero entity set count count long interval req vo get interval if interval null return result of fail interval can t be null if interval return result of fail interval should be greater than zero entity set interval interval integer interval unit req vo get interval unit if interval unit null return result of fail interval unit can t be null if array as list interval unit second interval unit minute interval unit hour interval unit day contain interval unit return result of fail invalid interval unit interval unit entity set interval unit interval unit integer control behavior req vo get control behavior if control behavior null return result of fail control behavior can t be null if array as list control behavior default control behavior rate limiter contain control behavior return result of fail invalid control behavior control behavior entity set control behavior control behavior if control behavior default control behavior burst size integer burst req vo get burst if burst null return result of fail burst can t be null if burst return result of fail invalid burst burst entity set burst burst else if control behavior rate limiter control behavior integer max queue timeout ms req vo get max queueing timeout ms if max queue timeout ms null return result of fail max queue timeout ms can t be null if max queue timeout ms return result of fail invalid max queue timeout ms max queue timeout ms entity set max queue timeout ms max queue timeout ms date date new date entity set gmt create date entity set gmt modify date try entity repository save entity catch throwable throwable logger error add gateway flow rule error throwable return result of throwable throwable if publish rule app ip port logger warn publish gateway flow rule fail after add return result of success entity 
gateway flow rule controller post mapping save json auth action auth service privilege type write rule public result gateway flow rule entity update flow rule request body update flow rule req vo req vo string app req vo get app if string util be blank app return result of fail app can t be null or empty long id req vo get id if id null return result of fail id can t be null gateway flow rule entity entity repository find by id id if entity null return result of fail gateway flow rule do not exist id id gateway param flow item vo param item req vo get param item if param item null gateway param flow item entity item entity new gateway param flow item entity entity set param item item entity client i p remote host header url cookie integer parse strategy param item get parse strategy if array as list param parse strategy client ip param parse strategy host param parse strategy header param parse strategy url param param parse strategy cookie contain parse strategy return result of fail invalid parse strategy parse strategy item entity set parse strategy param item get parse strategy header url cookie if array as list param parse strategy header param parse strategy url param param parse strategy cookie contain parse strategy string field name param item get field name if string util be blank field name return result of fail field name can t be null or empty item entity set field name param item get field name string pattern param item get pattern if string util be not empty pattern item entity set pattern pattern integer match strategy param item get match strategy if array as list param match strategy exact param match strategy contain param match strategy regex contain match strategy return result of fail invalid match strategy match strategy item entity set match strategy match strategy else entity set param item null qp integer grade req vo get grade if grade null return result of fail grade can t be null if array as list flow grade thread flow grade qp contain grade return result of fail invalid grade grade entity set grade grade qp double count req vo get count if count null return result of fail count can t be null if count return result of fail count should be at lease zero entity set count count long interval req vo get interval if interval null return result of fail interval can t be null if interval return result of fail interval should be greater than zero entity set interval interval integer interval unit req vo get interval unit if interval unit null return result of fail interval unit can t be null if array as list interval unit second interval unit minute interval unit hour interval unit day contain interval unit return result of fail invalid interval unit interval unit entity set interval unit interval unit integer control behavior req vo get control behavior if control behavior null return result of fail control behavior can t be null if array as list control behavior default control behavior rate limiter contain control behavior return result of fail invalid control behavior control behavior entity set control behavior control behavior if control behavior default control behavior burst size integer burst req vo get burst if burst null return result of fail burst can t be null if burst return result of fail invalid burst burst entity set burst burst else if control behavior rate limiter control behavior integer max queue timeout ms req vo get max queueing timeout ms if max queue timeout ms null return result of fail max queue timeout ms can t be null if max queue timeout ms return result of fail invalid max queue timeout ms max queue timeout ms entity set max queue timeout ms max queue timeout ms date date new date entity set gmt modify date try entity repository save entity catch throwable throwable logger error update gateway flow rule error throwable return result of throwable throwable if publish rule app entity get ip entity get port logger warn publish gateway flow rule fail after update return result of success entity 
gateway flow rule controller post mapping delete json auth action auth service privilege type delete rule public result long delete flow rule long id if id null return result of fail id can t be null gateway flow rule entity old entity repository find by id id if old entity null return result of success null try repository delete id catch throwable throwable logger error delete gateway flow rule error throwable return result of throwable throwable if publish rule old entity get app old entity get ip old entity get port logger warn publish gateway flow rule fail after delete return result of success id 
param flow rule controller post mapping rule auth action auth service privilege type write rule public result param flow rule entity api add param flow rule request body param flow rule entity entity result param flow rule entity check result check entity internal entity if check result null return check result if check if support entity get app entity get ip entity get port return unsupported version entity set id null entity get rule set resource entity get resource trim date date new date entity set gmt create date entity set gmt modify date try entity repository save entity publish rule entity get app entity get ip entity get port get return result of success entity catch execution exception ex logger error error when add new parameter flow rule ex get cause if be not support ex get cause return unsupported version else return result of throwable ex get cause catch throwable throwable logger error error when add new parameter flow rule throwable return result of fail throwable get message 
flow controller v2 post mapping rule auth action value auth service privilege type write rule public result flow rule entity api add flow rule request body flow rule entity entity result flow rule entity check result check entity internal entity if check result null return check result entity set id null date date new date entity set gmt create date entity set gmt modify date entity set limit app entity get limit app trim entity set resource entity get resource trim try entity repository save entity publish rule entity get app catch throwable throwable logger error fail to add flow rule throwable return result of throwable throwable return result of success entity 
baz controller post mapping id public mono boolean api set value path variable id long id request body string value return baz service set value id value transform new sentinel reactor transformer baz service set value 
