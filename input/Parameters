hadoop i o format i t case parameter public static collection object get configuration collection object program id new array list num program for int i i num program i program id add new object i return program id 
default filter test parameter public static collection object datum return array as list new object file txt false file txt true dir file txt true dir file txt false file txt true dir file txt true dir file txt false check filtering hadoop s unfinished file file path filter hadoop copying true dir file path filter hadoop copying true file path filter hadoop copying file txt false 
sequential format test base parameter public static list object get parameter array list object param new array list object for int parallelism parallelism parallelism number of tuple block size parallelism param add new object binary output format native block size parallelism param add new object parallelism param add new object parallelism param add new object parallelism param add new object parallelism return param 
channel state write request dispatcher test parameter public static object datum return new object valid call new object empty as list start complete in complete out new object empty as list start write in complete in new object empty as list start write out complete out new object empty as list start complete in write out new object empty as list start complete out write in invalid without start new object of illegal argument exception class singleton list write in new object of illegal argument exception class singleton list write out new object of illegal argument exception class singleton list complete in new object of illegal argument exception class singleton list complete out invalid double complete new object of illegal argument exception class as list start complete in complete in new object of illegal argument exception class as list start complete out complete out invalid write after complete new object of illegal state exception class as list start complete in write in new object of illegal state exception class as list start complete out write out invalid double start new object of illegal state exception class as list start start 
channel state no rescaling partitioner test parameter name old parallelism new parallelism offset size public static collection object parameter list object param new array list int par level int offset size final list function operator subtask state extractor array as list operator subtask state get input channel state operator subtask state get result subpartition state generate all possible combination of the above parameter for int old parallelism par level for int new parallelism par level for int offset size offset size for function operator subtask state state extractor extractor param add new object old parallelism new parallelism offset size state extractor return param 
buffer compression test parameter name be direct codec compress to original decompress to original public static collection object parameter return array as list new object true l z4 true false true l z4 false true true l z4 false false false l z4 true false false l z4 false true false l z4 false false 
bound block subpartition write read test parameter name type compression enable public static collection object parameter return array stream bound block subpartition type value map type new object type true type false flat map array stream collect collector to list 
interval join operator test parameter name lh faster than rhs public static collection object datum return array as list new object true false 
local executor i t case parameter name planner public static list string planner return array as list execution entry execution planner value old execution entry execution planner value blink 
datum type test parameter name index public static list test spec test datum return array as list test spec for datum type char expect logical type new char type expect conversion class string class test spec for datum type varchar expect logical type new var char type expect conversion class string class test spec for datum type string expect logical type new var char type var char type max length expect conversion class string class test spec for datum type boolean expect logical type new boolean type expect conversion class boolean class test spec for datum type binary expect logical type new binary type expect conversion class byte class test spec for datum type varbinary expect logical type new var binary type expect conversion class byte class test spec for datum type byte expect logical type new var binary type var binary type max length expect conversion class byte class test spec for datum type decimal expect logical type new decimal type expect conversion class big decimal class test spec for datum type tinyint expect logical type new tiny int type expect conversion class byte class test spec for datum type smallint expect logical type new small int type expect conversion class short class test spec for datum type int expect logical type new int type expect conversion class integer class test spec for datum type bigint expect logical type new big int type expect conversion class long class test spec for datum type float expect logical type new float type expect conversion class float class test spec for datum type double expect logical type new double type expect conversion class double class test spec for datum type date expect logical type new date type expect conversion class java time local date class test spec for datum type time expect logical type new time type expect conversion class java time local time class test spec for datum type time expect logical type new time type expect conversion class java time local time class test spec for datum type timestamp expect logical type new timestamp type expect conversion class java time local date time class test spec for datum type timestamp expect logical type new timestamp type expect conversion class java time local date time class test spec for datum type timestamp with time zone expect logical type new zone timestamp type expect conversion class java time offset date time class test spec for datum type timestamp with time zone expect logical type new zone timestamp type expect conversion class java time offset date time class test spec for datum type timestamp with local time zone expect logical type new local zone timestamp type expect conversion class java time instant class test spec for datum type timestamp with local time zone expect logical type new local zone timestamp type expect conversion class java time instant class test spec for datum type interval minute second expect logical type new day time interval type minute to second default day precision expect conversion class java time duration class test spec for datum type interval month expect logical type new year month interval type year month resolution month expect conversion class java time period class test spec for datum type array array int expect logical type new array type new array type new int type expect conversion class integer class test spec for datum type array array int not null bridge to int class expect logical type new array type new array type new int type false expect conversion class int class expect child datum type array int not null bridge to int class test spec for datum type multiset multiset int expect logical type new multiset type new multiset type new int type expect conversion class map class test spec for datum type map int smallint expect logical type new map type new int type new small int type expect conversion class map class test spec for datum type row field field1 char field field2 boolean expect logical type new row type array as list new row type row field field1 new char type new row type row field field2 new boolean type expect conversion class row class test spec for datum type null expect logical type new null type expect conversion class object class test spec for datum type raw type generic datum type test class expect logical type new type information raw type type generic datum type test class expect conversion class datum type test class test spec for datum type raw void class void serializer instance expect logical type new raw type void class void serializer instance expect conversion class void class test spec for unresolved datum type datum type of int expect unresolved string int lookup return int expect logical type new int type test spec for unresolved datum type datum type of integer class expect unresolved string java lang integer expect resolve datum type int test spec for unresolved datum type datum type of java sql timestamp class not null expect unresolved string java sql timestamp expect resolve datum type timestamp not null bridge to java sql timestamp class test spec for unresolved datum type datum type of java sql timestamp class bridge to java time local date time class expect unresolved string java sql timestamp expect resolve datum type timestamp bridge to java time local date time class test spec for unresolved datum type map datum type of int datum type of string expect unresolved string map int string expect resolve datum type map datum type int datum type string test spec for unresolved datum type map datum type of int string not null expect unresolved string map int string not null expect resolve datum type map int string not null test spec for unresolved datum type multiset datum type of string expect unresolved string multiset string expect resolve datum type multiset datum type string test spec for unresolved datum type array datum type of string expect unresolved string array string expect resolve datum type array datum type string test spec for unresolved datum type array datum type of int not null bridge to int class expect unresolved string array int expect resolve datum type array int not null bridge to int class test spec for unresolved datum type row field field1 datum type of char field field2 boolean expect unresolved string row field1 char field2 boolean expect resolve datum type row field field1 char field field2 boolean test spec for unresolved datum type array row field f0 datum type of array int field f1 array int expect unresolved string array row f0 array int f1 array int expect resolve datum type array row field f0 array int field f1 array int test spec for unresolved datum type raw object class expect unresolved string raw java lang object lookup return datum type raw new generic type info object class expect resolve datum type datum type raw new generic type info object class test spec for unresolved datum type datum type of simple pojo class expect resolve datum type datum type structure simple pojo class datum type field name datum type string datum type field count datum type int not null bridge to int class 
datum type extractor test suppress warning unchecked rawtypes parameter name index public static list test spec test datum return array as list simple extraction of int test spec for type integer class expect datum type datum type int simple extraction of byte test spec for type byte class expect datum type datum type byte extraction from hint conversion class test spec for type new datum type hint mock override public class bridge to return long class object class expect datum type datum type bigint miss precision scale test spec for type big decimal class expect error message value of java math big decimal need fix precision and scale unsupported object type exception test spec for type object class expect error message can not extract a data type from a pure java lang object class usually this indicate that class information be miss or get lose please specify a more concrete class or treat it as a raw type unsupported row type exception test spec for type row class expect error message can not extract a data type from a pure org apache flink type row class please use annotation to define field name and field type explicit precision scale through datum type test spec for type new datum type hint mock override public string value return decimal big decimal class expect datum type datum type decimal default precision scale test spec for type new datum type hint mock override public int default decimal precision return override public int default decimal scale return big decimal class expect datum type datum type decimal different bridging class via default conversion test spec for type java sql timestamp class expect datum type datum type timestamp bridge to java sql timestamp class different bridging class via type itself test spec for type new datum type hint mock override public string value return timestamp java sql timestamp class expect datum type datum type timestamp bridge to java sql timestamp class default seconds for timestamp test spec for type new datum type hint mock override public int default second precision return java time local date time class expect datum type datum type timestamp default second precision for interval test spec for type new datum type hint mock override public int default second precision return java time duration class expect datum type datum type interval datum type second default year precision for interval test spec for type new datum type hint mock override public int default year precision return java time period class expect datum type datum type interval datum type year datum type month default year precision for interval test spec for type new datum type hint mock override public int default year precision return java time period class expect datum type datum type interval datum type month test spec for type raw with default serializer new datum type hint mock override public hint flag allow raw globally return hint flag true object class lookup expect object class expect datum type datum type array datum type array datum type raw new generic type info object class test spec for type raw with custom serializer new datum type hint mock override public string value return raw override public class extend type serializer raw serializer return int serializer class integer class expect datum type datum type raw object class type serializer new int serializer bridge to integer class test spec for type raw with different conversion class new datum type hint mock override public string value return raw override public class bridge to return integer class object class lookup expect integer class expect datum type datum type raw new generic type info integer class test spec for type raw with more specific conversion class new datum type hint mock override public string value return raw override public class bridge to return raw type generic class raw type specific class lookup expect raw type generic class expect datum type datum type raw new generic type info raw type generic class bridge to raw type specific class map type with type variable magic test spec for generic table function class table function with map level2 class expect datum type datum type map datum type bigint datum type boolean array type with type variable magic test spec for generic table function class table function with generic array1 class expect datum type datum type array datum type int invalid type variable test spec for generic table function class table function with hash map class expect error message could not extract a data type from java util hash map java lang integer java lang string interpret it as a structured type be also not successful test spec for generic array type with list conversion class table function class table function with list class expect datum type datum type array datum type array datum type string bridge to list class bridge to list class simple structured type without raw type test spec for type simple pojo class expect datum type get simple pojo datum type simple pojo class complex nest structured type annotation on top of type test spec for type complex pojo class lookup expect object class expect datum type get complex pojo datum type complex pojo class simple pojo class structure type with miss generic test spec for type simple pojo with generic class expect error message unresolved type variable be a data type can not be extract from a type variable the original content might have be erase due to java type erasure structure type with annotation on top of field test spec for generic table function class table function with generic pojo class lookup expect object class expect datum type get complex pojo datum type complex pojo with generic class simple pojo with generic class extraction with generic interface test spec for generic base interface class concrete class class expect datum type datum type string structure type with hierarchy test spec for type simple pojo with generic hierarchy class expect datum type get simple pojo datum type simple pojo with generic hierarchy class structure type with different getter and setter flavor test spec for type complex pojo with getter and setter class lookup expect object class expect datum type get complex pojo datum type complex pojo with getter and setter class simple pojo class structure type with miss setter test spec for type simple pojo with miss setter class expect error message field string field of class simple pojo with miss setter class get name be mutable but be neither publicly accessible nor do it have a correspond setter method structure type with miss getter test spec for type simple pojo with miss getter class expect error message field string field of class simple pojo with miss getter class get name be neither publicly accessible nor do it have a correspond getter method structure type with assign constructor test spec for type simple pojo with assign constructor class expect datum type get simple pojo datum type simple pojo with assign constructor class assign constructor define field order test spec for type pojo with custom field order class expect datum type get pojo with custom order datum type pojo with custom field order class flink tuple test spec for generic table function class table function with tuple class expect datum type get outer tuple datum type many annotation that partially override each other test spec for type simple pojo with many annotation class expect datum type get simple pojo datum type simple pojo with many annotation class many annotation that partially override each other test spec for type complex pojo with many annotation class lookup expect object class expect datum type get complex pojo datum type complex pojo with many annotation class simple pojo class method with vararg test spec for method parameter integer var arg class expect datum type datum type array datum type int not null bridge to int class method with generic parameter test spec for method parameter integer var arg class expect datum type datum type int method with generic return type test spec for method output integer var arg class expect datum type datum type int test spec for type structure type with invalid constructor simple pojo with invalid constructor class expect error message class simple pojo with invalid constructor class get name have neither a constructor that assign all field nor a default constructor test spec for type structure type with self reference pojo with invalid self reference class expect error message cyclic reference detect for class pojo with invalid self reference class get name attribute of structured type must not transitively reference the structured type itself test spec for type structure type with self reference that be avoid use raw pojo with raw self reference class lookup expect pojo with raw self reference class expect datum type get pojo with raw self reference datum type 
type inference extractor test parameter name index public static list test spec test datum return array as list function hint define everything test spec for scalar function full function hint class expect name argument i s expect type argument datum type int datum type string expect output mapping input type strategy sequence new string i be new argument type strategy input type strategy explicit datum type int input type strategy explicit datum type string type strategy explicit datum type boolean function hint define everything with overload test spec for scalar function full function hint class expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type bigint global output hint with local input overload test spec for scalar function global output function hint class expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence input type strategy explicit datum type string type strategy explicit datum type int unsupported output overload test spec for scalar function invalid single output function hint class expect error message function hint that lead to ambiguous result be not allow global and local overloading test spec for scalar function split full function hint class expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type bigint global and local overload with unsupported output overload test spec for scalar function invalid full output function hint class expect error message function hint with same input definition but different result type be not allow ignore argument name during overload test spec for scalar function invalid full output function with arg name hint class expect error message function hint with same input definition but different result type be not allow invalid datum type hint test spec for scalar function incomplete function hint class expect error message datum type hint do neither specify a data type nor input group for use as function argument vararg and any input group test spec for scalar function complex function hint class expect output mapping input type strategy vary sequence new string my int my any new argument type strategy input type strategy explicit datum type int input type strategy any type strategy explicit datum type boolean global input hint and local output hint test spec for scalar function global input function hint class expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type int no argument test spec for scalar function zero arg function class expect name argument expect type argument expect output mapping input type strategy sequence new string new argument type strategy type strategy explicit datum type int test primitive argument extraction test spec for scalar function mixed arg function class expect name argument i d expect type argument datum type int not null bridge to int class datum type double expect output mapping input type strategy sequence new string i would new argument type strategy input type strategy explicit datum type int not null bridge to int class input type strategy explicit datum type double type strategy explicit datum type int test overloaded argument extraction test spec for scalar function overload function class expect output mapping input type strategy sequence new string i would new argument type strategy input type strategy explicit datum type int not null bridge to int class input type strategy explicit datum type double type strategy explicit datum type int expect output mapping input type strategy sequence new string s new argument type strategy input type strategy explicit datum type string type strategy explicit datum type bigint not null bridge to long class test vary argument extraction test spec for scalar function var arg function class expect output mapping input type strategy vary sequence new string i more new argument type strategy input type strategy explicit datum type int not null bridge to int class input type strategy explicit datum type int not null bridge to int class type strategy explicit datum type string test vary argument extraction with byte test spec for scalar function var arg with byte function class expect output mapping input type strategy vary sequence new string byte new argument type strategy input type strategy explicit datum type tinyint not null bridge to byte class type strategy explicit datum type string output hint with input extraction test spec for scalar function extract with output hint function class expect name argument i expect type argument datum type int expect output mapping input type strategy sequence new string i new argument type strategy input type strategy explicit datum type int type strategy explicit datum type int output extraction with input hint test spec for scalar function extract with input hint function class expect name argument i b expect type argument datum type int datum type boolean expect output mapping input type strategy sequence new string i b new argument type strategy input type strategy explicit datum type int input type strategy explicit datum type boolean type strategy explicit datum type double not null bridge to double class different accumulator depend on input test spec for aggregate function input dependent accumulator function class expect accumulator mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type row datum type field f datum type bigint expect accumulator mapping input type strategy sequence input type strategy explicit datum type string type strategy explicit datum type row datum type field f datum type string expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type string expect output mapping input type strategy sequence input type strategy explicit datum type string type strategy explicit datum type string input accumulator and output be spread across the function test spec for aggregate function aggregate function with many annotation class expect name argument be expect type argument datum type row datum type field i datum type int datum type field b datum type boolean expect accumulator mapping input type strategy sequence new string be new argument type strategy input type strategy explicit datum type row datum type field i datum type int datum type field b datum type boolean type strategy explicit datum type row datum type field b datum type boolean expect output mapping input type strategy sequence new string be new argument type strategy input type strategy explicit datum type row datum type field i datum type int datum type field b datum type boolean type strategy explicit datum type string test for table function test spec for table function output hint table function class expect name argument i expect type argument datum type int not null bridge to int class expect output mapping input type strategy sequence new string i new argument type strategy input type strategy explicit datum type int not null bridge to int class type strategy explicit datum type row datum type field i datum type int datum type field b datum type boolean mismatch between hint and implementation regard return type test spec for scalar function invalid method scalar function class expect error message consider all hint the method should comply with the signature n java lang string eval int mismatch between hint and implementation regard accumulator test spec for aggregate function invalid method aggregate function class expect error message consider all hint the method should comply with the signature n accumulate java lang integer int boolean no implementation test spec for table function miss method table function class expect error message could not find a publicly accessible method name eval name argument with overloaded function test spec for scalar function name argument scalar function class expect name argument n scalar function that take any input test spec for scalar function input group scalar function class expect name argument o expect output mapping input type strategy sequence new string o new argument type strategy input type strategy any type strategy explicit datum type string scalar function that take any input as vararg test spec for scalar function var arg input group scalar function class expect output mapping input type strategy vary sequence new string o new argument type strategy input type strategy any type strategy explicit datum type string test spec for scalar function scalar function with implicit overloading order order scalar function class expect output mapping input type strategy sequence new string i new argument type strategy input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence new string l new argument type strategy input type strategy explicit datum type bigint type strategy explicit datum type bigint test spec for scalar function scalar function with explicit overloading order by class annotation order scalar function2 class expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type bigint expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int test spec for scalar function scalar function with explicit overloading order by method annotation order scalar function3 class expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type bigint expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int 
input type strategy test parameter name index public static list test spec test datum return as list wildcard with argument test spec for strategy wildcard call with argument type datum type int datum type int expect signature f expect argument type datum type int datum type int wildcard with argument test spec for strategy wildcard call with argument type expect signature f expect argument type explicit sequence test spec for strategy explicit sequence datum type int bridge to int class datum type boolean call with argument type datum type int datum type boolean expect signature f int boolean expect argument type datum type int bridge to int class datum type boolean explicit sequence with row ignore field name test spec for strategy explicit sequence datum type row datum type field expect datum type int call with argument type datum type row datum type field actual datum type int expect signature f row expect int expect argument type datum type row datum type field expect datum type int invalid name sequence test spec for strategy explicit sequence new string i be new datum type datum type int datum type string call with argument type datum type int expect error message invalid input argument expect signature be nf i int s string incompatible nullability test spec for strategy explicit sequence datum type bigint not null call with argument type datum type bigint expect error message unsupported argument type expect type bigint not null but actual type be bigint implicit cast test spec for strategy explicit sequence datum type bigint call with argument type datum type int expect argument type datum type bigint incompatible type test spec for strategy explicit sequence datum type bigint call with argument type datum type string expect error message unsupported argument type expect type bigint but actual type be string incompatible number of argument test spec for strategy explicit sequence datum type bigint datum type bigint call with argument type datum type bigint expect error message invalid number of argument at least argument expect but pass any type test spec for strategy sequence any call with argument type datum type bigint expect signature f any expect argument type datum type bigint incompatible number of argument test spec for strategy sequence any call with argument type datum type bigint datum type bigint expect error message invalid number of argument at most argument expect but pass test spec for strategy or with bridge class or explicit sequence datum type string explicit sequence datum type int bridge to int class explicit sequence datum type boolean call with argument type datum type int call with argument type datum type tinyint expect signature f string nf int nf boolean expect argument type datum type int bridge to int class test spec for strategy or with implicit casting or explicit sequence datum type tinyint explicit sequence datum type int explicit sequence datum type bigint call with argument type datum type smallint expect argument type datum type int test spec for strategy or with implicit casting of null or explicit sequence datum type string not null explicit sequence datum type int not null explicit sequence datum type bigint call with argument type datum type null expect argument type datum type bigint test spec for strategy or with implicit casting use first match or explicit sequence datum type varchar explicit sequence datum type varchar call with argument type datum type varchar expect argument type datum type varchar test spec for strategy or with invalid implicit casting of null or explicit sequence datum type string not null explicit sequence datum type int not null explicit sequence datum type bigint not null call with argument type datum type null expect error message invalid input argument expect signature be n f string not null nf int not null nf bigint not null test spec for strategy or with invalid type or explicit sequence datum type int explicit sequence datum type string call with argument type datum type boolean expect error message invalid input argument expect signature be nf int nf string invalid type sequence test spec for strategy explicit sequence datum type int datum type boolean call with argument type datum type boolean datum type int expect error message invalid input argument expect signature be nf int boolean sequence with wildcard test spec for strategy sequence any explicit datum type int call with argument type datum type boolean datum type int call with argument type datum type boolean datum type tinyint expect argument type datum type boolean datum type int invalid name sequence test spec for strategy sequence new string any int new argument type strategy any explicit datum type int call with argument type datum type string datum type boolean expect error message invalid input argument expect signature be nf any any int int sequence with or and implicit casting test spec for strategy sequence explicit datum type int or explicit datum type boolean explicit datum type int expect signature f int boolean int call with argument type datum type int datum type int call with argument type datum type tinyint datum type tinyint expect argument type datum type int datum type int sequence with or test spec for strategy sequence explicit datum type int or explicit datum type boolean explicit datum type string call with argument type datum type int datum type bigint expect error message invalid input argument expect signature be nf int boolean string sequence with literal test spec for strategy sequence literal call with literal at call with argument type datum type int expect argument type datum type int sequence with literal test spec for strategy sequence and literal explicit datum type string explicit datum type int call with literal at call with argument type datum type string datum type int expect signature f literal not null string int expect argument type datum type string datum type int sequence with miss literal test spec for strategy sequence and explicit datum type string literal or null explicit datum type int call with argument type datum type string datum type int expect error message invalid input argument expect signature be nf string literal int vararg sequence test spec for strategy vary sequence new string i s var new argument type strategy explicit datum type int explicit datum type string explicit datum type boolean call with argument type datum type int datum type string datum type boolean datum type boolean datum type boolean expect argument type datum type int datum type string datum type boolean datum type boolean datum type boolean vararg sequence with conversion class test spec for strategy vary sequence new string var new argument type strategy explicit datum type boolean bridge to boolean class call with argument type datum type boolean datum type boolean datum type boolean expect signature f var boolean expect argument type datum type boolean bridge to boolean class datum type boolean bridge to boolean class datum type boolean bridge to boolean class vararg sequence test spec for strategy vary sequence new string i s var new argument type strategy explicit datum type int explicit datum type string explicit datum type boolean call with argument type datum type int datum type string expect argument type datum type int datum type string invalid vararg type test spec for strategy vary sequence new string i s var new argument type strategy explicit datum type int explicit datum type string explicit datum type boolean call with argument type datum type int datum type string datum type string expect error message invalid input argument expect signature be nf i int s string var boolean invalid non vararg type test spec for strategy vary sequence new string i s var new argument type strategy explicit datum type int explicit datum type string explicit datum type boolean call with argument type datum type int datum type int datum type boolean expect error message unsupported argument type expect type string but actual type be int or in vararg type test spec for strategy vary sequence new string i s var new argument type strategy explicit datum type int explicit datum type string or explicit datum type boolean explicit datum type int call with argument type datum type int datum type string datum type int datum type boolean expect argument type datum type int datum type string datum type int datum type boolean invalid or in vararg type test spec for strategy vary sequence new string i s var new argument type strategy explicit datum type int explicit datum type string or explicit datum type boolean explicit datum type int call with argument type datum type int datum type string datum type string datum type string expect error message invalid input argument expect signature be nf i int s string var boolean int incomplete inference test spec for strategy wildcard call with argument type datum type null datum type string datum type null expect signature f expect argument type datum type null datum type string datum type null type argument help infer a type test spec for strategy wildcard type argument datum type int bridge to int class datum type string datum type boolean call with argument type datum type null datum type string datum type null expect argument type datum type int bridge to int class datum type string datum type boolean surround function help infer a type test spec for strategy sequence output if null output if null output if null surround strategy explicit sequence datum type boolean call with argument type datum type null datum type string datum type null expect signature f output output output expect argument type datum type boolean datum type string datum type boolean surround function help infer a type test spec for strategy sequence or output if null explicit datum type int surround strategy explicit sequence datum type boolean call with argument type datum type null expect signature f output int expect argument type datum type boolean surround info can not infer input type and do not help infer a type test spec for strategy explicit sequence datum type boolean surround strategy wildcard call with argument type datum type null expect signature f boolean expect argument type datum type boolean surround function do not help infer a type test spec for strategy sequence or output if null explicit datum type int call with argument type datum type null expect signature f output int expect argument type datum type int type argument only with casting test spec for strategy wildcard type argument datum type int datum type string call with argument type datum type tinyint datum type string expect signature f int string expect argument type datum type int datum type string invalid type argument test spec for strategy wildcard type argument datum type int datum type string call with argument type datum type string datum type string expect error message invalid argument type at position datum type int expect but string pass name argument test spec for strategy wildcard name argument i be type argument datum type int datum type string expect signature f i int s string test spec for strategy wildcard with count verify argument number input type strategy wildcard with count constant argument count from call with argument type datum type string expect error message invalid number of argument at least argument expect but pass test spec for strategy array strategy infer a common type input type strategy specific for array expect signature f common common call with argument type datum type int not null datum type bigint not null datum type double datum type double not null expect argument type datum type double datum type double datum type double datum type double test spec for strategy array strategy fail for no argument input type strategy specific for array call with argument type expect error message invalid number of argument at least argument expect but pass test spec for strategy array strategy fail for null argument input type strategy specific for array call with argument type datum type null expect error message could not find a common type for argument null test spec for strategy map strategy infer common type input type strategy specific for map call with argument type datum type int not null datum type double datum type bigint not null datum type float not null expect argument type datum type bigint not null datum type double datum type bigint not null datum type double test spec for strategy map strategy fail for no argument input type strategy specific for map call with argument type expect error message invalid number of argument at least argument expect but pass test spec for strategy map strategy fail for a odd number of argument input type strategy specific for map call with argument type datum type bigint datum type bigint datum type bigint expect error message invalid number of argument argument pass test spec for strategy cast strategy input type strategy specific for cast call with argument type datum type int datum type bigint call with literal at datum type bigint expect signature f any type literal expect argument type datum type int datum type bigint test spec for strategy cast strategy for invalid target type input type strategy specific for cast call with argument type datum type boolean datum type date call with literal at datum type date expect error message unsupported cast from boolean to date test spec for strategy logical type root instead of concrete datum type sequence logical logical type root varchar logical logical type root decimal true logical logical type root decimal logical logical type root boolean logical logical type root integer false logical logical type root integer call with argument type datum type null datum type int datum type double datum type boolean not null datum type int not null datum type int not null expect signature f varchar decimal null decimal boolean integer not null integer expect argument type datum type varchar datum type decimal datum type decimal datum type boolean not null datum type int not null datum type int not null test spec for strategy logical type root with wrong implicit cast sequence logical logical type root varchar call with argument type datum type int expect signature f varchar expect error message unsupported argument type expect type root varchar but actual type be int test spec for strategy logical type root with wrong nullability sequence logical logical type root varchar false call with argument type datum type varchar expect signature f varchar not null expect error message unsupported argument type expect nullable type of root varchar but actual type be varchar test spec for strategy logical type family instead of concrete datum type sequence logical logical type family character string true logical logical type family exact numeric logical logical type family approximate numeric logical logical type family approximate numeric logical logical type family approximate numeric false call with argument type datum type null datum type tinyint datum type int datum type bigint not null datum type decimal not null expect signature f character string null exact numeric approximate numeric approximate numeric approximate numeric not null expect argument type datum type varchar datum type tinyint datum type double widen with preserve nullability datum type double not null widen with preserve nullability datum type double not null test spec for strategy logical type family with invalid type sequence logical logical type family exact numeric call with argument type datum type float expect signature f exact numeric expect error message unsupported argument type expect type of family exact numeric but actual type be float test spec for strategy constraint argument type strategy sequence and explicit datum type boolean constraint s must be nullable arg arg get get logical type be nullable call with argument type datum type boolean expect signature f boolean constraint expect argument type datum type boolean test spec for strategy constraint argument type strategy invalid sequence and explicit datum type boolean not null constraint my constraint say s must be nullable arg arg get get logical type be nullable call with argument type datum type boolean not null expect error message my constraint say boolean not null must be nullable test spec for strategy composite type strategy with row sequence input type strategy composite call with argument type datum type row datum type field f0 datum type bigint expect signature f composite expect argument type datum type row datum type field f0 datum type bigint test spec for strategy composite type strategy with structured type sequence input type strategy composite call with argument type datum type of simple structured type class not null expect signature f composite expect argument type datum type of simple structured type class not null 
type strategy test parameter name index public static list test spec test datum return array as list miss strategy with arbitrary argument test spec for strategy miss input type datum type int expect error message could not infer a output type for the give argument valid explicit test spec for strategy explicit datum type bigint input type expect datum type datum type bigint infer from input test spec for strategy argument input type datum type int datum type string expect datum type datum type int infer from not exist input test spec for strategy argument input type expect error message could not infer a output type for the give argument int boolean string test spec for strategy create mapping type strategy input type datum type int datum type boolean expect datum type datum type string int string boolean test spec for strategy create mapping type strategy input type datum type int datum type string expect datum type datum type boolean bridge to boolean class int char boolean but avoid cast mapping actually expect string test spec for strategy create mapping type strategy input type datum type int datum type char expect datum type datum type boolean bridge to boolean class invalid mapping strategy test spec for strategy create mapping type strategy input type datum type int datum type int expect error message could not infer a output type for the give argument invalid return type test spec for strategy explicit datum type null input type expect error message could not infer a output type for the give argument untyped null received test spec for strategy first type strategy type strategy first call context optional empty explicit datum type int input type expect datum type datum type int test spec for strategy match root type strategy type strategy match family logical type family numeric input type datum type int expect datum type datum type int test spec for strategy invalid match root type strategy type strategy match family logical type family numeric input type datum type boolean expect error message could not infer a output type for the give argument test spec for strategy infer a row type type strategy row input type datum type bigint datum type string expect datum type datum type row datum type field f0 datum type bigint datum type field f1 datum type string not null test spec for strategy infer a array type type strategy array input type datum type bigint datum type bigint expect datum type datum type array datum type bigint not null test spec for strategy infer a map type type strategy map input type datum type bigint datum type string not null expect datum type datum type map datum type bigint datum type string not null not null test spec for strategy cascade to nullable type nullable explicit datum type boolean not null input type datum type bigint not null datum type varchar nullable expect datum type datum type boolean nullable test spec for strategy cascade to not null type nullable explicit datum type boolean nullable input type datum type bigint not null datum type varchar not null expect datum type datum type boolean not null test spec for strategy cascade to not null type but only consider first argument nullable constant argument count to explicit datum type boolean nullable input type datum type bigint not null datum type varchar nullable expect datum type datum type boolean not null test spec for strategy cascade to null type but only consider first two argument nullable constant argument count to explicit datum type boolean nullable input type datum type bigint not null datum type varchar nullable expect datum type datum type boolean nullable test spec for strategy cascade to not null type but only consider the second and third argument nullable constant argument count between explicit datum type boolean nullable input type datum type bigint nullable datum type bigint not null datum type varchar not null expect datum type datum type boolean not null test spec for strategy find a common type type strategy common input type datum type int datum type tinyint not null datum type decimal expect datum type datum type decimal test spec for strategy find a decimal sum type strategy decimal plus input type datum type decimal datum type decimal expect datum type datum type decimal not null test spec for strategy find a decimal quotient type strategy decimal divide input type datum type decimal datum type decimal expect datum type datum type decimal not null test spec for strategy find a decimal product type strategy decimal time input type datum type decimal datum type decimal expect datum type datum type decimal not null test spec for strategy find a decimal modulo type strategy decimal mod input type datum type decimal datum type decimal expect datum type datum type decimal not null test spec for strategy convert to vary string vary string explicit datum type char not null input type datum type char not null expect datum type datum type varchar not null test spec for strategy concat two string string concat input type datum type char not null datum type varchar expect datum type datum type varchar test spec for strategy access field of a row nullable type by name type strategy get input type datum type row datum type field f0 datum type bigint not null datum type string not null call with literal at f0 expect datum type datum type bigint nullable test spec for strategy access field of a row not null type by name type strategy get input type datum type row datum type field f0 datum type bigint not null not null datum type string not null call with literal at f0 expect datum type datum type bigint not null test spec for strategy access field of a structured nullable type by name type strategy get input type new field datum type structure type new builder object identifier of cat db type attribute collection singleton list new structured type structure attribute f0 new big int type false build collection singleton list datum type bigint not null nullable datum type string not null call with literal at f0 expect datum type datum type bigint nullable test spec for strategy access field of a structure not null type by name type strategy get input type new field datum type structure type new builder object identifier of cat db type attribute collection singleton list new structured type structure attribute f0 new big int type false build collection singleton list datum type bigint not null not null datum type string not null call with literal at f0 expect datum type datum type bigint not null test spec for strategy access field of a row nullable type by index type strategy get input type datum type row datum type field f0 datum type bigint not null datum type int not null call with literal at expect datum type datum type bigint nullable test spec for strategy access field of a row not null type by index type strategy get input type datum type row datum type field f0 datum type bigint not null not null datum type int not null call with literal at expect datum type datum type bigint not null test spec for strategy field can be access only with a literal name type strategy get input type datum type row datum type field f0 datum type bigint not null not null datum type string not null expect error message could not infer a output type for the give argument test spec for strategy field can be access only with a literal index type strategy get input type datum type row datum type field f0 datum type bigint not null not null datum type int not null expect error message could not infer a output type for the give argument 
legacy type info datum type converter test parameter name index type info datum type public static list object type info return array as list new object type string datum type string type string datum type string not null type boolean datum type boolean type sql timestamp datum type timestamp bridge to java sql timestamp class type generic legacy type info datum type converter test class new atomic datum type new legacy type information type logical type root raw type generic legacy type info datum type converter test class type row name new string field1 field2 type int type long datum type row field field1 datum type int field field2 datum type bigint type map type float type row type byte datum type map datum type float datum type row field f0 datum type tinyint type primitive array type float datum type array datum type float not null bridge to float class bridge to float class type primitive array type byte datum type byte type object array type primitive array type float datum type array datum type array datum type float not null bridge to float class bridge to float class bridge to float class basic array type info string array type info new atomic datum type new legacy type information type logical type root array basic array type info string array type info object array type info get info for type string datum type array datum type string bridge to string class type tuple type short type double type float new atomic datum type new legacy type information type logical type root structure type type tuple type short type double type float time indicator type info rowtime indicator new atomic datum type new timestamp type true timestamp kind rowtime bridge to java sql timestamp class 
logical common type test parameter name index type to public static list object test datum return array as list new object simple type array as list new int type new int type new int type incompatible type array as list new int type new array type new int type null incompatible type array as list new int type new var char type null incompatible type array as list new binary type new var char type null not null type array as list new int type false new int type false new int type false not null with different type array as list new int type true new big int type false new big int type null only array as list new null type new null type null null with other type array as list new null type new int type new int type new int type array type with same element type array as list new array type new int type new array type new int type new array type new int type array type with different element type array as list new array type new big int type new array type new int type new array type new big int type multiset type with different element type array as list new multiset type new big int type new multiset type new int type new multiset type new big int type map type with different element type array as list new map type new big int type new double type new map type new int type new double type new map type new big int type new double type row type with different element type array as list row type of new int type new int type new big int type row type of new big int type new int type new int type row type of new big int type new int type new big int type char type of same length array as list new char type new char type new char type char type of different length array as list new char type new char type new var char type varchar type of different length array as list new var char type new var char type var char type max length new var char type var char type max length mixed varchar and char type array as list new var char type new char type new var char type more mixed varchar and char type array as list new char type new var char type new var char type new var char type binary type of different length array as list new binary type new binary type new var binary type mixed binary and varbinary type array as list new binary type new var binary type new var binary type new var binary type two approximate numeric type array as list new double type new float type new double type one approximate numeric and one decimal type array as list new double type new decimal type new double type one approximate numeric and one exact numeric type array as list new int type new float type new float type two approximate numeric and one decimal type array as list new decimal type new double type new float type new double type decimal precision and scale merge array as list new decimal type new decimal type new decimal type new decimal type decimal precision and scale merge with other exact numeric type array as list new decimal type new int type new big int type new decimal type unsupported time merge array as list new date type new date type new time type null time precision merge array as list new time type new time type new time type new time type timestamp precision merge array as list new timestamp type new timestamp type new timestamp type new timestamp type timestamp merge array as list new timestamp type new zone timestamp type new local zone timestamp type new zone timestamp type timestamp merge array as list new timestamp type new local zone timestamp type new local zone timestamp type day time interval datetime array as list new day time interval type day time resolution day new date type new date type year month interval datetime array as list new year month interval type year month resolution month new date type new date type datetime interval array as list new time type new day time interval type day time resolution minute new time type datetime interval array as list new date type new day time interval type day time resolution day new date type exact numeric date array as list new int type new date type new date type time exact numeric array as list new time type new decimal type null timestamp exact numeric array as list new timestamp type new decimal type new timestamp type day time interval array as list new day time interval type day time resolution day to minute new day time interval type day time resolution second new day time interval type day time resolution day to second day time interval array as list new day time interval type day time resolution hour new day time interval type day time resolution second day time interval type default day precision new day time interval type day time resolution hour to second day time interval type default day precision year month interval array as list new year month interval type year month resolution month new year month interval type year month resolution year new year month interval type year month resolution year to month 
logical type cast avoidance test parameter name index compatible public static list object test datum return array as list new object new char type new char type false new var char type new var char type false new var char type new var char type true new char type new var char type true new binary type new var binary type true new char type false new var char type true new binary type false new var binary type true new var char type new char type false new var binary type new binary type false new boolean type new boolean type false false new binary type new binary type false new var binary type new var binary type true new var binary type new var binary type false new decimal type new decimal type false new tiny int type new tiny int type false false new small int type new small int type false false new int type new int type false false new int type false new int type true new big int type new big int type false false new float type new float type false false new double type new double type false false new date type new date type false false new time type new time type false new timestamp type new timestamp type false new zone timestamp type new zone timestamp type false new zone timestamp type false timestamp kind proctime new zone timestamp type false new year month interval type year month interval type year month resolution year to month new year month interval type year month interval type year month resolution month false new day time interval type day time interval type day time resolution day to second new day time interval type day time interval type day time resolution day to second false new array type new timestamp type new array type new small int type false new multiset type new timestamp type new multiset type new small int type false new map type new var char type new timestamp type new map type new var char type new timestamp type true new map type new var char type new timestamp type new map type new var char type new timestamp type false new row type array as list new row type row field a new var char type new row type row field b new var char type new row type row field c new var char type new row type row field d new timestamp type new row type array as list new row type row field a new var char type new row type row field b new var char type new row type row field c new var char type new row type row field d new timestamp type field name doesn t matter true new row type array as list new row field f1 new int type new row field f2 new var char type new row type array as list new row field f1 new int type new row field f2 new boolean type false new array type new row type array as list new row field f1 new int type new row field f2 new int type new array type new row type array as list new row field f3 new int type new row field f4 new int type true new map type new int type new row type array as list new row field f1 new int type new row field f2 new int type new map type new int type new row type array as list new row field f3 new int type new row field f4 new int type true new multiset type new row type array as list new row field f1 new int type new row field f2 new int type new multiset type new row type array as list new row field f1 new int type new row field f2 new int type true new type information raw type type generic logical type test class new type information raw type type generic object class false create user type user new int type new var char type create user type user new int type new var char type true create user type user new int type new var char type create user type user2 new int type new var char type false create distinct type money new decimal type create distinct type money new decimal type true create distinct type money new decimal type create distinct type money2 new decimal type true 
logical type cast test parameter name index from to implicit explicit public static list object test datum return array as list new object new small int type new big int type true true nullability do not match new small int type false new small int type true true new small int type new small int type false false false new year month interval type year month interval type year month resolution year new small int type true true not a interval with single field new year month interval type year month interval type year month resolution year to month new small int type false false new int type new decimal type true true loss of precision new float type new int type false true new var char type integer max value new float type false true new float type new var char type integer max value false true new decimal type new var char type integer max value false true new type information raw type type generic logical type test class new type information raw type type generic logical type test class true true new type information raw type type generic logical type test class new type information raw type type generic object class false false new null type new int type true true new array type new int type new array type new big int type true true new array type new int type new array type new var char type integer max value false true new row type array as list new row field f1 new int type new row field f2 new int type new row type array as list new row field f1 new int type new row field f2 new big int type true true new row type array as list new row field f1 new int type description new row field f2 new int type new row type array as list new row field f1 new int type new row field f2 new big int type true true new row type array as list new row field f1 new int type new row field f2 new int type new row type array as list new row field f1 new int type new row field f2 new boolean type false true new row type array as list new row field f1 new int type new row field f2 new int type new var char type integer max value false false 
logical type duplicator test parameter name index public static list object test datum return array as list new object new char type new char type create multiset type new int type create multiset type new big int type create array type new int type create array type new big int type create map type new int type create map type new big int type create row type new int type create row type new big int type create distinct type new int type create distinct type new big int type create user type new int type create user type new big int type create human type create human type 
logical type parser test parameter name index from to public static list test spec test datum return array as list test spec for string char expect type new char type test spec for string char not null expect type new char type copy false test spec for string char not t n n u l l expect type new char type copy false test spec for string char not null expect type new char type copy false test spec for string char null expect type new char type test spec for string char expect type new char type test spec for string varchar expect type new var char type test spec for string varchar expect type new var char type test spec for string string expect type new var char type var char type max length test spec for string boolean expect type new boolean type test spec for string binary expect type new binary type test spec for string binary expect type new binary type test spec for string varbinary expect type new var binary type test spec for string varbinary expect type new var binary type test spec for string byte expect type new var binary type var binary type max length test spec for string decimal expect type new decimal type test spec for string dec expect type new decimal type test spec for string numeric expect type new decimal type test spec for string decimal expect type new decimal type test spec for string dec expect type new decimal type test spec for string numeric expect type new decimal type test spec for string decimal expect type new decimal type test spec for string dec expect type new decimal type test spec for string numeric expect type new decimal type test spec for string tinyint expect type new tiny int type test spec for string smallint expect type new small int type test spec for string integer expect type new int type test spec for string int expect type new int type test spec for string bigint expect type new big int type test spec for string float expect type new float type test spec for string double expect type new double type test spec for string double precision expect type new double type test spec for string date expect type new date type test spec for string time expect type new time type test spec for string time expect type new time type test spec for string time without time zone expect type new time type test spec for string time without time zone expect type new time type test spec for string timestamp expect type new timestamp type test spec for string timestamp expect type new timestamp type test spec for string timestamp without time zone expect type new timestamp type test spec for string timestamp without time zone expect type new timestamp type test spec for string timestamp with time zone expect type new zone timestamp type test spec for string timestamp with time zone expect type new zone timestamp type test spec for string timestamp with local time zone expect type new local zone timestamp type test spec for string timestamp with local time zone expect type new local zone timestamp type test spec for string interval year expect type new year month interval type year month resolution year test spec for string interval year expect type new year month interval type year month resolution year test spec for string interval month expect type new year month interval type year month resolution month test spec for string interval year to month expect type new year month interval type year month resolution year to month test spec for string interval year to month expect type new year month interval type year month resolution year to month test spec for string interval day to second expect type new day time interval type day time resolution day to second test spec for string interval hour to second expect type new day time interval type day time resolution hour to second day time interval type default day precision test spec for string interval minute expect type new day time interval type day time resolution minute test spec for string array timestamp with local time zone expect type new array type new local zone timestamp type test spec for string array int not null expect type new array type new int type false test spec for string int array expect type new array type new int type test spec for string int not null array expect type new array type new int type false test spec for string int array not null expect type new array type false new int type test spec for string multiset int not null expect type new multiset type new int type false test spec for string int multiset expect type new multiset type new int type test spec for string int not null multiset expect type new multiset type new int type false test spec for string int multiset not null expect type new multiset type false new int type test spec for string map bigint boolean expect type new map type new big int type new boolean type test spec for string row f0 int not null f1 boolean expect type new row type array as list new row type row field f0 new int type false new row type row field f1 new boolean type test spec for string row f0 int not null f1 boolean expect type new row type array as list new row type row field f0 new int type false new row type row field f1 new boolean type test spec for string row f0 int expect type new row type collection singleton list new row type row field f0 new int type test spec for string row f0 int expect type new row type collection singleton list new row type row field f0 new int type test spec for string row expect type new row type collection empty list test spec for string row expect type new row type collection empty list test spec for string row f0 int not null this be a comment f1 boolean this as well expect type new row type array as list new row type row field f0 new int type false this be a comment new row type row field f1 new boolean type this as well test spec for string null expect type new null type test spec for string create raw type logical type parser test class as serializable string expect type create raw type logical type parser test class test spec for string cat db my type expect type new unresolved user define type unresolved identifier of cat db my type test spec for string db my type expect type new unresolved user define type unresolved identifier of db my type test spec for string my type expect type new unresolved user define type unresolved identifier of my type test spec for string array my type expect type new array type new unresolved user define type unresolved identifier of my type test spec for string row f0 my type f1 c d t expect type row type of new unresolved user define type unresolved identifier of my type new unresolved user define type unresolved identifier of c d t test spec for string legacy structure type pojo org apache flink table type logical type parser test my pojo expect type create pojo legacy type test spec for string legacy decimal decimal expect type type conversion from legacy info to datum type type big dec get logical type test spec for string legacy raw any org apache flink table type logical type parser test expect type create generic legacy type error message testing test spec for string row f0 expect error message unexpected end test spec for string row f0 expect error message unexpected end test spec for string varchar test expect error message literal int expect test spec for string varchar expect error message invalid integer value test spec for string row field int field2 expect error message keyword expect test spec for string raw unknown class expect error message unable to restore the raw type 
path resolution test parameter name index public static list test spec test datum throw exception return as list test spec simple in default path with catalog manager simple catalog table api lookup path tab1 sql lookup path tab1 expect path builtin catalog name default tab1 test spec simple in change default catalog with catalog manager simple catalog with default path cat1 table api lookup path tab1 sql lookup path tab1 expect path cat1 db1 tab1 test spec simple in change default path with catalog manager simple catalog with default path cat1 db2 table api lookup path tab1 sql lookup path tab1 expect path cat1 db2 tab1 test spec qualify with database with catalog manager simple catalog with default path builtin catalog name default table api lookup path db1 tab1 sql lookup path db1 tab1 expect path builtin catalog name db1 tab1 test spec fully qualified name with catalog manager simple catalog with default path builtin catalog name default table api lookup path cat1 db1 tab1 sql lookup path cat1 db1 tab1 expect path cat1 db1 tab1 test spec dot in unqualified table name with catalog manager catalog with special character table api lookup path tab sql lookup path tab expect path builtin catalog name default tab test spec dot in database name with catalog manager catalog with special character table api lookup path default db tab1 sql lookup path default db tab1 expect path builtin catalog name default db tab1 test spec dot in default database name with catalog manager catalog with special character with default path builtin catalog name default db table api lookup path tab1 sql lookup path tab1 expect path builtin catalog name default db tab1 test spec space in name with catalog manager catalog with special character table api lookup path default db tab sql lookup path default db tab expect path builtin catalog name default db tab test spec shadow with temporary table with catalog manager catalog with temporary object table api lookup path cat1 db1 tab1 sql lookup path cat1 db1 tab1 expect temporary path cat1 db1 tab1 
math function i t case parameter name index public static list test spec test datum return array as list test spec for function build in function definition plus on field with datum new big decimal and datum type datum type decimal not null decimal int decimal test result f0 plus f0 new big decimal datum type decimal not null decimal decimal decimal test result f0 plus f0 f0 f0 new big decimal datum type decimal not null test spec for function build in function definition minus on field with datum new big decimal and datum type datum type decimal decimal int decimal test result f0 minus f0 new big decimal datum type decimal decimal decimal decimal test result f0 minus f0 f0 f0 new big decimal datum type decimal test spec for function build in function definition divide on field with datum new big decimal and datum type datum type decimal not null decimal int decimal test result f0 divide by f0 new big decimal 252392720000.00000000000 datum type decimal not null decimal decimal decimal decimal test result f0 divide by f0 f0 f0 new big decimal 1.0000000000000000000 datum type decimal not null test spec for function build in function definition time on field with datum new big decimal and datum type datum type decimal decimal int decimal test result f0 time f0 new big decimal datum type decimal decimal decimal decimal test result f0 time f0 f0 f0 new big decimal datum type decimal test spec for function build in function definition mod on field with datum new big decimal 44 l and datum type datum type decimal datum type bigint datum type int decimal decimal decimal test result f0 mod f0 mod f0 f0 new big decimal datum type decimal decimal int int test result f0 mod mod f0 datum type int bigint int int test result f1 mod f2 mod f1 f2 datum type int test spec for function build in function definition round on field with datum new big decimal 12345.12345 round decimal not null decimal not null test result f0 round round f0 new big decimal 12345.12 datum type decimal not null 
datum structure converter test parameter name index public static list test spec test datum order by definition in datum structure converter return as list test spec for datum type char convert to string class convert to byte class get byte standard charset utf convert to string datum class string datum from string test spec for datum type varchar convert to string class convert to byte class get byte standard charset utf convert to string datum class string datum from string test spec for datum type boolean not null converted to boolean class true converted to boolean class true test spec for datum type binary convert to byte class new byte test spec for datum type varbinary convert to byte class new byte test spec for datum type decimal convert to big decimal class new big decimal 1.23 convert to decimal datum class decimal datum from unscaled long tinyint smallint integer bigint float double be skip for simplicity test spec for datum type date convert to date class date value of 2010 - 11 convert to local date class local date parse 2010 - 11 convert to integer class test spec for datum type time convert to java sql time class java sql time value of 12:34 convert to local time class local time parse 12:34 convert to integer class convert to long class 000 l test spec for datum type time todo support precision of convert to local time class local time parse 12:34 56.001 convert to integer class test spec for datum type timestamp convert to timestamp class timestamp value of 2010 - 11 12 12 34:56 convert to local date time class local date time parse 2010 - 11 12 t12 34:56 convert to timestamp datum class timestamp datum from epoch millis 000 l test spec for datum type timestamp with time zone convert to zone date time class zone date time of instant instant epoch zone id of utc convert to java time offset date time class zone date time of instant instant epoch zone id of utc to offset date time expect error message unsupported datum type timestamp with time zone test spec for datum type timestamp with local time zone convert to instant class instant of epoch second convert to integer class convert to long class 000 l convert to timestamp datum class timestamp datum from epoch millis test spec for datum type timestamp with local time zone convert to instant class instant of epoch second convert to long class 001 l convert to timestamp datum class timestamp datum from epoch millis test spec for datum type timestamp with local time zone convert to instant class instant of epoch second convert to timestamp datum class timestamp datum from epoch millis test spec for datum type interval year month convert to period class period of convert to integer class test spec for datum type interval month convert to period class period of convert to integer class test spec for datum type interval day second todo support precision of convert to duration class duration of millis convert to long class l test spec for datum type array boolean not null converted to boolean class new boolean true false true true convert to array datum class new generic array datum new boolean true false true true test spec for datum type array boolean convert to boolean class new boolean true null true true convert to list class array as list true null true true convert to array datum class new generic array datum new boolean true null true true test spec for datum type array int not null bridge to int class int class should not have a impact convert to int class new int convert to integer class new integer convert to list class new link list array as list test list that be not back by a array array of tinyint smallint integer bigint float double be skip for simplicity test spec for datum type array date convert to local date class new local date null local date parse 2010 - 11 null local date parse 2010 - 11 convert to list class array as list null local date parse 2010 - 11 null local date parse 2010 - 11 test spec for datum type map int bridge to int class boolean int class should not have a impact convert to map class create identity map convert to map datum class new generic map datum create identity map test spec for datum type map date boolean convert to map class create local date map test spec for datum type multiset boolean convert to map class create identity multiset convert to map datum class new generic map datum create identity multiset test spec for datum type multiset date convert to map class create local date multiset test spec for datum type row field a int field b row field b double field b boolean convert to row class row of kind row kind delete row of 2.0 null convert to row datum class generic row datum of kind row kind delete generic row datum of 2.0 null test spec for datum type row field a int field b row field b date field b date convert to row class row of row of local date of epoch day null test spec for class pojo with mutable field class convert to supplier pojo with mutable field class final pojo with mutable field pojo new pojo with mutable field pojo age pojo name bob return pojo convert to row class row of bob convert to row datum class generic row datum of string datum from string bob test spec for class pojo with immutable field class convert to pojo with immutable field class new pojo with immutable field bob convert to row class row of bob convert to row datum class generic row datum of string datum from string bob test spec for class pojo with getter and setter class convert to supplier pojo with getter and setter class final pojo with getter and setter pojo new pojo with getter and setter pojo set age pojo set name bob return pojo convert to row class row of bob convert to row datum class generic row datum of string datum from string bob test spec for class complex pojo class convert to supplier complex pojo class final complex pojo pojo new complex pojo pojo set timestamp timestamp value of 2010 - 11 12 13 14:15 pojo set preference row of bob new boolean true null false pojo set balance new big decimal 1.23 return pojo convert to row class row of timestamp value of 2010 - 11 12 13 14:15 row of bob new boolean true null false new big decimal 1.23 test spec for class pojo as superclass class convert to supplier pojo with mutable field class final pojo with mutable field pojo new pojo with mutable field pojo age pojo name bob return pojo convert to row class row of test spec for datum type map string datum type of pojo with immutable field class convert to map class create pojo with immutable field map test spec for datum type array datum type of pojo with nest pojo class convert to pojo with nest pojo class create pojo with nest pojo array convert to row class new row row of new pojo with immutable field bob new pojo with immutable field new pojo with immutable field bob null null row of null new pojo with immutable field row of null null convert to with another value row class new row row of null null row of new pojo with immutable field bob null test spec for datum type datum type of pojo with list class convert to pojo with list class new pojo with list array as list array as list 1.0 null 2.0 null collection empty list null converted to row class row of array as list array as list 1.0 null 2.0 null collection empty list null 
logical type assignable test parameter name index compatible public static list object test datum return array as list new object new char type new char type true new char type new var char type true new var char type new var char type true new boolean type new boolean type false true new binary type new binary type true new var binary type new var binary type true new decimal type new decimal type true new tiny int type new tiny int type false true new small int type new small int type false true new int type new int type false true new big int type new big int type false true new float type new float type false true new double type new double type false true new date type new date type false true new time type new time type false new timestamp type new timestamp type true new zone timestamp type new zone timestamp type false new zone timestamp type false timestamp kind proctime new zone timestamp type false new year month interval type year month interval type year month resolution year to month new year month interval type year month interval type year month resolution month false new day time interval type day time interval type day time resolution day to second new day time interval type day time interval type day time resolution day to second false new array type new timestamp type new array type new small int type false new multiset type new timestamp type new multiset type new small int type false new map type new var char type new timestamp type new map type new var char type new timestamp type true new row type array as list new row type row field a new var char type new row type row field b new var char type new row type row field c new var char type new row type row field d new timestamp type new row type array as list new row type row field a new var char type new row type row field b new var char type new row type row field c new var char type new row type row field d new timestamp type field name doesn t matter true new row type array as list new row field f1 new int type new row field f2 new var char type new row type array as list new row field f1 new int type new row field f2 new boolean type false new array type new row type array as list new row field f1 new int type new row field f2 new int type new array type new row type array as list new row field f3 new int type new row field f4 new int type true new map type new int type new row type array as list new row field f1 new int type new row field f2 new int type new map type new int type new row type array as list new row field f3 new int type new row field f4 new int type true new multiset type new row type array as list new row field f1 new int type new row field f2 new int type new multiset type new row type array as list new row field f1 new int type new row field f2 new int type true new type information raw type type generic planner type util class new type information raw type type generic object class false create user type new int type new var char type create user type new int type new var char type true create distinct type new decimal type create distinct type new decimal type true 
connected component with defer update i t case parameter public static collection object get configuration return array as list new object false new object true 
