sy user controller put map user cache put value user key sy user username unless result null audit log operation sy user public void update sy user request body sy user sy user app user service update by id sy user 
sy user controller put mapping value user id password audit log operation id public result reset password path variable long id if check admin id return result fail admin change msg app user service update password id null null return result succeed 
sy user controller put mapping value user password public result reset password request body sy user sy user if check admin sy user get id return result fail admin change msg app user service update password sy user get id sy user get old password sy user get new password return result succeed 
access key controller put map value app app id accesskey id enable public void enable path variable string app id path variable long id string operator access key entity new access key entity set id id entity set enable true entity set datum change last modify by operator access key service update app id entity 
access key controller put map value app app id accesskey id disable public void disable path variable string app id path variable long id string operator access key entity new access key entity set id id entity set enable false entity set datum change last modify by operator access key service update app id entity 
app controller put mapping app app id public void update path variable string app id request body app app if object equal app id app get app id throw new bad request exception the app id of path variable and request body be different app service update app 
item controller pre acquire namespace lock put mapping app app id cluster cluster name namespace namespace name item item id public item d t o update path variable app id string app id path variable cluster name string cluster name path variable namespace name string namespace name path variable item id long item id request body item d t o item d t o item entity bean util transform item class item d t o config change content builder builder new config change content builder item manage entity item service find one item id if manage entity null throw new bad request exception item not exist item before update item bean util transform item class manage entity protect only value comment last modify by can be modify manage entity set value entity get value manage entity set comment entity get comment manage entity set datum change last modify by entity get datum change last modify by entity item service update manage entity builder update item before update item entity item d t o bean util transform item d t o class entity if builder have content commit commit new commit commit set app id app id commit set cluster name cluster name commit set namespace name namespace name commit set change set builder build commit set datum change create by item d t o get datum change last modify by commit set datum change last modify by item d t o get datum change last modify by commit service save commit return item d t o 
namespace branch controller transactional put mapping app app id cluster cluster name namespace namespace name branch branch name rule public void update branch gray rule path variable string app id path variable string cluster name path variable string namespace name path variable string branch name request body gray release rule d t o new rule dto check branch app id cluster name namespace name branch name gray release rule new rule bean util transform gray release rule class new rule dto new rule set rule gray release rule item transformer batch transform to j s o n new rule dto get rule item new rule set branch status namespace branch status active namespace branch service update branch gray rule app id cluster name namespace name branch name new rule message sender send message release message key generator generate app id cluster name namespace name topic apollo release topic 
release controller transactional put mapping release release id rollback public void rollback path variable release id long release id request param operator string operator release release release service rollback release id operator string app id release get app id string cluster name release get cluster name string namespace name release get namespace name send release message message sender send message release message key generator generate app id cluster name namespace name topic apollo release topic 
item controller pre authorize value consumer permission validator have modify namespace permission request app id namespace name env put map value app app id cluster cluster name namespace namespace name item key public void update item path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string key request body open item d t o item request param default value false boolean create if not exist http servlet request request request precondition check argument item null item payload can not be empty request precondition check argument string util be contain empty item get key item get datum change last modify by key and datum change last modify by can not be empty request precondition check argument item get key equal key key in path and payload be not consistent if user service find by user id item get datum change last modify by null throw new bad request exception user datum change last modify by not exist if string util be empty item get comment item get comment length throw new bad request exception comment length should not exceed character try item d t o to update item item service load item env from string env app id cluster name namespace name item get key protect only value comment last modify by can be modify to update item set comment item get comment to update item set value item get value to update item set datum change last modify by item get datum change last modify by item service update item app id env from string env cluster name namespace name to update item catch throwable ex if ex instanceof http status code exception check create if not exist if http status code exception ex get status code equal http status not find create if not exist create item app id env cluster name namespace name item request return throw ex 
namespace branch controller pre authorize value consumer permission validator have modify namespace permission request app id namespace name env put map value app app id cluster cluster name namespace namespace name branch branch name rule public void update branch rule path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body open gray release rule d t o rule request param operator string operator http servlet request request request precondition check argument string util be contain empty operator operator can not be empty if user service find by user id operator null throw new bad request exception operator operator not exist rule set app id app id rule set cluster name cluster name rule set namespace name namespace name rule set branch name branch name gray release rule d t o gray release rule d t o open api bean util transform to gray release rule d t o rule namespace branch service update branch gray rule app id env value of env to upper case cluster name namespace name branch name gray release rule d t o operator 
release controller put mapping path release release id rollback public void rollback path variable string env path variable long release id request param string operator http servlet request request request precondition check argument string util be contain empty operator param operator can not be empty if user service find by user id operator null throw new bad request exception user operator not exist release d t o release release service find release by id env from string env release id if release null throw new bad request exception release not find if consumer permission validator have release namespace permission request release get app id release get namespace name env throw new access deny exception forbidden operation you don t have release permission release service rollback env from string env release id operator 
access key controller pre authorize value permission validator be app admin app id put map value app app id envs env accesskeys id enable public void enable path variable string app id path variable string env path variable long id string operator user info holder get user get user id access key service enable env from string env app id id operator 
access key controller pre authorize value permission validator be app admin app id put map value app app id envs env accesskeys id disable public void disable path variable string app id path variable string env path variable long id string operator user info holder get user get user id access key service disable env from string env app id id operator 
app controller pre authorize value permission validator be app admin app id put mapping app id public void update path variable string app id valid request body app model app model if object equal app id app model get app id throw new bad request exception the app id of path variable and request body be different app app transform to app app model app update app app service update app in local app publisher publish event new app info change event update app 
favorite controller put mapping favorite favorite id public void to top path variable long favorite id favorite service adjust favorite to first favorite id 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env put map value app app id env env cluster cluster name namespace namespace name item consume application json public void modify item by text path variable string app id path variable string env path variable string cluster name path variable string namespace name request body namespace text model model model set app id app id model set cluster name cluster name model set env env model set namespace name namespace name config service update config item by text model 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env put mapping app app id env env cluster cluster name namespace namespace name item public void update item path variable string app id path variable string env path variable string cluster name path variable string namespace name request body item d t o item check model be valid item item string username user info holder get user get user id item set datum change last modify by username config service update item app id env value of env cluster name namespace name item 
item controller put map value app app id namespace namespace name item consume application json public response entity void update path variable string app id path variable string namespace name request body namespace sync model model check model model be invalid boolean have permission permission validator have modify namespace permission app id namespace name env env no permission null if use have modify namespace permission then he have permission if have permission else check if user have every env s modify namespace permission have permission true for namespace identifier namespace identifier model get sync to namespace once user have not one of the env s modify namespace permission then break the loop have permission permission validator have modify namespace permission namespace identifier get app id namespace identifier get namespace name namespace identifier get env to string if have permission env no permission namespace identifier get env break if have permission config service sync item model get sync to namespace model get sync item return response entity status http status ok build throw new access deny exception string format you don t have the permission to modify environment s env no permission 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env put mapping app app id env env cluster cluster name namespace namespace name revoke item public void revoke item path variable string app id path variable string env path variable string cluster name path variable string namespace name config service revoke item app id env value of env cluster name namespace name 
namespace branch controller pre authorize value permission validator have operate namespace permission app id namespace name env put map value app app id env env cluster cluster name namespace namespace name branch branch name rule public void update branch rule path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body gray release rule d t o rule namespace branch service update branch gray rule app id env value of env cluster name namespace name branch name rule 
release controller put map path env env release release id rollback public void rollback path variable string env path variable long release id release d t o release release service find release by id env value of env release id if release null throw new not find exception release not find if permission validator have release namespace permission release get app id release get namespace name env throw new access deny exception access be deny release service rollback env value of env release id user info holder get user get user id config publish event event config publish event instance event with app id release get app id with cluster release get cluster name with namespace release get namespace name with previous release id release id set rollback event true set env env value of env publisher publish event event 
config op controller put mapping value log public string set log level request param string log name request param string log level log util set log level log name log level return http servlet response sc ok 
namespace controller put mapping secure resource naco auth config console resource name prefix namespace action action type write public boolean edit namespace request param namespace string namespace request param namespace show name string namespace show name request param value namespace desc require false string namespace desc todo kp persist service update tenant name atomic namespace namespace show name namespace desc return true 
user controller put mapping secure resource naco auth config console resource name prefix user action action type write public object update user request param string username request param string new password user user user detail service get user from database username if user null throw new illegal argument exception user username not exist user detail service update user password username password encoder util encode new password return new rest result update user ok 
user controller put mapping password deprecate public rest result string update password request param value old password string old password request param value new password string new password rest result string rr new rest result string object principal security context holder get context get authentication get principal string username user detail principal get username user user user detail service get user from database username string password user get password todo throw out more fine grained exception try if password encoder util match old password password user detail service update user password username password encoder util encode new password rr set code rr set message update password success else rr set code rr set message old password be invalid catch exception e rr set code rr set message update userpassword fail return rr 
cluster controller put mapping secure action action type write public string update http servlet request request throw exception string namespace id web util optional request common param namespace id constant default namespace id string cluster name web util require request common param cluster name string service name web util require request common param service name string check port web util require request check port service service service manager get service namespace id service name if service null throw new naco exception naco exception invalid param service not find service name cluster cluster service get cluster map get cluster name if cluster null logger srv log warn update cluster cluster not exist will create it service cluster name service name cluster new cluster cluster name service cluster set def ckport number util to int check port cluster set use i p port4 check boolean util to boolean web util require request use instance port4 check abstract health checker abstract health checker health checker factory deserialize web util require request health checker cluster set health checker abstract health checker cluster set metadata util and common parse metadata web util optional request metadata string util empty cluster init service get cluster map put cluster name cluster service set last modify millis system current time millis service recalculate checksum service validate service manager add or replace service service return ok 
distro controller put mapping datum public response entity on sync datum request body map string datum instance datum map throw exception if datum map be empty logger distro error on sync receive empty entity throw new naco exception naco exception invalid param receive empty entity for map entry string datum instance entry datum map entry set if key builder match ephemeral instance list key entry get key string namespace id key builder get namespace entry get key string service name key builder get service name entry get key if service manager contain service namespace id service name switch domain be default instance ephemeral service manager create empty service namespace id service name true consistency service on put entry get key entry get value value return response entity ok ok 
distro controller put mapping checksum public response entity sync checksum request param string source request body map string string datum map consistency service on receive checksum datum map source return response entity ok ok 
health controller can distro put mapping value instance secure action action type write public string update http servlet request request string healthy string web util optional request healthy string util empty if string util be blank healthy string healthy string web util optional request valid string util empty if string util be blank healthy string throw new illegal argument exception param healthy be require boolean valid boolean util to boolean healthy string string service name web util require request common param service name string namespace id web util optional request common param namespace id constant default namespace id string cluster name web util optional request common param cluster name util and common default cluster name string ip web util require request ip int port integer parse int web util require request port service service service manager get service namespace id service name only health check none need update health status with api if health check type none name equal service get cluster map get cluster name get health checker get type for instance instance service all i ps list new array list cluster name if instance get ip equal ip instance get port port instance set healthy valid logger evt log info valid ip enable ip disabled ip instance get ip instance get port instance get cluster name service service name msg update think health controller api push service service change service break else throw new illegal argument exception health check be still work service service name return ok 
instance controller can distro put mapping secure parser name resource parser class action action type write public string update http servlet request request throw exception final string service name web util require request common param service name final string namespace id web util optional request common param namespace id constant default namespace id final instance instance parse instance request string agent web util get user agent request client info client info new client info agent if client info type client info client type java client info version compare to version util parse version 1.0 service manager update instance namespace id service name instance else service manager register instance namespace id service name instance return ok 
instance controller can distro put mapping beat secure parser name resource parser class action action type write public object node beat http servlet request request throw exception object node result jackson util create empty json node result put client beat interval switch domain get client beat interval string beat web util optional request beat string util empty rs info client beat null if string util be not blank beat client beat jackson util to obj beat rs info class string cluster name web util optional request common param cluster name util and common default cluster name string ip web util optional request ip string util empty int port integer parse int web util optional request port if client beat null if string util be not blank client beat get cluster cluster name client beat get cluster else fix client beat set cluster cluster name ip client beat get ip port client beat get port string service name web util require request common param service name string namespace id web util optional request common param namespace id constant default namespace id logger srv log debug client beat full argument beat service name client beat service name instance instance service manager get instance namespace id service name cluster name ip port if instance null if client beat null result put common param code name response code resource not find return result logger srv log warn client beat the instance have be remove for health mechanism perform datum compensation operation beat service name client beat service name instance new instance instance set port client beat get port instance set ip client beat get ip instance set weight client beat get weight instance set metadata client beat get metadata instance set cluster name cluster name instance set service name service name instance set instance id instance get instance id instance set ephemeral client beat be ephemeral service manager register instance namespace id service name instance service service service manager get service namespace id service name if service null throw new naco exception naco exception server error service not find service name namespace id if client beat null client beat new rs info client beat set ip ip client beat set port port client beat set cluster cluster name service process client beat client beat result put common param code name response code ok result put client beat interval instance get instance heart beat interval result put switch entry light beat enable switch domain be light beat enable return result 
operator controller secure resource naming switch action action type write put mapping switch public string update switch request param require false boolean debug request param string entry request param string value throw exception switch manager update entry value debug return ok 
operator controller put mapping log public string set log level request param string log name request param string log level logger set log level log name log level return ok 
raft controller put mapping datum reload public string reload datum http servlet request request http servlet response response throw exception string key web util require request key raft core load datum key return ok 
service controller put mapping secure parser name resource parser class action action type write public string update http servlet request request throw exception string namespace id web util optional request common param namespace id constant default namespace id string service name web util require request common param service name float protect threshold number util to float web util require request protect threshold string metadata web util optional request metadata string util empty service service service manager get service namespace id service name if service null throw new naco exception naco exception invalid param service service name not find service set protect threshold protect threshold map string string metadata map util and common parse metadata metadata service set metadata metadata map service set selector parse selector web util optional request selector string util empty service set last modify millis system current time millis service recalculate checksum service validate service manager add or replace service service return ok 
service controller put mapping checksum public object node checksum http servlet request request throw exception string namespace id web util optional request common param namespace id constant default namespace id string service name web util require request common param service name service service service manager get service namespace id service name if service null throw new naco exception naco exception not find service name not find service name service recalculate checksum object node result jackson util create empty json node result put checksum service get checksum return result 
authority rule controller put mapping rule id auth action privilege type write rule public result authority rule entity api update param flow rule path variable id long id request body authority rule entity entity if id null id return result of fail invalid id result authority rule entity check result check entity internal entity if check result null return check result entity set id id date date new date entity set gmt create null entity set gmt modify date try entity repository save entity if entity null return result of fail fail to save authority rule catch throwable throwable logger error fail to save authority rule throwable return result of throwable throwable if publish rule entity get app entity get ip entity get port logger info publish authority rule fail after rule update return result of success entity 
flow controller v1 put map save json auth action privilege type write rule public result flow rule entity api update flow rule long id string app string limit app string resource integer grade double count integer strategy string ref resource integer control behavior integer warm up period sec integer max queueing time ms if id null return result of fail id can t be null flow rule entity entity repository find by id id if entity null return result of fail id id dose not exist if string util be not blank app entity set app app trim if string util be not blank limit app entity set limit app limit app trim if string util be not blank resource entity set resource resource trim if grade null if grade grade return result of fail grade must be or but grade get entity set grade grade if count null entity set count count if strategy null if strategy strategy strategy return result of fail strategy must be in but strategy get entity set strategy strategy if strategy if string util be blank ref resource return result of fail ref resource can t be null or empty when strategy entity set ref resource ref resource trim if control behavior null if control behavior control behavior control behavior return result of fail control behavior must be in but control behavior get if control behavior warm up period sec null return result of fail warm up period sec can t be null when control behavior if control behavior max queueing time ms null return result of fail max queueing time ms can t be null when control behavior entity set control behavior control behavior if warm up period sec null entity set warm up period sec warm up period sec if max queueing time ms null entity set max queueing time ms max queueing time ms date date new date entity set gmt modify date try entity repository save entity if entity null return result of fail save entity fail null publish rule entity get app entity get ip entity get port get time unit millisecond return result of success entity catch throwable t throwable e t instanceof execution exception t get cause t logger error error when update flow rule app ip rule id entity get app entity get ip id e return result of fail e get message 
param flow rule controller put mapping rule id auth action auth service privilege type write rule public result param flow rule entity api update param flow rule path variable id long id request body param flow rule entity entity if id null id return result of fail invalid id param flow rule entity old entity repository find by id id if old entity null return result of fail id id do not exist result param flow rule entity check result check entity internal entity if check result null return check result if check if support entity get app entity get ip entity get port return unsupported version entity set id id date date new date entity set gmt create old entity get gmt create entity set gmt modify date try entity repository save entity publish rule entity get app entity get ip entity get port get return result of success entity catch execution exception ex logger error error when update parameter flow rule id id ex get cause if be not support ex get cause return unsupported version else return result of throwable ex get cause catch throwable throwable logger error error when update parameter flow rule id id throwable return result of fail throwable get message 
flow controller v2 put mapping rule id auth action auth service privilege type write rule public result flow rule entity api update flow rule path variable id long id request body flow rule entity entity if id null id return result of fail invalid id flow rule entity old entity repository find by id id if old entity null return result of fail id id do not exist if entity null return result of fail invalid body entity set app old entity get app entity set ip old entity get ip entity set port old entity get port result flow rule entity check result check entity internal entity if check result null return check result entity set id id date date new date entity set gmt create old entity get gmt create entity set gmt modify date try entity repository save entity if entity null return result of fail save entity fail publish rule old entity get app catch throwable throwable logger error fail to update flow rule throwable return result of throwable throwable return result of success entity 
