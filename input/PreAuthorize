cluster controller pre authorize value consumer permission validator have create cluster permission request app id post mapping value app app id cluster public open cluster d t o create cluster path variable string app id path variable string env valid request body open cluster d t o cluster http servlet request request if object equal app id cluster get app id throw new bad request exception string format app id not equal app id in path s app id in payload s app id cluster get app id string cluster name cluster get name string operator cluster get datum change create by request precondition check argument string util be contain empty cluster name operator name and datum change create by should not be null or empty if input validator be valid cluster namespace cluster name throw new bad request exception string format invalid cluster name format s input validator invalid cluster namespace message if user service find by user id operator null throw new bad request exception user operator doesn t exist cluster d t o to create open api bean util transform to cluster d t o cluster cluster d t o create cluster d t o cluster service create cluster env from string env to create return open api bean util transform from cluster d t o create cluster d t o 
item controller pre authorize value consumer permission validator have modify namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name item public open item d t o create item path variable string app id path variable string env path variable string cluster name path variable string namespace name request body open item d t o item http servlet request request request precondition check argument string util be contain empty item get key item get datum change create by key and datum change create by should not be null or empty if user service find by user id item get datum change create by null throw new bad request exception user item get datum change create by doesn t exist if string util be empty item get comment item get comment length throw new bad request exception comment length should not exceed character item d t o to create open api bean util transform to item d t o item protect to create set line num to create set id to create set datum change last modify by to create get datum change create by to create set datum change last modify time null to create set datum change create time null item d t o create item item service create item app id env from string env cluster name namespace name to create return open api bean util transform from item d t o create item 
item controller pre authorize value consumer permission validator have modify namespace permission request app id namespace name env put map value app app id cluster cluster name namespace namespace name item key public void update item path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string key request body open item d t o item request param default value false boolean create if not exist http servlet request request request precondition check argument item null item payload can not be empty request precondition check argument string util be contain empty item get key item get datum change last modify by key and datum change last modify by can not be empty request precondition check argument item get key equal key key in path and payload be not consistent if user service find by user id item get datum change last modify by null throw new bad request exception user datum change last modify by not exist if string util be empty item get comment item get comment length throw new bad request exception comment length should not exceed character try item d t o to update item item service load item env from string env app id cluster name namespace name item get key protect only value comment last modify by can be modify to update item set comment item get comment to update item set value item get value to update item set datum change last modify by item get datum change last modify by item service update item app id env from string env cluster name namespace name to update item catch throwable ex if ex instanceof http status code exception check create if not exist if http status code exception ex get status code equal http status not find create if not exist create item app id env cluster name namespace name item request return throw ex 
item controller pre authorize value consumer permission validator have modify namespace permission request app id namespace name env delete mapping value app app id cluster cluster name namespace namespace name item key public void delete item path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string key request param string operator http servlet request request if user service find by user id operator null throw new bad request exception user operator not exist item d t o to delete item item service load item env from string env app id cluster name namespace name key if to delete item null throw new bad request exception item not exist item service delete item env from string env to delete item get id operator 
namespace branch controller pre authorize value consumer permission validator have create namespace permission request app id post mapping value app app id cluster cluster name namespace namespace name branch public open namespace d t o create branch path variable string app id path variable string env path variable string cluster name path variable string namespace name request param operator string operator http servlet request request request precondition check argument string util be contain empty operator operator can not be empty if user service find by user id operator null throw new bad request exception operator operator not exist namespace d t o namespace d t o namespace branch service create branch app id env value of env to upper case cluster name namespace name operator if namespace d t o null return null return bean util transform open namespace d t o class namespace d t o 
namespace branch controller pre authorize value consumer permission validator have modify namespace permission request app id namespace name env delete mapping value app app id cluster cluster name namespace namespace name branch branch name public void delete branch path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request param operator string operator http servlet request request request precondition check argument string util be contain empty operator operator can not be empty if user service find by user id operator null throw new bad request exception operator operator not exist boolean can delete consumer permission validator have release namespace permission request app id namespace name env consumer permission validator have modify namespace permission request app id namespace name env release service load latest release app id env value of env branch name namespace name null if can delete throw new access deny exception forbidden operation cause by you don t have release permission or you don t have modification permission or you have modification permission but branch have be release namespace branch service delete branch app id env value of env to upper case cluster name namespace name branch name operator 
namespace branch controller pre authorize value consumer permission validator have modify namespace permission request app id namespace name env put map value app app id cluster cluster name namespace namespace name branch branch name rule public void update branch rule path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body open gray release rule d t o rule request param operator string operator http servlet request request request precondition check argument string util be contain empty operator operator can not be empty if user service find by user id operator null throw new bad request exception operator operator not exist rule set app id app id rule set cluster name cluster name rule set namespace name namespace name rule set branch name branch name gray release rule d t o gray release rule d t o open api bean util transform to gray release rule d t o rule namespace branch service update branch gray rule app id env value of env to upper case cluster name namespace name branch name gray release rule d t o operator 
namespace controller pre authorize value consumer permission validator have create namespace permission request app id post mapping value openapi v1 app app id appnamespace public open app namespace d t o create namespace path variable string app id request body open app namespace d t o app namespace d t o http servlet request request if object equal app id app namespace d t o get app id throw new bad request exception string format app id not equal app id in path s app id in payload s app id app namespace d t o get app id request precondition check argument not empty app namespace d t o get app id app namespace d t o get name app namespace d t o get format app namespace d t o get datum change create by if input validator be valid app namespace app namespace d t o get name throw new bad request exception string format invalid namespace format s input validator invalid cluster namespace message input validator invalid namespace namespace message if config file format be valid format app namespace d t o get format throw new bad request exception string format invalid namespace format format s app namespace d t o get format string operator app namespace d t o get datum change create by if user service find by user id operator null throw new bad request exception string format illegal user user s operator app namespace app namespace open api bean util transform to app namespace app namespace d t o app namespace create app namespace app namespace service create app namespace in local app namespace app namespace d t o be append namespace prefix publisher publish event new app namespace creation event create app namespace return open api bean util transform to open app namespace d t o create app namespace 
release controller pre authorize value consumer permission validator have release namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name release public open release d t o create release path variable string app id path variable string env path variable string cluster name path variable string namespace name request body namespace release d t o model http servlet request request request precondition check argument string util be contain empty model get release by model get release title param release title and release by can not be empty if user service find by user id model get release by null throw new bad request exception user release by not exist namespace release model release model bean util transform namespace release model class model release model set app id app id release model set env env from string env to string release model set cluster name cluster name release model set namespace name namespace name return open api bean util transform from release d t o release service publish release model 
release controller pre authorize value consumer permission validator have release namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name branch branch name merge public open release d t o merge path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request param value delete branch default value true boolean delete branch request body namespace release d t o model http servlet request request request precondition check argument string util be contain empty model get release by model get release title param release title and release by can not be empty if user service find by user id model get release by null throw new bad request exception user release by not exist release d t o merged release namespace branch service merge app id env value of env to upper case cluster name namespace name branch name model get release title model get release comment model be emergency publish delete branch model get release by return open api bean util transform from release d t o merged release 
release controller pre authorize value consumer permission validator have release namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name branch branch name release public open release d t o create gray release path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body namespace release d t o model http servlet request request request precondition check argument string util be contain empty model get release by model get release title param release title and release by can not be empty if user service find by user id model get release by null throw new bad request exception user release by not exist namespace release model release model bean util transform namespace release model class model release model set app id app id release model set env env from string env to string release model set cluster name branch name release model set namespace name namespace name return open api bean util transform from release d t o release service publish release model 
release controller pre authorize value consumer permission validator have release namespace permission request app id namespace name env post mapping value app app id cluster cluster name namespace namespace name branch branch name gray del release public open release d t o create gray del release path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body namespace gray del release d t o model http servlet request request request precondition check argument string util be contain empty model get release by model get release title param release title and release by can not be empty request precondition check argument model get gray del key null param gray del key can not be null if user service find by user id model get release by null throw new bad request exception user release by not exist namespace gray del release model release model bean util transform namespace gray del release model class model release model set app id app id release model set env env to upper case release model set cluster name branch name release model set namespace name namespace name return open api bean util transform from release d t o release service publish release model release model get release by 
access key controller pre authorize value permission validator be app admin app id post mapping value app app id envs env accesskey public access key d t o save path variable string app id path variable string env request body access key d t o access key d t o string secret uuid random u u i d to string replace all access key d t o set app id app id access key d t o set secret secret return access key service create access key env from string env access key d t o 
access key controller pre authorize value permission validator be app admin app id get map value app app id envs env accesskey public list access key d t o find by app id path variable string app id path variable string env return access key service find by app id env from string env app id 
access key controller pre authorize value permission validator be app admin app id delete mapping value app app id envs env accesskeys id public void delete path variable string app id path variable string env path variable long id string operator user info holder get user get user id access key service delete access key env from string env app id id operator 
access key controller pre authorize value permission validator be app admin app id put map value app app id envs env accesskeys id enable public void enable path variable string app id path variable string env path variable long id string operator user info holder get user get user id access key service enable env from string env app id id operator 
access key controller pre authorize value permission validator be app admin app id put map value app app id envs env accesskeys id disable public void disable path variable string app id path variable string env path variable long id string operator user info holder get user get user id access key service disable env from string env app id id operator 
app controller pre authorize value permission validator have create application permission post map public app create valid request body app model app model app app transform to app app model app create app app service create app in local app publisher publish event new app creation event create app set string admin app model get admin if collection util be empty admin role permission service assign role to user role util build app master role name create app get app id admin user info holder get user get user id return create app 
app controller pre authorize value permission validator be app admin app id put mapping app id public void update path variable string app id valid request body app model app model if object equal app id app model get app id throw new bad request exception the app id of path variable and request body be different app app transform to app app model app update app app service update app in local app publisher publish event new app info change event update app 
app controller pre authorize value permission validator be super admin delete mapping app id public void delete app path variable string app id app app app service delete app in local app id publisher publish event new app deletion event app 
cluster controller pre authorize value permission validator have create cluster permission app id post mapping value app app id env env cluster public cluster d t o create cluster path variable string app id path variable string env valid request body cluster d t o cluster string operator user info holder get user get user id cluster set datum change last modify by operator cluster set datum change create by operator return cluster service create cluster env value of env cluster 
cluster controller pre authorize value permission validator be super admin delete mapping value app app id env env cluster cluster name public response entity void delete cluster path variable string app id path variable string env path variable string cluster name cluster service delete cluster env from string env app id cluster name return response entity ok build 
configs export controller pre authorize value permission validator have modify namespace permission app id namespace name env post mapping app app id env env cluster cluster name namespace namespace name item import public void import config file path variable string app id path variable string env path variable string cluster name path variable string namespace name request param file multipart file file if file be empty throw new bad request exception the file be empty namespace d t o namespace d t o namespace service load namespace base info app id env from string env cluster name namespace name if object be null namespace d t o throw new bad request exception string format namespace be not exist namespace name namespace text model model new namespace text model list string file name split splitter on split to list file get original filename if file name split size throw new bad request exception the file format be invalid string format file name split get file name split size model set format format model set app id app id model set env env model set cluster name cluster name model set namespace name namespace name model set namespace id namespace d t o get id string config text try input stream in file get input stream config text config to file util file to string in catch i o exception e throw new service exception read config file error e model set config text config text config service update config item by text model 
consumer controller transactional pre authorize value permission validator be super admin post mapping value consumer public consumer token create consumer request body consumer consumer request param value expire require false date time format pattern yyyy m mdd h hmmss date expire if string util be contain empty consumer get app id consumer get name consumer get owner name consumer get org id throw new bad request exception param app id name owner name org id can not be empty consumer create consumer consumer service create consumer consumer if object be null expire expire default expire return consumer service generate and save consumer token create consumer expire 
consumer controller pre authorize value permission validator be super admin post mapping value consumer token assign role public list consumer role assign namespace role to consumer path variable string token request param string type request param require false string env request body namespace d t o namespace string app id namespace get app id string namespace name namespace get namespace name if string util be empty app id throw new bad request exception param app id can not be empty if object equal app role type return collection singleton list consumer service assign app role to consumer token app id if string util be empty namespace name throw new bad request exception param namespace name can not be empty if null env string env array env split list string env list list new array list validate env parameter for string env env array if string be null or empty env continue if env unknown equal env transform env env throw new bad request exception string format env s be illegal env env list add env list consumer role consume role new array list for string env env list consume role add all consumer service assign namespace role to consumer token app id namespace name env return consume role return consumer service assign namespace role to consumer token app id namespace name 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env put map value app app id env env cluster cluster name namespace namespace name item consume application json public void modify item by text path variable string app id path variable string env path variable string cluster name path variable string namespace name request body namespace text model model model set app id app id model set cluster name cluster name model set env env model set namespace name namespace name config service update config item by text model 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env post mapping app app id env env cluster cluster name namespace namespace name item public item d t o create item path variable string app id path variable string env path variable string cluster name path variable string namespace name request body item d t o item check model be valid item item protect item set line num item set id string user id user info holder get user get user id item set datum change create by user id item set datum change last modify by user id item set datum change create time null item set datum change last modify time null return config service create item app id env value of env cluster name namespace name item 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env put mapping app app id env env cluster cluster name namespace namespace name item public void update item path variable string app id path variable string env path variable string cluster name path variable string namespace name request body item d t o item check model be valid item item string username user info holder get user get user id item set datum change last modify by username config service update item app id env value of env cluster name namespace name item 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env delete mapping app app id env env cluster cluster name namespace namespace name item item id public void delete item path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable long item id item d t o item config service load item by id env from string env item id namespace d t o namespace namespace service load namespace base info app id env from string env cluster name namespace name in case someone construct a attack scenario if item get namespace id namespace get id throw new bad request exception invalid request item and namespace do not match config service delete item env value of env item id user info holder get user get user id 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name syntax check consume application json public response entity void syntax check text path variable string app id path variable string env path variable string cluster name path variable string namespace name request body namespace text model model do syntax check model return response entity ok build 
item controller pre authorize value permission validator have modify namespace permission app id namespace name env put mapping app app id env env cluster cluster name namespace namespace name revoke item public void revoke item path variable string app id path variable string env path variable string cluster name path variable string namespace name config service revoke item app id env value of env cluster name namespace name 
namespace branch controller pre authorize value permission validator have modify namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name branch public namespace d t o create branch path variable string app id path variable string env path variable string cluster name path variable string namespace name return namespace branch service create branch app id env value of env cluster name namespace name 
namespace branch controller pre authorize value permission validator have release namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name branch branch name merge public release d t o merge path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request param value delete branch default value true boolean delete branch request body namespace release model model if model be emergency publish portal config be emergency publish allow env from string env throw new bad request exception string format env s be not support emergency publish now env release d t o create release namespace branch service merge app id env value of env cluster name namespace name branch name model get release title model get release comment model be emergency publish delete branch config publish event event config publish event instance event with app id app id with cluster cluster name with namespace namespace name with release id create release get id set merge event true set env env value of env publisher publish event event return create release 
namespace branch controller pre authorize value permission validator have operate namespace permission app id namespace name env put map value app app id env env cluster cluster name namespace namespace name branch branch name rule public void update branch rule path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body gray release rule d t o rule namespace branch service update branch gray rule app id env value of env cluster name namespace name branch name rule 
namespace controller pre authorize value permission validator have create namespace permission app id post mapping app app id namespace public response entity void create namespace path variable string app id request body list namespace creation model model check model collection util be empty model string namespace name model get get namespace get namespace name string operator user info holder get user get user id role initialization service init namespace role app id namespace name operator role initialization service init namespace env role app id namespace name operator for namespace creation model model model namespace d t o namespace model get namespace request precondition check argument not empty model get env namespace get app id namespace get cluster name namespace get namespace name try namespace service create namespace env value of model get env namespace catch exception e logger error create namespace fail e tracer log error string format create namespace fail env s namespace s model get env namespace get namespace name e namespace service assign namespace role to operator app id namespace name user info holder get user get user id return response entity ok build 
namespace controller pre authorize value permission validator have delete namespace permission app id delete mapping app app id env env cluster cluster name namespace namespace name public response entity void delete namespace path variable string app id path variable string env path variable string cluster name path variable string namespace name namespace service delete namespace app id env value of env cluster name namespace name return response entity ok build 
namespace controller pre authorize value permission validator be super admin delete mapping app app id appnamespace namespace name public response entity void delete app namespace path variable string app id path variable string namespace name app namespace app namespace app namespace service delete app namespace app id namespace name publisher publish event new app namespace deletion event app namespace return response entity ok build 
namespace controller pre authorize value permission validator have create app namespace permission app id app namespace post mapping app app id appnamespace public app namespace create app namespace path variable string app id request param default value true boolean append namespace prefix valid request body app namespace app namespace if input validator be valid app namespace app namespace get name throw new bad request exception string format invalid namespace format s input validator invalid cluster namespace message input validator invalid namespace namespace message app namespace create app namespace app namespace service create app namespace in local app namespace append namespace prefix if portal config can app admin create private namespace create app namespace be public namespace service assign namespace role to operator app id app namespace get name user info holder get user get user id publisher publish event new app namespace creation event create app namespace return create app namespace 
permission controller pre authorize value permission validator have assign role permission app id post mapping app app id envs env namespaces namespace name role role type public response entity void assign namespace env role to user path variable string app id path variable string env path variable string namespace name path variable string role type request body string user check user exist user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal validate env parameter if env unknown env transform env env throw new bad request exception env be illegal set string assign user role permission service assign role to user role util build namespace role name app id namespace name role type env set new hash set user user info holder get user get user id if collection util be empty assign user throw new bad request exception user already authorize return response entity ok build 
permission controller pre authorize value permission validator have assign role permission app id delete mapping app app id envs env namespaces namespace name role role type public response entity void remove namespace env role from user path variable string app id path variable string env path variable string namespace name path variable string role type request param string user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal validate env parameter if env unknown env transform env env throw new bad request exception env be illegal role permission service remove role from user role util build namespace role name app id namespace name role type env set new hash set user user info holder get user get user id return response entity ok build 
permission controller pre authorize value permission validator have assign role permission app id post mapping app app id namespace namespace name role role type public response entity void assign namespace role to user path variable string app id path variable string namespace name path variable string role type request body string user check user exist user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal set string assign user role permission service assign role to user role util build namespace role name app id namespace name role type set new hash set user user info holder get user get user id if collection util be empty assign user throw new bad request exception user already authorize return response entity ok build 
permission controller pre authorize value permission validator have assign role permission app id delete mapping app app id namespace namespace name role role type public response entity void remove namespace role from user path variable string app id path variable string namespace name path variable string role type request param string user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal role permission service remove role from user role util build namespace role name app id namespace name role type set new hash set user user info holder get user get user id return response entity ok build 
permission controller pre authorize value permission validator have manage app master permission app id post mapping app app id role role type public response entity void assign app role to user path variable string app id path variable string role type request body string user check user exist user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal set string assign user role permission service assign role to user role util build app role name app id role type set new hash set user user info holder get user get user id if collection util be empty assign user throw new bad request exception user already authorize return response entity ok build 
permission controller pre authorize value permission validator have manage app master permission app id delete mapping app app id role role type public response entity void remove app role from user path variable string app id path variable string role type request param string user request precondition check argument not empty user if role type be valid role type role type throw new bad request exception role type be illegal role permission service remove role from user role util build app role name app id role type set new hash set user user info holder get user get user id return response entity ok build 
permission controller pre authorize value permission validator be super admin post mapping system role create application public response entity void add create application role to user request body list string user id user id for each this check user exist role permission service assign role to user system role manager service create application role name new hash set user id user info holder get user get user id return response entity ok build 
permission controller pre authorize value permission validator be super admin delete mapping system role create application user id public response entity void delete create application role from user path variable user id string user id check user exist user id set string user id new hash set user id add user id role permission service remove role from user system role manager service create application role name user id user info holder get user get user id return response entity ok build 
permission controller pre authorize value permission validator be super admin get map system role create application public list string get create application role user return role permission service query user with role system role manager service create application role name stream map user info get user id collect collector to list 
permission controller pre authorize value permission validator be super admin post mapping app app id system master user id public response entity void add manage app master role to user path variable string app id path variable string user id check user exist user id role initialization service init manage app master role app id user info holder get user get user id set string user id new hash set user id add user id role permission service assign role to user role util build app role name app id permission type manage app master user id user info holder get user get user id return response entity ok build 
permission controller pre authorize value permission validator be super admin delete mapping app app id system master user id public response entity void forbid manage app master path variable string app id path variable string user id check user exist user id role initialization service init manage app master role app id user info holder get user get user id set string user id new hash set user id add user id role permission service remove role from user role util build app role name app id permission type manage app master user id user info holder get user get user id return response entity ok build 
release controller pre authorize value permission validator have release namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name release public release d t o create release path variable string app id path variable string env path variable string cluster name path variable string namespace name request body namespace release model model model set app id app id model set env env model set cluster name cluster name model set namespace name namespace name if model be emergency publish portal config be emergency publish allow env value of env throw new bad request exception string format env s be not support emergency publish now env release d t o create release release service publish model config publish event event config publish event instance event with app id app id with cluster cluster name with namespace namespace name with release id create release get id set normal publish event true set env env value of env publisher publish event event return create release 
release controller pre authorize value permission validator have release namespace permission app id namespace name env post mapping value app app id env env cluster cluster name namespace namespace name branch branch name release public release d t o create gray release path variable string app id path variable string env path variable string cluster name path variable string namespace name path variable string branch name request body namespace release model model model set app id app id model set env env model set cluster name branch name model set namespace name namespace name if model be emergency publish portal config be emergency publish allow env value of env throw new bad request exception string format env s be not support emergency publish now env release d t o create release release service publish model config publish event event config publish event instance event with app id app id with cluster cluster name with namespace namespace name with release id create release get id set gray publish event true set env env value of env publisher publish event event return create release 
server config controller pre authorize value permission validator be super admin post mapping server config public server config create or update valid request body server config server config string modify by user info holder get user get user id server config store config server config repository find by key server config get key if object be null store config create server config set datum change create by modify by server config set datum change last modify by modify by server config set id 0 l id jpa return server config repository save server config update bean util copy entity property server config store config store config set datum change last modify by modify by return server config repository save store config 
server config controller pre authorize value permission validator be super admin get map server config key public server config load server config path variable string key return server config repository find by key key 
system info controller pre authorize value permission validator be super admin get map public system info get system info system info system info new system info string version apollo version if be valid version version system info set version version list env all env list portal setting get all env for env env all env list environment info environment info adapt env2 environment info env system info add environment environment info return system info 
system info controller pre authorize value permission validator be super admin get mapping value health public health check health request param string instance id list env all env portal setting get all env service d t o service null for final env env all envs environment info env info adapt env2 environment info env if env info get admin service null for final service d t o s env info get admin service if instance id equal s get instance id service s break if env info get config service null for final service d t o s env info get config service if instance id equal s get instance id service s break if service null throw new illegal argument exception no such instance of instance id instance id return rest template get for object service get homepage url health health class 
user info controller pre authorize value permission validator be super admin post map user public void create or update user request body user p o user if string util be contain empty user get username user get password throw new bad request exception username and password can not be empty if user service instanceof spring security user service spring security user service user service create or update user else throw new unsupported operation exception create or update user operation be unsupported 
