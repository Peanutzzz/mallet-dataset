package program util pipeline test parameterized parameter public static collection test parameter parameter return array as list test parameter of datum set test program class pipeline plan pipeline get execution config test parameter of datum stream test program class pipeline stream graph pipeline get execution config 
bucket sink migration test parameterized parameter name migration savepoint bucket file prefix public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 var folder tv b 1d8fvx23dgk1 xs8db 95h0000gn t junit4273542175898623023 junit3801102997056424640 1970 - 01 part tuple2 of migration version v1 var folder tv b 1d8fvx23dgk1 xs8db 95h0000gn t junit3198043255809479705 junit8947526563966405708 1970 - 01 part tuple2 of migration version v1 tmp junit4927100426019463155 junit2465610012100182280 1970 - 01 part tuple2 of migration version v1 tmp junit3459711376354834545 junit5114611885650086135 1970 - 01 part tuple2 of migration version v1 var folder r2 tdhx810x7yxb7q9 brnp49x40000gp t junit4288325607215628863 junit8132783417241536320 1970 - 01 part tuple2 of migration version v1 var folder rc 84k970 r94nz456tb9cdlt30s1j0k94 t junit7271027454784776053 junit5108755539355247469 1970 - 01 part tuple2 of migration version v1 var folder rc 84k970 r94nz456tb9cdlt30s1j0k94 t junit587754116249874744 junit764636113243634374 1970 - 01 part tuple2 of migration version v1 var folder v3 vg2lqnvx2ng24b5rr5qg2nv80000gp t junit9081786177439346 junit9063714383293729937 1970 - 01 part tuple2 of migration version v1 var folder v3 vg2lqnvx2ng24b5rr5qg2nv80000gp t junit9111597157791840754 junit2799810910414739323 1970 - 01 part 
h base connector i t case parameterized parameter name planner legacy public static object parameter return new object new object planner type blink planner true new object planner type blink planner false new object planner type old planner true 
jdbc datum type test parameterized parameter name index public static list test item test datum return array as list create test item derby char create test item derby varchar create test item derby boolean create test item derby tinyint create test item derby smallint create test item derby integer create test item derby bigint create test item derby float create test item derby double create test item derby decimal create test item derby date create test item derby time create test item derby timestamp create test item derby timestamp without time zone create test item derby timestamp without time zone create test item derby varbinary create test item mysql char create test item mysql varchar create test item mysql boolean create test item mysql tinyint create test item mysql smallint create test item mysql integer create test item mysql bigint create test item mysql float create test item mysql double create test item mysql decimal create test item mysql decimal create test item mysql date create test item mysql time create test item mysql timestamp create test item mysql timestamp without time zone create test item mysql varbinary create test item postgresql char create test item postgresql varchar create test item postgresql boolean create test item postgresql tinyint create test item postgresql smallint create test item postgresql integer create test item postgresql bigint create test item postgresql float create test item postgresql double create test item postgresql decimal create test item postgresql decimal create test item postgresql date create test item postgresql time create test item postgresql timestamp create test item postgresql timestamp without time zone create test item postgresql varbinary create test item postgresql array integer unsupported type throw error create test item derby binary the derby dialect doesn t support type binary create test item derby varbinary the derby dialect doesn t support type varbinary create test item derby timestamp with local time zone the derby dialect doesn t support type timestamp with local time zone create test item derby decimal the precision of field f0 be out of the decimal precision range support by derby dialect create test item mysql binary the my s q l dialect doesn t support type binary create test item mysql varbinary the my s q l dialect doesn t support type varbinary create test item mysql timestamp without time zone the precision of field f0 be out of the timestamp precision range support by my s q l dialect create test item mysql timestamp with local time zone the my s q l dialect doesn t support type timestamp with local time zone create test item postgresql binary the postgre s q l dialect doesn t support type binary create test item postgresql varbinary the postgre s q l dialect doesn t support type varbinary create test item postgresql timestamp without time zone the precision of field f0 be out of the timestamp precision range support by postgre s q l dialect create test item postgresql timestamp with local time zone the postgre s q l dialect doesn t support type timestamp with local time zone 
jdbc lookup table i t case parameterized parameter name table factory use cache suppress warning unchecked rawtype public static collection object use cache return array as list new object legacy factory true legacy factory false dynamic factory true dynamic factory false 
flink kafka producer migration operator test parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 
flink kafka producer migration test parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 
kafka serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification transaction state serializer migration version transaction state serializer setup class transaction state serializer verifier class test specification add new test specification context state serializer migration version context state serializer setup class context state serializer verifier class return test specification 
flink kafka producer011 migration test parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 
kafka011 serializer upgrade test suppress warning unchecked parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification transaction state serializer migration version transaction state serializer setup class transaction state serializer verifier class test specification add new test specification context state serializer migration version context state serializer setup class context state serializer verifier class return test specification 
flink kafka consumer base migration test parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 
abstract fetcher watermark test parameterized parameter public static collection watermark strategy long get param return array as list new assigner with periodic watermark adapter strategy new periodic test extractor watermark strategy for generator ctx new periodic test watermark generator with timestamp assigner event previous timestamp event 
abstract partition discoverer test parameterized parameter name kafka topic descriptor suppress warning unchecked public static collection kafka topic descriptor time characteristic return array as list new kafka topic descriptor new kafka topic descriptor collection singleton list test topic null new kafka topic descriptor new kafka topic descriptor null pattern compile test topic pattern 
kafka topic descriptor test parameterized parameter public static collection object datum return array as list new object topic1 null array as list topic1 topic2 topic3 true topic1 null array as list topic2 topic3 false topic1 pattern compile topic 0 - 9 null true topicx pattern compile topic 0 - 9 null false 
kafka table test base parameterize parameter name legacy format public static object parameter return new object cover all format for new and old connector new object false json format new object false avro format new object false csv format new object true json format new object true avro format new object true csv format 
flink kinesis consumer migration test parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 
writable serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification writeable serializer migration version writable serializer setup class writable serializer verifier class return test specification 
execution config from configuration test parameterized parameter name public static collection test spec spec return array as list test spec test value false when set from file pipeline auto generate uid false via setter boolean setter execution config enable auto generate u i d execution config disable auto generate u i d getter via execution config have auto generate u i d enable non default value false test spec test value false when set from file pipeline auto type registration false via setter boolean setter e throw new illegal argument exception can not enable auto type registration execution config disable auto type registration getter via e e be auto type registration disabled non default value false test spec test value l when set from file pipeline auto watermark interval min via setter execution config set auto watermark interval getter via execution config get auto watermark interval non default value l test spec test value execution config closure cleaner level top level when set from file pipeline closure cleaner level top level via setter execution config set closure cleaner level getter via execution config get closure cleaner level non default value execution config closure cleaner level none test spec test value true when set from file pipeline force avro true via setter boolean setter execution config enable force avro execution config disable force avro getter via execution config be force avro enable non default value true test spec test value false when set from file pipeline force kryo false via setter boolean setter execution config enable force kryo execution config disable force kryo getter via execution config be force kryo enable non default value false test spec test value false when set from file pipeline generic type false via setter boolean setter execution config enable generic type execution config disable generic type getter via exec config exec config have generic type disabled non default value false test spec test value get test global job parameter when set from file pipeline global job parameter key1 value1 key2 value2 via setter execution config set global job parameter getter via execution config get global job parameter non default value get other test global job parameter test spec test value when set from file pipeline max parallelism via setter execution config set max parallelism getter via execution config get max parallelism non default value test spec test value true when set from file pipeline object reuse true via setter boolean setter execution config enable object reuse execution config disable object reuse getter via execution config be object reuse enable non default value true test spec test value true when set from file execution checkpoint snapshot compression true via setter execution config set use snapshot compression getter via execution config be use snapshot compression non default value true test spec test value when set from file parallelism default via setter execution config set parallelism getter via execution config get parallelism non default value test spec test value l when set from file task cancellation interval via setter execution config set task cancellation interval getter via execution config get task cancellation interval non default value 21 l test spec test value l when set from file task cancellation timeout via setter execution config set task cancellation timeout getter via execution config get task cancellation timeout non default value 21 l test spec test value l when set from file metric latency interval via setter execution config set latency tracking interval getter via execution config get latency tracking interval non default value 21 l 
primitive array serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification boolean primitive array serializer migration version primitive array serializer upgrade test specification primitive boolean array setup class primitive array serializer upgrade test specification primitive boolean array verifier class test specification add new test specification byte primitive array serializer migration version primitive array serializer upgrade test specification primitive byte array setup class primitive array serializer upgrade test specification primitive byte array verifier class test specification add new test specification char primitive array serializer migration version primitive array serializer upgrade test specification primitive char array setup class primitive array serializer upgrade test specification primitive char array verifier class test specification add new test specification double primitive array serializer migration version primitive array serializer upgrade test specification primitive double array setup class primitive array serializer upgrade test specification primitive double array verifier class test specification add new test specification float primitive array serializer migration version primitive array serializer upgrade test specification primitive float array setup class primitive array serializer upgrade test specification primitive float array verifier class test specification add new test specification int primitive array serializer migration version primitive array serializer upgrade test specification primitive int array setup class primitive array serializer upgrade test specification primitive int array verifier class test specification add new test specification long primitive array serializer migration version primitive array serializer upgrade test specification primitive long array setup class primitive array serializer upgrade test specification primitive long array verifier class test specification add new test specification short primitive array serializer migration version primitive array serializer upgrade test specification primitive short array setup class primitive array serializer upgrade test specification primitive short array verifier class test specification add new test specification string array serializer migration version primitive array serializer upgrade test specification primitive string array setup class primitive array serializer upgrade test specification primitive string array verifier class return test specification 
basic type serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification big dec serializer migration version basic type serializer upgrade test specification big dec serializer setup class basic type serializer upgrade test specification big dec serializer verifier class test specification add new test specification big int serializer migration version basic type serializer upgrade test specification big int serializer setup class basic type serializer upgrade test specification big int serializer verifier class test specification add new test specification boolean serializer migration version basic type serializer upgrade test specification boolean serializer setup class basic type serializer upgrade test specification boolean serializer verifier class test specification add new test specification boolean value serializer migration version basic type serializer upgrade test specification boolean value serializer setup class basic type serializer upgrade test specification boolean value serializer verifier class test specification add new test specification byte serializer migration version basic type serializer upgrade test specification byte serializer setup class basic type serializer upgrade test specification byte serializer verifier class test specification add new test specification byte value serializer migration version basic type serializer upgrade test specification byte value serializer setup class basic type serializer upgrade test specification byte value serializer verifier class test specification add new test specification char serializer migration version basic type serializer upgrade test specification char serializer setup class basic type serializer upgrade test specification char serializer verifier class test specification add new test specification char value serializer migration version basic type serializer upgrade test specification char value serializer setup class basic type serializer upgrade test specification char value serializer verifier class test specification add new test specification date serializer migration version basic type serializer upgrade test specification date serializer setup class basic type serializer upgrade test specification date serializer verifier class test specification add new test specification double serializer migration version basic type serializer upgrade test specification double serializer setup class basic type serializer upgrade test specification double serializer verifier class test specification add new test specification double value serializer migration version basic type serializer upgrade test specification double value serializer setup class basic type serializer upgrade test specification double value serializer verifier class test specification add new test specification float serializer migration version basic type serializer upgrade test specification float serializer setup class basic type serializer upgrade test specification float serializer verifier class test specification add new test specification float value serializer migration version basic type serializer upgrade test specification float value serializer setup class basic type serializer upgrade test specification float value serializer verifier class test specification add new test specification int serializer migration version basic type serializer upgrade test specification int serializer setup class basic type serializer upgrade test specification int serializer verifier class test specification add new test specification int value serializer migration version basic type serializer upgrade test specification int value serializer setup class basic type serializer upgrade test specification int value serializer verifier class test specification add new test specification long serializer migration version basic type serializer upgrade test specification long serializer setup class basic type serializer upgrade test specification long serializer verifier class test specification add new test specification long value serializer migration version basic type serializer upgrade test specification long value serializer setup class basic type serializer upgrade test specification long value serializer verifier class test specification add new test specification null value serializer migration version basic type serializer upgrade test specification null value serializer setup class basic type serializer upgrade test specification null value serializer verifier class test specification add new test specification short serializer migration version basic type serializer upgrade test specification short serializer setup class basic type serializer upgrade test specification short serializer verifier class test specification add new test specification short value serializer migration version basic type serializer upgrade test specification short value serializer setup class basic type serializer upgrade test specification short value serializer verifier class test specification add new test specification sql date serializer migration version basic type serializer upgrade test specification sql date serializer setup class basic type serializer upgrade test specification sql date serializer verifier class test specification add new test specification sql time serializer migration version basic type serializer upgrade test specification sql time serializer setup class basic type serializer upgrade test specification sql time serializer verifier class test specification add new test specification sql timestamp serializer migration version basic type serializer upgrade test specification sql timestamp serializer setup class basic type serializer upgrade test specification sql timestamp serializer verifier class test specification add new test specification string serializer migration version basic type serializer upgrade test specification string serializer setup class basic type serializer upgrade test specification string serializer verifier class test specification add new test specification string value serializer migration version basic type serializer upgrade test specification string value serializer setup class basic type serializer upgrade test specification string value serializer verifier class return test specification 
enum serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version enum serializer setup class enum serializer verifier class test specification add new test specification spec name reconfig migration version enum serializer reconfig setup class enum serializer reconfig verifier class return test specification 
list serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version list serializer setup class list serializer verifier class return test specification 
map serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version map serializer setup class map serializer verifier class return test specification 
composite type serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification either serializer migration version either serializer setup class either serializer verifier class test specification add new test specification generic array serializer migration version generic array serializer setup class generic array serializer verifier class return test specification 
copyable serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification copyable value serializer migration version copyable serializer setup class copyable serializer verifier class return test specification 
kryo serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification kryo type serializer empty config migration version kryo type serializer empty config setup class kryo type serializer empty config verifier class test specification add new test specification kryo type serializer unrelated config after restore migration version kryo type serializer empty config setup class kryo type serializer with unrelated config verifier class test specification add new test specification kryo type serializer change registration order migration version kryo type serializer change registration order setup class kryo type serializer change registration order verifier class test specification add new test specification kryo custom type serializer change registration order migration version kryo custom type serializer change registration order setup class kryo custom type serializer change registration order verifier class return test specification 
nullable serializer test parameterized parameter name public static list boolean whether to pad null value return array as list true false 
nullable serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification nullable padded serializer migration version nullable padded serializer setup class nullable padded serializer verifier class test specification add new test specification nullable not padded serializer migration version nullable not padded serializer setup class nullable not padded serializer verifier class return test specification 
pojo serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for pojo serializer we also test against 1.7 1.8 and 1.9 because we have snapshot for this which go beyond what we have for the usual subclass of type serializer upgrade test base we don t have snapshot datum for 1.10 but the pojo serializer have not be change in quite a while anyways list migration version test version new array list test version add migration version v1 test version add migration version v1 test version add migration version v1 test version add all array as list migration version for migration version migration version test version test specification add new test specification pojo serializer identical schema migration version pojo serializer upgrade test specification identical pojo schema setup class pojo serializer upgrade test specification identical pojo schema verifier class test specification add new test specification pojo serializer with modify schema migration version pojo serializer upgrade test specification modify pojo schema setup class pojo serializer upgrade test specification modify pojo schema verifier class test specification add new test specification pojo serializer with different field type migration version pojo serializer upgrade test specification different field type pojo schema setup class pojo serializer upgrade test specification different field type pojo schema verifier class test specification add new test specification pojo serializer with modify schema in register subclass migration version pojo serializer upgrade test specification modify register pojo subclass schema setup class pojo serializer upgrade test specification modify register pojo subclass schema verifier class test specification add new test specification pojo serializer with different field type in register subclass migration version pojo serializer upgrade test specification different field type pojo subclass schema setup class pojo serializer upgrade test specification different field type pojo subclass schema verifier class test specification add new test specification pojo serializer with non register subclass migration version pojo serializer upgrade test specification non register pojo subclass setup class pojo serializer upgrade test specification non register pojo subclass verifier class test specification add new test specification pojo serializer with different subclass registration order migration version pojo serializer upgrade test specification different pojo subclass registration order setup class pojo serializer upgrade test specification different pojo subclass registration order verifier class test specification add new test specification pojo serializer with miss register subclass migration version pojo serializer upgrade test specification miss register pojo subclass setup class pojo serializer upgrade test specification miss register pojo subclass verifier class test specification add new test specification pojo serializer with new register subclass migration version pojo serializer upgrade test specification new registered pojo subclass setup class pojo serializer upgrade test specification new registered pojo subclass verifier class test specification add new test specification pojo serializer with new and missing registered subclass migration version pojo serializer upgrade test specification new and missing register pojo subclass setup class pojo serializer upgrade test specification new and missing register pojo subclass verifier class return test specification 
row serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for row serializer we also test against 1.10 and newer because we have snapshot for this which go beyond what we have for the usual subclass of type serializer upgrade test base list migration version test version new array list test version add migration version v1 test version add all array as list migration version for migration version migration version test version test specification add new test specification row serializer migration version row serializer setup class row serializer verifier class return test specification 
tuple serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification tuple serializer migration version tuple serializer setup class tuple serializer verifier class return test specification 
value serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification value serializer migration version value serializer setup class value serializer verifier class return test specification 
configuration conversion test parameterized parameter public static collection test spec get spec return array as list from integer test spec when access conf conf get integer int expect test spec when access conf conf get long int expect 5 l test spec when access conf conf get float int expect 5f test spec when access conf conf get double int expect 5.0 test spec when access conf conf get boolean int true expect exception unrecognized option for boolean expect either true or false case insensitive test spec when access conf conf get string int expect test spec when access conf conf get byte int empty byte expect exception configuration can not evaluate value as a byte value test spec when access conf conf get class int configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang integer as a class name from long test spec when access conf conf get integer long expect test spec when access conf conf get long long expect 15 l test spec when access conf conf get float long expect 15f test spec when access conf conf get double long expect 15.0 test spec when access conf conf get boolean long true expect exception unrecognized option for boolean expect either true or false case insensitive test spec when access conf conf get string long expect test spec when access conf conf get byte long empty byte expect exception configuration can not evaluate value as a byte value test spec when access conf conf get class long configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang long as a class name from too long test spec when access conf conf get integer too long expect exception configuration value overflow underflow the integer type test spec when access conf conf get long too long expect too long test spec when access conf conf get float too long expect float too long test spec when access conf conf get double too long expect double too long test spec when access conf conf get boolean too long true expect exception unrecognized option for boolean expect either true or false case insensitive test spec when access conf conf get string too long expect string value of too long test spec when access conf conf get byte too long empty byte expect exception configuration can not evaluate value as a byte value test spec when access conf conf get class too long configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang long as a class name from float test spec when access conf conf get integer float expect exception for input string 2.1456776 number format exception class test spec when access conf conf get long float expect exception for input string 2.1456776 number format exception class test spec when access conf conf get float float expect 2.1456775 f test spec when access conf conf get double float expect close to 2.1456775 0.0000001 test spec when access conf conf get boolean float true expect exception unrecognized option for boolean 2.1456776 expect either true or false case insensitive test spec when access conf conf get string float expect start with 2.145677 test spec when access conf conf get byte float empty byte expect exception configuration can not evaluate value 2.1456776 as a byte value test spec when access conf conf get class float configuration conversion test class configuration conversion test class get class loader expect exception onfiguration can not evaluate object of class class java lang float as a class name from double test spec when access conf conf get integer double expect exception for input string 3.141592653589793 number format exception class test spec when access conf conf get long double expect exception for input string 3.141592653589793 number format exception class test spec when access conf conf get float double expect new be close to 3.141592 f 0.000001 f test spec when access conf conf get double double expect math pi test spec when access conf conf get boolean double true expect exception unrecognized option for boolean 3.141592653589793 expect either true or false case insensitive test spec when access conf conf get string double expect start with 3.1415926535 test spec when access conf conf get byte double empty byte expect exception configuration can not evaluate value 3.141592653589793 as a byte value test spec when access conf conf get class double configuration conversion test class configuration conversion test class get class loader expect exception onfiguration can not evaluate object of class class java lang double as a class name from negative double test spec when access conf conf get integer negative double expect exception for input string 1.0 number format exception class test spec when access conf conf get long negative double expect exception for input string 1.0 number format exception class test spec when access conf conf get float negative double expect new be close to 1f 0.000001 f test spec when access conf conf get double negative double expect 1 d test spec when access conf conf get boolean negative double true expect exception unrecognized option for boolean 1.0 expect either true or false case insensitive test spec when access conf conf get string negative double expect start with test spec when access conf conf get byte negative double empty byte expect exception configuration can not evaluate value 1.0 as a byte value test spec when access conf conf get class negative double configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang double as a class name from zero test spec when access conf conf get integer zero expect exception for input string 0.0 number format exception class test spec when access conf conf get long zero expect exception for input string 0.0 number format exception class test spec when access conf conf get float zero expect new be close to 0f 0.000001 f test spec when access conf conf get double zero expect 0 d test spec when access conf conf get boolean zero true expect exception unrecognized option for boolean 0.0 expect either true or false case insensitive test spec when access conf conf get string zero expect start with test spec when access conf conf get byte zero empty byte expect exception configuration can not evaluate value 0.0 as a byte value test spec when access conf conf get class zero configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang double as a class name from too long double test spec when access conf conf get integer too long double expect exception for input string 1.7976931348623157 e308 number format exception class test spec when access conf conf get long too long double expect exception for input string 1.7976931348623157 e308 number format exception class test spec when access conf conf get float too long double expect exception configuration value 1.7976931348623157 e308 overflow underflow the float type test spec when access conf conf get double too long double expect too long double test spec when access conf conf get boolean too long double true expect exception unrecognized option for boolean 1.7976931348623157 e308 expect either true or false case insensitive test spec when access conf conf get string too long double expect string value of too long double test spec when access conf conf get byte too long double empty byte expect exception configuration can not evaluate value 1.7976931348623157 e308 as a byte value test spec when access conf conf get class too long double configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang double as a class name from string test spec when access conf conf get integer string expect test spec when access conf conf get long string expect 42 l test spec when access conf conf get float string expect 42f test spec when access conf conf get double string expect 42.0 test spec when access conf conf get boolean string true expect exception unrecognized option for boolean expect either true or false case insensitive test spec when access conf conf get string string expect test spec when access conf conf get byte string empty byte expect exception configuration can not evaluate value as a byte value test spec when access conf conf get class string configuration conversion test class configuration conversion test class get class loader expect exception class not find exception class from non convertible string test spec when access conf conf get integer non convertible string expect exception for input string bcdefg number format exception class test spec when access conf conf get long non convertible string expect exception for input string bcdefg number format exception class test spec when access conf conf get float non convertible string expect exception for input string bcdefg number format exception class test spec when access conf conf get double non convertible string expect exception for input string bcdefg number format exception class test spec when access conf conf get boolean non convertible string true expect exception unrecognized option for boolean bcdefg expect either true or false case insensitive test spec when access conf conf get string non convertible string expect bcdefg test spec when access conf conf get byte non convertible string empty byte expect exception configuration can not evaluate value bcdefg as a byte value test spec when access conf conf get class non convertible string configuration conversion test class configuration conversion test class get class loader expect exception bcdefg class not find exception class from boolean test spec when access conf conf get integer boolean expect exception for input string true test spec when access conf conf get long boolean expect exception for input string true test spec when access conf conf get float boolean expect exception for input string true test spec when access conf conf get double boolean expect exception for input string true test spec when access conf conf get boolean boolean false expect true test spec when access conf conf get string boolean expect true test spec when access conf conf get byte boolean empty byte expect exception configuration can not evaluate value true as a byte value test spec when access conf conf get class boolean configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang boolean as a class name 
configuration parse invalid format test parameterized parameter name option invalid string public static object get spec return new object new object config option key int int type default value abc new object config option key long long type default value 1 l abc new object config option key float float type default value 1 f abc new object config option key double double type default value 1 d abc new object config option key boolean boolean type default value true abc new object config option key memory memory type default value memory size parse 1k b abc new object config option key duration duration type default value duration of seconds abc new object config option key enum enum type test enum class default value test enum e n u m1 abc new object config option key map map type default value collection empty map abc new object config option key list int int type as list default value a b c new object config option key list string string type as list default value a a b c 
memory size pretty print test parameterized parameter public static object parameter return new object new object new memory size memory unit kilo byte get multiplier byte new object new memory size byte new object new memory size kb new object new memory size memory unit giga byte get multiplier string format d s memory unit giga byte get multiplier byte new object new memory size byte 
readable writable configuration test parameterized parameter name public static collection test spec get spec return array as list new test spec config option key int int type default value value equal check default override new test spec config option key long long type default value 1 l value equal l check default override 5 l new test spec config option key float float type default value 0.01 f value equal 0.003 f 0.003 check default override 1.23 f new test spec config option key double double type default value 0.01 d value equal 0.003 d 0.003 check default override 1.23 d new test spec config option key boolean boolean type default value false value equal true true check default override true new test spec config option key list int int type as list default value value equal array as list 1 ; 2 3 ; 4 check default override array as list new test spec config option key list string string type as list default value a b c value equal array as list a b c a b c check default override collection singleton list c new test spec config option key interval duration type default value duration of hour value equal duration of minute min check default override duration of seconds new test spec config option key memory memory type default value new memory size value equal new memory size 1g check default override new memory size new test spec config option key property map type default value as map collection singleton list tuple2 of prop1 value1 value equal as map array as list tuple2 of key1 value1 tuple2 of key2 value2 key1 value1 key2 value2 check default override collection empty map new test spec config option key list property map type as list default value as map collection singleton list tuple2 of prop1 value1 value equal array as list as map array as list tuple2 of key1 value1 tuple2 of key2 value2 as map array as list tuple2 of key3 value3 key1 value1 key2 value2 key3 value3 check default override collection empty list 
structured option splitter escape test parameterized parameter name public static collection test spec get encode spec return array as list test spec encode a b c d expect a b c d test spec encode a bcd expect a bcd test spec encode a b c d expect a b c d test spec encode ab c d expect ab c d test spec encode ab d b expect ab d b test spec encode a b c d expect a b c d test spec encode a bcd expect a bcd test spec encode ab c d expect ab c d test spec encode ab d b expect ab d b test spec encode a b c d expect a b c d test spec encode a b c d expect a b c d 
structured option splitter test parameterized parameter name public static collection test spec get spec return array as list use single quote for quote test spec split a b c expect a b c test spec split a b c expect a b c test spec split a b c expect a b c test spec split ab d b c expect ab d b c test spec split a bd b c expect exception could not split string illegal quote at position test spec split ab d b c expect exception could not split string illegal quote at position test spec split a expect exception could not split string quote be not closed properly test spec split c expect exception could not split string quote be not closed properly use double quote for quote test spec split a b c expect a b c test spec split a b c expect a b c test spec split a b c expect a b c test spec split ab d b c expect ab d b c test spec split a bd b c expect exception could not split string illegal quote at position test spec split ab d b c expect exception could not split string illegal quote at position test spec split a expect exception could not split string quote be not closed properly test spec split c expect exception could not split string quote be not closed properly mix different quote test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c use different delimiter test spec split a b c expect a b c test spec split a b c expect a b c whitespace handle test spec split a b c expect a b c test spec split a b c expect a b c test spec split a b c a expect a b c a test spec split a b c expect a b c 
memory segment test base parameterized parameter name segment size public static collection object execution mode return array as list new object new object new object 
time util pretty print test parameterized parameter public static object parameter return new object new object duration of minute plus seconds s new object duration of nano n new object duration of seconds min new object duration of millis ms new object duration of hour plus seconds s new object duration of seconds m new object duration of millis min 
s q l client kafka i t case parameterized parameter name index kafka version kafka sql version public static collection object datum return array as list new object 0.10 2.2 0.10 kafka 0.10 kafka 0.10 jar 0.11 0.2 0.11 kafka 0.11 kafka 0.11 jar 2.4 universal kafka kafka jar 
stream kafka i t case parameterized parameter name index kafka version public static collection object datum return array as list new object flink streaming kafka010 test 0.10 2.2 flink streaming kafka011 test 0.11 0.2 flink streaming kafka test 2.4 
prometheus reporter end to end i t case parameterized parameter name index public static collection test param test parameter return array as list test param from jar in lib builder builder move jar prometheus jar prefix jar location plugin jar location lib reflection test param from jar in lib builder builder move jar prometheus jar prefix jar location plugin jar location lib factory test param from jar in plugin builder reflection test param from jar in plugin builder factory test param from jar in lib and plugin builder builder copy jar prometheus jar prefix jar location plugin jar location lib reflection test param from jar in lib and plugin builder builder copy jar prometheus jar prefix jar location plugin jar location lib factory 
azure file system behavior i t case parameterized parameter name scheme public static list string parameter throw i o exception boolean http only be https traffic only return http only array as list wasbs array as list wasb wasb 
azure f s factory test parameterized parameter name scheme public static list string parameter return array as list wasb wasb 
presto s3 file system i t case parameterized parameter name scheme public static list string parameter return array as list s3 s3p 
avro filesystem i t case parameterized parameter name public static collection boolean parameter return array as list false true 
avro serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification generic avro serializer migration version generic avro serializer setup class generic avro serializer verifier class test specification add new test specification specific avro serializer migration version specific avro serializer setup class specific avro serializer verifier class return test specification 
abstract file committer test parameterized parameter name override public static collection boolean parameter return array as list true false 
orc file system i t case parameterized parameter name public static collection boolean parameter return array as list false true 
parquet file system i t case parameterized parameter name public static collection boolean parameter return array as list false true 
parquet columnar row split reader test parameterized parameter name row group size public static collection integer parameter return array as list 
continuous file processing migration test parameterized parameter name migration savepoint mod time public static collection tuple2 migration version long parameter return array as list tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l 
lockable type serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version lockable type serializer setup class lockable type serializer verifier class return test specification 
n f a serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification event id serializer migration version event id serializer setup class event id serializer verifier class test specification add new test specification node id serializer migration version node id serializer setup class node id serializer verifier class test specification add new test specification dewey number serializer migration version dewey number serializer setup class dewey number serializer verifier class test specification add new test specification share buffer edge serializer migration version share buffer edge serializer setup class share buffer edge serializer verifier class test specification add new test specification share buffer node serializer migration version share buffer node serializer setup class share buffer node serializer verifier class test specification add new test specification nfa state serializer migration version n f a state serializer setup class n f a state serializer verifier class return test specification 
c e p migration test parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 
value array serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification byte value array serializer migration version byte value array serializer setup class byte value array serializer verifier class test specification add new test specification char value array serializer migration version char value array serializer setup class char value array serializer verifier class test specification add new test specification double value array serializer migration version double value array serializer setup class double value array serializer verifier class test specification add new test specification float value array serializer migration version float value array serializer setup class float value array serializer verifier class test specification add new test specification int value array serializer migration version int value array serializer setup class int value array serializer verifier class test specification add new test specification long value array serializer migration version long value array serializer setup class long value array serializer verifier class test specification add new test specification null value array serializer migration version null value array serializer setup class null value array serializer verifier class test specification add new test specification short value array serializer migration version short value array serializer setup class short value array serializer verifier class test specification add new test specification string value array serializer migration version string value array serializer setup class string value array serializer verifier class return test specification 
copyable value driver base i t case parameterized parameter name id type execution mode public static collection object execution mode list object execution mode new array list for string id type new string byte short char integer long float double string for test execution mode execution mode test execution mode value execution mode add new object id type execution mode return execution mode 
driver base i t case parameterized parameter name id type execution mode public static collection object execution mode list object execution mode new array list for string id type new string byte native byte short native short char native char integer native integer long native long float native float double native double string native string for test execution mode execution mode test execution mode value execution mode add new object id type execution mode return execution mode 
non transformable driver base i t case parameterized parameter name id type execution mode public static collection object execution mode list object execution mode new array list for string id type new string byte native byte short native short char native char integer native integer native long for test execution mode execution mode test execution mode value execution mode add new object id type execution mode return execution mode 
long value with proper hash code serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification long value with proper hash code serializer migration version long value with proper hash code serializer setup class long value with proper hash code serializer verifier class return test specification 
savepoint writer i t case parameterized parameter name savepoint writer public static collection state backend datum return array as list new memory state backend new rock d b state backend state backend new memory state backend 
union close branching test parameterized parameter public static collection object param collection object param array as list new object execution mode pipelined batch pipelined execution mode pipelined force pipelined pipelined execution mode batch batch pipelined execution mode batch force batch batch make sure that change to execution mode be reflect in this test assert equal execution mode value length param size return param 
timestamp serializer test parameterized parameter public static collection object datum return array as list new object 
kv state request serializer test parameterized parameter public static collection boolean parameter return array as list false true 
message serializer test parameterized parameter public static collection boolean parameter return array as list false true 
conjunct future test parameterized parameter public static collection future factory parameter return array as list new conjunct future factory new wait future factory 
netty client server ssl test parameterized parameter name ssl provider public static list string parameter return s s l util test available ssl provider 
bind datum test base parameterize parameter name compression enable public static boolean compression enable return new boolean false true 
recover input channel test parameterized parameter name be remote public static collection object parameter return array as list new object true false 
pipelined subpartition with read view test parameterized parameter name compression enable public static boolean parameter return new boolean false true 
leader election test parameterized parameter name leader election public static collection leader election type parameter return array as list leader election type value 
s s l util test parameterized parameter name ssl provider public static list string parameter return available ssl provider 
binary operator test base parameterize parameter public static collection object get configuration throw i o exception link list object config new link list execution config with reuse new execution config with reuse enable object reuse execution config without reuse new execution config without reuse disable object reuse object a without reuse configs add a object b with reuse configs add b return config 
driver test base parameterize parameter public static collection object get configuration link list object config new link list object execution config with reuse new execution config with reuse enable object reuse execution config without reuse new execution config without reuse disable object reuse object a without reuse configs add a object b with reuse configs add b return config 
unary operator test base parameterize parameter public static collection object get configuration execution config with reuse new execution config with reuse enable object reuse execution config without reuse new execution config without reuse disable object reuse object a without reuse object b with reuse return array as list a b 
bit set test parameterized parameter name byte size public static object get byte size return new integer 
asynchronous operation result test parameterized parameter public static collection object datum return array as list new object asynchronous operation result in progress asynchronous operation result complete new trigger id 
job submit handler test parameterized parameter name ssl enable public static iterable tuple2 boolean string datum array list tuple2 boolean string parameter new array list parameter add tuple2 of false no ssl for string ssl provider s s l util test available ssl provider parameter add tuple2 of true ssl provider return parameter 
job execution result response body test parameterized parameter public static collection object datum throw i o exception return array as list new object job execution result response body create new job result builder job id test job id application status application status succeed net runtime test net runtime accumulator result test accumulator serialize throwable new serialize throwable new runtime exception expect build job execution result response body create new job result builder job id test job id application status application status fail net runtime test net runtime accumulator result test accumulator build job execution result response body in progress 
savepoint info marshal test parameterized parameter public static collection object datum return array as list new object new savepoint info tmp null new savepoint info null new serialize throwable new runtime exception expect 
savepoint trigger request body test parameterized parameter public static collection object datum return array as list new object new savepoint trigger request body tmp true new savepoint trigger request body tmp false 
rest server endpoint i t case parameterized parameter public static collection object datum throw exception final configuration config get base config final string truststore path get test resource local127 truststore get absolute path final string keystore path get test resource local127 keystore get absolute path final configuration ssl config new configuration config ssl config set boolean security option ssl rest enable true ssl config set string security option ssl rest truststore truststore path ssl config set string security option ssl rest truststore password password ssl config set string security option ssl rest keystore keystore path ssl config set string security option ssl rest keystore password password ssl config set string security option ssl rest key password password final configuration ssl rest auth config new configuration ssl config ssl rest auth config set boolean security option ssl rest authentication enable true final configuration ssl pin rest auth config new configuration ssl rest auth config ssl pin rest auth config set string security option ssl rest cert fingerprint s s l util test get rest certificate fingerprint ssl pin rest auth config flink test return array as list new object config ssl config ssl rest auth config ssl pin rest auth config 
rest server s s l auth i t case parameterized parameter public static collection object datum throw exception client and server trust store do not match tuple2 configuration configuration untrusted get client server configuration configuration server config new configuration untrusted f1 server config set string security option ssl rest truststore trust store file expect fingerprint which client do not have server config set string security option ssl rest cert fingerprint s s l util test get rest certificate fingerprint server config flink test replace all 0 - 9 a z configuration client config new configuration untrusted f0 client config set string security option ssl rest truststore trust store file client and server use same trust store however server configure with mismatch fingerprint tuple2 configuration configuration with fingerprint tuple2 of client config server config return array as list new object untrusted with fingerprint 
array list serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version array list serializer setup class array list serializer verifier class return test specification 
file state backend test parameterized parameter public static list boolean mode return array as list true false 
checkpoint state output stream test parameterized parameter public static collection checkpoint state output stream type get checkpoint state output stream type return array as list checkpoint state output stream type value 
f checkpoint state output stream test parameterized parameter name relative path public static list boolean parameter return array as list true false 
heap state backend test base parameterize parameter public static collection boolean parameter return array as list false true 
java serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version java serializer setup class java serializer verifier class return test specification 
memory state backend test parameterized parameter name use asyncmode public static list boolean mode return array as list true false 
ttl serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification ttl serializer migration version ttl serializer setup class ttl serializer verifier class return test specification 
ttl state test base parameterized parameter name public static list ttl state test context base test context return array as list new ttl value state test context new ttl fix len elem list state test context new ttl non fix len elem list state test context new ttl map state all entry test context new ttl map state per element test context new ttl map state per null element test context new ttl aggregate state test context new ttl reduce state test context new ttl folding state test context 
void namespace serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version void namespace serializer setup class void namespace serializer verifier class return test specification 
rest a p i stability test parameterized parameter name version public static iterable rest a p i version get stable version return array stream rest a p i version value filter rest a p i version be stable version collect collector to list 
history server test parameterized parameter name flink version less than 1.4 public static collection boolean parameter return array as list true false 
scala either serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version either serializer setup class either serializer verifier class return test specification 
scala option serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version scala option serializer setup class scala option serializer verifier class return test specification 
scala try serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version scala try serializer setup class scala try serializer verifier class return test specification 
state backend benchmark util test parameterized parameter name public static collection object datum return array as list state backend benchmark util state backend type value 
rock d b state backend migration test parameterized parameter name incremental checkpoint public static collection boolean parameter return array as list false true 
rock d b state backend test parameterized parameter name incremental checkpoint public static collection boolean parameter return array as list false true 
union serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification union serializer one migration version union serializer one setup class union serializer one verifier class test specification add new test specification union serializer two migration version union serializer two setup class union serializer two verifier class return test specification 
checkpoint config from configuration test parameterized parameter name public static collection test spec spec return array as list test spec test value checkpoint mode at least once when set from file execution checkpoint mode at least once via setter checkpoint config set checkpoint mode getter via checkpoint config get checkpoint mode non default value checkpoint mode at least once test spec test value l when set from file execution checkpoint interval s via setter checkpoint config set checkpoint interval getter via checkpoint config get checkpoint interval non default value l test spec test value l when set from file execution checkpoint timeout s via setter checkpoint config set checkpoint timeout getter via checkpoint config get checkpoint timeout non default value l test spec test value when set from file execution checkpoint max concurrent checkpoint via setter checkpoint config set max concurrent checkpoint getter via checkpoint config get max concurrent checkpoint non default value test spec test value l when set from file execution checkpoint min pause s via setter checkpoint config set min pause between checkpoint getter via checkpoint config get min pause between checkpoint non default value l test spec test value true when set from file execution checkpoint prefer checkpoint for recovery true via setter checkpoint config set prefer checkpoint for recovery getter via checkpoint config be prefer checkpoint for recovery non default value true test spec test value checkpoint config externalize checkpoint cleanup retain on cancellation when set from file execution checkpoint externalized checkpoint retention retain on cancellation via setter checkpoint config enable externalized checkpoint getter via checkpoint config get externalize checkpoint cleanup non default value checkpoint config externalize checkpoint cleanup delete on cancellation test spec test value when set from file execution checkpoint tolerable fail checkpoint via setter checkpoint config set tolerable checkpoint failure number getter via checkpoint config get tolerable checkpoint failure number non default value test spec test value true when set from file execution checkpoint unaligned true via setter checkpoint config enable unaligned checkpoint getter via checkpoint config be unaligned checkpoint enable non default value true 
stream execution environment configuration test parameterized parameter name public static collection test spec spec return array as list test spec test value time characteristic ingestion time when set from file pipeline time characteristic ingestion time via setter stream execution environment set stream time characteristic getter via stream execution environment get stream time characteristic non default value time characteristic event time test spec test value l when set from file execution buffer timeout min via setter stream execution environment set buffer timeout getter via stream execution environment get buffer timeout non default value l test spec test value false when set from file pipeline operator chain false via setter env b if b throw new illegal argument exception can not programmatically enable operator chain else env disable operator chain getter via stream execution environment be chain enable non default value false test spec test value execution config closure cleaner level top level when set from file pipeline closure cleaner level top level via setter env v env get config set closure cleaner level v getter via env env get config get closure cleaner level non default value execution config closure cleaner level none test spec test value l when set from file execution checkpoint timeout s via setter env v env get checkpoint config set checkpoint timeout v getter via env env get checkpoint config get checkpoint timeout non default value l 
bucket state serializer test parameterized parameter name previous version public static collection integer previous version return array as list 
two phase commit sink state serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification two phase commit sink state serializer migration version two phase commit sink state serializer setup class two phase commit sink state serializer verifier class return test specification 
stream element queue test parameterized parameter public static collection async datum stream output mode output mode return array as list async datum stream output mode order async datum stream output mode unordered 
buffer entry serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification buffer entry serializer migration version buffer entry serializer setup class buffer entry serializer verifier class return test specification 
internal timer service impl test parameterized parameter name start end max suppress warning unchecked rawtype public static collection object key range return array as list new object short max value short max value short max value short max value short max value 
stream source context idle detection test parameterized parameter name test method suppress warning unchecked public static collection test method time characteristic return array as list new test method test method collect new test method test method collect with timestamp new test method test method emit watermark 
timer serializer upgrade test suppress warning unchecked parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification timer serializer migration version timer serializer setup class timer serializer verifier class return test specification 
checkpoint barrier unaligner cancellation test parameterized parameter name expect trigger expect abort num channel chan event public static object parameter return new object new object false true array as list cancel cancel new object false true array as list cancel cancel new object false true array as list cancel checkpoint new object true true array as list cancel checkpoint new object false true array as list cancel checkpoint new object true false array as list checkpoint checkpoint new object true false array as list checkpoint checkpoint new object true true array as list checkpoint checkpoint new object true false array as list checkpoint checkpoint new object true true array as list checkpoint cancel new object true true array as list checkpoint cancel new object true false array as list checkpoint cancel 
window operator migration test parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 
window serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification time window serializer migration version time window serializer setup class time window serializer verifier class test specification add new test specification global window serializer migration version global window serializer setup class global window serializer verifier class return test specification 
stream element serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification stream element serializer migration version stream element setup class stream element verifier class return test specification 
flink d d l datum type test parameterized parameter name index public static list test item test datum return array as list create test item char nullable fixture char1 type char create test item char not null fixture char1 type char not null create test item char not t n n u l l fixture char1 type char not null create test item char not null fixture char1 type char not null create test item char null nullable fixture char1 type char create test item char nullable fixture char33 type char create test item varchar nullable fixture varchar type varchar create test item varchar nullable fixture varchar33 type varchar create test item string nullable fixture create sql type sql type name varchar integer max value string create test item boolean nullable fixture boolean type boolean create test item binary nullable fixture binary type binary create test item binary nullable fixture binary33 type binary create test item varbinary nullable fixture varbinary type varbinary create test item varbinary nullable fixture varbinary33 type varbinary create test item byte nullable fixture create sql type sql type name varbinary integer max value byte create test item decimal nullable fixture decimal type decimal create test item dec nullable fixture decimal type decimal create test item numeric nullable fixture decimal type decimal create test item decimal nullable fixture decimal p10 s0 type decimal create test item dec nullable fixture decimal p10 s0 type decimal create test item numeric nullable fixture decimal p10 s0 type decimal create test item decimal nullable fixture decimal p10 s3 type decimal create test item dec nullable fixture decimal p10 s3 type decimal create test item numeric nullable fixture decimal p10 s3 type decimal create test item tinyint nullable fixture tinyint type tinyint create test item smallint nullable fixture smallint type smallint create test item integer nullable fixture int type integer create test item int nullable fixture int type integer create test item bigint nullable fixture bigint type bigint create test item float nullable fixture float type float create test item double nullable fixture double type double create test item double precision nullable fixture double type double create test item date nullable fixture date type date create test item time nullable fixture time type time create test item time without time zone nullable fixture time type time create test item time nullable fixture time3 type time create test item time without time zone nullable fixture time3 type time create test item timestamp nullable fixture timestamp type timestamp create test item timestamp without time zone nullable fixture timestamp type timestamp create test item timestamp nullable fixture timestamp3 type timestamp create test item timestamp without time zone nullable fixture timestamp3 type timestamp create test item timestamp with local time zone nullable fixture timestamp with local time zone type timestamp with local time zone create test item timestamp with local time zone nullable fixture timestamp3 with local time zone type timestamp with local time zone create test item array timestamp with local time zone nullable fixture create array type nullable fixture timestamp3 with local time zone type array timestamp with local time zone create test item array int not null nullable fixture create array type fixture int type array integer not null create test item int array nullable fixture create array type nullable fixture int type integer array create test item int not null array nullable fixture create array type fixture int type integer not null array create test item int array not null fixture create array type nullable fixture int type integer array not null create test item multiset int not null nullable fixture create multiset type fixture int type multiset integer not null create test item int multiset nullable fixture create multiset type nullable fixture int type integer multiset create test item int not null multiset nullable fixture create multiset type fixture int type integer not null multiset create test item int multiset not null fixture create multiset type nullable fixture int type integer multiset not null create test item map bigint boolean nullable fixture create map type nullable fixture bigint type nullable fixture boolean type map bigint boolean create test item row f0 int not null f1 boolean nullable fixture create struct type array as list fixture int type nullable fixture boolean type array as list f0 f1 row f0 integer not null f1 boolean create test item row f0 int not null f1 boolean nullable fixture create struct type array as list fixture int type nullable fixture boolean type array as list f0 f1 row f0 integer not null f1 boolean create test item row f0 int nullable fixture create struct type collection singleton list nullable fixture int type collection singleton list f0 row f0 integer create test item row f0 int nullable fixture create struct type collection singleton list nullable fixture int type collection singleton list f0 row f0 integer create test item row nullable fixture create struct type collection empty list collection empty list row create test item row nullable fixture create struct type collection empty list collection empty list row create test item row f0 int not null this be a comment f1 boolean this as well nullable fixture create struct type array as list fixture int type nullable fixture boolean type array as list f0 f1 row f0 integer not null this be a comment f1 boolean this as well create test item raw fixture raw type int class fixture raw type int serializer string nullable fixture raw type of integer raw fixture raw type int class fixture raw type int serializer string create test item raw fixture raw type int class fixture raw type int serializer string not null fixture raw type of integer raw fixture raw type int class fixture raw type int serializer string not null create test item raw fixture raw type int class fixture raw type int serializer string substring test literal chain to split long string fixture raw type int serializer string substring not null fixture raw type of integer test parse throw error create test item timestamp with time zone s encounter time at create test item timestamp with time zone s encounter time at create test item null s encounter null at line column create test item cat db my type null cat db my type create test item db my type null db my type create test item my type null my type create test item array my type null array my type create test item row f0 my type f1 c d t null row f0 my type f1 c d t create test item interval year s encounter interval at line column create test item raw s encounter at line column n be expect one of n binary string literal n quote string n prefix string literal n unicode string literal n create test item raw java lang integer s encounter at line column n be expect one of n binary string literal n quote string n prefix string literal n unicode string literal n 
table api identifier parse test parameterized parameter name parse expect identifier public static object parameter return new object new object array singleton list array new object table singleton list table new object cat db array as list cat db array new object cat db table as list cat db table new object db table as list db table new object ta ble singleton list ta ble new object c at d b ta ble as list c at d b ta ble new object db u anthropo in greek in unicode uescape as list db anthropo in greek new object db as list db anthropo in greek 
expression resolver test parameterized parameter name public static collection test spec parameter return array as list test spec test column range input schema table schema builder field f0 datum type bigint field f1 datum type string field f2 datum type smallint build select with column range f1 f2 with column range equal to new field reference expression f1 datum type string new field reference expression f2 datum type smallint new field reference expression f0 datum type bigint new field reference expression f1 datum type string test spec test flatten call input schema table schema builder field f0 datum type row datum type field n0 datum type bigint datum type field n1 datum type string build select f0 flatten equal to new call expression function identifier of get build in function definition get array as list new field reference expression f0 datum type row datum type field n0 datum type bigint datum type field n1 datum type string new value literal expression n0 datum type bigint new call expression function identifier of get build in function definition get array as list new field reference expression f0 datum type row datum type field n0 datum type bigint datum type field n1 datum type string new value literal expression n1 datum type string test spec test builtin function call input schema table schema builder field f0 datum type int field f1 datum type double build select f0 be equal f1 equal to new call expression function identifier of equal build in function definition equal array as list new field reference expression f0 datum type int new field reference expression f1 datum type double datum type boolean test spec test lookup legacy scalar function call input schema table schema builder field f0 datum type int build lookup function func new scalar function definition func new legacy scalar func select call func f0 equal to new call expression function identifier of func new scalar function definition func new legacy scalar func array as list value literal new field reference expression f0 datum type int datum type int bridge to integer class test spec test lookup system function call input schema table schema builder field f0 datum type int build lookup function func new scalar func select call func f0 equal to new call expression function identifier of func new scalar func array as list value literal new field reference expression f0 datum type int datum type int not null bridge to int class test spec test inline function call via a class input schema table schema builder field f0 datum type int build select call scalar func class f0 equal to new call expression new scalar func array as list value literal new field reference expression f0 datum type int datum type int not null bridge to int class test spec test lookup catalog function call input schema table schema builder field f0 datum type int build lookup function object identifier of cat db func new scalar func select call cat db func f0 equal to new call expression function identifier of object identifier of cat db func new scalar func array as list value literal new field reference expression f0 datum type int datum type int not null bridge to int class test spec test deeply nest user define inline call input schema table schema builder field f0 datum type int build lookup function func new scalar func select call func call new scalar func call func f0 equal to new call expression function identifier of func new scalar func collection singleton list new call expression new scalar func collection singleton list new call expression function identifier of func new scalar func array as list value literal new field reference expression f0 datum type int datum type int not null bridge to int class datum type int not null bridge to int class datum type int not null bridge to int class 
value operation tree builder test parameterized parameter name public static collection test spec parameter return as list test spec test flatten row constructor value row abc row efg equal to new value query operation as list as list value literal value literal abc as list value literal value literal efg table schema builder field f0 datum type int not null field f1 datum type char not null build test spec test find common type value row 1 l abc row 3.1 f defg equal to new value query operation as list as list cast value literal 1 l datum type float not null value literal abc datum type varchar not null as list value literal 3.1 f value literal defg datum type varchar not null table schema builder field f0 datum type float not null field f1 datum type varchar not null build test spec test explicit common type value datum type row datum type field id datum type decimal datum type field name datum type string row 1 l abc row 3.1 f defg equal to new value query operation as list as list cast value literal 1 l datum type decimal cast value literal abc datum type string not null datum type string as list cast value literal 3.1 f datum type decimal cast value literal defg datum type string not null datum type string table schema builder field id datum type decimal field name datum type string build test spec test explicit common type for nest row value datum type row datum type field id datum type decimal datum type field detail datum type row datum type field name datum type string datum type field amount datum type decimal row 1 l row abc row 3.1 f row defg new big decimal equal to new value query operation as list as list cast value literal 1 l datum type decimal row ctor datum type row datum type field name datum type string datum type field amount datum type decimal cast value literal abc datum type string not null datum type string cast value literal datum type decimal as list cast value literal 3.1 f datum type decimal row ctor datum type row datum type field name datum type string datum type field amount datum type decimal cast value literal defg datum type string not null datum type string cast value literal new big decimal datum type decimal not null datum type decimal table schema builder field id datum type decimal field detail datum type row datum type field name datum type string datum type field amount datum type decimal build test spec test find a common type for nest row value row 1 l row 1 l abc row 3.1 f row 3.1 f defg equal to new value query operation as list as list cast value literal 1 l datum type float not null row ctor datum type row datum type field f0 datum type float not null datum type field f1 datum type varchar not null not null cast value literal 1 l datum type float not null value literal abc datum type varchar not null as list value literal 3.1 f row ctor datum type row datum type field f0 datum type float not null datum type field f1 datum type varchar not null not null value literal 3.1 f datum type float not null value literal defg datum type varchar not null table schema builder field f0 datum type float not null field f1 datum type row datum type field f0 datum type float not null datum type field f1 datum type varchar not null not null build test spec test find common type insert cast for call value call new int scalar function row 3.1 f equal to new value query operation as list singleton list cast new call expression new int scalar function collection empty list datum type int datum type float singleton list cast value literal 3.1 f datum type float table schema builder field f0 datum type float build test spec test row in a function result be not flatten value call new row scalar function equal to new value query operation singleton list singleton list new call expression new row scalar function collection empty list datum type row datum type field f0 datum type int datum type field f1 datum type string table schema builder field f0 datum type row datum type field f0 datum type int datum type field f1 datum type string build test spec test can not find a common super type value value literal local time of value literal local date of expect validation exception type in from value must have a common super type could not find a common type for all row at column n could not find a common super type for type time not null date not null test spec test can not find a common super type in a nest row value row row value literal local time of row row value literal local time of row 2 d row 2.0 value literal local date of expect validation exception type in from value must have a common super type could not find a common type for all row at column n could not find a common super type for type row f0 int not null f1 time not null not null row f0 double not null f1 date not null not null test spec test can not cast to the request type value datum type row datum type field a data type bigint datum type field b datum type binary row value literal value literal local time of row value literal short value literal local date of expect validation exception could not cast the value of the column 01:01 of a row 01:01 to the request type binary test spec test can not cast to the request type in a nest row value datum type row datum type field a data type bigint datum type field b datum type row datum type field c datum type binary row value literal row value literal local time of row value literal short row value literal local date of expect validation exception could not cast the value of the column row 01:01 of a row row 01:01 to the request type row c binary 
field info util test parameterized parameter name public static collection type information parameter throw exception return array as list new row type info new type information type int type long type sql timestamp new string f0 f1 f2 new pojo type info my pojo class array as list new pojo field my pojo class get declare field f0 type int new pojo field my pojo class get declare field f1 type long new pojo field my pojo class get declare field f2 type sql timestamp 
csv table sink factory test parameterized parameter name derive schema public static ternary boolean get derive schema return new ternary boolean ternary boolean true ternary boolean false ternary boolean undefined 
user define function helper test parameterized parameter public static list test spec test datum return array as list test spec for class valid scalar function class expect success test spec for instance new valid scalar function expect success test spec for class private scalar function class expect error message function class private scalar function class get name be not public test spec for class miss implementation scalar function class expect error message function class miss implementation scalar function class get name do not implement a method name eval test spec for class private method scalar function class expect error message method eval of function class private method scalar function class get name be not public test spec for instance new valid table aggregate function expect success test spec for instance new missing emit table aggregate function expect error message function class miss emit table aggregate function class get name do not implement a method name emit update with retract or emit value test spec for instance new valid table function expect success test spec for instance new parameterized table function expect success test spec for class parameterize table function class expect error message function class parameterize table function class get name must have a public default constructor test spec for class hierarchical table aggregate function class expect success 
class datum type converter test parameterized parameter name index class type public static list object test datum return array as list new object long class datum type bigint not null bridge to long class byte class datum type byte nullable bridge to byte class long class datum type bigint nullable bridge to long class java sql time class datum type time nullable bridge to java sql time class java time duration class datum type interval datum type second bridge to java time duration class java time period class datum type interval datum type year datum type month bridge to java time period class big decimal class null byte class datum type array datum type byte nullable bridge to byte class nullable bridge to byte class byte class datum type array datum type tinyint nullable bridge to byte class nullable bridge to byte class byte class datum type array datum type array datum type tinyint nullable bridge to byte class nullable bridge to byte class nullable bridge to byte class integer class datum type array datum type int nullable bridge to integer class nullable bridge to integer class int class datum type array datum type int not null bridge to int class nullable bridge to int class time interval unit class new atomic datum type new symbol type time interval unit class bridge to time interval unit class row class null 
comparable input type strategy test parameterized parameter name index public static list test spec test datum return as list test spec for strategy numeric type be comparable input type strategy comparable constant argument count of structured comparision equal call with argument type datum type tinyint datum type smallint datum type int datum type bigint datum type double datum type float datum type decimal expect signature f comparable expect argument type datum type tinyint datum type smallint datum type int datum type bigint datum type double datum type float datum type decimal test spec for strategy datetime type be comparable input type strategy comparable constant argument count of structured comparision equal call with argument type datum type timestamp datum type timestamp with local time zone datum type timestamp with time zone datum type date expect argument type datum type timestamp datum type timestamp with local time zone datum type timestamp with time zone datum type date test spec for strategy varchar and char type be comparable input type strategy two fully comparable call with argument type datum type varchar datum type char expect argument type datum type varchar datum type char test spec for strategy varbinary and binary type be comparable input type strategy two fully comparable call with argument type datum type varbinary datum type binary expect argument type datum type varbinary datum type binary test spec for strategy comparable array type input type strategy two fully comparable call with argument type datum type array datum type tinyint datum type array datum type decimal expect argument type datum type array datum type tinyint datum type array datum type decimal test spec for strategy comparable map type input type strategy two fully comparable call with argument type datum type map datum type tinyint datum type timestamp datum type map datum type decimal datum type timestamp with time zone expect argument type datum type map datum type tinyint datum type timestamp datum type map datum type decimal datum type timestamp with time zone test spec for strategy fully comparable structured type input type strategy two fully comparable call with argument type structure type type singleton list datum type int structure comparision full not null structured type type singleton list datum type int structure comparision full nullable expect argument type structure type type singleton list datum type int structure comparision full not null structured type type singleton list datum type int structure comparision full nullable test spec for strategy equal comparable structured type input type strategy two equal comparable call with argument type structure type type singleton list datum type int structure comparision equal structured type type singleton list datum type int structure comparision equal expect argument type structure type type singleton list datum type int structure comparision equal structured type type singleton list datum type int structure comparision equal test spec for strategy comparable array of structured type input type strategy two equal comparable call with argument type datum type array structure type type singleton list datum type int structure comparision equal not null datum type array structure type type singleton list datum type int structure comparision equal nullable expect argument type datum type array structure type type singleton list datum type int structure comparision equal not null datum type array structure type type singleton list datum type int structure comparision equal nullable test spec for strategy distinct type be comparable if the source type be comparable input type strategy two equal comparable call with argument type distinct type type datum type int not null distinct type type datum type int nullable expect argument type distinct type type datum type int not null distinct type type datum type int nullable test spec for strategy comparable multiset of distinct type input type strategy two equal comparable call with argument type datum type multiset distinct type type datum type int not null datum type multiset distinct type type datum type int nullable expect argument type datum type multiset distinct type type datum type int not null datum type multiset distinct type type datum type int nullable test spec for strategy everything be comparable with null type input type strategy two equal comparable call with argument type datum type int datum type null expect argument type datum type int datum type null test spec for strategy raw type be comparable if the originate class implement comparable input type strategy two equal comparable call with argument type raw type comparable class class not null raw type comparable class class nullable expect argument type raw type comparable class class not null raw type comparable class class nullable test spec for strategy comparable map of raw type input type strategy two equal comparable call with argument type datum type map raw type comparable class class not null raw type comparable class class datum type map raw type comparable class class nullable raw type comparable class class expect argument type datum type map raw type comparable class class not null raw type comparable class class datum type map raw type comparable class class nullable raw type comparable class class test spec for strategy raw type be not comparable if the originate class do not implement comparable input type strategy two equal comparable call with argument type raw type not comparable class class raw type not comparable class class expect error message string format all type in a comparison should support equal comparison with each other can not compare raw s with raw s not comparable class class get name not comparable class class get name test spec for strategy raw type be not comparable if the type be different input type strategy two equal comparable call with argument type raw type not comparable class class datum type raw type information of not comparable class class expect error message string format all type in a comparison should support equal comparison with each other can not compare raw s with raw s not comparable class class get name not comparable class class get name test spec for strategy not fully comparable structured type input type strategy two fully comparable call with argument type structure type type singleton list datum type int structure comparision equal structured type type singleton list datum type int structure comparision equal expect error message all type in a comparison should support both equal and order comparison with each other can not compare cat db type with cat db type test spec for strategy two different structured type be not comparable input type strategy two equal comparable call with argument type structure type type1 singleton list datum type int structure comparision equal structured type type2 singleton list datum type int structure comparision equal expect error message all type in a comparison should support equal comparison with each other can not compare cat db type1 with cat db type2 test spec for strategy two different different distinct type be not comparable even if point to the same type input type strategy two equal comparable call with argument type distinct type type1 datum type int distinct type type2 datum type int expect error message all type in a comparison should support equal comparison with each other can not compare cat db type1 with cat db type2 test spec for strategy not comparable array type input type strategy two fully comparable call with argument type datum type array datum type tinyint datum type array datum type varchar expect error message all type in a comparison should support both equal and order comparison with each other can not compare array tinyint with array varchar test spec for strategy not comparable key type in map type input type strategy two fully comparable call with argument type datum type map datum type tinyint datum type timestamp datum type map datum type varchar datum type timestamp with time zone expect error message all type in a comparison should support both equal and order comparison with each other can not compare map tinyint timestamp with map varchar timestamp with time zone test spec for strategy not comparable value type in map type input type strategy two fully comparable call with argument type datum type map datum type tinyint datum type timestamp datum type map datum type decimal datum type int expect error message all type in a comparison should support both equal and order comparison with each other can not compare map tinyint timestamp with map decimal int test spec for strategy not comparable type input type strategy two fully comparable call with argument type datum type timestamp datum type bigint expect error message all type in a comparison should support both equal and order comparison with each other can not compare timestamp with bigint 
subsequence input type strategy test parameterized parameter name index public static list test spec test datum return as list test spec for strategy a strategy use for if else with valid argument input type strategy composite sequence argument logical logical type root boolean subsequence common type finish call with argument type datum type boolean datum type smallint datum type decimal expect signature f boolean common common expect argument type datum type boolean datum type decimal datum type decimal test spec for strategy strategy fail if any of the nest strategy fail input type strategy composite sequence argument logical logical type root boolean subsequence common type finish call with argument type datum type boolean datum type varchar datum type decimal expect error message could not find a common type for argument varchar decimal test spec for strategy strategy with a vary argument input type strategy composite sequence argument logical logical type root boolean subsequence common type finish with vary vary sequence logical logical type root bigint call with argument type datum type boolean datum type smallint datum type decimal datum type smallint datum type bigint datum type tinyint expect signature f boolean common common bigint expect argument type datum type boolean datum type decimal datum type decimal datum type bigint datum type bigint datum type bigint test spec for strategy a complex strategy with few sub sequence input type strategy composite sequence argument logical logical type root boolean subsequence common type argument explicit datum type time not null subsequence common type finish with vary vary sequence logical logical type family timestamp any call with argument type datum type boolean datum type smallint datum type decimal datum type time not null datum type tinyint not null datum type decimal not null datum type timestamp with local time zone not null datum type smallint datum type bigint expect signature f boolean common common time not null common common timestamp any expect argument type datum type boolean datum type decimal datum type decimal datum type time not null datum type decimal not null datum type decimal not null datum type timestamp with local time zone not null datum type smallint datum type bigint 
value datum type converter test parameterized parameter name index value type public static list object test datum return array as list new object hello world datum type char new atomic datum type char type of empty literal new byte datum type binary new byte new atomic datum type binary type of empty literal big decimal zero datum type decimal new big decimal 12.123 datum type decimal datum type int local time of datum type time local time of datum type time local time of datum type time local time of datum type time local date time of datum type timestamp zone date time of zone id system default datum type timestamp with time zone bridge to zone date time class offset date time of zone offset utc datum type timestamp with time zone bridge to offset date time class instant of epoch milli l datum type timestamp with local time zone bridge to instant class period of year datum type interval datum type year datum type month bridge to period class duration of millis datum type interval datum type day datum type second bridge to duration class duration of day datum type interval datum type day datum type second bridge to duration class timestamp value of 2018 - 01 01 12 13:14 datum type timestamp bridge to java sql timestamp class new integer datum type array datum type int new integer null datum type array datum type int new big decimal new big decimal 12.1234 new big decimal 42.4321 new big decimal 20.0000 datum type array datum type decimal new big decimal null new big decimal 42.4321 datum type array datum type decimal new integer datum type array datum type int new integer new integer null new integer new integer datum type array datum type array datum type int time point unit hour new atomic datum type new symbol type time point unit class new big decimal null 
list view serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version list view serializer setup class list view serializer verifier class return test specification 
map view serializer upgrade test parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version map view serializer setup class map view serializer verifier class return test specification 
java table environment i t case parameterized parameter name table config public static collection object parameter return array as list new object table program test base default 
java catalog table test parameterized parameter name streaming mode public static collection boolean parameter return array as list true false 
composite type access expression i t case parameterized parameter name index public static list test spec test datum return array as list actually in case of sql it do not use the get method but a custom logic for access nest field of a table test spec for function build in function definition get on field with datum null row of and datum type row field nest bigint not null nullable row field nest bigint not null not null test result f0 get nest f0 nest null bigint nullable test result f1 get nest f1 nest 1 l bigint not null in calcite it map to flink sql operator table item test spec for function build in function definition at on field with datum null new int null singleton map nest null row of and datum type array bigint not null nullable array bigint not null not null map string bigint not null nullable map string bigint not null not null row field nest bigint not null nullable row field nest bigint not null not null access element of map or array be a runtime operation we do not know about the size or contents during the inference therefore the result be always nullable test sql result f0 null bigint nullable test sql result f1 1 l bigint nullable test sql result f2 nest null bigint nullable test sql result f3 nest 1 l bigint nullable we know all the field of a type up front therefore we can derive more accurate type during the inference test sql result f4 nest null bigint nullable test sql result f5 nest 1 l bigint not null 
binary string datum test parameterized parameter name public static list mode get var seg return array as list mode one seg mode multi seg mode string mode random 
binary hash table test parameterized parameter name use compress public static list boolean get var seg return array as list true false 
long hash table test parameterized parameter name use compress public static list boolean get var seg return array as list true false 
int2 sort merge join operator test parameterized parameter public static collection boolean parameter return array as list true false 
random sort merge inner join test parameterized parameter public static collection boolean parameter return array as list true false 
sort merge join iterator test parameterized parameter public static collection boolean parameter return array as list true false 
string2 sort merge join operator test parameterized parameter public static collection boolean parameter return array as list true false 
binary external sorter test parameterized parameter name spill compress async merge public static collection boolean parameter return array as list new boolean false false new boolean false true new boolean true false new boolean true true 
buffer k v external sorter test parameterized parameter public static list object get datum size list object para new array list paras add new object true paras add new object false paras add new object true paras add new object false paras add new object true paras add new object false return paras 
window operator test parameterized parameter name be table aggregate public static collection object run mode return array as list new object false new object true 
datum type precision fixer test parameterized parameter name index from to public static list test spec test datum return array as list test spec fix type big dec logical type new decimal type expect datum type decimal test spec fix type sql timestamp logical type new timestamp type expect datum type timestamp bridge to timestamp class test spec fix type sql time logical type new time type expect datum type time bridge to time class test spec fix type sql date logical type new date type expect datum type date bridge to date class test spec fix type local date time logical type new timestamp type expect datum type timestamp test spec fix type local time logical type new time type expect datum type time test spec fix type local date logical type new date type expect datum type date test spec fix type instant logical type new local zone timestamp type expect datum type timestamp with local time zone test spec fix type string logical type new var char type var char type max length expect datum type string nest test spec fix type row name new string field1 field2 type map type big dec type sql timestamp type object array type sql time logical type new row type array as list new row type row field field1 new map type new decimal type new timestamp type new row type row field field2 new array type new time type expect datum type row field field1 datum type map datum type decimal datum type timestamp bridge to timestamp class field field2 datum type array datum type time bridge to time class 
row datum serializer test parameterized parameter public static collection object parameter return array as list test row datum serializer test large row datum serializer test row datum serializer with complex type test row datum serializer with kryo 
timestamp datum serializer test parameterized parameter public static collection object datum return array as list new object 
multiple program test base parameterized parameter name execution mode public static collection object execution mode return array as list new object test execution mode cluster new object test execution mode collection 
event time window checkpoint i t case parameterized parameter name statebackend type public static collection state backend enum parameter return array as list state backend enum value 
local recovery i t case parameterized parameter name statebackend type public static collection state backend enum parameter return array as list rocksdb fully async rocksdb incremental zk file async 
notify checkpoint abort i t case parameterized parameter name unaligned checkpoint enable public static collection boolean parameter return array as list true false 
rescale i t case parameterized parameter name backend public static object datum return new object filesystem rocksdb 
stream fault tolerance test base parameterize parameter name failover strategy public static collection failover strategy parameter return array as list failover strategy restart all failover strategy failover strategy restart pipelined region failover strategy 
unaligned checkpoint compatibility i t case parameterized parameter name type start align public static object parameter return new object checkpoint true checkpoint false savepoint true savepoint false 
legacy stateful job savepoint migration i t case parameterized parameter name migrate savepoint backend public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name 
stateful job savepoint migration i t case parameterized parameter name migrate savepoint backend public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name 
stateful job w broadcast state migration i t case parameterized parameter name migrate savepoint backend public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name 
window checkpoint i t case parameterized parameter name time characteristic suppress warning unchecked rawtype public static collection time characteristic time characteristic return array as list new time characteristic time characteristic processing time new time characteristic time characteristic ingestion time 
job submission fail i t case parameterized parameter name detach mode public static collection boolean execution mode return array as list new boolean false new boolean true 
type serializer snapshot migration i t case parameterized parameter name migrate savepoint backend public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name 
object reuse i t case parameterized parameter name execution mode cluster reuse public static collection object execution mode return array as list new object false new object true 
job manager h a process failure recovery i t case parameterized parameter name execution mode public static collection object execution mode return array as list new object execution mode pipelined execution mode batch 
task manager process failure batch recovery i t case parameterized parameter public static collection object execution mode return array as list new object execution mode pipelined execution mode batch 
shuffle compression i t case parameterized parameter name use broadcast partitioner public static boolean param return new boolean true false 
abstract keyed operator restore test base parameterize parameter name migrate savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 
stream operator snapshot restore test parameterized parameter name statebackend type public static collection state backend enum parameter return array as list state backend enum value 
abstract non key operator restore test base parameterize parameter name migrate savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 
stream task timer i t case parameterized parameter name time characteristic public static collection object execution mode return array as list new object time characteristic processing time new object time characteristic ingestion time new object time characteristic event time 
pojo serializer upgrade test parameterized parameter name state backend public static collection string parameter return array as list state backend loader memory state backend name state backend loader f state backend name state backend loader rocksdb state backend name 
