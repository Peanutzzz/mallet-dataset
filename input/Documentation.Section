checkpoint option documentation section value documentation section common state backend position public static final config option string state backend config option key state backend no default value with description the state backend to be use to store and checkpoint state 
checkpoint option documentation section documentation section common state backend public static final config option integer max retain checkpoint config option key state checkpoint num retain default value with description the maximum number of complete checkpoint to retain 
checkpoint option documentation section documentation section expert state backend public static final config option boolean async snapshot config option key state backend async default value true with description option whether the state backend should use a asynchronous snapshot method where possible and configurable some state backend may not support asynchronous snapshot or only support asynchronous snapshot and ignore this option 
checkpoint option documentation section documentation section common state backend public static final config option boolean incremental checkpoint config option key state backend incremental default value false with description option whether the state backend should create incremental checkpoint if possible for a incremental checkpoint only a diff from the previous checkpoint be store rather than the complete checkpoint state once enable the state size show in web ui or fetch from rest api only represent the delta checkpoint size instead of full checkpoint size some state backend may not support incremental checkpoint and ignore this option 
checkpoint option documentation section documentation section common state backend public static final config option boolean local recovery config option key state backend local recovery default value false with description this option configure local recovery for this state backend by default local recovery be deactivate local recovery currently only cover key state backend currently memory state backend do not support local recovery and ignore this option 
checkpoint option documentation section documentation section common state backend public static final config option string local recovery task manager state root dir config option key taskmanager state local root dir no default value with description the config parameter define the root directory for store file base state for local recovery local recovery currently only cover key state backend currently memory state backend do not support local recovery and ignore this option 
checkpoint option documentation section value documentation section common state backend position public static final config option string savepoint directory config option key state savepoint dir no default value with deprecate key savepoint state backend f dir with description the default directory for savepoint use by the state backend that write savepoint to file system memory state backend f state backend rock d b state backend 
checkpoint option documentation section value documentation section common state backend position public static final config option string checkpoint directory config option key state checkpoint dir no default value with deprecate key state backend f checkpointdir with description the default directory use for store the datum file and meta datum of checkpoint in a flink support filesystem the storage path must be accessible from all participate process node i e all task manager and job manager 
checkpoint option documentation section documentation section expert state backend public static final config option memory size fs small file threshold config option key state backend f memory threshold memory type default value memory size parse 20kb with description the minimum size of state datum file all state chunk smaller than that be store inline in the root checkpoint metadata file the max memory threshold for this configuration be 1 m b 
checkpoint option documentation section documentation section expert state backend public static final config option integer f write buffer size config option key state backend f write buffer size default value with description string format the default size of the write buffer for the checkpoint stream that write to file system the actual write buffer size be determine to be the maximum of the value of this option and option s f small file threshold key 
cluster option documentation section documentation section expert fault tolerance public static final config option long initial registration timeout config option key cluster registration initial timeout default value l with description initial registration timeout between cluster component in millisecond 
cluster option documentation section documentation section expert fault tolerance public static final config option long max registration timeout config option key cluster registration max timeout default value l with description maximum registration timeout between cluster component in millisecond 
cluster option documentation section documentation section expert fault tolerance public static final config option long error registration delay config option key cluster registration error delay default value l with description the pause make after a registration attempt cause a exception other than timeout in millisecond 
cluster option documentation section documentation section expert fault tolerance public static final config option long refuse registration delay config option key cluster registration refuse registration delay default value l with description the pause make after the registration attempt be refuse in millisecond 
cluster option documentation section documentation section expert fault tolerance public static final config option long cluster service shutdown timeout config option key cluster service shutdown timeout default value l with description the shutdown timeout for cluster service like executor in millisecond 
cluster option documentation section documentation section expert fault tolerance public static final config option integer cluster io executor pool size config option key cluster io pool size int type no default value with description the size of the io executor pool use by the cluster to execute block io operation master as well as task manager process by default it will use the number of cpu core hardware context that the cluster process have access to increase the pool size allow to run more io operation concurrently 
cluster option documentation section documentation section expert schedule public static final config option boolean evenly spread out slot strategy config option key cluster evenly spread out slot default value false with description description builder text enable the slot spread out allocation strategy this strategy try to spread out the slot evenly across all available s code task executor build 
core option documentation section documentation section expert class load public static final config option string classloader resolve order config option key classloader resolve order default value child first with description define the class resolution strategy when loading class from user code mean whether to first check the user code jar child first or the application classpath parent first the default setting indicate to load class first from the user code jar which mean that user code jar can include and load different dependency than flink use transitively 
core option documentation section documentation section expert class load public static final config option string always parent first loader pattern config option key classloader parent first pattern default default value java scala org apache flink com esotericsoftware kryo org apache hadoop javax annotation org slf4j org apache log4j org apache log org apache common log ch qos logback org xml javax xml org apache xerce org w3c with deprecate key classloader parent first pattern with description a semicolon separate list of pattern that specify which class should always be resolve through the parent class loader first a pattern be a simple prefix that be check against the fully qualified class name this setting should generally not be modify to add another pattern we recommend to use classloader parent first pattern additional instead 
core option documentation section documentation section expert class load public static final config option string always parent first loader pattern additional config option key classloader parent first pattern additional default value with description a semicolon separate list of pattern that specify which class should always be resolve through the parent class loader first a pattern be a simple prefix that be check against the fully qualified class name these pattern be append to always parent first loader pattern key 
core option documentation section documentation section expert class load public static final config option boolean fail on user class loading metaspace oom config option key classloader fail on metaspace oom error boolean type default value true with description fail flink jvm process if out of memory error metaspace be throw while try to load a user code class 
core option documentation override default local dir on yarn flink tmp dir on meso system get property java io tmpdir in standalone documentation section documentation section common miscellaneous public static final config option string tmp dir key io tmp dir default value system get property java io tmpdir with deprecate key taskmanager tmp dir with description directory for temporary file separate by or the system s java io file path separator 
core option documentation section documentation section common miscellaneous public static final config option string default filesystem scheme config option key fs default scheme no default value with description the default filesystem scheme use for path that do not declare a scheme explicitly may contain a authority e g host port in case of a hdfs name node 
core option documentation section documentation section common miscellaneous public static final config option string allow fallback filesystem config option key fs allow fallback filesystem string type default value with description a semicolon separate list of file scheme for which hadoop can be use instead of a appropriate flink plugin example s3 wasb 
core option documentation section documentation section deprecate file sink public static final config option boolean filesytem default override key f overwrite file default value false with description specify whether file output writer should overwrite exist file by default set to true to overwrite by default false otherwise 
core option documentation section documentation section deprecate file sink public static final config option boolean filesystem output always create directory key f output always create directory default value false with description file writer run with a parallelism larger than one create a directory for the output file path and put the different result file one per parallel writer task into that directory if this option be set to true writer with a parallelism of will also create a directory and place a single result file into it if the option be set to false the writer will directly create the file directly at the output path without create a contain directory 
heartbeat manager option documentation section documentation section expert fault tolerance public static final config option long heartbeat interval key heartbeat interval default value l with description time interval for request heartbeat from sender side 
heartbeat manager option documentation section documentation section expert fault tolerance public static final config option long heartbeat timeout key heartbeat timeout default value l with description timeout for request and receive heartbeat for both sender and receiver side 
high availability option documentation section documentation section common high availability public static final config option string ha mode key high availability default value none with deprecate key recovery mode with description define high availability mode use for the cluster execution to enable high availability set this mode to zookeeper or specify fqn of factory class 
high availability option documentation section documentation section common high availability public static final config option string ha cluster id key high availability cluster id default value default with deprecate key high availability zookeeper path namespace recovery zookeeper path namespace with description the id of the flink cluster use to separate multiple flink cluster from each other need to be set for standalone cluster but be automatically infer in yarn and meso 
high availability option documentation section documentation section common high availability public static final config option string ha storage path key high availability storage dir no default value with deprecate key high availability zookeeper storage dir recovery zookeeper storage dir with description file system path uri where flink persist metadata in high availability setup 
high availability option documentation section documentation section expert high availability public static final config option string ha job manager port range key high availability jobmanager port string type default value with deprecate key recovery jobmanager port with description the port range use by the flink master for its rpc connection in highly available setup in highly available setup this value be use instead of job manager option port key a value of means that a random free port be choose task manager discover this port through the high availability service leader election so a random port or a port range work without require any additional means of service discovery 
high availability option documentation section documentation section common high availability zookeeper public static final config option string ha zookeeper quorum key high availability zookeeper quorum no default value with deprecate key recovery zookeeper quorum with description the zoo keeper quorum to use when run flink in a high availability mode with zoo keeper 
high availability option documentation section documentation section common high availability zookeeper public static final config option string ha zookeeper root key high availability zookeeper path root default value flink with deprecate key recovery zookeeper path root with description the root path under which flink store its entry in zoo keeper 
high availability option documentation section documentation section expert zookeeper high availability public static final config option string ha zookeeper latch path key high availability zookeeper path latch default value leaderlatch with deprecate key recovery zookeeper path latch with description define the znode of the leader latch which be use to elect the leader 
high availability option documentation section documentation section expert zookeeper high availability public static final config option string ha zookeeper jobgraph path key high availability zookeeper path jobgraph default value jobgraph with deprecate key recovery zookeeper path jobgraph with description zoo keeper root path z node for job graph 
high availability option documentation section documentation section expert zookeeper high availability public static final config option string ha zookeeper leader path key high availability zookeeper path leader default value leader with deprecate key recovery zookeeper path leader with description define the znode of the leader which contain the url to the leader and the current leader session id 
high availability option documentation section documentation section expert zookeeper high availability public static final config option string ha zookeeper checkpoint path key high availability zookeeper path checkpoint default value checkpoint with deprecate key recovery zookeeper path checkpoint with description zoo keeper root path z node for complete checkpoint 
high availability option documentation section documentation section expert zookeeper high availability public static final config option string ha zookeeper checkpoint counter path key high availability zookeeper path checkpoint counter default value checkpoint counter with deprecate key recovery zookeeper path checkpoint counter with description zoo keeper root path z node for checkpoint counter 
high availability option public evolve documentation section documentation section expert zookeeper high availability public static final config option string ha zookeeper meso worker path key high availability zookeeper path meso worker default value meso worker with deprecate key recovery zookeeper path meso worker with description description builder text the zoo keeper root path for persist the meso worker information build 
high availability option documentation section documentation section expert zookeeper high availability public static final config option integer zookeeper session timeout key high availability zookeeper client session timeout default value with deprecate key recovery zookeeper client session timeout with description define the session timeout for the zoo keeper session in ms 
high availability option documentation section documentation section expert zookeeper high availability public static final config option integer zookeeper connection timeout key high availability zookeeper client connection timeout default value with deprecate key recovery zookeeper client connection timeout with description define the connection timeout for zoo keeper in ms 
high availability option documentation section documentation section expert zookeeper high availability public static final config option integer zookeeper retry wait key high availability zookeeper client retry wait default value with deprecate key recovery zookeeper client retry wait with description define the pause between consecutive retry in ms 
high availability option documentation section documentation section expert zookeeper high availability public static final config option integer zookeeper max retry attempt key high availability zookeeper client max retry attempt default value with deprecate key recovery zookeeper client max retry attempt with description define the number of connection retry before the client give up 
high availability option documentation section documentation section expert zookeeper high availability public static final config option string zookeeper run job registry path key high availability zookeeper path run registry default value run job registry 
high availability option documentation section documentation section expert zookeeper high availability public static final config option string zookeeper client acl key high availability zookeeper client acl default value open with description define the acl open creator to be configure on zk node the configuration value can be set to creator if the zoo keeper server configuration have the auth provider property map to use s a s l authentication provider and the cluster be configure to run in secure mode kerbero 
job manager option documentation section documentation section common host port documentation section all job manager public static final config option string address key jobmanager rpc address no default value with description the config parameter define the network address to connect to for communication with the job manager this value be only interpret in setup where a single job manager with static name or address exist simple standalone setup or container setup with dynamic service name resolution it be not use in many high availability setup when a leader election service like zoo keeper be use to elect and discover the job manager leader from potentially multiple standby job manager 
job manager option documentation section documentation section common host port documentation section all job manager public static final config option integer port key jobmanager rpc port default value with description the config parameter define the network port to connect to for communication with the job manager like address key this value be only interpret in setup where a single job manager with static name address and port exist simple standalone setup or container setup with dynamic service name resolution this config option be not use in many high availability setup when a leader election service like zoo keeper be use to elect and discover the job manager leader from potentially multiple standby job manager 
job manager option deprecate documentation section documentation section all job manager public static final config option memory size job manager heap memory key jobmanager heap size memory type no default value with description jvm heap size for the job manager 
job manager option documentation section documentation section common memory public static final config option memory size total process memory key jobmanager memory process size memory type no default value with description total process memory size for the job manager this include all the memory that a job manager jvm process consume consist of total flink memory jvm metaspace and jvm overhead in containerized setup this should be set to the container memory see also jobmanager memory flink size for total flink memory size configuration 
job manager option documentation section documentation section common memory public static final config option memory size total flink memory key jobmanager memory flink size memory type no default value with description string format total flink memory size for the job manager this include all the memory that a job manager consume except for jvm metaspace and jvm overhead it consist of jvm heap memory and off heap memory see also be for total process memory size configuration total process memory key 
job manager option documentation section documentation section common memory public static final config option memory size jvm heap memory key jobmanager memory heap size memory type no default value with description jvm heap memory size for job manager the minimum recommend jvm heap size be min jvm heap size to human readable string 
job manager option documentation section documentation section common memory public static final config option memory size off heap memory key jobmanager memory off heap size memory type default value memory size of mebi byte with description description builder text off heap memory size for job manager this option cover all off heap memory usage include direct and native memory allocation the jvm direct memory limit of the job manager process xx max direct memory size will be set to this value if the limit be enable by jobmanager memory enable jvm direct memory limit build 
job manager option documentation section documentation section common memory public static final config option boolean jvm direct memory limit enable key jobmanager memory enable jvm direct memory limit boolean type default value false with description description builder text whether to enable the jvm direct memory limit of the job manager process xx max direct memory size the limit will be set to the value of s option text off heap memory key build 
job manager option documentation section documentation section common memory public static final config option memory size jvm metaspace key jobmanager memory jvm metaspace size memory type default value memory size of mebi byte with description jvm metaspace size for the job manager 
job manager option documentation section documentation section common memory public static final config option memory size jvm overhead min key jobmanager memory jvm overhead min memory type default value memory size of mebi byte with description min jvm overhead size for the job manager jvm overhead description 
job manager option documentation section documentation section common memory public static final config option memory size jvm overhead max key jobmanager memory jvm overhead max memory type default value memory size parse 1g with description max jvm overhead size for the job manager jvm overhead description 
job manager option documentation section documentation section common memory public static final config option float jvm overhead fraction key jobmanager memory jvm overhead fraction float type default value 0.1 f with description fraction of total process memory to be reserve for jvm overhead jvm overhead description 
job manager option documentation section documentation section all job manager public static final config option integer max attempt history size key jobmanager execution attempt history size default value with deprecate key job manager max attempt history size with description the maximum number of prior execution attempt keep in history 
job manager option documentation section documentation section all job manager documentation section expert fault tolerance public static final config option string execution failover strategy key jobmanager execution failover strategy string type default value region with description description builder text this option specify how the job computation recover from task failure accept value be list text full restart all task to recover the job text region restart all task that could be affect by the task failure more detail can be find s link dev task failure recovery html restart pipelined region failover strategy here build 
job manager option documentation section documentation section all job manager public static final config option string archive dir key jobmanager archive f dir no default value with description dictionary for job manager to store the archive of complete job 
job manager option documentation section documentation section all job manager public static final config option long job store cache size key jobstore cache size default value 50 l l l with description the job store cache size in byte which be use to keep complete job in memory 
job manager option documentation section documentation section all job manager public static final config option long job store expiration time key jobstore expiration time default value 60 l 60 l with description the time in seconds after which a complete job expire and be purge from the job store 
job manager option documentation section documentation section all job manager public static final config option integer job store max capacity key jobstore max capacity default value integer max value with description the max number of complete job that can be keep in the job store 
job manager option documentation section documentation section expert schedule public static final config option long slot request timeout key slot request timeout default value 5 l 60 l l with description the timeout in millisecond for request a slot from slot pool 
job manager option documentation section documentation section expert schedule public static final config option long slot idle timeout key slot idle timeout default match heartbeat timeout so that sticky allocation be not lose on timeout for local recovery default value heartbeat manager option heartbeat timeout default value with description the timeout in millisecond for a idle slot in slot pool 
metric option documentation section documentation section common host port public static final config option string query service port key metric internal query service port default value with description the port range use for flink s internal metric query service accept a list of port 50100,50101 range 50100 - 50200 or a combination of both it be recommend to set a range of port to avoid collision when multiple flink component be run on the same machine per default flink will pick a random port 
netty shuffle environment option documentation section documentation section common host port documentation section all task manager public static final config option integer datum port key taskmanager datum port default value with description the task manager s external port use for datum exchange operation 
netty shuffle environment option documentation section documentation section all task manager public static final config option boolean datum ssl enable key taskmanager datum ssl enable default value true with description enable ssl support for the taskmanager datum transport this be applicable only when the global flag for internal ssl security option ssl internal enable key be set to true 
netty shuffle environment option documentation section documentation section all task manager network public static final config option boolean blocking shuffle compression enable key taskmanager network block shuffle compression enable default value false with description boolean flag indicate whether the shuffle datum will be compress for block shuffle mode note that data be compress per buffer and compression can incur extra cpu overhead so it be more effective for io bound scenario when datum compression ratio be high currently shuffle datum compression be a experimental feature and the config option can be change in the future 
netty shuffle environment option documentation section documentation section all task manager network public static final config option boolean network detail metric key taskmanager network detail metric default value false with description boolean flag to enable disable more detailed metric about inbound outbound network queue length 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer network buffer per channel key taskmanager network memory buffer per channel default value with description number of exclusive network buffer to use for each outgoing incoming channel subpartition inputchannel in the credit base flow control model it should be configure at least for good performance buffer be for receive in flight datum in the subpartition and buffer be for parallel serialization 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer network extra buffer per gate key taskmanager network memory float buffer per gate default value with description number of extra network buffer to use for each outgoing incoming gate result partition input gate in credit base flow control mode this indicate how many float credit be share among all the input channel the float buffer be distribute base on backlog real time output buffer in the subpartition feedback and can help relieve back pressure cause by unbalanced datum distribution among the subpartition this value should be increase in case of higher round trip time between node and or larger number of machine in the cluster 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer network max buffer per channel key taskmanager network memory max buffer per channel default value with description number of max buffer that can be use for each channel if a channel exceed the number of max buffer it will make the task become unavailable cause the back pressure and block the data processing this might speed up checkpoint alignment by prevent excessive growth of the buffer in flight datum in case of datum skew and high number of configure float buffer this limit be not strictly guarantee and can be ignore by thing like flat map operator record span multiple buffer or single timer produce large amount of datum 
netty shuffle environment option documentation section documentation section all task manager network public static final config option string network block shuffle type key taskmanager network block shuffle type default value file with description the blocking shuffle type either mmap or file the auto mean select the property type automatically base on system memory architecture bit for mmap and bit for file note that the memory usage of mmap be not account by configure memory limit but some resource framework like yarn would track this memory usage and kill the container once memory exceed some threshold also note that this option be experimental and might be change future 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer num arena key taskmanager network netty num arena default value with deprecate key taskmanager net num arena with description the number of netty arena 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer num thread server key taskmanager network netty server num thread default value with deprecate key taskmanager net server num thread with description the number of netty server thread 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer num thread client key taskmanager network netty client num thread default value with deprecate key taskmanager net client num thread with description the number of netty client thread 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer connect backlog key taskmanager network netty server backlog default value default netty s default with deprecate key taskmanager net server backlog with description the netty server connection backlog 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer client connect timeout seconds key taskmanager network netty client connect timeout sec default value default s 2 min with deprecate key taskmanager net client connect timeout sec with description the netty client connection timeout 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer network retry key taskmanager network retry default value with deprecate key taskmanager network retry with description the number of retry attempt for network communication currently it be only use for establish input output channel connection 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer send receive buffer size key taskmanager network netty send receive buffer size default value default netty s default with deprecate key taskmanager net send receive buffer size with description the netty send and receive buffer size this default to the system buffer size cat proc sy net ipv4 tcp rw mem and be mi b in modern linux 
netty shuffle environment option documentation section documentation section all task manager network public static final config option string transport type key taskmanager network netty transport default value auto with deprecate key taskmanager net transport with description the netty transport type either nio or epoll the auto mean select the property mode automatically base on the platform note that the epoll mode can get better performance less gc and have more advanced feature which be only available on modern linux 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer network request backoff initial key taskmanager network request backoff initial default value with deprecate key taskmanager net request backoff initial with description minimum backoff in millisecond for partition request of input channel 
netty shuffle environment option documentation section documentation section all task manager network public static final config option integer network request backoff max key taskmanager network request backoff max default value with deprecate key taskmanager net request backoff max with description maximum backoff in millisecond for partition request of input channel 
resource manager option documentation section documentation section expert schedule public static final config option integer max slot num config option key slotmanager number of slot max int type default value integer max value with description define the maximum number of slot that the flink cluster allocate this configuration option be mean for limit the resource consumption for batch workload it be not recommend to configure this option for stream workload which may fail if there be not enough slot note that this configuration option do not take effect for standalone cluster where how many slot be allocate be not control by flink 
rest option documentation section documentation section common host port public static final config option string bind address key rest bind address no default value with fallback key web option address key with deprecate key config constant default job manager web frontend address key with description the address that the server bind itself 
rest option documentation section documentation section common host port public static final config option string bind port key rest bind port default value with fallback key rest port key with deprecate key web option port key config constant job manager web port key with description the port that the server bind itself accept a list of port 50100,50101 range 50100 - 50200 or a combination of both it be recommend to set a range of port to avoid collision when multiple rest server be run on the same machine 
rest option documentation section documentation section common host port public static final config option string address key rest address no default value with fallback key job manager option address key with description the address that should be use by client to connect to the server 
rest option documentation section documentation section common host port public static final config option integer port key rest port key default value with deprecate key web option port key with description description builder text the port that the client connect to if s have not be specify then the rest server will bind to this port text bind port key build 
rest option documentation section documentation section expert rest public static final config option long await leader timeout key rest await leader timeout default value l with description the time in ms that the client wait for the leader address e g dispatcher or web monitor endpoint 
rest option documentation section documentation section expert rest public static final config option integer retry max attempt key rest retry max attempt default value with description the number of retry the client will attempt if a retryable operation fail 
rest option documentation section documentation section expert rest public static final config option long retry delay key rest retry delay default value l with description string format the time in ms that the client wait between retry see also s retry max attempt key 
rest option documentation section documentation section expert rest public static final config option long connection timeout key rest connection timeout default value l with description the maximum time in ms for the client to establish a tcp connection 
rest option documentation section documentation section expert rest public static final config option long idleness timeout key rest idleness timeout default value 5 l 60 l l minute with description the maximum time in ms for a connection to stay idle before fail 
rest option documentation section documentation section expert rest public static final config option integer server max content length key rest server max content length default value with description the maximum content length in byte that the server will handle 
rest option documentation section documentation section expert rest public static final config option integer client max content length key rest client max content length default value with description the maximum content length in byte that the client will handle 
rest option documentation section documentation section expert rest public static final config option integer server num thread key rest server num thread default value with description the number of thread for the asynchronous processing of request 
rest option documentation section documentation section expert rest public static final config option integer server thread priority key rest server thread priority default value thread norm priority with description thread priority of the rest server s executor for process asynchronous request lower the thread priority will give flink s main component more cpu time whereas increase will allocate more time for the rest server s processing 
security option documentation section documentation section security auth kerbero public static final config option string kerberos login principal key security kerbero login principal no default value with deprecate key security principal with description kerbero principal name associate with the keytab 
security option documentation section documentation section security auth kerbero public static final config option string kerberos login keytab key security kerbero login keytab no default value with deprecate key security keytab with description absolute path to a kerberos keytab file that contain the user credentials 
security option documentation section documentation section security auth kerbero public static final config option boolean kerbero login useticketcache key security kerbero login use ticket cache default value true with description indicate whether to read from you kerbero ticket cache 
security option documentation section documentation section security auth kerbero public static final config option string kerberos login context key security kerbero login context no default value with description a comma separate list of login context to provide the kerberos credentials to for example client kafka client to use the credentials for zoo keeper authentication and for kafka authentication 
security option documentation section documentation section security auth zookeeper public static final config option boolean zookeeper sasl disable key zookeeper sasl disable default value false 
security option documentation section documentation section security auth zookeeper public static final config option string zookeeper sasl service name key zookeeper sasl service name default value zookeeper 
security option documentation section documentation section security auth zookeeper public static final config option string zookeeper sasl login context name key zookeeper sasl login context name default value client 
security option documentation section documentation section security ssl public static final config option boolean ssl internal enable key security ssl internal enable default value false with description turn on ssl for internal network communication optionally specific component may override this through they own setting rpc datum transport rest etc 
security option documentation section documentation section security ssl public static final config option boolean ssl rest enable key security ssl rest enable default value false with description turn on ssl for external communication via the rest endpoint 
security option documentation section documentation section security ssl public static final config option boolean ssl rest authentication enable key security ssl rest authentication enable default value false with description turn on mutual ssl authentication for external communication via the rest endpoint 
security option documentation section documentation section security ssl public static final config option string ssl internal keystore key security ssl internal keystore no default value with description the java keystore file with ssl key and certificate to be use flink s internal endpoint rpc datum transport blob server 
security option documentation section documentation section security ssl public static final config option string ssl internal keystore password key security ssl internal keystore password no default value with description the secret to decrypt the keystore file for flink s for flink s internal endpoint rpc datum transport blob server 
security option documentation section documentation section security ssl public static final config option string ssl internal key password key security ssl internal key password no default value with description the secret to decrypt the key in the keystore for flink s internal endpoint rpc datum transport blob server 
security option documentation section documentation section security ssl public static final config option string ssl internal truststore key security ssl internal truststore no default value with description the truststore file contain the public can certificate to verify the peer for flink s internal endpoint rpc datum transport blob server 
security option documentation section documentation section security ssl public static final config option string ssl internal truststore password key security ssl internal truststore password no default value with description the password to decrypt the truststore for flink s internal endpoint rpc datum transport blob server 
security option documentation section documentation section security ssl public static final config option string ssl internal cert fingerprint key security ssl internal cert fingerprint no default value with description the sha1 fingerprint of the internal certificate this further protect the internal communication to present the exact certificate use by flink this be necessary where one can not use private ca self sign or there be internal firm wide can be require 
security option documentation section documentation section security ssl public static final config option string ssl rest keystore key security ssl rest keystore no default value with description the java keystore file with ssl key and certificate to be use flink s external rest endpoint 
security option documentation section documentation section security ssl public static final config option string ssl rest keystore password key security ssl rest keystore password no default value with description the secret to decrypt the keystore file for flink s for flink s external rest endpoint 
security option documentation section documentation section security ssl public static final config option string ssl rest key password key security ssl rest key password no default value with description the secret to decrypt the key in the keystore for flink s external rest endpoint 
security option documentation section documentation section security ssl public static final config option string ssl rest truststore key security ssl rest truststore no default value with description the truststore file contain the public can certificate to verify the peer for flink s external rest endpoint 
security option documentation section documentation section security ssl public static final config option string ssl rest truststore password key security ssl rest truststore password no default value with description the password to decrypt the truststore for flink s external rest endpoint 
security option documentation section documentation section security ssl public static final config option string ssl rest cert fingerprint key security ssl rest cert fingerprint no default value with description the sha1 fingerprint of the rest certificate this further protect the rest rest endpoint to present certificate which be only use by proxy server this be necessary where once use public ca or internal firm wide can 
security option documentation section documentation section security ssl public static final config option string ssl protocol key security ssl protocol default value t l sv1 with description the ssl protocol version to be support for the ssl transport note that it doesn t support comma separate list 
security option documentation section documentation section security ssl public static final config option string ssl algorithm key security ssl algorithm default value tl rsa with aes cbc sha with description description builder text the comma separate list of standard ssl algorithm to be support read more s link http doc oracle com javase doc technote guide security standard name html ciphersuite here build 
security option documentation section documentation section security ssl public static final config option boolean ssl verify hostname key security ssl verify hostname default value true with description flag to enable peer s hostname verification during ssl handshake 
security option documentation section documentation section expert security ssl public static final config option string ssl provider key security ssl provider default value jdk with description description builder text the ssl engine provider to use for the ssl transport list text s default java base ssl engine code jdk text s open s s l base ssl engine use system library code openssl text s be base on s and come in two flavour code openssl link http netty io wiki fork tomcat native html wiki h2 netty tcnative list text dynamically link this will use you system s open s s l library if compatible and require s to be copy to s code opt flink shade netty tcnative dynamic jar code lib text statically link due to potential licensing issue with open s s l see s we can not ship pre build library however you can build the require library yourself and put it into s s s link http issue apache org jira browse legal legal code lib linebreak code git clone http github com apache flink shade git cd flink shade mvn clean package pinclude netty tcnative static pl flink shade netty tcnative static build 
security option documentation section documentation section expert security ssl public static final config option integer ssl internal session cache size key security ssl internal session cache size default value with description the size of the cache use for store ssl session object accord to http github com netty netty issue you should always set this to a appropriate number to not run into a bug with stall io thread during garbage collection use system default with deprecate key security ssl session cache size 
security option documentation section documentation section expert security ssl public static final config option integer ssl internal session timeout key security ssl internal session timeout default value with description the timeout in ms for the cache ssl session object use system default with deprecate key security ssl session timeout 
security option documentation section documentation section expert security ssl public static final config option integer ssl internal handshake timeout key security ssl internal handshake timeout default value with description the timeout in ms during ssl handshake use system default with deprecate key security ssl handshake timeout 
security option documentation section documentation section expert security ssl public static final config option integer ssl internal close notify flush timeout key security ssl internal close notify flush timeout default value with description the timeout in ms for flush the close notify that be trigger by close a channel if the close notify be not flush in the give timeout the channel will be close forcibly use system default with deprecate key security ssl close notify flush timeout 
task manager option documentation section documentation section all task manager public static final config option boolean kill on out of memory key taskmanager jvm exit on oom boolean type default value false with description whether to kill the task manager when the task thread throw a out of memory error 
task manager option documentation section documentation section common host port documentation section all task manager public static final config option string host key taskmanager host string type no default value with description the external address of the network interface where the task manager be expose because different task manager need different value for this option usually it be specify in a additional non share task manager specific config file 
task manager option documentation section documentation section common host port documentation section all task manager public static final config option string rpc port key taskmanager rpc port string type default value with description the external rpc port where the task manager be expose accept a list of port 50100,50101 range 50100 - 50200 or a combination of both it be recommend to set a range of port to avoid collision when multiple task manager be run on the same machine 
task manager option documentation section documentation section all task manager public static final config option duration registration timeout key taskmanager registration timeout duration type default value time util parse duration min with deprecate key taskmanager max registration duration with description define the timeout for the task manager registration if the duration be exceed without a successful registration then the task manager terminate 
task manager option documentation section documentation section all task manager public static final config option integer num task slot key taskmanager number of task slot int type default value with description the number of parallel operator or user function instance that a single task manager can run if this value be larger than a single task manager take multiple instance of a function or operator that way the task manager can utilize multiple cpu core but at the same time the available memory be divide between the different operator or function instance this value be typically proportional to the number of physical cpu core that the task manager s machine have e g equal to the number of core or half the number of core 
task manager option documentation section documentation section all task manager public static final config option boolean debug memory log key taskmanager debug memory log boolean type default value false with deprecate key taskmanager debug memory start log thread with description flag indicate whether to start a thread which repeatedly log the memory usage of the jvm 
task manager option documentation section documentation section all task manager public static final config option long debug memory usage log interval ms key taskmanager debug memory log interval long type default value l with deprecate key taskmanager debug memory log interval ms with description the interval in ms for the log thread to log the current memory usage 
task manager option documentation section documentation section all task manager public static final config option memory size memory segment size key taskmanager memory segment size memory type default value memory size parse 32kb with description size of memory buffer use by the network stack and the memory manager 
task manager option documentation section documentation section all task manager public static final config option string host bind policy key taskmanager network bind policy string type default value ip with description description builder text the automatic address bind policy use by the task manager if host key be not set the value should be one of the follow n list text name use hostname as bind address text ip use host s ip address as bind address build 
task manager option documentation section documentation section all task manager public static final config option string task manager resource id key taskmanager resource id string type no default value with description the task manager s resource i d if not configure the resource i would will be generate with the rpc address rpc port and a character random string notice that this option be not valid in yarn meso and native kubernete mode 
task manager option documentation section documentation section common memory public static final config option memory size total process memory key taskmanager memory process size memory type no default value with description total process memory size for the task executor this include all the memory that a task executor consume consist of total flink memory jvm metaspace and jvm overhead on containerized setup this should be set to the container memory see also taskmanager memory flink size for total flink memory size configuration 
task manager option documentation section documentation section common memory public static final config option memory size total flink memory key taskmanager memory flink size memory type no default value with description string format total flink memory size for the task executor this include all the memory that a task executor consume except for jvm metaspace and jvm overhead it consist of framework heap memory task heap memory task off heap memory manage memory and network memory see also be for total process memory size configuration total process memory key 
task manager option documentation section documentation section common memory public static final config option memory size framework heap memory key taskmanager memory framework heap size memory type default value memory size parse m with description framework heap memory size for task executor this be the size of jvm heap memory reserve for task executor framework which will not be allocate to task slot 
task manager option documentation section documentation section common memory public static final config option memory size framework off heap memory key taskmanager memory framework off heap size memory type default value memory size parse m with description framework off heap memory size for task executor this be the size of off heap memory jvm direct memory and native memory reserve for task executor framework which will not be allocate to task slot the configure value will be fully count when flink calculate the jvm max direct memory size parameter 
task manager option documentation section documentation section common memory public static final config option memory size task heap memory key taskmanager memory task heap size memory type no default value with description task heap memory size for task executor this be the size of jvm heap memory reserve for task if not specify it will be derive as total flink memory minus framework heap memory task off heap memory manage memory and network memory 
task manager option documentation section documentation section common memory public static final config option memory size task off heap memory key taskmanager memory task off heap size memory type default value memory size zero with description task off heap memory size for task executor this be the size of off heap memory jvm direct memory and native memory reserve for task the configure value will be fully count when flink calculate the jvm max direct memory size parameter 
task manager option documentation section documentation section common memory public static final config option memory size manage memory size key taskmanager memory manage size memory type no default value with deprecate key taskmanager memory size with description manage memory size for task executor this be the size of off heap memory manage by the memory manager reserve for sort hash table cache of intermediate result and rock d b state backend memory consumer can either allocate memory from the memory manager in the form of memory segment or reserve byte from the memory manager and keep they memory usage within that boundary if unspecified it will be derive to make up the configure fraction of the total flink memory 
task manager option documentation section documentation section common memory public static final config option float manage memory fraction key taskmanager memory manage fraction float type default value 0.4 f with description fraction of total flink memory to be use as manage memory if manage memory size be not explicitly specify 
task manager option documentation section documentation section common memory public static final config option memory size network memory min key taskmanager memory network min memory type default value memory size parse 64m with deprecate key netty shuffle environment option network buffer memory min key with description min network memory size for task executor network memory be off heap memory reserve for shuffle environment e g network buffer network memory size be derive to make up the configure fraction of the total flink memory if the derive size be less greater than the configure min max size the min max size will be use the exact size of network memory can be explicitly specify by set the min max to the same value 
task manager option documentation section documentation section common memory public static final config option memory size network memory max key taskmanager memory network max memory type default value memory size parse 1g with deprecate key netty shuffle environment option network buffer memory max key with description max network memory size for task executor network memory be off heap memory reserve for shuffle environment e g network buffer network memory size be derive to make up the configure fraction of the total flink memory if the derive size be less greater than the configure min max size the min max size will be use the exact size of network memory can be explicitly specify by set the min max to the same value 
task manager option documentation section documentation section common memory public static final config option float network memory fraction key taskmanager memory network fraction float type default value 0.1 f with deprecate key netty shuffle environment option network buffer memory fraction key with description fraction of total flink memory to be use as network memory network memory be off heap memory reserve for shuffle environment e g network buffer network memory size be derive to make up the configure fraction of the total flink memory if the derive size be less greater than the configure min max size the min max size will be use the exact size of network memory can be explicitly specify by set the min max size to the same value 
task manager option documentation section documentation section common memory public static final config option memory size jvm metaspace key taskmanager memory jvm metaspace size memory type default value memory size parse m with description jvm metaspace size for the task executor 
task manager option documentation section documentation section common memory public static final config option memory size jvm overhead min key taskmanager memory jvm overhead min memory type default value memory size parse m with description min jvm overhead size for the task executor this be off heap memory reserve for jvm overhead such as thread stack space compile cache etc this include native memory but not direct memory and will not be count when flink calculate jvm max direct memory size parameter the size of jvm overhead be derive to make up the configure fraction of the total process memory if the derive size be less greater than the configure min max size the min max size will be use the exact size of jvm overhead can be explicitly specify by set the min max size to the same value 
task manager option documentation section documentation section common memory public static final config option memory size jvm overhead max key taskmanager memory jvm overhead max memory type default value memory size parse 1g with description max jvm overhead size for the task executor this be off heap memory reserve for jvm overhead such as thread stack space compile cache etc this include native memory but not direct memory and will not be count when flink calculate jvm max direct memory size parameter the size of jvm overhead be derive to make up the configure fraction of the total process memory if the derive size be less greater than the configure min max size the min max size will be use the exact size of jvm overhead can be explicitly specify by set the min max size to the same value 
task manager option documentation section documentation section common memory public static final config option float jvm overhead fraction key taskmanager memory jvm overhead fraction float type default value 0.1 f with description fraction of total process memory to be reserve for jvm overhead this be off heap memory reserve for jvm overhead such as thread stack space compile cache etc this include native memory but not direct memory and will not be count when flink calculate jvm max direct memory size parameter the size of jvm overhead be derive to make up the configure fraction of the total process memory if the derive size be less greater than the configure min max size the min max size will be use the exact size of jvm overhead can be explicitly specify by set the min max size to the same value 
task manager option documentation section documentation section all task manager public static final config option long task cancellation interval key task cancellation interval long type default value l with deprecate key task cancellation interval with description time interval between two successive task cancellation attempt in millisecond 
task manager option documentation section documentation section all task manager public static final config option long task cancellation timeout key task cancellation timeout long type default value l with description timeout in millisecond after which a task cancellation time out and lead to a fatal task manager error a value of deactivate the watch dog 
task manager option documentation section documentation section all task manager public static final config option long task cancellation timeout timer config option key task cancellation timer timeout long type default value l with deprecate key timerservice exceptional shutdown timeout with description time we wait for the timer in millisecond to finish all pend timer thread when the stream task be cancel 
test common option documentation section section section public static final config option integer common option config option key first option a int type default value with description this be the description for the common option 
test common option documentation section value section position public static final config option integer common position option config option key third option a int type default value with description this be the description for the positioned common option 
rock d b option documentation section documentation section expert rocksdb public static final config option string local directory config option key state backend rocksdb localdir no default value with deprecate key state backend rocksdb checkpointdir with description the local directory on the task manager where rock d b put its file 
rock d b option documentation section documentation section state backend rocksdb public static final config option priority queue state type timer service factory config option key state backend rocksdb timer service factory enum type priority queue state type class default value rocksdb with description string format this determine the factory for timer service state implementation option be either s heap base or s for a implementation base on rock d b heap name rocksdb name 
rock d b option documentation section documentation section expert rocksdb public static final config option integer checkpoint transfer thread num config option key state backend rocksdb checkpoint transfer thread num default value with description the number of thread per stateful operator use to transfer download and upload file in rock d b state backend 
rock d b option documentation section documentation section expert rocksdb public static final config option string predefined option config option key state backend rocksdb predefined option default value default name with description string format the predefined setting for rock d b d b option and column family option by flink community current support candidate predefined option be s s s or s note that user customize option and option from the rock d b option factory be apply on top of these predefined one default name spin disk optimize name spinning disk optimize high mem name flash ssd optimize name 
rock d b option documentation section documentation section expert rocksdb public static final config option string option factory config option key state backend rocksdb option factory default value default configurable option factory class get name with description string format the option factory class for rock d b to create d b option and column family option the default option factory be s and it would read the configure option which provide in rock d b configurable option default configurable option factory class get name 
rock d b option documentation section documentation section state backend rocksdb public static final config option boolean use manage memory config option key state backend rocksdb memory manage boolean type default value true with description if set the rock d b state backend will automatically configure itself to use the manage memory budget of the task slot and divide the memory over write buffer index block cache etc that way the three major use of memory of rock d b will be cap 
rock d b option documentation section documentation section state backend rocksdb public static final config option memory size fix per slot memory size config option key state backend rocksdb memory fix per slot memory type no default value with description string format the fix total amount of memory share among all rock d b instance per slot this option override the s option when configure if neither this option nor the s option be set then each rock d b column family state have its own memory cache as control by the column family option use manage memory key use manage memory key 
rock d b option documentation section documentation section state backend rocksdb public static final config option double write buffer ratio config option key state backend rocksdb memory write buffer ratio double type default value 0.5 with description string format the maximum amount of memory that write buffer may take as a fraction of the total share memory this option only have a effect when s or s be configure use manage memory key fix per slot memory size key 
rock d b option documentation section documentation section state backend rocksdb public static final config option double high priority pool ratio config option key state backend rocksdb memory high prio pool ratio double type default value 0.1 with description string format the fraction of cache memory that be reserve for high priority datum like index filter and compression dictionary block this option only have a effect when s or s be configure use manage memory key fix per slot memory size key 
