aliyun o s s auto configure configuration conditional on property name zlt file server type have value aliyun public class aliyun o s s auto configure autowire private file server property file property client aliyun oss access key bean public o s s client oss client o s s client oss client new o s s client file property get oss get endpoint new default credential provider file property get oss get access key file property get oss get access key secret null return oss client service public class aliyun oss service impl extend abstract i file service autowired private o s s client oss client override protect string file type return file property get type override protect void upload file multipart file file file info file info throw exception oss client put object file property get oss get bucket name file info get name file get input stream file info set url file property get oss get domain file info get name override protect boolean delete file file info file info oss client delete object file property get oss get bucket name file info get name return true 
fastdf auto configure configuration conditional on property name zlt file server type have value fastdf public class fastdf auto configure autowire private file server property file property service public class fastdf service impl extend abstract i file service autowired private fast file storage client storage client override protect string file type return file property get type override protect void upload file multipart file file file info file info throw exception store path store path storage client upload file file get input stream file get size filename util get extension file get original filename null file info set url http file property get fdf get web url store path get full path file info set path store path get full path override protect boolean delete file file info file info if file info null str util be not empty file info get path store path store path store path parse from url file info get path storage client delete file store path get group store path get path return true 
qiniu o s s auto configure configuration conditional on property name zlt file server type have value qiniu public class qiniu o s s auto configure autowire private file server property file property bean public com qiniu storage configuration qiniu config return new com qiniu storage configuration zone zone2 bean public upload manager upload manager return new upload manager qiniu config return bean public auth auth return auth create file property get oss get access key file property get oss get access key secret bean public bucket manager bucket manager return new bucket manager auth qiniu config service public class qiniu oss service impl extend abstract i file service autowired private upload manager upload manager autowire private bucket manager bucket manager autowire private auth auth override protect string file type return file property get type override protect void upload file multipart file file file info file info throw exception put upload manager put file get byte file info get name auth upload token file property get oss get bucket name file info set url file property get oss get endpoint file info get name file info set path file property get oss get endpoint file info get name override protect boolean delete file file info file info try response response bucket manager delete file property get oss get bucket name file info get path int retry while response need retry retry response bucket manager delete file property get oss get bucket name file info get path catch qiniu exception e return false return true 
auth db token store conditional on property prefix zlt oauth2 token store name type have value db public class auth db token store autowire private datum source datum source bean public token store token store return new jdbc token store datum source 
auth jwt token store conditional on property prefix zlt oauth2 token store name type have value auth jwt public class auth jwt token store bean key prop public key property key property return new key property resource name key prop private key property key property bean public token store token store jwt access token converter jwt access token converter return new jwt token store jwt access token converter bean public jwt access token converter jwt access token converter final jwt access token converter converter new jwt access token converter key pair key pair new key store key factory key property get key store get location key property get key store get secret to char array get key pair key property get key store get alias converter set key pair key pair default access token converter token converter default access token converter converter get access token converter token converter set user token converter new custom user authentication converter return converter jwt token token return token enhancer bean public token enhancer token enhancer return access token authentication final map string object additional info new hash map object principal authentication get principal id if principal instanceof sy user sy user user sy user principal additional info put id user get id default o auth2 access token access token set additional information additional info return access token 
auth redis token store conditional on property prefix zlt oauth2 token store name type have value redis match if missing true public class auth redis token store bean public token store token store redis connection factory connection factory security property security property return new custom redis token store connection factory security property 
re jwt token store conditional on property prefix zlt oauth2 token store name type have value re jwt public class re jwt token store autowire private resource server property resource bean public token store token store jwt access token converter jwt access token converter return new jwt token store jwt access token converter bean public jwt access token converter jwt access token converter jwt access token converter converter new jwt access token converter converter set verifier key get pub key default access token converter token converter default access token converter converter get access token converter token converter set user token converter new custom user authentication converter return converter key return key private string get pub key resource re new class path resource security constant rsa public key try buffer reader br new buffer reader new input stream reader re get input stream return br line collect collector join n catch i o exception ioe return get key from authorization server key return key private string get key from authorization server if str util be not empty this resource get jwt get key uri final http header header new http header final string username this resource get client id final string password this resource get client secret if username null password null final byte token base64 get encoder encode username password get byte header add authorization basic new string token final http entity void request new http entity header final string url this resource get jwt get key uri return string new rest template exchange url http method get request map class get body get value return null 
mybatis plus auto configure bean conditional on miss bean conditional on property prefix zlt mybatis plus auto fill name enable have value true match if missing true public meta object handler meta object handler return new date meta object handler auto fill property 
db audit service impl slf4j conditional on property name zlt audit log log type have value db conditional on class jdbc template class public class db audit service impl implement i audit service private static final string insert sql insert into sys logger application name class name method name user id user name client id operation timestamp value private final jdbc template jdbc template public db audit service impl autowired require false log db property log db property datum source datum source if log db property null string util be not empty log db property get jdbc url datum source new hikari datum source log db property this jdbc template new jdbc template datum source post construct public void init string sql create table if not exist sys logger n id int not null auto increment n application name varchar character set utf8 collate utf8 general ci null comment n class name varchar character set utf8 collate utf8 general ci not null comment n method name varchar character set utf8 collate utf8 general ci not null comment n user id int null comment id n user name varchar character set utf8 collate utf8 general ci null comment n client id varchar character set utf8 collate utf8 general ci null comment id n operation varchar character set utf8 collate utf8 general ci not null comment n timestamp varchar character set utf8 collate utf8 general ci not null comment n primary key id use btree n engine inno d b character set utf8 collate utf8 general ci row format dynamic this jdbc template execute sql async override public void save audit audit this jdbc template update insert sql audit get application name audit get class name audit get method name audit get user id audit get user name audit get client id audit get operation audit get timestamp 
logger audit service impl slf4j conditional on property name zlt audit log log type have value logger match if missing true public class logger audit service impl implement i audit service private static final string msg pattern id id 2020 - 02 04 09 13:34 user center com central user controller sy user controller save or update admin web app admin override public void save audit audit log debug msg pattern audit get timestamp format date time formatter of pattern yyyy mm dd hh mm ss sss audit get application name audit get class name audit get method name audit get user id audit get user name audit get client id audit get operation 
redisson distribute lock conditional on class redisson client class conditional on property prefix zlt lock name locker type have value redis match if missing true public class redisson distribute lock implement distribute lock autowired private redisson client redisson private r lock get lock string key boolean be fair if be fair return redisson get fair lock common constant lock key prefix key return redisson get lock common constant lock key prefix key override public r lock lock string key long lease time time unit unit boolean be fair r lock lock get lock key be fair lock lock lease time unit return lock override public r lock lock string key long lease time time unit unit return lock key lease time unit false override public r lock lock string key boolean be fair return lock key null be fair override public r lock lock string key return lock key null false override public r lock try lock string key long wait time long lease time time unit unit boolean be fair throw interrupted exception r lock lock get lock key be fair if lock try lock wait time lease time unit return lock return null override public r lock try lock string key long wait time long lease time time unit unit throw interrupted exception return try lock key wait time lease time unit false override public r lock try lock string key long wait time time unit unit boolean be fair throw interrupted exception return try lock key wait time unit be fair override public r lock try lock string key long wait time time unit unit throw interrupted exception return try lock key wait time unit false override public void unlock object lock if lock null if lock instanceof r lock r lock r lock r lock lock if r lock be lock r lock unlock else throw new lock exception require r lock type 
lb isolation auto configure conditional on property value config constant config ribbon isolation enable have value true ribbon client default configuration rule configure class public class lb isolation auto configure 
swagger2 configuration conditional on property name zlt swagger enable match if missing true import swagger2 documentation configuration class public class swagger2 configuration 
swagger auto configuration bean conditional on miss bean conditional on property name zlt swagger enable match if missing true public list docket create rest api swagger property swagger property configurable bean factory configurable bean factory configurable bean factory bean factory list docket docket list new link list if swagger property get docket size final docket docket create docket swagger property configurable bean factory register singleton default docket docket docket list add docket return docket list for string group name swagger property get docket key set swagger property docket info docket info swagger property get docket get group name api info api info new api info builder title docket info get title be empty swagger property get title docket info get title description docket info get description be empty swagger property get description docket info get description version docket info get version be empty swagger property get version docket info get version license docket info get license be empty swagger property get license docket info get license license url docket info get license url be empty swagger property get license url docket info get license url contact new contact docket info get contact get name be empty swagger property get contact get name docket info get contact get name docket info get contact get url be empty swagger property get contact get url docket info get contact get url docket info get contact get email be empty swagger property get contact get email docket info get contact get email term of service url docket info get term of service url be empty swagger property get term of service url docket info get term of service url build base path path if docket info get base path be empty docket info get base path add list predicate string base path new array list docket info get base path size for string path docket info get base path base path add path selector ant path exclude path list predicate string exclude path new array list docket info get exclude path size for string path docket info get exclude path exclude path add path selector ant path docket docket new docket documentation type swagger host swagger property get host api info api info global operation parameter assembly global operation parameter swagger property get global operation parameter docket info get global operation parameter group name group name select apis request handler selector base package docket info get base package path predicate and predicate not predicate or exclude path predicate or base path build security scheme security scheme security context security context configurable bean factory register singleton group name docket docket list add docket return docket list 
dynamic route config configuration conditional on property prefix zlt gateway dynamic route name enable have value true public class dynamic route config autowire private application event publisher publisher naco configuration conditional on property prefix zlt gateway dynamic route name datum type have value naco match if missing true public class naco dyn route autowired private naco config property naco config property bean public naco route definition repository naco route definition repository return new naco route definition repository publisher naco config property 
dynamic route config configuration conditional on property prefix zlt gateway dynamic route name datum type have value naco match if missing true public class naco dyn route autowired private naco config property naco config property bean public naco route definition repository naco route definition repository return new naco route definition repository publisher naco config property 
lb isolation filter component conditional on property name config constant config ribbon isolation enable have value true public class lb isolation filter extend load balancer client filter public lb isolation filter load balancer client load balancer load balancer property property super load balancer property override protected service instance choose server web exchange exchange string vresion exchange get request get header get first common constant z l t version if str util be not empty vresion if this load balancer instanceof ribbon load balancer client ribbon load balancer client client ribbon load balancer client this load balancer string service id uri exchange get attribute gateway request url attr get host return client choose service id vresion return super choose exchange 
dynamic zuul route config configuration conditional on property prefix zlt gateway dynamic route name enable have value true public class dynamic zuul route config autowire private zuul property zuul property autowire private dispatcher servlet path dispatcher servlet path naco configuration conditional on property prefix zlt gateway dynamic route name datum type have value naco match if missing true public class naco zuul route autowired private naco config property naco config property autowire private application event publisher publisher bean public naco dyn route locator naco dyn route locator return new naco dyn route locator naco config property publisher dispatcher servlet path get prefix zuul property 
dynamic zuul route config configuration conditional on property prefix zlt gateway dynamic route name datum type have value naco match if missing true public class naco zuul route autowired private naco config property naco config property autowire private application event publisher publisher bean public naco dyn route locator naco dyn route locator return new naco dyn route locator naco config property publisher dispatcher servlet path get prefix zuul property 
apollo auto configuration configuration conditional on property property source constant apollo bootstrap enable conditional on miss bean property source processor class public class apollo auto configuration bean public config property source processor config property source processor return new config property source processor 
bootstrap config test conditional on property test bean conditional on key enable auto configuration configuration static class configuration with conditional on property bean public test bean test bean return new test bean 
config server eureka client configure configuration enable eureka client conditional on property name apollo eureka client enable have value true match if missing true public class config server eureka client configure 
config server eureka server configure configuration enable eureka server conditional on property name apollo eureka server enable have value true match if missing true public class config server eureka server configure 
sample redis config conditional on property redis cache enable configuration property prefix redis cache component sample redis config refresh scope public class sample redis config private static final logger logger logger factory get logger sample redis config class private int expire seconds private string cluster node private int command timeout private map string string some map map new link hash map private list string some list list new link list post construct private void initialize logger info sample redis config initialize expire seconds cluster node command timeout some map some list expire seconds cluster node command timeout some map some list public void set expire seconds int expire seconds this expire seconds expire seconds public void set cluster node string cluster node this cluster node cluster node public void set command timeout int command timeout this command timeout command timeout public map string string get some map return some map public list string get some list return some list override public string to string return string format sample redis config expire seconds d cluster node s command timeout d some map s some list s expire seconds cluster node command timeout some map some list 
spring boot apollo refresh config conditional on property redis cache enable component public class spring boot apollo refresh config private static final logger logger logger factory get logger spring boot apollo refresh config class private final sample redis config sample redis config private final refresh scope refresh scope public spring boot apollo refresh config final sample redis config sample redis config final refresh scope refresh scope this sample redis config sample redis config this refresh scope refresh scope apollo config change listener value config const namespace application t e s t1 apollo application yaml interested key prefix redi cache public void on change config change event change event logger info before refresh sample redis config to string refresh scope refresh sample redis config logger info after refresh sample redis config to string 
simple web auth service impl component primary conditional on property name auth enable match if missing true public class simple web auth service impl implement auth service http servlet request public static final string web session key session sentinel admin override public auth user get auth user http servlet request request http session session request get session object sentinel user obj session get attribute simple web auth service impl web session key if sentinel user obj null sentinel user obj instanceof auth user return auth user sentinel user obj return null public static final class simple web auth user impl implement auth user private string username public simple web auth user impl string username this username username override public boolean auth target string target privilege type privilege type return true override public boolean be super user return true override public string get nick name return username override public string get login name return username override public string get id return username 
