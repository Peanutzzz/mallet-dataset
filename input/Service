sy generator service impl slf4j service public class sy generator service impl extend service impl implement sy generator service autowire private sy generator mapper sy generator mapper override public page result map string object query list map string object map page map string object page new page map util get integer map page map util get integer map limit list map string object list sy generator mapper query list page map return page result map string object builder datum list code count page get total build override public map string string query table string table name return sy generator mapper query table table name override public list map string string query column string table name return sy generator mapper query column table name override public byte generator code string table name byte array output stream output stream new byte array output stream try zip output stream zip new zip output stream output stream for string table name table name map string string table query table table name list map string string column query column table name gen util generator code table column zip catch i o exception e log error generator code error e return output stream to byte array 
sy generator service service public interface sy generator service extend i service page result query list map string object map map string string query table string table name list map string string query column string table name byte generator code string table name 
aliyun o s s auto configure service public class aliyun oss service impl extend abstract i file service autowired private o s s client oss client override protect string file type return file property get type override protect void upload file multipart file file file info file info throw exception oss client put object file property get oss get bucket name file info get name file get input stream file info set url file property get oss get domain file info get name override protect boolean delete file file info file info oss client delete object file property get oss get bucket name file info get name return true 
fastdf auto configure service public class fastdf service impl extend abstract i file service autowired private fast file storage client storage client override protect string file type return file property get type override protect void upload file multipart file file file info file info throw exception store path store path storage client upload file file get input stream file get size filename util get extension file get original filename null file info set url http file property get fdf get web url store path get full path file info set path store path get full path override protect boolean delete file file info file info if file info null str util be not empty file info get path store path store path store path parse from url file info get path storage client delete file store path get group store path get path return true 
qiniu o s s auto configure service public class qiniu oss service impl extend abstract i file service autowired private upload manager upload manager autowire private bucket manager bucket manager autowire private auth auth override protect string file type return file property get type override protect void upload file multipart file file file info file info throw exception put upload manager put file get byte file info get name auth upload token file property get oss get bucket name file info set url file property get oss get endpoint file info get name file info set path file property get oss get endpoint file info get name override protect boolean delete file file info file info try response response bucket manager delete file property get oss get bucket name file info get path int retry while response need retry retry response bucket manager delete file property get oss get bucket name file info get path catch qiniu exception e return false return true 
index service impl service public class index service impl implement i index service private object mapper mapper new object mapper private final elasticsearch rest template elasticsearch rest template public index service impl elasticsearch rest template elasticsearch rest template this elasticsearch rest template elasticsearch rest template override public boolean create index dto index dto throw i o exception create index request request new create index request index dto get index name request setting setting builder put index number of shard index dto get number of shard put index number of replica index dto get number of replica if str util be not empty index dto get mapping source mapping request map index dto get mapping source x content type json create index response response elasticsearch rest template get client index create request request option default return response be acknowledge override public boolean delete string index name throw i o exception delete index request request new delete index request index name acknowledge response response elasticsearch rest template get client index delete request request option default return response be acknowledge override public page result map string string list string query str string index throw i o exception response response elasticsearch rest template get client get low level client perform request new request get cat index h health status index doc count doc delete store size s cd desc format json index str util null to empty index list map string string list of index from e null if response null string raw body entity util to string response get entity type reference list map string string type ref new type reference list map string string list of index from e mapper read value raw body type ref return page result map string string builder datum list of index from e code build override public map string object show string index name throw i o exception get index request request new get index request index name get index response get index response elasticsearch rest template get client index get request request option default mapping metadata mapping metadata get index response get mapping get index name map string object mapp open map mapping metadata get source as map list alias metadata index alias get index response get alias get index name string setting str get index response get setting get index name to string object setting obj null if str util be not empty setting str setting obj j s o n object parse setting str map string object result new hash map map string object index map new hash map list string alias list new array list index alias size index map put alias alias list index map put setting setting obj index map put mapping mapp open map result put index name index map alias for alias metadata alias index alias aliase list add alias get alias return result 
aggregation service impl service public class aggregation service impl implement i aggregation service private final elasticsearch rest template elasticsearch rest template public aggregation service impl elasticsearch rest template elasticsearch rest template this elasticsearch rest template elasticsearch rest template e ip ip browser operate system timestamp param index name param route es return curr date uv curr date pv curr week pv curr hour uv browser data name chrome value name safari value browser legend datum chrome safari operating system data name window value name mac os x value curr month pv stat week uv operating system legend datum window mac os x stat week item 2019 - 05 2019 - 05 stat week pv override public map string object request stat agg string index name string routing throw i o exception zone date time zone date time zone date time now local date local date local date now local date time cur date time local date time now search source builder search source builder new search source builder search request search request new search request index name search request source search source builder routing routing search source builder aggregation aggregation builder date range curr date field timestamp add range zone date time with hour with minute with second with nano zone date time plus day sub aggregation aggregation builder cardinality uv field ip keyword aggregation aggregation builder date range curr24 hour field timestamp add range zone date time minus day zone date time sub aggregation aggregation builder date histogram stat date field timestamp fix interval new date histogram interval 90m format common constant datetime format time zone zone id of gmt min doc count 0 l extend bound new extended bound cur date time minus day format date time formatter of pattern common constant datetime format cur date time format date time formatter of pattern common constant datetime format sub aggregation aggregation builder cardinality uv field ip keyword aggregation aggregation builder date range curr week field timestamp add range zone date time minus day zone date time sub aggregation aggregation builder date histogram stat week field timestamp calendar interval date histogram interval day format common constant date format time zone zone id of gmt min doc count 0 l extend bound new extended bound local date minus day format date time formatter of pattern common constant date format local date format date time formatter of pattern common constant date format sub aggregation aggregation builder cardinality uv field ip keyword aggregation aggregation builder date range curr month field timestamp add range zone date time minus day zone date time aggregation aggregation builder term browser field browser keyword aggregation aggregation builder term operate system field operate system keyword aggregation aggregation builder date range curr hour field timestamp add range zone date time minus hour zone date time sub aggregation aggregation builder cardinality uv field ip keyword size rest high level client client elasticsearch rest template get client search response response client search search request request option default aggregation aggregation response get aggregation map string object result new hash map if aggregation null set curr date result aggregation set curr24 hour result aggregation set curr week result aggregation set curr month result aggregation set term datum result aggregation browser set term datum result aggregation operate system set curr hour result aggregation return result private void set curr date map string object result aggregation aggregation parse date range curr date aggregation get curr date range bucket bucket curr date get bucket get parse cardinality cardinality bucket get aggregation get uv result put curr date pv bucket get doc count result put curr date uv cardinality get value private void set curr24 hour map string object result aggregation aggregation parse date range curr24 hour aggregation get curr24 hour range bucket bucket curr24 hour get bucket get set stat date result bucket get aggregation private void set curr week map string object result aggregation aggregation parse date range curr week aggregation get curr week range bucket bucket curr week get bucket get result put curr week pv bucket get doc count set stat week result bucket get aggregation private void set curr month map string object result aggregation aggregation parse date range curr month aggregation get curr month range bucket bucket curr month get bucket get result put curr month pv bucket get doc count private void set term datum map string object result aggregation aggregation string key term term aggregation get key list string legend datum new array list list agg item vo data new array list for term bucket bucket term get bucket legend datum add string bucket get key agg item vo item new agg item vo item set name string bucket get key item set value bucket get doc count data add item result put key legend datum legend datum result put key data data private void set stat week map string object result aggregation aggregation parse date histogram agg aggregation get stat week list string item new array list list long uv new array list list long pv new array list parse cardinality cardinality for histogram bucket bucket agg get bucket item add bucket get key as string pv add bucket get doc count cardinality bucket get aggregation get uv uv add cardinality get value result put stat week item item result put stat week uv uv result put stat week pv pv private void set curr hour map string object result aggregation aggregation parse date range curr date aggregation get curr hour range bucket bucket curr date get bucket get parse cardinality cardinality bucket get aggregation get uv result put curr hour uv cardinality get value private void set stat date map string object result aggregation aggregation parse date histogram agg aggregation get stat date list string item new array list list long uv new array list list long pv new array list parse cardinality cardinality for histogram bucket bucket agg get bucket item add get time by datetime str bucket get key as string pv add bucket get doc count cardinality bucket get aggregation get uv uv add cardinality get value result put stat date item item result put stat date uv uv result put stat date pv pv 2020 - 03 10 01 30:00 03 - 10 01:30 return private string get time by datetime str string datetime str if str util be not empty datetime str return datetime str substring return 
search service impl service public class search service impl implement i search service private final elasticsearch rest template elasticsearch rest template public search service impl elasticsearch rest template elasticsearch rest template this elasticsearch rest template elasticsearch rest template string query param index name param search dto dto return override public page result j s o n object str query string index name search dto search dto throw i o exception return search builder builder elasticsearch rest template index name set string query search dto get query str add sort search dto get sort col sort order desc set be highlight search dto get be highlighter get page search dto get page search dto get limit 
sy menu service impl slf4j service public class sy menu service impl extend super service impl sy menu mapper sy menu implement i sy menu service resource private i sy role menu service role menu service transactional rollback for exception class override public void set menu to role long role id set long menu id role menu service delete role id null if collection util be empty menu id list sy role menu role menu new array list menu id size menu id for each menu id role menu add new sy role menu role id menu id role menu service save batch role menu param role id return override public list sy menu find by role set long role id return role menu service find menu by role id role id null param role id id param role id return override public list sy menu find by role set long role id integer type return role menu service find menu by role id role id type override public list sy menu find by role code set string role code integer type return role menu service find menu by role code role code type override public list sy menu find all return base mapper select list new query wrapper sy menu order by asc sort override public list sy menu find one return base mapper select list new query wrapper sy menu eq type order by asc sort 
sy role menu service impl slf4j service public class sy role menu service impl extend super service impl sy role menu mapper sy role menu implement i sy role menu service resource private sy role menu mapper sy role menu mapper override public int save long role id long menu id return sy role menu mapper save role id menu id override public int delete long role id long menu id return sy role menu mapper delete role id menu id override public list sy menu find menu by role id set long role id integer type return sy role menu mapper find menu by role id role id type override public list sy menu find menu by role code set string role code integer type return sy role menu mapper find menu by role code role code type 
sy role service impl slf4j service public class sy role service impl extend super service impl sy role mapper sy role implement i sy role service private final static string lock key rolecode rolecode resource private sy user role mapper user role mapper resource private sy role menu mapper role menu mapper autowire private distribute lock lock transactional rollback for exception class override public void save role sy role sy role throw exception string role code sy role get code super save idempotency sy role lock lock key rolecode role code new query wrapper sy role eq code role code code transactional rollback for exception class override public void delete role long id base mapper delete by id id role menu mapper delete id null user role mapper delete user role null id override public page result sy role find role map string object param integer cur page map util get integer param page integer limit map util get integer param limit page sy role page new page cur page null cur page limit null limit list sy role list base mapper find list page param return page result sy role builder datum list code count page get total build override transactional public result save or update role sy role sy role throw exception if sy role get id null this save role sy role else base mapper update by id sy role return result succeed override public list sy role find all return base mapper find all 
sy role user service impl slf4j service public class sy role user service impl extend super service impl sy user role mapper sy role user implement i sy role user service resource private sy user role mapper sy user role mapper override public int delete user role long user id long role id return sy user role mapper delete user role user id role id override public int save user role long user id long role id return sy user role mapper save user role user id role id override public list sy role find role by user id long user id return sy user role mapper find role by user id user id override public list sy role find role by user id list long user id return sy user role mapper find role by user id user id 
sy user service impl slf4j service public class sy user service impl extend super service impl sy user mapper sy user implement i sy user service private final static string lock key username username autowire private password encoder password encoder resource private i sy role user service role user service resource private sy role menu mapper role menu mapper autowire private distribute lock lock override public login app user find by username string username sy user sy user this select by username username return get login app user sy user override public login app user find by open id string username sy user sy user this select by open id username return get login app user sy user override public login app user find by mobile string username sy user sy user this select by mobile username return get login app user sy user override public login app user get login app user sy user sy user if sy user null login app user login app user new login app user bean util copy property sy user login app user list sy role sy role role user service find role by user id sy user get id login app user set role sy role if collection util be empty sy role set long role id sy role parallel stream map super entity get id collect collector to set list sy menu menu role menu mapper find menu by role id role id common constant permission if collection util be empty menu set string permission menu parallel stream map p p get path collect collector to set login app user set permission permission return login app user return null param username return override public sy user select by username string username list sy user user base mapper select list new query wrapper sy user eq username username return get user user param mobile return override public sy user select by mobile string mobile list sy user user base mapper select list new query wrapper sy user eq mobile mobile return get user user open id param open id return override public sy user select by open id string open id list sy user user base mapper select list new query wrapper sy user eq open id open id return get user user private sy user get user list sy user user sy user user null if user null user be empty user user get return user transactional rollback for exception class override public void set role to user long id set long role id sy user sy user base mapper select by id id if sy user null throw new illegal argument exception role user service delete user role id null if collection util be empty role id list sy role user role user new array list role id size role id for each role id role user add new sy role user id role id role user service save batch role user transactional override public result update password long id string old password string new password sy user sy user base mapper select by id id if str util be not blank old password if password encoder match old password sy user get password return result fail if str util be blank new password new password common constant def user password sy user user new sy user user set id id user set password password encoder encode new password base mapper update by id user return result succeed override public page result sy user find user map string object param page sy user page new page map util get integer param page map util get integer param limit list sy user list base mapper find list page param long total page get total if total list long user id list stream map sy user get id collect collector to list list sy role sy role role user service find role by user id user id list for each u u set role sy role stream filter r object util not equal u get id r get user id collect collector to list return page result sy user builder datum list code count total build override public list sy role find role by user id long user id return role user service find role by user id user id override public result update enable map string object param long id map util get long param id boolean enable map util get boolean param enable sy user app user base mapper select by id id if app user null return result fail app user set enable enable app user set update time new date int i base mapper update by id app user log info app user return i result succeed app user result fail transactional rollback for exception class override public result save or update user sy user sy user throw exception if sy user get id null if string util be blank sy user get type sy user set type user type backend name sy user set password password encoder encode common constant def user password sy user set enable boolean true string username sy user get username boolean result super save or update idempotency sy user lock lock key username username new query wrapper sy user eq username username username if result str util be not empty sy user get role id role user service delete user role sy user get id null list role id array as list sy user get role id split if collection util be empty role id list sy role user role user new array list role id size role id for each role id role user add new sy role user sy user get id long parse long role id to string role user service save batch role user return result result succeed sy user result fail transactional rollback for exception class override public boolean del user long id role user service delete user role id null return base mapper delete by id id override public list sy user excel find all user map string object param list sy user excel sy user excel new array list list sy user list base mapper find list new page param for sy user sy user list sy user excel sy user excel new sy user excel bean util copy property sy user sy user excel sy user excel add sy user excel return sy user excel 
receive service service public class receive service stream listener sink input public void receive input string receive msg system out println input receive receive msg stream listener input2 public void receive input2 payload order order system out println input2 receive order spring messaging stream listener input3 public void receive input3 message msg system out println input3 receive msg 
sender service service public class sender service autowire private my source source public void send string msg source output send message builder with payload msg build tag public t void send with tag t msg string tag message message message builder with payload msg set header message const property tag tag set header message header content type mime type util application json build source output send message 
integral receive service service public class integral receive service stream listener sink input public void receive message message string consume error string message get header get consume error if equal consume error system err println exception commit throw new runtime exception system out println message stream listener input dlq public void receive dlq message message string order id string message get header get order id system err println order id 
order service impl slf4j service public class order service impl implement i order service override public void save order order system out println order get order id 
account service slf4j service public class account service resource private account mapper account mapper transactional rollback for exception class public void reduce string user id int money if u002 equal user id throw new runtime exception this be a mock exception query wrapper account wrapper new query wrapper wrapper set entity new account set user id user id account account account mapper select one wrapper account set money account get money money account mapper update by id account 
business service slf4j service public class business service private static final string commodity code p001 private static final int order count resource private order feign client order feign client resource private storage feign client storage feign client global transactional public void place order string user id storage feign client deduct commodity code order count order feign client create user id commodity code order count 
order service slf4j service public class order service resource private account feign client account feign client resource private order mapper order mapper transactional rollback for exception class public void create string user id string commodity code integer count integer order money count order order new order set user id user id set commodity code commodity code set count count set money order money order mapper insert order account feign client reduce user id order money 
storage service slf4j service public class storage service resource private storage mapper storage mapper param commodity code param count transactional rollback for exception class public void deduct string commodity code int count query wrapper storage wrapper new query wrapper wrapper set entity new storage set commodity code commodity code storage storage storage mapper select one wrapper storage set count storage get count count storage mapper update by id storage 
user service impl slf4j service public class user service impl extend super service impl user mapper user implement i user service 
demo service impl service slf4j public class demo service impl implement demo service resource private demo mapper demo mapper resource private service b client service b client resource private service c client service c client lcn transaction transactional rollback for exception class override public string execute string value string ex flag string flag string d resp service b client rpc value step2 call remote service b string e resp service c client rpc value step3 execute local transaction demo demo new demo demo set group id trace context trace group id demo set demo field value demo set create time new date demo set app name transaction get application id demo mapper save demo dtx if object non null ex flag throw new illegal state exception by ex flag return d resp e resp ok service a 
demo service impl service slf4j public class demo service impl implement demo service resource private demo mapper demo mapper override lcn transaction transactional rollback for exception class public string rpc string value demo demo new demo demo set group id trace context trace group id demo set demo field value demo set app name transaction get application id demo set create time new date demo mapper save demo return ok service b 
demo service impl service slf4j public class demo service impl implement demo service resource private demo mapper demo mapper override lcn transaction transactional rollback for exception class public string rpc string value demo demo new demo demo set demo field value demo set create time new date demo set app name transaction get application id demo set group id trace context trace group id demo mapper save demo if equal value throw new illegal state exception by test return ok service c 
permission service impl slf4j service permission service public class permission service impl extend default permission service impl resource private menu service menu service override public list sy menu find menu by role code string role code return menu service find by role code role code public boolean have permission http servlet request request authentication authentication return have permission authentication request get method request get request u be i 
admin biz impl service public class admin biz impl implement admin biz private static logger logger logger factory get logger admin biz impl class resource public xxl job log dao xxl job log dao resource private xxl job info dao xxl job info dao resource private xxl job registry dao xxl job registry dao override public return t string callback list handle callback param callback param list for handle callback param handle callback param callback param list return t string callback result callback handle callback param logger info job api controller callback handle callback param callback result callback result get code i job handler success get code success fail handle callback param callback result return return t success private return t string callback handle callback param handle callback param valid log item xxl job log log xxl job log dao load handle callback param get log id if log null return new return t string return t fail code log item not find if log get handle code return new return t string return t fail code log repeate callback avoid repeat callback trigger child job etc trigger success to trigger child job string callback msg null if i job handler success get code handle callback param get execute result get code xxl job info xxl job info xxl job info dao load by id log get job id if xxl job info null string util be not blank xxl job info get child job id callback msg br br span style color 00c0 ef i18n util get string jobconf trigger child run span br string child job id xxl job info get child job id split for int i i child job id length i int child job id string util be not blank child job id i string util be numeric child job id i integer value of child job id i if child job id job trigger pool helper trigger child job id trigger type enum parent null null return t string trigger child result return t success add msg callback msg message format format i18n util get string jobconf callback child msg1 i child job id length child job id i trigger child result get code return t success code i18n util get string system success i18n util get string system fail trigger child result get msg else callback msg message format format i18n util get string jobconf callback child msg2 i child job id length child job id i handle msg string buffer handle msg new string buffer if log get handle msg null handle msg append log get handle msg append br if handle callback param get execute result get msg null handle msg append handle callback param get execute result get msg if callback msg null handle msg append callback msg success save log log set handle time new date log set handle code handle callback param get execute result get code log set handle msg handle msg to string xxl job log dao update handle info log return return t success override public return t string registry registry param registry param int ret xxl job registry dao registry update registry param get regist group registry param get registry key registry param get registry value if ret xxl job registry dao registry save registry param get regist group registry param get registry key registry param get registry value return return t success override public return t string registry remove registry param registry param xxl job registry dao registry delete registry param get regist group registry param get registry key registry param get registry value return return t success 
xxl job service impl service public class xxl job service impl implement xxl job service private static logger logger logger factory get logger xxl job service impl class resource private xxl job group dao xxl job group dao resource private xxl job info dao xxl job info dao resource public xxl job log dao xxl job log dao resource private xxl job log glue dao xxl job log glue dao override public map string object page list int start int length int job group string job desc string executor handler string filter time page list list xxl job info list xxl job info dao page list start length job group job desc executor handler int list count xxl job info dao page list count start length job group job desc executor handler fill job info if list null list size for xxl job info job info list xxl job dynamic scheduler fill job info job info package result map string object map new hash map string object map put record total list count map put record filter list count map put datum list return map override public return t string add xxl job info job info valid xxl job group group xxl job group dao load job info get job group if group null return new return t string return t fail code i18n util get string system please choose i18n util get string jobinfo field jobgroup if cron expression be valid expression job info get job cron return new return t string return t fail code i18n util get string jobinfo field cron unvalid if string util be blank job info get job desc return new return t string return t fail code i18n util get string system please input i18n util get string jobinfo field jobdesc if string util be blank job info get author return new return t string return t fail code i18n util get string system please input i18n util get string jobinfo field author if executor route strategy enum match job info get executor route strategy null null return new return t string return t fail code i18n util get string jobinfo field executor route strategy i18n util get string system unvalid if executor block strategy enum match job info get executor block strategy null null return new return t string return t fail code i18n util get string jobinfo field executor block strategy i18n util get string system unvalid if glue type enum match job info get glue type null return new return t string return t fail code i18n util get string jobinfo field gluetype i18n util get string system unvalid if glue type enum bean glue type enum match job info get glue type string util be blank job info get executor handler return new return t string return t fail code i18n util get string system please input job handler fix r in shell if glue type enum glue shell glue type enum match job info get glue type job info get glue source null job info set glue source job info get glue source replace all r child job id valid if string util be not blank job info get child job id string child job id string util split job info get child job id for string child job id item child job id if string util be not blank child job id item string util be numeric child job id item xxl job info child job info xxl job info dao load by id integer value of child job id item if child job info null return new return t string return t fail code message format format i18n util get string jobinfo field child job id i18n util get string system not find child job id item else return new return t string return t fail code message format format i18n util get string jobinfo field child job id i18n util get string system unvalid child job id item job info set child job id string util join child job id add in db xxl job info dao save job info if job info get id return new return t string return t fail code i18n util get string jobinfo field add i18n util get string system fail return new return t string string value of job info get id override public return t string update xxl job info job info valid if cron expression be valid expression job info get job cron return new return t string return t fail code i18n util get string jobinfo field cron unvalid if string util be blank job info get job desc return new return t string return t fail code i18n util get string system please input i18n util get string jobinfo field jobdesc if string util be blank job info get author return new return t string return t fail code i18n util get string system please input i18n util get string jobinfo field author if executor route strategy enum match job info get executor route strategy null null return new return t string return t fail code i18n util get string jobinfo field executor route strategy i18n util get string system unvalid if executor block strategy enum match job info get executor block strategy null null return new return t string return t fail code i18n util get string jobinfo field executor block strategy i18n util get string system unvalid child job id valid if string util be not blank job info get child job id string child job id string util split job info get child job id for string child job id item child job id if string util be not blank child job id item string util be numeric child job id item xxl job info child job info xxl job info dao load by id integer value of child job id item if child job info null return new return t string return t fail code message format format i18n util get string jobinfo field child job id i18n util get string system not find child job id item else return new return t string return t fail code message format format i18n util get string jobinfo field child job id i18n util get string system unvalid child job id item job info set child job id string util join child job id stage job info xxl job info exist job info xxl job info dao load by id job info get id if exist job info null return new return t string return t fail code i18n util get string jobinfo field id i18n util get string system not find string old cron exist job info get job cron exist job info set job cron job info get job cron exist job info set job desc job info get job desc exist job info set author job info get author exist job info set alarm email job info get alarm email exist job info set executor route strategy job info get executor route strategy exist job info set executor handler job info get executor handler exist job info set executor param job info get executor param exist job info set executor block strategy job info get executor block strategy exist job info set executor timeout job info get executor timeout exist job info set executor fail retry count job info get executor fail retry count exist job info set child job id job info get child job id xxl job info dao update exist job info update quartz cron if start string qz group string value of exist job info get job group string qz name string value of exist job info get id try xxl job dynamic scheduler update job cron qz group qz name exist job info get job cron catch scheduler exception e logger error e get message e return return t fail return return t success override public return t string remove int id xxl job info xxl job info xxl job info dao load by id id string group string value of xxl job info get job group string name string value of xxl job info get id try unbind quartz xxl job dynamic scheduler remove job name group xxl job info dao delete id xxl job log dao delete id xxl job log glue dao delete by job id id return return t success catch scheduler exception e logger error e get message e return return t fail override public return t string start int id xxl job info xxl job info xxl job info dao load by id id string group string value of xxl job info get job group string name string value of xxl job info get id string cron expression xxl job info get job cron try boolean ret xxl job dynamic scheduler add job name group cron expression return ret return t success return t fail catch scheduler exception e logger error e get message e return return t fail override public return t string stop int id xxl job info xxl job info xxl job info dao load by id id string group string value of xxl job info get job group string name string value of xxl job info get id try bind quartz boolean ret xxl job dynamic scheduler remove job name group return ret return t success return t fail catch scheduler exception e logger error e get message e return return t fail override public return t string trigger job int id int fail retry count job trigger pool helper trigger id fail retry count return return t success xxl job info xxl job info xxl job info dao load by id id if xxl job info null return new return t string return t fail code i18n util get string jobinfo field id i18n util get string system unvalid string group string value of xxl job info get job group string name string value of xxl job info get id try xxl job dynamic scheduler trigger job name group return return t success catch scheduler exception e logger error e get message e return new return t string return t fail code e get message override public map string object dashboard info int job info count xxl job info dao find all count int job log count xxl job log dao trigger count by handle code int job log success count xxl job log dao trigger count by handle code return t success code executor count set string executer address set new hash set string list xxl job group group list xxl job group dao find all if group list null group list be empty for xxl job group group group list if group get registry list null group get registry list be empty executer address set add all group get registry list int executor count executer address set size map string object dashboard map new hash map string object dashboard map put job info count job info count dashboard map put job log count job log count dashboard map put job log success count job log success count dashboard map put executor count executor count return dashboard map private static final string trigger chart datum cache trigger chart datum cache override public return t map string object chart info date start date date end date get cache string cache key trigger chart datum cache start date get time end date get time map string object chart info map string object local cache util get cache key if chart info null return new return t map string object chart info process list string trigger day list new array list string list integer trigger day count run list new array list integer list integer trigger day count suc list new array list integer list integer trigger day count fail list new array list integer int trigger count run total int trigger count suc total int trigger count fail total list map string object trigger count map all xxl job log dao trigger count by day start date end date if trigger count map all null trigger count map all size for map string object item trigger count map all string day string value of item get trigger day int trigger day count integer value of string value of item get trigger day count int trigger day count run integer value of string value of item get trigger day count run int trigger day count suc integer value of string value of item get trigger day count suc int trigger day count fail trigger day count trigger day count run trigger day count suc trigger day list add day trigger day count run list add trigger day count run trigger day count suc list add trigger day count suc trigger day count fail list add trigger day count fail trigger count run total trigger day count run trigger count suc total trigger day count suc trigger count fail total trigger day count fail else for int i i i trigger day list add fast date format get instance yyyy mm dd format date util add day new date i trigger day count run list add trigger day count suc list add trigger day count fail list add map string object result new hash map string object result put trigger day list trigger day list result put trigger day count run list trigger day count running list result put trigger day count suc list trigger day count suc list result put trigger day count fail list trigger day count fail list result put trigger count run total trigger count run total result put trigger count suc total trigger count suc total result put trigger count fail total trigger count fail total set cache local cache util set cache key result 60 * 1000 cache 60 return new return t map string object result 
shard job handler job handler value shard job handler service public class sharding job handler extend i job handler override public return t string execute string param throw exception sharding util shard v o shard v o shard util get shard vo xxl job logger log shard v o get index shard v o get total for int i i shard v o get total i if i shard v o get index xxl job logger log i else xxl job logger log i return success 
client service impl slf4j service public class client service impl extend super service impl client mapper client implement i client service private final static string lock key clientid client id autowire private redis repository redis repository autowire private password encoder password encoder autowire private distribute lock lock override public result save client client client throw exception client set client secret password encoder encode client get client secret str string client id client get client id super save or update idempotency client lock lock key clientid client id new query wrapper client eq client id client id client id return result succeed override public page result client list client map string object param boolean be page page client page if be page page new page map util get integer param page map util get integer param limit else page new page list client list base mapper find list page param page set record list return page result client builder datum list code count page get total build override public void del client long id string client id base mapper select by id id get client id base mapper delete by id id redis repository del client redi key client id private string client redi key string client id return security constant cache client key client id 
redi authorization code service service public class redis authorization code service extend random value authorization code service private redis template string object redis template public redis authorization code service redi template string object redis template this redis template redis template jdbc authorization code service code redis override protect void store string code o auth2 authentication authentication redis template op for value set redis key code authentication time unit minute override protect o auth2 authentication remove final string code string code key redi key code o auth2 authentication token o auth2 authentication redis template op for value get code key this redi template delete code key return token redis code key param code return private string redis key string code return oauth code code 
redis client detail service slf4j service public class redis client detail service extend jdbc client detail service private redis template string object redis template public redis client detail service datum source datum source redi template string object redi template super datum source this redis template redis template override public client detail load client by client id string client id redis client detail client detail client detail redi template op for value get client redi key client id if client detail null client detail cache and get client client id return client detail client client param client id return private client detail cache and get client string client id client detail client detail null try client detail super load client by client id client id if client detail null redis redis template op for value set client redis key client id client detail log info client id client id client detail catch no such client exception e log error client id client id client id catch invalid client exception e log error cache and get client invalid client client id e return client detail override public void update client detail client detail client detail super update client detail client detail cache and get client client detail get client id override public void update client secret string client id string secret super update client secret client id secret cache and get client client id override public void remove client detail string client id super remove client detail client id remove redis cache client id redis param client id private void remove redis cache string client id redi template delete client redi key client id oauth client detail redi public void load all client to cache list client detail list super list client detail if collection util be empty list log error oauth client detail return list parallel stream for each client redi template op for value set client redis key client get client id client private string client redi key string client id return security constant cache client key client id 
redis token service impl slf4j service public class redis token service impl implement i token service autowire private redis repository redis repository override public page result token vo list token map string object param string client id integer page map util get integer param page integer limit map util get integer param limit int start end page util trans to start end page limit redi key string redis key get redis key param client id long size redis repository length redi key list token vo result new array list limit token list object token objs redis repository get list redis key start end start end if token objs null for object obj token obj default o auth2 access token access token default o auth2 access token obj token token vo token vo new token vo token vo set token value access token get value token vo set expiration access token get expiration object auth obj redis repository get security constant redi token auth access token get value o auth2 authentication authentication o auth2 authentication auth obj if authentication null o auth2 request request authentication get o auth2 request token vo set username authentication get name token vo set client id request get client id token vo set grant type request get grant type result add token vo return page result token vo builder datum result code count size build redis key private string get redis key map string object param string client id string result string username map util get string param username if str util be not empty username result security constant redi uname to access client id username else result security constant redi client id to access client id return result 
user detail service impl slf4j service public class user detail service impl implement zlt user detail service social user detail service resource private user service user service override public user detail load user by username string username login app user login app user user service find by username username if login app user null throw new internal authentication service exception return check user login app user override public social user detail load user by user id string open id login app user login app user user service find by open id open id return check user login app user override public user detail load user by mobile string mobile login app user login app user user service find by mobile mobile return check user login app user private login app user check user login app user login app user if login app user null login app user be enable throw new disabled exception return login app user 
validate code service impl slf4j service public class validate code service impl implement i validate code service autowire private redis repository redis repository resource private user service user service random str param device id param image code override public void save image code string device id string image code redis repository set expire build key device id image code security constant default image expire p redis 60 s false redis param mobile return true false override public result send sm code string mobile object temp code redis repository get build key mobile if temp code null log error mobile temp code return result fail sy user user user service find by mobile mobile if user null log error mobile return result fail string code random util random number log info mobile code redis repository set expire build key mobile code security constant default image expire return result succeed true param device id override public string get code string device id return string redis repository get build key device id param device id override public void remove string device id redis repository del build key device id override public void validate string device id string valid code if string util be blank device id throw new validate code exception device id string code this get code device id if string util be blank valid code throw new validate code exception if code null throw new validate code exception if string util equal code valid code to lower case throw new validate code exception this remove device id private string build key string device id return security constant default code key device id 
access key service service public class access key service private static final int accesskey count limit private final access key repository access key repository private final audit service audit service public access key service access key repository access key repository audit service audit service this access key repository access key repository this audit service audit service public list access key find by app id string app id return access key repository find by app id app id transactional public access key create string app id access key entity long count access key repository count by app id app id if count accesskey count limit throw new bad request exception access key count limit exceed entity set id 0 l entity set app id app id entity set datum change last modify by entity get datum change create by access key access key access key repository save entity audit service audit access key class get simple name access key get id audit op insert access key get datum change create by return access key transactional public access key update string app id access key entity long id entity get id string operator entity get datum change last modify by access key access key access key repository find one by app id and id app id id if access key null throw new bad request exception access key not exist access key set enable entity be enable access key set datum change last modify by operator access key repository save access key audit service audit access key class get simple name id audit op update operator return access key transactional public void delete string app id long id string operator access key access key access key repository find one by app id and id app id id if access key null throw new bad request exception access key not exist if access key be enable throw new bad request exception access key should disable first access key set delete boolean true access key set datum change last modify by operator access key repository save access key audit service audit access key class get simple name id audit op delete operator 
admin service service public class admin service private final static logger logger logger factory get logger admin service class private final app service app service private final app namespace service app namespace service private final cluster service cluster service private final namespace service namespace service public admin service final app service app service final lazy app namespace service app namespace service final lazy cluster service cluster service final lazy namespace service namespace service this app service app service this app namespace service app namespace service this cluster service cluster service this namespace service namespace service transactional public app create new app app app string create by app get datum change create by app create app app service save app string app id create app get app id app namespace service create default app namespace app id create by cluster service create default cluster app id create by namespace service instance of app namespace app id config const cluster name default create by return app transactional public void delete app app app string operator string app id app get app id logger info be delete app operator app id list cluster manage cluster cluster service find parent cluster app id delete cluster if object non null manage cluster for cluster cluster manage cluster cluster service delete cluster get id operator delete app namespace app namespace service batch delete app id operator delete app app service delete app get id operator 
app namespace service service public class app namespace service private static final logger logger logger factory get logger app namespace service class private final app namespace repository app namespace repository private final namespace service namespace service private final cluster service cluster service private final audit service audit service public app namespace service final app namespace repository app namespace repository final lazy namespace service namespace service final lazy cluster service cluster service final audit service audit service this app namespace repository app namespace repository this namespace service namespace service this cluster service cluster service this audit service audit service public boolean be app namespace name unique string app id string namespace name object require non null app id app id must not be null object require non null namespace name namespace must not be null return object be null app namespace repository find by app id and name app id namespace name public app namespace find public namespace by name string namespace name precondition check argument namespace name null namespace must not be null return app namespace repository find by name and be public true namespace name public list app namespace find by app id string app id return app namespace repository find by app id app id public list app namespace find public namespace by name set string namespace name if namespace name null namespace name be empty return collection empty list return app namespace repository find by name in and be public true namespace name public list app namespace find private app namespace string app id return app namespace repository find by app id and be public app id false public app namespace find one string app id string namespace name precondition check argument string util be contain empty app id namespace name app id or namespace must not be null return app namespace repository find by app id and name app id namespace name public list app namespace find by app id and namespace string app id set string namespace name precondition check argument string be null or empty app id app id must not be null if namespace name null namespace name be empty return collection empty list return app namespace repository find by app id and name in app id namespace name transactional public void create default app namespace string app id string create by if be app namespace name unique app id config const namespace application throw new service exception appnamespace not unique app namespace app n new app namespace app n set app id app id app n set name config const namespace application app n set comment default app namespace app n set format config file format property get value app n set datum change create by create by app n set datum change last modify by create by app namespace repository save app n audit service audit app namespace class get simple name app n get id audit op insert create by transactional public app namespace create app namespace app namespace app namespace string create by app namespace get datum change create by if be app namespace name unique app namespace get app id app namespace get name throw new service exception appnamespace not unique app namespace set id protection app namespace set datum change create by create by app namespace set datum change last modify by create by app namespace app namespace repository save app namespace create namespace for app namespace in all cluster app namespace get app id app namespace get name create by audit service audit app namespace class get simple name app namespace get id audit op insert create by return app namespace public app namespace update app namespace app namespace app namespace manage ns app namespace repository find by app id and name app namespace get app id app namespace get name bean util copy entity property app namespace manage ns manage ns app namespace repository save manage n audit service audit app namespace class get simple name manage n get id audit op update manage n get datum change last modify by return manage ns public void create namespace for app namespace in all cluster string app id string namespace name string create by list cluster cluster cluster service find parent cluster app id for cluster cluster cluster in case there be some dirty datum e g public namespace delete in other app and now create in this app if namespace service be namespace unique app id cluster get name namespace name continue namespace namespace new namespace namespace set cluster name cluster get name namespace set app id app id namespace set namespace name namespace name namespace set datum change create by create by namespace set datum change last modify by create by namespace service save namespace transactional public void batch delete string app id string operator app namespace repository batch delete by app id app id operator transactional public void delete app namespace app namespace app namespace string operator string app id app namespace get app id string namespace name app namespace get name logger info be delete app namespace app id namespace operator app id namespace name delete namespace list namespace namespace namespace service find by app id and namespace name app id namespace name if namespace null for namespace namespace namespace namespace service delete namespace namespace operator delete app namespace app namespace repository delete app id namespace name operator 
app service service public class app service private final app repository app repository private final audit service audit service public app service final app repository app repository final audit service audit service this app repository app repository this audit service audit service public boolean be app id unique string app id object require non null app id app id must not be null return object be null app repository find by app id app id transactional public void delete long id string operator app app app repository find by id id or else null if app null return app set delete true app set datum change last modify by operator app repository save app audit service audit app class get simple name id audit op delete operator public list app find all pageable pageable page app page app repository find all pageable return page get content public list app find by name string name return app repository find by name name public app find one string app id return app repository find by app id app id transactional public app save app entity if be app id unique entity get app id throw new service exception app id not unique entity set id protection app app app repository save entity audit service audit app class get simple name app get id audit op insert app get datum change create by return app transactional public void update app app string app id app get app id app manage app app repository find by app id app id if manage app null throw new bad request exception string format app not exist app id s app id manage app set name app get name manage app set org id app get org id manage app set org name app get org name manage app set owner name app get owner name manage app set owner email app get owner email manage app set datum change last modify by app get datum change last modify by manage app app repository save manage app audit service audit app class get simple name manage app get id audit op update manage app get datum change last modify by 
audit service service public class audit service private final audit repository audit repository public audit service final audit repository audit repository this audit repository audit repository list audit find by owner string owner return audit repository find by owner owner list audit find string owner string entity string op return audit repository find audits owner entity op transactional void audit string entity name long entity id audit op op string owner audit audit new audit audit set entity name entity name audit set entity id entity id audit set op name op name audit set datum change create by owner audit repository save audit transactional void audit audit audit audit repository save audit 
cluster service service public class cluster service private final cluster repository cluster repository private final audit service audit service private final namespace service namespace service public cluster service final cluster repository cluster repository final audit service audit service final lazy namespace service namespace service this cluster repository cluster repository this audit service audit service this namespace service namespace service public boolean be cluster name unique string app id string cluster name object require non null app id app id must not be null object require non null cluster name cluster name must not be null return object be null cluster repository find by app id and name app id cluster name public cluster find one string app id string name return cluster repository find by app id and name app id name public cluster find one long cluster id return cluster repository find by id cluster id or else null public list cluster find parent cluster string app id if string be null or empty app id return collection empty list list cluster cluster cluster repository find by app id and parent cluster id app id 0 l if cluster null return collection empty list collection sort cluster return cluster transactional public cluster save with instance of app namespace cluster entity cluster save cluster save without instance of app namespace entity namespace service instance of app namespace save cluster get app id save cluster get name save cluster get datum change create by return save cluster transactional public cluster save without instance of app namespace cluster entity if be cluster name unique entity get app id entity get name throw new bad request exception cluster not unique entity set id protection cluster cluster cluster repository save entity audit service audit cluster class get simple name cluster get id audit op insert cluster get datum change create by return cluster transactional public void delete long id string operator cluster cluster cluster repository find by id id or else null if cluster null throw new bad request exception cluster not exist delete link namespace namespace service delete by app id and cluster name cluster get app id cluster get name operator cluster set delete true cluster set datum change last modify by operator cluster repository save cluster audit service audit cluster class get simple name id audit op delete operator transactional public cluster update cluster cluster cluster manage cluster cluster repository find by app id and name cluster get app id cluster get name bean util copy entity property cluster manage cluster manage cluster cluster repository save manage cluster audit service audit cluster class get simple name manage cluster get id audit op update manage cluster get datum change last modify by return manage cluster transactional public void create default cluster string app id string create by if be cluster name unique app id config const cluster name default throw new service exception cluster not unique cluster cluster new cluster cluster set name config const cluster name default cluster set app id app id cluster set datum change create by create by cluster set datum change last modify by create by cluster repository save cluster audit service audit cluster class get simple name cluster get id audit op insert create by public list cluster find child cluster string app id string parent cluster name cluster parent cluster find one app id parent cluster name if parent cluster null throw new bad request exception parent cluster not exist return cluster repository find by parent cluster id parent cluster get id public list cluster find cluster string app id list cluster cluster cluster repository find by app id app id if cluster null return collection empty list to make sure parent cluster be ahead of branch cluster collection sort cluster return cluster 
commit service service public class commit service private final commit repository commit repository public commit service final commit repository commit repository this commit repository commit repository transactional public commit save commit commit commit set id protection return commit repository save commit public list commit find string app id string cluster name string namespace name pageable page return commit repository find by app id and cluster name and namespace name order by id desc app id cluster name namespace name page transactional public int batch delete string app id string cluster name string namespace name string operator return commit repository batch delete app id cluster name namespace name operator 
instance service service public class instance service private final instance repository instance repository private final instance config repository instance config repository public instance service final instance repository instance repository final instance config repository instance config repository this instance repository instance repository this instance config repository instance config repository public instance find instance string app id string cluster name string datum center string ip return instance repository find by app id and cluster name and datum center and ip app id cluster name datum center ip public list instance find instance by id set long instance id iterable instance instance instance repository find all by id instance id if instance null return collection empty list return list new array list instance transactional public instance create instance instance instance instance set id protection return instance repository save instance public instance config find instance config long instance id string config app id string config namespace name return instance config repository find by instance id and config app id and config namespace name instance id config app id config namespace name public page instance config find active instance config by release key string release key pageable pageable page instance config instance config instance config repository find by release key and datum change last modify time after release key get valid instance config date pageable return instance config public page instance find instance by namespace string app id string cluster name string namespace name pageable pageable page instance config instance config instance config repository find by config app id and config cluster name and config namespace name and datum change last modify time after app id cluster name namespace name get valid instance config date pageable list instance instance collection empty list if instance config have content set long instance id instance config get content stream map instance config get instance id collect collector to set instance find instance by id instance id return new page impl instance pageable instance config get total element public page instance find instance by namespace and instance app id string instance app id string app id string cluster name string namespace name pageable pageable page object instance id result instance config repository find instance id by namespace and instance app id instance app id app id cluster name namespace name get valid instance config date pageable list instance instance collection empty list if instance id result have content set long instance id instance id result get content stream map object o if o null return null if o instanceof integer return integer o long value if o instanceof long return long o for h2 test if o instanceof big integer return big integer o long value return null filter object non null collect collector to set instance find instance by id instance id return new page impl instance pageable instance id result get total element public list instance config find instance config by namespace with release key not in string app id string cluster name string namespace name set string release key not in list instance config instance config instance config repository find by config app id and config cluster name and config namespace name and datum change last modify time after and release key not in app id cluster name namespace name get valid instance config date release key not in if collection util be empty instance config return collection empty list return instance config currently the instance config be expire by day add one more hour to avoid possible time difference private date get valid instance config date calendar cal calendar get instance cal add calendar date cal add calendar hour return cal get time transactional public instance config create instance config instance config instance config instance config set id protection return instance config repository save instance config transactional public instance config update instance config instance config instance config instance config exist instance config instance config repository find by id instance config get id or else null precondition check argument exist instance config null string format instance config d doesn t exist instance config get id exist instance config set config cluster name instance config get config cluster name exist instance config set release key instance config get release key exist instance config set release delivery time instance config get release delivery time exist instance config set datum change last modify time instance config get datum change last modify time return instance config repository save exist instance config transactional public int batch delete instance config string config app id string config cluster name string config namespace name return instance config repository batch delete config app id config cluster name config namespace name 
item service service public class item service private final item repository item repository private final namespace service namespace service private final audit service audit service private final biz config biz config public item service final item repository item repository final lazy namespace service namespace service final audit service audit service final biz config biz config this item repository item repository this namespace service namespace service this audit service audit service this biz config biz config transactional public item delete long id string operator item item item repository find by id id or else null if item null throw new illegal argument exception item not exist id id item set delete true item set datum change last modify by operator item delete item item repository save item audit service audit item class get simple name id audit op delete operator return delete item transactional public int batch delete long namespace id string operator return item repository delete by namespace id namespace id operator public item find one string app id string cluster name string namespace name string key namespace namespace namespace service find one app id cluster name namespace name if namespace null throw new not find exception string format namespace not find for s s s app id cluster name namespace name item item item repository find by namespace id and key namespace get id key return item public item find last one string app id string cluster name string namespace name namespace namespace namespace service find one app id cluster name namespace name if namespace null throw new not find exception string format namespace not find for s s s app id cluster name namespace name return find last one namespace get id public item find last one long namespace id return item repository find first1 by namespace id order by line num desc namespace id public item find one long item id item item item repository find by id item id or else null return item public list item find item without order long namespace id list item item item repository find by namespace id namespace id if item null return collection empty list return item public list item find item without order string app id string cluster name string namespace name namespace namespace namespace service find one app id cluster name namespace name if namespace null return find item without order namespace get id return collection empty list public list item find item with order long namespace id list item item item repository find by namespace id order by line num asc namespace id if item null return collection empty list return item public list item find item with order string app id string cluster name string namespace name namespace namespace namespace service find one app id cluster name namespace name if namespace null return find item with order namespace get id return collection empty list public list item find item modify after date long namespace id date date return item repository find by namespace id and datum change last modify time greater than namespace id date transactional public item save item entity check item key length entity get key check item value length entity get namespace id entity get value entity set id protection if entity get line num item last item find last one entity get namespace id int line num last item null last item get line num entity set line num line num item item item repository save entity audit service audit item class get simple name item get id audit op insert item get datum change create by return item transactional public item update item item check item value length item get namespace id item get value item manage item item repository find by id item get id or else null bean util copy entity property item manage item manage item item repository save manage item audit service audit item class get simple name manage item get id audit op update manage item get datum change last modify by return manage item private boolean check item value length long namespace id string value int limit get item value length limit namespace id if string util be empty value value length limit throw new bad request exception value too long length limit limit return true private boolean check item key length string key if string util be empty key key length biz config item key length limit throw new bad request exception key too long length limit biz config item key length limit return true private int get item value length limit long namespace id map long integer namespace value length override biz config namespace value length limit override if namespace value length override null namespace value length override contain key namespace id return namespace value length override get namespace id return biz config item value length limit 
item set service service public class item set service private final audit service audit service private final commit service commit service private final item service item service public item set service final audit service audit service final commit service commit service final item service item service this audit service audit service this commit service commit service this item service item service transactional public item change set update set namespace namespace item change set change set return update set namespace get app id namespace get cluster name namespace get namespace name change set transactional public item change set update set string app id string cluster name string namespace name item change set change set string operator change set get datum change last modify by config change content builder config change content builder new config change content builder if collection util be empty change set get create item for item d t o item change set get create item item entity bean util transform item class item entity set datum change create by operator entity set datum change last modify by operator item create item item service save entity config change content builder create item create item audit service audit item set null audit op insert operator if collection util be empty change set get update item for item d t o item change set get update item item entity bean util transform item class item item manage item item service find one entity get id if manage item null throw new not find exception string format item not find key s entity get key item before update item bean util transform item class manage item protect only value comment last modify by line num can be modify manage item set value entity get value manage item set comment entity get comment manage item set line num entity get line num manage item set datum change last modify by operator item update item item service update manage item config change content builder update item before update item update item audit service audit item set null audit op update operator if collection util be empty change set get delete item for item d t o item change set get delete item item delete item item service delete item get id operator config change content builder delete item delete item audit service audit item set null audit op delete operator if config change content builder have content create commit app id cluster name namespace name config change content builder build change set get datum change last modify by return change set private void create commit string app id string cluster name string namespace name string config change content string operator commit commit new commit commit set app id app id commit set cluster name cluster name commit set namespace name namespace name commit set change set config change content commit set datum change create by operator commit set datum change last modify by operator commit service save commit 
namespace branch service service public class namespace branch service private final audit service audit service private final gray release rule repository gray release rule repository private final cluster service cluster service private final release service release service private final namespace service namespace service private final release history service release history service public namespace branch service final audit service audit service final gray release rule repository gray release rule repository final cluster service cluster service final lazy release service release service final namespace service namespace service final release history service release history service this audit service audit service this gray release rule repository gray release rule repository this cluster service cluster service this release service release service this namespace service namespace service this release history service release history service transactional public namespace create branch string app id string parent cluster name string namespace name string operator namespace child namespace find branch app id parent cluster name namespace name if child namespace null throw new bad request exception namespace already have branch cluster parent cluster cluster service find one app id parent cluster name if parent cluster null parent cluster get parent cluster id throw new bad request exception cluster not exist or illegal cluster create child cluster cluster child cluster create child cluster app id parent cluster namespace name operator cluster create child cluster cluster service save without instance of app namespace child cluster create child namespace child namespace create namespace branch app id create child cluster get name namespace name operator return namespace service save child namespace public namespace find branch string app id string parent cluster name string namespace name return namespace service find child namespace app id parent cluster name namespace name public gray release rule find branch gray rule string app id string cluster name string namespace name string branch name return gray release rule repository find top by app id and cluster name and namespace name and branch name order by id desc app id cluster name namespace name branch name transactional public void update branch gray rule string app id string cluster name string namespace name string branch name gray release rule new rule do update branch gray rule app id cluster name namespace name branch name new rule true release operation apply gray rule private void do update branch gray rule string app id string cluster name string namespace name string branch name gray release rule new rule boolean record release history int release operation gray release rule old rule gray release rule repository find top by app id and cluster name and namespace name and branch name order by id desc app id cluster name namespace name branch name release latest branch release release service find latest active release app id branch name namespace name long latest branch release id latest branch release null latest branch release get id new rule set release id latest branch release id gray release rule repository save new rule delete old rule if old rule null gray release rule repository delete old rule if record release history map string object release operation context map new hash map release operation context put release operation context rule gray release rule item transformer batch transform from j s o n new rule get rule if old rule null release operation context put release operation context old rule gray release rule item transformer batch transform from j s o n old rule get rule release history service create release history app id cluster name namespace name branch name latest branch release id latest branch release id release operation release operation context new rule get datum change last modify by transactional public gray release rule update rule release id string app id string cluster name string namespace name string branch name long latest release id string operator gray release rule old rule gray release rule repository find top by app id and cluster name and namespace name and branch name order by id desc app id cluster name namespace name branch name if old rule null return null gray release rule new rule new gray release rule new rule set branch status namespace branch status active new rule set release id latest release id new rule set rule old rule get rule new rule set app id old rule get app id new rule set cluster name old rule get cluster name new rule set namespace name old rule get namespace name new rule set branch name old rule get branch name new rule set datum change create by operator new rule set datum change last modify by operator gray release rule repository save new rule gray release rule repository delete old rule return new rule transactional public void delete branch string app id string cluster name string namespace name string branch name int branch status string operator cluster to delete cluster cluster service find one app id branch name if to delete cluster null return release latest branch release release service find latest active release app id branch name namespace name long latest branch release id latest branch release null latest branch release get id update branch rule gray release rule delete rule new gray release rule delete rule set rule delete rule set app id app id delete rule set cluster name cluster name delete rule set namespace name namespace name delete rule set branch name branch name delete rule set branch status branch status delete rule set datum change last modify by operator delete rule set datum change create by operator do update branch gray rule app id cluster name namespace name branch name delete rule false delete branch cluster cluster service delete to delete cluster get id operator int release operation branch status namespace branch status merge release operation gray release delete after merge release operation abandon gray release release history service create release history app id cluster name namespace name branch name latest branch release id latest branch release id release operation null operator audit service audit branch to delete cluster get id audit op delete operator private cluster create child cluster string app id cluster parent cluster string namespace name string operator cluster child cluster new cluster child cluster set app id app id child cluster set parent cluster id parent cluster get id child cluster set name unique key generator generate app id parent cluster get name namespace name child cluster set datum change create by operator child cluster set datum change last modify by operator return child cluster private namespace create namespace branch string app id string cluster name string namespace name string operator namespace child namespace new namespace child namespace set app id app id child namespace set cluster name cluster name child namespace set namespace name namespace name child namespace set datum change last modify by operator child namespace set datum change create by operator return child namespace 
namespace lock service service public class namespace lock service private final namespace lock repository namespace lock repository public namespace lock service final namespace lock repository namespace lock repository this namespace lock repository namespace lock repository public namespace lock find lock long namespace id return namespace lock repository find by namespace id namespace id transactional public namespace lock try lock namespace lock lock return namespace lock repository save lock transactional public void unlock long namespace id namespace lock repository delete by namespace id namespace id 
namespace service service public class namespace service private gson gson new gson private final namespace repository namespace repository private final audit service audit service private final app namespace service app namespace service private final item service item service private final commit service commit service private final release service release service private final cluster service cluster service private final namespace branch service namespace branch service private final release history service release history service private final namespace lock service namespace lock service private final instance service instance service private final message sender message sender public namespace service final release history service release history service final namespace repository namespace repository final audit service audit service final lazy app namespace service app namespace service final message sender message sender final lazy item service item service final commit service commit service final lazy release service release service final lazy cluster service cluster service final lazy namespace branch service namespace branch service final namespace lock service namespace lock service final instance service instance service this release history service release history service this namespace repository namespace repository this audit service audit service this app namespace service app namespace service this message sender message sender this item service item service this commit service commit service this release service release service this cluster service cluster service this namespace branch service namespace branch service this namespace lock service namespace lock service this instance service instance service public namespace find one long namespace id return namespace repository find by id namespace id or else null public namespace find one string app id string cluster name string namespace name return namespace repository find by app id and cluster name and namespace name app id cluster name namespace name public namespace find public namespace for associated namespace string cluster name string namespace name app namespace app namespace app namespace service find public namespace by name namespace name if app namespace null throw new bad request exception namespace not exist string app id app namespace get app id namespace namespace find one app id cluster name namespace name default cluster s namespace if object equal cluster name config const cluster name default return namespace custom cluster s namespace not exist return default cluster s namespace if namespace null return find one app id config const cluster name default namespace name custom cluster s namespace exist and have publish return custom cluster s namespace release latest active release release service find latest active release namespace if latest active release null return namespace namespace default namespace find one app id config const cluster name default namespace name custom cluster s namespace exist but never publish and default cluster s namespace not exist return custom cluster s namespace if default namespace null return namespace custom cluster s namespace exist but never publish and default cluster s namespace exist and have publish return default cluster s namespace release default namespace latest active release release service find latest active release default namespace if default namespace latest active release null return default namespace custom cluster s namespace exist but never publish and default cluster s namespace exist but never publish return custom cluster s namespace return namespace public list namespace find public app namespace all namespace string namespace name pageable page app namespace public app namespace app namespace service find public namespace by name namespace name if public app namespace null throw new bad request exception string format public app namespace not exist namespace name s namespace name list namespace namespace namespace repository find by namespace name namespace name page return filter child namespace namespace private list namespace filter child namespace list namespace namespace list namespace result new link list if collection util be empty namespace return result for namespace namespace namespace if be child namespace namespace result add namespace return result public int count public app namespace associate namespace string public namespace name app namespace public app namespace app namespace service find public namespace by name public namespace name if public app namespace null throw new bad request exception string format public app namespace not exist namespace name s public namespace name return namespace repository count by namespace name and app id not public namespace name public app namespace get app id public list namespace find namespace string app id string cluster name list namespace namespace namespace repository find by app id and cluster name order by id asc app id cluster name if namespace null return collection empty list return namespace public list namespace find by app id and namespace name string app id string namespace name return namespace repository find by app id and namespace name order by id asc app id namespace name public namespace find child namespace string app id string parent cluster name string namespace name list namespace namespace find by app id and namespace name app id namespace name if collection util be empty namespace namespace size return null list cluster child cluster cluster service find child cluster app id parent cluster name if collection util be empty child cluster return null set string child cluster name child cluster stream map cluster get name collect collector to set the child namespace be the intersection of the child cluster and child namespace for namespace namespace namespace if child cluster name contain namespace get cluster name return namespace return null public namespace find child namespace namespace parent namespace string app id parent namespace get app id string parent cluster name parent namespace get cluster name string namespace name parent namespace get namespace name return find child namespace app id parent cluster name namespace name public namespace find parent namespace string app id string cluster name string namespace name return find parent namespace new namespace app id cluster name namespace name public namespace find parent namespace namespace namespace string app id namespace get app id string namespace name namespace get namespace name cluster cluster cluster service find one app id namespace get cluster name if cluster null cluster get parent cluster id cluster parent cluster cluster service find one cluster get parent cluster id return find one app id parent cluster get name namespace name return null public boolean be child namespace string app id string cluster name string namespace name return be child namespace new namespace app id cluster name namespace name public boolean be child namespace namespace namespace return find parent namespace namespace null public boolean be namespace unique string app id string cluster string namespace object require non null app id app id must not be null object require non null cluster cluster must not be null object require non null namespace namespace must not be null return object be null namespace repository find by app id and cluster name and namespace name app id cluster namespace transactional public void delete by app id and cluster name string app id string cluster name string operator list namespace to delete namespace find namespace app id cluster name for namespace namespace to delete namespace delete namespace namespace operator transactional public namespace delete namespace namespace namespace string operator string app id namespace get app id string cluster name namespace get cluster name string namespace name namespace get namespace name item service batch delete namespace get id operator commit service batch delete app id cluster name namespace get namespace name operator child namespace release should retain as long as the parent namespace exist because parent namespace release history need they if be child namespace namespace release service batch delete app id cluster name namespace get namespace name operator delete child namespace namespace child namespace find child namespace namespace if child namespace null namespace branch service delete branch app id cluster name namespace name child namespace get cluster name namespace branch status delete operator delete child namespace s release notice delete child namespace will not delete child namespace s release release service batch delete app id child namespace get cluster name namespace name operator release history service batch delete app id cluster name namespace name operator instance service batch delete instance config app id cluster name namespace name namespace lock service unlock namespace get id namespace set delete true namespace set datum change last modify by operator audit service audit namespace class get simple name namespace get id audit op delete operator namespace delete namespace repository save namespace publish release message to do some clean up in config service such as update the cache message sender send message release message key generator generate app id cluster name namespace name topic apollo release topic return delete transactional public namespace save namespace entity if be namespace unique entity get app id entity get cluster name entity get namespace name throw new service exception namespace not unique entity set id protection namespace namespace namespace repository save entity audit service audit namespace class get simple name namespace get id audit op insert namespace get datum change create by return namespace transactional public namespace update namespace namespace namespace manage namespace namespace repository find by app id and cluster name and namespace name namespace get app id namespace get cluster name namespace get namespace name bean util copy entity property namespace manage namespace manage namespace namespace repository save manage namespace audit service audit namespace class get simple name manage namespace get id audit op update manage namespace get datum change last modify by return manage namespace transactional public void instance of app namespace string app id string cluster name string create by list app namespace app namespace app namespace service find by app id app id for app namespace app namespace app namespace namespace n new namespace n set app id app id n set cluster name cluster name n set namespace name app namespace get name n set datum change create by create by n set datum change last modify by create by namespace repository save n audit service audit namespace class get simple name n get id audit op insert create by public map string boolean namespace publish info string app id list cluster cluster cluster service find parent cluster app id if collection util be empty cluster throw new bad request exception app not exist map string boolean cluster have not publish item map new hash map for cluster cluster cluster string cluster name cluster get name list namespace namespace find namespace app id cluster name for namespace namespace namespace boolean be namespace not publish be namespace not publish namespace if be namespace not publish cluster have not publish item put cluster name true break cluster have not publish item put if absent cluster name false return cluster have not publish item private boolean be namespace not publish namespace namespace release latest release release service find latest active release namespace long namespace id namespace get id if latest release null item last item item service find last one namespace id return last item null date last publish time latest release get datum change last modify time list item item modify after last publish item service find item modify after date namespace id last publish time if collection util be empty item modify after last publish return false map string string publish configuration gson from json latest release get configuration gson type config for item item item modify after last publish if object equal item get value publish configuration get item get key return true return false 
release history service service public class release history service private gson gson new gson private final release history repository release history repository private final audit service audit service public release history service final release history repository release history repository final audit service audit service this release history repository release history repository this audit service audit service public page release history find release history by namespace string app id string cluster name string namespace name pageable pageable return release history repository find by app id and cluster name and namespace name order by id desc app id cluster name namespace name pageable public page release history find by release id and operation long release id int operation pageable page return release history repository find by release id and operation order by id desc release id operation page public page release history find by previous release id and operation long previous release id int operation pageable page return release history repository find by previous release id and operation order by id desc previous release id operation page public page release history find by release id and operation in order by id desc long release id set integer operation pageable page return release history repository find by release id and operation in order by id desc release id operation page transactional public release history create release history string app id string cluster name string namespace name string branch name long release id long previous release id int operation map string object operation context string operator release history release history new release history release history set app id app id release history set cluster name cluster name release history set namespace name namespace name release history set branch name branch name release history set release id release id release history set previous release id previous release id release history set operation operation if operation context null release history set operation context default empty object else release history set operation context gson to json operation context release history set datum change create time new date release history set datum change create by operator release history set datum change last modify by operator release history repository save release history audit service audit release history class get simple name release history get id audit op insert release history get datum change create by return release history transactional public int batch delete string app id string cluster name string namespace name string operator return release history repository batch delete app id cluster name namespace name operator 
release message service service public class release message service private final release message repository release message repository public release message service final release message repository release message repository this release message repository release message repository public release message find latest release message for message collection string message if collection util be empty message return null return release message repository find top by message in order by id desc message public list release message find latest release message group by message collection string message if collection util be empty message return collection empty list list object result release message repository find latest release message group by message message list release message release message list new array list for object o result try release message release message new release message string o release message set id long o release message add release message catch exception ex tracer log error parse latest release message group by message fail ex return release message 
release service service public class release service private static final fast date format timestamp format fast date format get instance yyyy m mdd h hmmss private static final gson gson new gson private static final set integer branch release operation set new hash set release operation gray release release operation master normal release merge to gray release operation mater rollback merge to gray private static final pageable first item page request of private static final type operation context type reference new type token map string object get type private final release repository release repository private final item service item service private final audit service audit service private final namespace lock service namespace lock service private final namespace service namespace service private final namespace branch service namespace branch service private final release history service release history service private final item set service item set service public release service final release repository release repository final item service item service final audit service audit service final namespace lock service namespace lock service final namespace service namespace service final namespace branch service namespace branch service final release history service release history service final item set service item set service this release repository release repository this item service item service this audit service audit service this namespace lock service namespace lock service this namespace service namespace service this namespace branch service namespace branch service this release history service release history service this item set service item set service public release find one long release id return release repository find by id release id or else null public release find active one long release id return release repository find by id and be abandon false release id public list release find by release id set long release id iterable release release release repository find all by id release id if release null return collection empty list return list new array list release public list release find by release key set string release key return release repository find by release key in release key public release find latest active release namespace namespace return find latest active release namespace get app id namespace get cluster name namespace get namespace name public release find latest active release string app id string cluster name string namespace name return release repository find first by app id and cluster name and namespace name and be abandon false order by id desc app id cluster name namespace name public list release find all release string app id string cluster name string namespace name pageable page list release release release repository find by app id and cluster name and namespace name order by id desc app id cluster name namespace name page if release null return collection empty list return release public list release find active release string app id string cluster name string namespace name pageable page list release release release repository find by app id and cluster name and namespace name and be abandon false order by id desc app id cluster name namespace name page if release null return collection empty list return release transactional public release merge branch change set and release namespace namespace string branch name string release name string release comment boolean be emergency publish item change set change set check lock namespace be emergency publish change set get datum change last modify by item set service update set namespace change set release branch release find latest active release namespace get app id branch name namespace get namespace name long branch release id branch release null branch release get id map string string operate namespace item get namespace item namespace map string object operation context map new link hash map operation context put release operation context source branch branch name operation context put release operation context base release id branch release id operation context put release operation context be emergency publish be emergency publish return master release namespace release name release comment operate namespace item change set get datum change last modify by release operation gray release merge to master operation context transactional public release publish namespace namespace string release name string release comment string operator boolean be emergency publish check lock namespace be emergency publish operator map string string operate namespace item get namespace item namespace namespace parent namespace namespace service find parent namespace namespace branch release if parent namespace null return publish branch namespace parent namespace namespace operate namespace item release name release comment operator be emergency publish namespace child namespace namespace service find child namespace namespace release previous release null if child namespace null previous release find latest active release namespace master release map string object operation context map new link hash map operation context put release operation context be emergency publish be emergency publish release release master release namespace release name release comment operate namespace item operator release operation normal release operation context merge to branch and auto release if child namespace null merge from master and publish branch namespace child namespace operate namespace item release name release comment operator previous release release be emergency publish return release private release publish branch namespace namespace parent namespace namespace child namespace map string string child namespace item string release name string release comment string operator boolean be emergency publish set string gray del key release parent latest release find latest active release parent namespace map string string parent configuration parent latest release null gson from json parent latest release get configuration gson type config new link hash map long base release id parent latest release null parent latest release get id map string string config to publish merge configuration parent configuration child namespace item if gray del key null gray del key size for string key gray del key config to publish remove key return branch release parent namespace child namespace release name release comment config to publish base release id operator release operation gray release be emergency publish child namespace item key set transactional public release gray deletion publish namespace namespace string release name string release comment string operator boolean be emergency publish set string gray del key check lock namespace be emergency publish operator map string string operate namespace item get namespace item namespace namespace parent namespace namespace service find parent namespace namespace branch release if parent namespace null return publish branch namespace parent namespace namespace operate namespace item release name release comment operator be emergency publish gray del key throw new not find exception parent namespace not find private void check lock namespace namespace boolean be emergency publish string operator if be emergency publish namespace lock lock namespace lock service find lock namespace get id if lock null lock get datum change create by equal operator throw new bad request exception config can not be publish by yourself private void merge from master and publish branch namespace parent namespace namespace child namespace map string string parent namespace item string release name string release comment string operator release master previous release release parent release boolean be emergency publish create release for child namespace release child namespace latest active release find latest active release child namespace map string string child release configuration collection string branch release key if child namespace latest active release null child release configuration gson from json child namespace latest active release get configuration gson type config branch release key get branch release key child namespace latest active release get id else child release configuration collection empty map branch release key null map string string parent namespace old configuration master previous release null null gson from json master previous release get configuration gson type config map string string child namespace to publish config calculate child namespace to publish configuration parent namespace old configuration parent namespace item child release configuration branch release key compare if child namespace to publish config equal child release configuration branch release parent namespace child namespace release name release comment child namespace to publish configs parent release get id operator release operation master normal release merge to gray be emergency publish branch release key private collection string get branch release key long release id page release history release history release history service find by release id and operation in order by id desc release id branch release operation first item if release history have content return null map string object operation context gson from json release history get content get get operation context operation context type reference if operation context null operation context contain key release operation context branch release key return null return collection string operation context get release operation context branch release key private release publish branch namespace namespace parent namespace namespace child namespace map string string child namespace item string release name string release comment string operator boolean be emergency publish return publish branch namespace parent namespace child namespace child namespace item release name release comment operator be emergency publish null private release master release namespace namespace string release name string release comment map string string configuration string operator int release operation map string object operation context release last active release find latest active release namespace long previous release id last active release null last active release get id release release create release namespace release name release comment configuration operator release history service create release history namespace get app id namespace get cluster name namespace get namespace name namespace get cluster name release get id previous release id release operation operation context operator return release private release branch release namespace parent namespace namespace child namespace string release name string release comment map string string configuration long base release id string operator int release operation boolean be emergency publish collection string branch release key release previous release find latest active release child namespace get app id child namespace get cluster name child namespace get namespace name long previous release id previous release null previous release get id map string object release operation context map new link hash map release operation context put release operation context base release id base release id release operation context put release operation context be emergency publish be emergency publish release operation context put release operation context branch release key branch release key release release create release child namespace release name release comment configuration operator update gray release rule gray release rule gray release rule namespace branch service update rule release id child namespace get app id parent namespace get cluster name child namespace get namespace name child namespace get cluster name release get id operator if gray release rule null release operation context put release operation context rule gray release rule item transformer batch transform from j s o n gray release rule get rule release history service create release history parent namespace get app id parent namespace get cluster name parent namespace get namespace name child namespace get cluster name release get id previous release id release operation release operation context operator return release private map string string merge configuration map string string base configuration map string string cover configuration map string string result new link hash map copy base configuration for map entry string string entry base configuration entry set result put entry get key entry get value update and publish for map entry string string entry cover configuration entry set result put entry get key entry get value return result private map string string get namespace item namespace namespace list item item item service find item with order namespace get id map string string configuration new link hash map for item item item if string util be empty item get key continue configuration put item get key item get value return configuration private release create release namespace namespace string name string comment map string string configuration string operator release release new release release set release key release key generator generate release key namespace release set datum change create time new date release set datum change create by operator release set datum change last modify by operator release set name name release set comment comment release set app id namespace get app id release set cluster name namespace get cluster name release set namespace name namespace get namespace name release set configuration gson to json configuration release release repository save release namespace lock service unlock namespace get id audit service audit release class get simple name release get id audit op insert release get datum change create by return release transactional public release rollback long release id string operator release release find one release id if release null throw new not find exception release not find if release be abandon throw new bad request exception release be not active string app id release get app id string cluster name release get cluster name string namespace name release get namespace name page request page page request of list release two latest active release find active release app id cluster name namespace name page if two latest active release null two latest active release size throw new bad request exception string format can t rollback namespace app id s cluster name s namespace name s because there be only one active release app id cluster name namespace name release set abandon true release set datum change last modify by operator release repository save release release history service create release history app id cluster name namespace name cluster name two latest active release get get id release get id release operation rollback null operator publish child namespace if namespace have child rollback child namespace app id cluster name namespace name two latest active release operator return release private void rollback child namespace string app id string cluster name string namespace name list release parent namespace two latest active release string operator namespace parent namespace namespace service find one app id cluster name namespace name namespace child namespace namespace service find child namespace app id cluster name namespace name if parent namespace null child namespace null return release child namespace latest active release find latest active release child namespace map string string child release configuration collection string branch release key if child namespace latest active release null child release configuration gson from json child namespace latest active release get configuration gson type config branch release key get branch release key child namespace latest active release get id else child release configuration collection empty map branch release key null release abandon release parent namespace two latest active release get release parent namespace new latest release parent namespace two latest active release get map string string parent namespace abandon configuration gson from json abandon release get configuration gson type config map string string parent namespace new latest configuration gson from json parent namespace new latest release get configuration gson type config map string string child namespace new configuration calculate child namespace to publish configuration parent namespace abandon configuration parent namespace new latest configuration child release configuration branch release key compare if child namespace new configuration equal child release configuration branch release parent namespace child namespace timestamp format format new date master rollback merge to gray child namespace new configuration parent namespace new latest release get id operator release operation mater rollback merge to gray false branch release key private map string string calculate child namespace to publish configuration map string string parent namespace old configuration map string string parent namespace new configuration map string string child namespace latest active configuration collection string branch release key first calculate child namespace modify config map string string child namespace modify configuration calculate branch modify item accord to release parent namespace old configuration child namespace latest active configuration branch release key second append child namespace modify config to parent namespace new latest configuration return merge configuration parent namespace new configuration child namespace modify configuration private map string string calculate branch modify item accord to release map string string master release config map string string branch release config collection string branch release key map string string modify configs new link hash map if collection util be empty branch release config return modify configs new logic retrieve modify configuration base on branch release key if branch release key null for string branch release key branch release key if branch release configs contain key branch release key modify configs put branch release key branch release config get branch release key return modify configs old logic retrieve modify configuration by compare branch release config with master release config if collection util be empty master release config return branch release config for map entry string string entry branch release config entry set if object equal entry get value master release config get entry get key modify configs put entry get key entry get value return modify configs transactional public int batch delete string app id string cluster name string namespace name string operator return release repository batch delete app id cluster name namespace name operator 
access key service with cache service public class access key service with cache implement initialize bean private static logger logger logger factory get logger access key service with cache class private final access key repository access key repository private final biz config biz config private int scan interval private time unit scan interval time unit private int rebuild interval private time unit rebuild interval time unit private schedule executor service schedule executor service private date last time scan private list multimap string access key access key cache private concurrent map long access key access key id cache autowire public access key service with cache access key repository access key repository biz config biz config this access key repository access key repository this biz config biz config initialize private void initialize schedule executor service new schedule thread pool executor apollo thread factory create access key service with cache true last time scan new date 0 l list multimap string access key multimap list multimap builder hash key array list value build access key cache multimap synchronize list multimap multimap access key id cache map new concurrent map public list string get available secret string app id list access key access key access key cache get app id if collection util be empty access key return collection empty list return access key stream filter access key be enable map access key get secret collect collector to list override public void after property set throw exception populate datum base interval scan new and updated access key block the startup process until load finish schedule executor service schedule with fix delay this scan new and updated access key scan interval scan interval scan interval time unit schedule executor service schedule at fix rate this rebuild access key cache rebuild interval rebuild interval rebuild interval time unit private void scan new and updated access key transaction transaction tracer new transaction apollo access key service with cache scan new and updated access key try load new and updated access key transaction set status transaction success catch throwable ex transaction set status ex logger error load new update app access key fail ex finally transaction complete private void rebuild access key cache transaction transaction tracer new transaction apollo access key service with cache rebuild cache try delete access key cache transaction set status transaction success catch throwable ex transaction set status ex logger error rebuild cache fail ex finally transaction complete private void load new and updated access key boolean have more true while have more thread current thread be interrupted current batch be list access key access key access key repository find first500 by datum change last modify time greater than order by datum change last modify time asc last time scan if collection util be empty access key break int scan access key size merge access key access key logger info load new update accesskey from start time scan last time scan have more scan last time scan access key get scan get datum change last modify time in order to avoid miss some record at the last time we need to scan record at this time individually if have more list access key last modify time access key access key repository find by datum change last modify time last time scan merge access key last modify time access key logger info load new update accesskey at last modify time scan last time scan private void merge access key list access key access key for access key access key access key access key that in cache access key id cache get access key get id access key id cache put access key get id access key access key cache put access key get app id access key if that in cache null access key get datum change last modify time after that in cache get datum change last modify time access key cache remove access key get app id that in cache logger info find accesskey change old new that in cache access key private void delete access key cache list long id list new array list access key id cache key set if collection util be empty id return list list long partition id list partition id for list long to rebuild id partition id iterable access key access key access key repository find all by id to rebuild id set long find id set new hash set for access key access key access key find id add access key get id handle delete set view long delete id set difference set new hash set to rebuild id find id handle delete access key delete id private void handle delete access key set long delete id if collection util be empty delete id return for long delete id delete id access key delete access key id cache remove delete id if delete null continue access key cache remove delete get app id delete logger info find access key delete delete private void populate data base interval scan interval biz config access key cache scan interval scan interval time unit biz config access key cache scan interval time unit rebuild interval biz config access key cache rebuild interval rebuild interval time unit biz config access key cache rebuild interval time unit 
app namespace service with cache service public class app namespace service with cache implement initialize bean private static final logger logger logger factory get logger app namespace service with cache class private static final joiner string joiner joiner on config const cluster namespace separator skip null private final app namespace repository app namespace repository private final biz config biz config private int scan interval private time unit scan interval time unit private int rebuild interval private time unit rebuild interval time unit private schedule executor service schedule executor service private long max id scan store namespace name app namespace private case insensitive map wrapper app namespace public app namespace cache store app id namespace name app namespace private case insensitive map wrapper app namespace app namespace cache store id app namespace private map long app namespace app namespace id cache public app namespace service with cache final app namespace repository app namespace repository final biz config biz config this app namespace repository app namespace repository this biz config biz config initialize private void initialize max id scan public app namespace cache new case insensitive map wrapper map new concurrent map app namespace cache new case insensitive map wrapper map new concurrent map app namespace id cache map new concurrent map schedule executor service executor new schedule thread pool apollo thread factory create app namespace service with cache true public app namespace find by app id and namespace string app id string namespace name precondition check argument string util be contain empty app id namespace name app id and namespace name must not be empty return app namespace cache get string joiner join app id namespace name public list app namespace find by app id and namespace string app id set string namespace name precondition check argument string be null or empty app id app id must not be null if namespace name null namespace name be empty return collection empty list list app namespace result list new array list for string namespace name namespace name app namespace app namespace app namespace cache get string joiner join app id namespace name if app namespace null result add app namespace return result public app namespace find public namespace by name string namespace name precondition check argument string be null or empty namespace name namespace name must not be empty return public app namespace cache get namespace name public list app namespace find public namespace by name set string namespace name if namespace name null namespace name be empty return collection empty list list app namespace result list new array list for string namespace name namespace name app namespace app namespace public app namespace cache get namespace name if app namespace null result add app namespace return result override public void after property set throw exception populate datum base interval scan new app namespace block the startup process until load finish schedule executor service schedule at fix rate transaction transaction tracer new transaction apollo app namespace service with cache rebuild cache try this update and delete cache transaction set status transaction success catch throwable ex transaction set status ex logger error rebuild cache fail ex finally transaction complete rebuild interval rebuild interval rebuild interval time unit schedule executor service schedule with fix delay this scan new app namespace scan interval scan interval scan interval time unit private void scan new app namespace transaction transaction tracer new transaction apollo app namespace service with cache scan new app namespace try this load new app namespace transaction set status transaction success catch throwable ex transaction set status ex logger error load new app namespace fail ex finally transaction complete for those new app namespace private void load new app namespace boolean have more true while have more thread current thread be interrupted current batch be list app namespace app namespace app namespace repository find first500 by id greater than order by id asc max id scan if collection util be empty app namespace break merge app namespace app namespace int scan app namespace size max id scan app namespace get scan get id have more scan logger info load new app namespace with start id scan max id scan private void merge app namespace list app namespace app namespace for app namespace app namespace app namespace app namespace cache put assemble app namespace key app namespace app namespace app namespace id cache put app namespace get id app namespace if app namespace be public public app namespace cache put app namespace get name app namespace for those update or delete app namespace private void update and delete cache list long id list new array list app namespace id cache key set if collection util be empty id return list list long partition id list partition id for list long to rebuild partition id iterable app namespace app namespace app namespace repository find all by id to rebuild if app namespace null continue handle update set long find id handle update app namespace app namespace handle delete handle delete app namespace set difference set new hash set to rebuild find id for those update app namespace private set long handle update app namespace iterable app namespace app namespace set long find id set new hash set for app namespace app namespace app namespace find id add app namespace get id app namespace that in cache app namespace id cache get app namespace get id if that in cache null app namespace get datum change last modify time after that in cache get datum change last modify time app namespace id cache put app namespace get id app namespace string old key assemble app namespace key that in cache string new key assemble app namespace key app namespace app namespace cache put new key app namespace in case app id or namespace name change if new key equal old key app namespace cache remove old key if app namespace be public public app namespace cache put app namespace get name app namespace in case namespace name change if app namespace get name equal that in cache get name that in cache be public public app namespace cache remove that in cache get name else if that in cache be public just in case be public change public app namespace cache remove that in cache get name logger info find app namespace change old new that in cache app namespace return find id for those delete app namespace private void handle delete app namespace set long delete id if collection util be empty delete id return for long delete id delete id app namespace delete app namespace id cache remove delete id if delete null continue app namespace cache remove assemble app namespace key delete if delete be public app namespace public app namespace public app namespace cache get delete get name in case there be some dirty datum e g public namespace delete in some app and now create in another app if public app namespace delete public app namespace cache remove delete get name logger info find app namespace delete delete private string assemble app namespace key app namespace app namespace return string joiner join app namespace get app id app namespace get name private void populate data base interval scan interval biz config app namespace cache scan interval scan interval time unit biz config app namespace cache scan interval time unit rebuild interval biz config app namespace cache rebuild interval rebuild interval time unit biz config app namespace cache rebuild interval time unit only for test use private void reset throw exception schedule executor service shutdown now initialize after property set 
release message service with cache service public class release message service with cache implement release message listener initialize bean private static final logger logger logger factory get logger release message service with cache class private final release message repository release message repository private final biz config biz config private int scan interval private time unit scan interval time unit private volatile long max id scan private concurrent map string release message release message cache private atomic boolean do scan private executor service executor service public release message service with cache final release message repository release message repository final biz config biz config this release message repository release message repository this biz config biz config initialize private void initialize release message cache map new concurrent map do scan new atomic boolean true executor service executor new single thread executor apollo thread factory create release message service with cache true public release message find latest release message for message set string message if collection util be empty message return null long max release message id release message result null for string message message release message release message release message cache get message if release message null release message get id max release message id max release message id release message get id result release message return result public list release message find latest release message group by message set string message if collection util be empty message return collection empty list list release message release message list new array list for string message message release message release message release message cache get message if release message null release message add release message return release message override public void handle message release message message string channel could stop once the release message scanner start to work do scan set false logger info message receive channel message channel message string content message get message tracer log event apollo release message service update cache string value of message get id if topic apollo release topic equal channel string be null or empty content return long gap message get id max id scan if gap merge release message message else if gap gap find load release message max id scan override public void after property set throw exception populate datum base interval block the startup process until load finish this should happen before release message scanner due to autowire load release message executor service submit while do scan get thread current thread be interrupted transaction transaction tracer new transaction apollo release message service with cache scan new release message try load release message max id scan transaction set status transaction success catch throwable ex transaction set status ex logger error scan new release message fail ex finally transaction complete try scan interval time unit sleep scan interval catch interrupt exception e ignore private synchronize void merge release message release message release message release message old release message cache get release message get message if old null release message get id old get id release message cache put release message get message release message max id scan release message get id private void load release message long start id boolean have more true while have more thread current thread be interrupted current batch be list release message release message release message repository find first500 by id greater than order by id asc start id if collection util be empty release message break release message for each this merge release message int scan release message size start id release message get scan get id have more scan logger info load release message with start id scan start id private void populate data base interval scan interval biz config release message cache scan interval scan interval time unit biz config release message cache scan interval time unit only for test use private void reset throw exception executor service shutdown now initialize after property set 
instance config audit util service public class instance config audit util implement initialize bean private static final int instance config audit max size private static final int instance cache max size private static final int instance config cache max size private static final long offer time last modify time threshold in milli time unit minute to milli minute private static final joiner string joiner joiner on config const cluster namespace separator private final executor service audit executor service private final atomic boolean audit stop private block queue instance config audit model audits queue new link blocking queue instance config audit max size private cache string long instance cache private cache string string instance config release key cache private final instance service instance service public instance config audit util final instance service instance service this instance service instance service audit executor service executor new single thread executor apollo thread factory create instance config audit util true audit stop new atomic boolean false instance cache cache builder new builder expire after access time unit hour maximum size instance cache max size build instance config release key cache cache builder new builder expire after write time unit day maximum size instance config cache max size build public boolean audit string app id string cluster name string datum center string ip string config app id string config cluster name string config namespace string release key return this audits offer new instance config audit model app id cluster name datum center ip config app id config cluster name config namespace release key void do audit instance config audit model audit model string instance cache key assemble instance key audit model get app id audit model get cluster name audit model get ip audit model get datum center long instance id instance cache get if present instance cache key if instance id null instance id prepare instance id audit model instance cache put instance cache key instance id load instance config release key from cache and check if release key be the same string instance config cache key assemble instance config key instance id audit model get config app id audit model get config namespace string cache release key instance config release key cache get if present instance config cache key if release key be the same then skip audit if cache release key null object equal cache release key audit model get release key return instance config release key cache put instance config cache key audit model get release key if release key be not the same or can not find in cache then do audit instance config instance config instance service find instance config instance id audit model get config app id audit model get config namespace if instance config null if object equal instance config get release key audit model get release key instance config set config cluster name audit model get config cluster name instance config set release key audit model get release key instance config set release delivery time audit model get offer time else if offer time and last modify time close enough audit model get offer time instance config get datum change last modify time when release key be the same optimize to reduce write if the record be update not long ago return we need to update no matter the release key be the same or not to ensure the last modify time be update each day instance config set datum change last modify time audit model get offer time instance service update instance config instance config return instance config new instance config instance config set instance id instance id instance config set config app id audit model get config app id instance config set config cluster name audit model get config cluster name instance config set config namespace name audit model get config namespace instance config set release key audit model get release key instance config set release delivery time audit model get offer time instance config set datum change create time audit model get offer time try instance service create instance config instance config catch data integrity violation exception ex concurrent insertion safe to ignore private boolean offer time and last modify time close enough date offer time date last modify time return offer time get time last modify time get time offer time last modify time threshold in milli private long prepare instance id instance config audit model audit model instance instance instance service find instance audit model get app id audit model get cluster name audit model get datum center audit model get ip if instance null return instance get id instance new instance instance set app id audit model get app id instance set cluster name audit model get cluster name instance set datum center audit model get datum center instance set ip audit model get ip try return instance service create instance instance get id catch data integrity violation exception ex return the one exist return instance service find instance instance get app id instance get cluster name instance get datum center instance get ip get id override public void after property set throw exception audit executor service submit while audit stop get thread current thread be interrupted try instance config audit model model audits poll if model null time unit seconds sleep continue do audit model catch throwable ex tracer log error ex private string assemble instance key string app id string cluster string ip string datacenter list string key part list new array list app id cluster ip if string be null or empty datacenter key part add datacenter return string joiner join key part private string assemble instance config key long instance id string config app id string config namespace return string joiner join instance id config app id config namespace public static class instance config audit model private string app id private string cluster name private string datum center private string ip private string config app id private string config cluster name private string config namespace private string release key private date offer time public instance config audit model string app id string cluster name string datum center string client ip string config app id string config cluster name string config namespace string release key this offer time new date this app id app id this cluster name cluster name this datum center string be null or empty datum center datum center this ip client ip this config app id config app id this config cluster name config cluster name this config namespace config namespace this release key release key public string get app id return app id public string get cluster name return cluster name public string get datum center return datum center public string get ip return ip public string get config app id return config app id public string get config namespace return config namespace public string get release key return release key public string get config cluster name return config cluster name public date get offer time return offer time override public boolean equal object o if this o return true if o null get class o get class return false instance config audit model model instance config audit model o return object equal app id model app id object equal cluster name model cluster name object equal datum center model datum center object equal ip model ip object equal config app id model config app id object equal config cluster name model config cluster name object equal config namespace model config namespace object equal release key model release key override public int hash code return object hash app id cluster name datum center ip config app id config cluster name config namespace release key 
discovery service service public class discovery service private final eureka client eureka client public discovery service final eureka client eureka client this eureka client eureka client public list instance info get config service instance application application eureka client get application service name const apollo configservice if application null tracer log event apollo eureka discovery not find service name const apollo configservice return application null application get instance collection empty list public list instance info get meta service instance application application eureka client get application service name const apollo metaservice if application null tracer log event apollo eureka discovery not find service name const apollo metaservice return application null application get instance collection empty list public list instance info get admin service instance application application eureka client get application service name const apollo adminservice if application null tracer log event apollo eureka discovery not find service name const apollo adminservice return application null application get instance collection empty list 
consumer role permission service service public class consumer role permission service private final permission repository permission repository private final consumer role repository consumer role repository private final role permission repository role permission repository public consumer role permission service final permission repository permission repository final consumer role repository consumer role repository final role permission repository role permission repository this permission repository permission repository this consumer role repository consumer role repository this role permission repository role permission repository check whether user have the permission public boolean consumer have permission long consumer id string permission type string target id permission permission permission repository find top by permission type and target id permission type target id if permission null return false list consumer role consumer role consumer role repository find by consumer id consumer id if collection util be empty consumer role return false set long role id consumer role stream map consumer role get role id collect collector to set list role permission role permission role permission repository find by role id in role id if collection util be empty role permission return false for role permission role permission role permission if role permission get permission id permission get id return true return false 
consumer service service public class consumer service private static final fast date format timestamp format fast date format get instance yyyy m mdd h hmmss private static final joiner key joiner joiner on private final user info holder user info holder private final consumer token repository consumer token repository private final consumer repository consumer repository private final consumer audit repository consumer audit repository private final consumer role repository consumer role repository private final portal config portal config private final role permission service role permission service private final user service user service public consumer service final user info holder user info holder final consumer token repository consumer token repository final consumer repository consumer repository final consumer audit repository consumer audit repository final consumer role repository consumer role repository final portal config portal config final role permission service role permission service final user service user service this user info holder user info holder this consumer token repository consumer token repository this consumer repository consumer repository this consumer audit repository consumer audit repository this consumer role repository consumer role repository this portal config portal config this role permission service role permission service this user service user service public consumer create consumer consumer consumer string app id consumer get app id consumer manage consumer consumer repository find by app id app id if manage consumer null throw new bad request exception consumer already exist string owner name consumer get owner name user info owner user service find by user id owner name if owner null throw new bad request exception string format user do not exist user id s owner name consumer set owner email owner get email string operator user info holder get user get user id consumer set datum change create by operator consumer set datum change last modify by operator return consumer repository save consumer public consumer token generate and save consumer token consumer consumer date expire precondition check argument consumer null consumer can not be null consumer token consumer token generate consumer token consumer expire consumer token set id return consumer token repository save consumer token public consumer token get consumer token by app id string app id consumer consumer consumer repository find by app id app id if consumer null return null return consumer token repository find by consumer id consumer get id public long get consumer id by token string token if string be null or empty token return null consumer token consumer token consumer token repository find top by token and expire after token new date return consumer token null null consumer token get consumer id public consumer get consumer by consumer id long consumer id return consumer repository find by id consumer id or else null public list consumer role assign namespace role to consumer string token string app id string namespace name return assign namespace role to consumer token app id namespace name null transactional public list consumer role assign namespace role to consumer string token string app id string namespace name string env long consumer id get consumer id by token token if consumer id null throw new bad request exception token be illegal role namespace modify role role permission service find role by role name role util build modify namespace role name app id namespace name env role namespace release role role permission service find role by role name role util build release namespace role name app id namespace name env if namespace modify role null namespace release role null throw new bad request exception namespace s role do not exist please check whether namespace have create long namespace modify role id namespace modify role get id long namespace release role id namespace release role get id consumer role manage modify role consumer role repository find by consumer id and role id consumer id namespace modify role id consumer role manage release role consumer role repository find by consumer id and role id consumer id namespace release role id if manage modify role null manage release role null return array as list manage modify role manage release role string operator user info holder get user get user id consumer role namespace modify consumer role create consumer role consumer id namespace modify role id operator consumer role namespace release consumer role create consumer role consumer id namespace release role id operator consumer role create modify consumer role consumer role repository save namespace modify consumer role consumer role create release consumer role consumer role repository save namespace release consumer role return array as list create modify consumer role create release consumer role transactional public consumer role assign app role to consumer string token string app id long consumer id get consumer id by token token if consumer id null throw new bad request exception token be illegal role master role role permission service find role by role name role util build app master role name app id if master role null throw new bad request exception app s role do not exist please check whether app have create long role id master role get id consumer role manage modify role consumer role repository find by consumer id and role id consumer id role id if manage modify role null return manage modify role string operator user info holder get user get user id consumer role consumer role create consumer role consumer id role id operator return consumer role repository save consumer role transactional public void create consumer audits iterable consumer audit consumer audits consumer audit repository save all consumer audits transactional public consumer token create consumer token consumer token entity entity set id for protection return consumer token repository save entity private consumer token generate consumer token consumer consumer date expire long consumer id consumer get id string create by user info holder get user get user id date create time new date consumer token consumer token new consumer token consumer token set consumer id consumer id consumer token set expire expire consumer token set datum change create by create by consumer token set datum change create time create time consumer token set datum change last modify by create by consumer token set datum change last modify time create time generate and enrich token consumer consumer token return consumer token void generate and enrich token consumer consumer consumer token consumer token precondition check argument consumer null if consumer token get datum change create time null consumer token set datum change create time new date consumer token set token generate token consumer get app id consumer token get datum change create time portal config consumer token salt string generate token string consumer app id date generation time string consumer token salt return hash sha1 hash string key joiner join consumer app id timestamp format format generation time consumer token salt charset utf to string consumer role create consumer role long consumer id long role id string operator consumer role consumer role new consumer role consumer role set consumer id consumer id consumer role set role id role id consumer role set datum change create by operator consumer role set datum change last modify by operator return consumer role 
consumer audit util service public class consumer audit util implement initialize bean private static final int consumer audit max size private blocking queue consumer audit audits queue new link blocking queue consumer audit max size private final executor service audit executor service private final atomic boolean audit stop private int batch size private long batch timeout private time unit batch timeunit time unit seconds private final consumer service consumer service public consumer audit util final consumer service consumer service this consumer service consumer service audit executor service executor new single thread executor apollo thread factory create consumer audit util true audit stop new atomic boolean false public boolean audit http servlet request request long consumer id ignore get request if get equal ignore case request get method return true string uri request get request u be i if string be null or empty request get query string uri request get query string consumer audit consumer audit new consumer audit date now new date consumer audit set consumer id consumer id consumer audit set uri uri consumer audit set method request get method consumer audit set datum change create time now consumer audit set datum change last modify time now throw away audits if exceed the max size return this audits offer consumer audit override public void after property set throw exception audit executor service submit while audit stop get thread current thread be interrupted list consumer audit to audit list new array list try queue drain audits to audit batch size batch timeout batch timeunit if to audit be empty consumer service create consumer audits to audit catch throwable ex tracer log error ex public void stop audit audit stop set true 
consumer auth util service public class consumer auth util static final string consumer id apollo consumer id private final consumer service consumer service public consumer auth util final consumer service consumer service this consumer service consumer service public long get consumer id string token return consumer service get consumer id by token token public void store consumer id http servlet request request long consumer id request set attribute consumer id consumer id public long retrieve consumer id http servlet request request object value request get attribute consumer id try return long parse long value to string catch throwable ex throw new illegal state exception no consumer id ex 
admin service a p i service public class admin service a p i service public static class health a p i extend api public health health env env return rest template get env health health class service public static class app a p i extend api public app d t o load app env env string app id return rest template get env app app id app d t o class app id public app d t o create app env env app d t o app return rest template post env app app app d t o class public void update app env env app d t o app rest template put env app app id app app get app id public void delete app env env string app id string operator rest template delete env app app id operator operator app id operator service public static class namespace a p i extend api private parameterized type reference map string boolean type reference new parameterized type reference map string boolean public list namespace d t o find namespace by cluster string app id env env string cluster name namespace d t o namespace d t os rest template get env app app id cluster cluster name namespace namespace d t o class app id cluster name return array as list namespace d t os public namespace d t o load namespace string app id env env string cluster name string namespace name return rest template get env app app id cluster cluster name namespace namespace name namespace d t o class app id cluster name namespace name public namespace d t o find public namespace for associated namespace env env string app id string cluster name string namespace name return rest template get env app app id cluster cluster name namespace namespace name associate public namespace namespace d t o class app id cluster name namespace name public namespace d t o create namespace env env namespace d t o namespace return rest template post env app app id cluster cluster name namespace namespace namespace d t o class namespace get app id namespace get cluster name public app namespace d t o create app namespace env env app namespace d t o app namespace return rest template post env app app id appnamespace app namespace app namespace d t o class app namespace get app id public app namespace d t o create miss app namespace env env app namespace d t o app namespace return rest template post env app app id appnamespace silent creation true app namespace app namespace d t o class app namespace get app id public list app namespace d t o get app namespace string app id env env app namespace d t o app namespace d t os rest template get env app app id appnamespace app namespace d t o class app id return array as list app namespace d t os public void delete namespace env env string app id string cluster name string namespace name string operator rest template delete env app app id cluster cluster name namespace namespace name operator operator app id cluster name namespace name operator public map string boolean get namespace publish info env env string app id return rest template get env app app id namespace publish info type reference app id get body public list namespace d t o get public app namespace all namespace env env string public namespace name int page int size namespace d t o namespace d t os rest template get env appnamespace public namespace name namespace page page size size namespace d t o class public namespace name page size return array as list namespace d t os public int count public app namespace associate namespace env env string public namesapce name integer count rest template get env appnamespace public namespace name associate namespace count integer class public namesapce name return count null count public void delete app namespace env env string app id string namespace name string operator rest template delete env app app id appnamespace namespace name operator operator app id namespace name operator service public static class item a p i extend api public list item d t o find item string app id env env string cluster name string namespace name item d t o item d t os rest template get env app app id cluster cluster name namespace namespace name item item d t o class app id cluster name namespace name return array as list item d t os public list item d t o find delete item string app id env env string cluster name string namespace name item d t o item d t os rest template get env app app id cluster cluster name namespace namespace name item delete item d t o class app id cluster name namespace name return array as list item d t os public item d t o load item env env string app id string cluster name string namespace name string key return rest template get env app app id cluster cluster name namespace namespace name item key item d t o class app id cluster name namespace name key public item d t o load item by id env env long item id return rest template get env item item id item d t o class item id public void update item by change set string app id env env string cluster name string namespace item change set change set rest template post env app app id cluster cluster name namespace namespace name itemset change set void class app id cluster name namespace public void update item string app id env env string cluster name string namespace long item id item d t o item rest template put env app app id cluster cluster name namespace namespace name item item id item app id cluster name namespace item id public item d t o create item string app id env env string cluster name string namespace item d t o item return rest template post env app app id cluster cluster name namespace namespace name item item item d t o class app id cluster name namespace public void delete item env env long item id string operator rest template delete env item item id operator operator item id operator service public static class cluster a p i extend api public list cluster d t o find cluster by app string app id env env cluster d t o cluster d t os rest template get env app app id cluster cluster d t o class app id return array as list cluster d t os public cluster d t o load cluster string app id env env string cluster name return rest template get env app app id cluster cluster name cluster d t o class app id cluster name public boolean be cluster unique string app id env env string cluster name return rest template get env app app id cluster cluster name unique boolean class app id cluster name public cluster d t o create env env cluster d t o cluster return rest template post env app app id cluster cluster cluster d t o class cluster get app id public void delete env env string app id string cluster name string operator rest template delete env app app id cluster cluster name operator operator app id cluster name operator service public static class access key a p i extend api public access key d t o create env env access key d t o access key return rest template post env app app id accesskey access key access key d t o class access key get app id public list access key d t o find by app id env env string app id access key d t o access key rest template get env app app id accesskey access key d t o class app id return array as list access key public void delete env env string app id long id string operator rest template delete env app app id accesskey id operator operator app id id operator public void enable env env string app id long id string operator rest template put env app app id accesskey id enable operator operator null app id id operator public void disable env env string app id long id string operator rest template put env app app id accesskey id disable operator operator null app id id operator service public static class release a p i extend api private static final joiner joiner joiner on public release d t o load release env env long release id return rest template get env release release id release d t o class release id public list release d t o find release by id env env set long release id if collection util be empty release id return collection empty list release d t o release rest template get env release release id release id release d t o class joiner join release id return array as list release public list release d t o find all release string app id env env string cluster name string namespace name int page int size release d t o release d t os rest template get env app app id cluster cluster name namespace namespace name release all page page size size release d t o class app id cluster name namespace name page size return array as list release d t os public list release d t o find active release string app id env env string cluster name string namespace name int page int size release d t o release d t os rest template get env app app id cluster cluster name namespace namespace name release active page page size size release d t o class app id cluster name namespace name page size return array as list release d t os public release d t o load latest release string app id env env string cluster name string namespace release d t o release d t o rest template get env app app id cluster cluster name namespace namespace name release latest release d t o class app id cluster name namespace return release d t o public release d t o create release string app id env env string cluster name string namespace string release name string release comment string operator boolean be emergency publish http header header new http header header set content type media type parse media type media type application form urlencode value charset utf multi value map string string parameter new link multi value map parameter add name release name parameter add comment release comment parameter add operator operator parameter add be emergency publish string value of be emergency publish http entity multi value map string string entity new http entity parameter header release d t o response rest template post env app app id cluster cluster name namespace namespace name release entity release d t o class app id cluster name namespace return response public release d t o create gray deletion release string app id env env string cluster name string namespace string release name string release comment string operator boolean be emergency publish set string gray del key http header header new http header header set content type media type parse media type media type application form urlencode value charset utf multi value map string string parameter new link multi value map parameter add release name release name parameter add comment release comment parameter add operator operator parameter add be emergency publish string value of be emergency publish gray del key for each key parameter add gray del key key http entity multi value map string string entity new http entity parameter header release d t o response rest template post env app app id cluster cluster name namespace namespace name gray del release entity release d t o class app id cluster name namespace return response public release d t o update and publish string app id env env string cluster name string namespace string release name string release comment string branch name boolean be emergency publish boolean delete branch item change set change set return rest template post env app app id cluster cluster name namespace namespace name update and publish release name release name release comment release comment branch name branch name delete branch delete branch be emergency publish be emergency publish change set release d t o class app id cluster name namespace release name release comment branch name delete branch be emergency publish public void rollback env env long release id string operator rest template put env release release id rollback operator operator null release id operator service public static class commit a p i extend api public list commit d t o find string app id env env string cluster name string namespace name int page int size commit d t o commit d t os rest template get env app app id cluster cluster name namespace namespace name commit page page size size commit d t o class app id cluster name namespace name page size return array as list commit d t os service public static class namespace lock a p i extend api public namespace lock d t o get namespace lock owner string app id env env string cluster name string namespace name return rest template get env app app id cluster cluster name namespace namespace name lock namespace lock d t o class app id cluster name namespace name service public static class instance a p i extend api private joiner joiner joiner on private parameterized type reference page d t o instance d t o page instance dto type new parameterized type reference page d t o instance d t o public page d t o instance d t o get by release env env long release id int page int size response entity page d t o instance d t o entity rest template get env instance by release release id release id page page size size page instance dto type release id page size return entity get body public list instance d t o get by release not in string app id env env string cluster name string namespace name set long release id instance d t o instance d t os rest template get env instance by namespace and release not in app id app id cluster name cluster name namespace name namespace name release id release id instance d t o class app id cluster name namespace name joiner join release id return array as list instance d t os public page d t o instance d t o get by namespace string app id env env string cluster name string namespace name string instance app id int page int size response entity page d t o instance d t o entity rest template get env instance by namespace app id app id cluster name cluster name namespace name namespace name instance app id instance app id page page size size page instance dto type app id cluster name namespace name instance app id page size return entity get body public int get instance count by namespace string app id env env string cluster name string namespace name integer count rest template get env instance by namespace count app id app id cluster name cluster name namespace name namespace name integer class app id cluster name namespace name if count null return return count service public static class namespace branch a p i extend api public namespace d t o create branch string app id env env string cluster name string namespace name string operator return rest template post env app app id cluster cluster name namespace namespace name branch operator operator null namespace d t o class app id cluster name namespace name operator public namespace d t o find branch string app id env env string cluster name string namespace name return rest template get env app app id cluster cluster name namespace namespace name branch namespace d t o class app id cluster name namespace name public gray release rule d t o find branch gray rule string app id env env string cluster name string namespace name string branch name return rest template get env app app id cluster cluster name namespace namespace name branch branch name rule gray release rule d t o class app id cluster name namespace name branch name public void update branch gray rule string app id env env string cluster name string namespace name string branch name gray release rule d t o rule rest template put env app app id cluster cluster name namespace namespace name branch branch name rule rule app id cluster name namespace name branch name public void delete branch string app id env env string cluster name string namespace name string branch name string operator rest template delete env app app id cluster cluster name namespace namespace name branch branch name operator operator app id cluster name namespace name branch name operator service public static class release history a p i extend api private parameterized type reference page d t o release history d t o type new parameterized type reference page d t o release history d t o public page d t o release history d t o find release history by namespace string app id env env string cluster name string namespace name int page int size return rest template get env app app id cluster cluster name namespace namespace name release history page page size size type app id cluster name namespace name page size get body public page d t o release history d t o find by release id and operation env env long release id int operation int page int size return rest template get env release history by release id and operation release id release id operation operation page page size size type release id operation page size get body public page d t o release history d t o find by previous release id and operation env env long previous release id int operation int page int size return rest template get env release history by previous release id and operation previous release id release id operation operation page page size size type previous release id operation page size get body 
admin service a p i service public static class health a p i extend api public health health env env return rest template get env health health class 
admin service a p i service public static class app a p i extend api public app d t o load app env env string app id return rest template get env app app id app d t o class app id public app d t o create app env env app d t o app return rest template post env app app app d t o class public void update app env env app d t o app rest template put env app app id app app get app id public void delete app env env string app id string operator rest template delete env app app id operator operator app id operator 
admin service a p i service public static class namespace a p i extend api private parameterized type reference map string boolean type reference new parameterized type reference map string boolean public list namespace d t o find namespace by cluster string app id env env string cluster name namespace d t o namespace d t os rest template get env app app id cluster cluster name namespace namespace d t o class app id cluster name return array as list namespace d t os public namespace d t o load namespace string app id env env string cluster name string namespace name return rest template get env app app id cluster cluster name namespace namespace name namespace d t o class app id cluster name namespace name public namespace d t o find public namespace for associated namespace env env string app id string cluster name string namespace name return rest template get env app app id cluster cluster name namespace namespace name associate public namespace namespace d t o class app id cluster name namespace name public namespace d t o create namespace env env namespace d t o namespace return rest template post env app app id cluster cluster name namespace namespace namespace d t o class namespace get app id namespace get cluster name public app namespace d t o create app namespace env env app namespace d t o app namespace return rest template post env app app id appnamespace app namespace app namespace d t o class app namespace get app id public app namespace d t o create miss app namespace env env app namespace d t o app namespace return rest template post env app app id appnamespace silent creation true app namespace app namespace d t o class app namespace get app id public list app namespace d t o get app namespace string app id env env app namespace d t o app namespace d t os rest template get env app app id appnamespace app namespace d t o class app id return array as list app namespace d t os public void delete namespace env env string app id string cluster name string namespace name string operator rest template delete env app app id cluster cluster name namespace namespace name operator operator app id cluster name namespace name operator public map string boolean get namespace publish info env env string app id return rest template get env app app id namespace publish info type reference app id get body public list namespace d t o get public app namespace all namespace env env string public namespace name int page int size namespace d t o namespace d t os rest template get env appnamespace public namespace name namespace page page size size namespace d t o class public namespace name page size return array as list namespace d t os public int count public app namespace associate namespace env env string public namesapce name integer count rest template get env appnamespace public namespace name associate namespace count integer class public namesapce name return count null count public void delete app namespace env env string app id string namespace name string operator rest template delete env app app id appnamespace namespace name operator operator app id namespace name operator 
admin service a p i service public static class item a p i extend api public list item d t o find item string app id env env string cluster name string namespace name item d t o item d t os rest template get env app app id cluster cluster name namespace namespace name item item d t o class app id cluster name namespace name return array as list item d t os public list item d t o find delete item string app id env env string cluster name string namespace name item d t o item d t os rest template get env app app id cluster cluster name namespace namespace name item delete item d t o class app id cluster name namespace name return array as list item d t os public item d t o load item env env string app id string cluster name string namespace name string key return rest template get env app app id cluster cluster name namespace namespace name item key item d t o class app id cluster name namespace name key public item d t o load item by id env env long item id return rest template get env item item id item d t o class item id public void update item by change set string app id env env string cluster name string namespace item change set change set rest template post env app app id cluster cluster name namespace namespace name itemset change set void class app id cluster name namespace public void update item string app id env env string cluster name string namespace long item id item d t o item rest template put env app app id cluster cluster name namespace namespace name item item id item app id cluster name namespace item id public item d t o create item string app id env env string cluster name string namespace item d t o item return rest template post env app app id cluster cluster name namespace namespace name item item item d t o class app id cluster name namespace public void delete item env env long item id string operator rest template delete env item item id operator operator item id operator 
admin service a p i service public static class cluster a p i extend api public list cluster d t o find cluster by app string app id env env cluster d t o cluster d t os rest template get env app app id cluster cluster d t o class app id return array as list cluster d t os public cluster d t o load cluster string app id env env string cluster name return rest template get env app app id cluster cluster name cluster d t o class app id cluster name public boolean be cluster unique string app id env env string cluster name return rest template get env app app id cluster cluster name unique boolean class app id cluster name public cluster d t o create env env cluster d t o cluster return rest template post env app app id cluster cluster cluster d t o class cluster get app id public void delete env env string app id string cluster name string operator rest template delete env app app id cluster cluster name operator operator app id cluster name operator 
admin service a p i service public static class access key a p i extend api public access key d t o create env env access key d t o access key return rest template post env app app id accesskey access key access key d t o class access key get app id public list access key d t o find by app id env env string app id access key d t o access key rest template get env app app id accesskey access key d t o class app id return array as list access key public void delete env env string app id long id string operator rest template delete env app app id accesskey id operator operator app id id operator public void enable env env string app id long id string operator rest template put env app app id accesskey id enable operator operator null app id id operator public void disable env env string app id long id string operator rest template put env app app id accesskey id disable operator operator null app id id operator 
admin service a p i service public static class release a p i extend api private static final joiner joiner joiner on public release d t o load release env env long release id return rest template get env release release id release d t o class release id public list release d t o find release by id env env set long release id if collection util be empty release id return collection empty list release d t o release rest template get env release release id release id release d t o class joiner join release id return array as list release public list release d t o find all release string app id env env string cluster name string namespace name int page int size release d t o release d t os rest template get env app app id cluster cluster name namespace namespace name release all page page size size release d t o class app id cluster name namespace name page size return array as list release d t os public list release d t o find active release string app id env env string cluster name string namespace name int page int size release d t o release d t os rest template get env app app id cluster cluster name namespace namespace name release active page page size size release d t o class app id cluster name namespace name page size return array as list release d t os public release d t o load latest release string app id env env string cluster name string namespace release d t o release d t o rest template get env app app id cluster cluster name namespace namespace name release latest release d t o class app id cluster name namespace return release d t o public release d t o create release string app id env env string cluster name string namespace string release name string release comment string operator boolean be emergency publish http header header new http header header set content type media type parse media type media type application form urlencode value charset utf multi value map string string parameter new link multi value map parameter add name release name parameter add comment release comment parameter add operator operator parameter add be emergency publish string value of be emergency publish http entity multi value map string string entity new http entity parameter header release d t o response rest template post env app app id cluster cluster name namespace namespace name release entity release d t o class app id cluster name namespace return response public release d t o create gray deletion release string app id env env string cluster name string namespace string release name string release comment string operator boolean be emergency publish set string gray del key http header header new http header header set content type media type parse media type media type application form urlencode value charset utf multi value map string string parameter new link multi value map parameter add release name release name parameter add comment release comment parameter add operator operator parameter add be emergency publish string value of be emergency publish gray del key for each key parameter add gray del key key http entity multi value map string string entity new http entity parameter header release d t o response rest template post env app app id cluster cluster name namespace namespace name gray del release entity release d t o class app id cluster name namespace return response public release d t o update and publish string app id env env string cluster name string namespace string release name string release comment string branch name boolean be emergency publish boolean delete branch item change set change set return rest template post env app app id cluster cluster name namespace namespace name update and publish release name release name release comment release comment branch name branch name delete branch delete branch be emergency publish be emergency publish change set release d t o class app id cluster name namespace release name release comment branch name delete branch be emergency publish public void rollback env env long release id string operator rest template put env release release id rollback operator operator null release id operator 
admin service a p i service public static class commit a p i extend api public list commit d t o find string app id env env string cluster name string namespace name int page int size commit d t o commit d t os rest template get env app app id cluster cluster name namespace namespace name commit page page size size commit d t o class app id cluster name namespace name page size return array as list commit d t os 
admin service a p i service public static class namespace lock a p i extend api public namespace lock d t o get namespace lock owner string app id env env string cluster name string namespace name return rest template get env app app id cluster cluster name namespace namespace name lock namespace lock d t o class app id cluster name namespace name 
admin service a p i service public static class instance a p i extend api private joiner joiner joiner on private parameterized type reference page d t o instance d t o page instance dto type new parameterized type reference page d t o instance d t o public page d t o instance d t o get by release env env long release id int page int size response entity page d t o instance d t o entity rest template get env instance by release release id release id page page size size page instance dto type release id page size return entity get body public list instance d t o get by release not in string app id env env string cluster name string namespace name set long release id instance d t o instance d t os rest template get env instance by namespace and release not in app id app id cluster name cluster name namespace name namespace name release id release id instance d t o class app id cluster name namespace name joiner join release id return array as list instance d t os public page d t o instance d t o get by namespace string app id env env string cluster name string namespace name string instance app id int page int size response entity page d t o instance d t o entity rest template get env instance by namespace app id app id cluster name cluster name namespace name namespace name instance app id instance app id page page size size page instance dto type app id cluster name namespace name instance app id page size return entity get body public int get instance count by namespace string app id env env string cluster name string namespace name integer count rest template get env instance by namespace count app id app id cluster name cluster name namespace name namespace name integer class app id cluster name namespace name if count null return return count 
admin service a p i service public static class namespace branch a p i extend api public namespace d t o create branch string app id env env string cluster name string namespace name string operator return rest template post env app app id cluster cluster name namespace namespace name branch operator operator null namespace d t o class app id cluster name namespace name operator public namespace d t o find branch string app id env env string cluster name string namespace name return rest template get env app app id cluster cluster name namespace namespace name branch namespace d t o class app id cluster name namespace name public gray release rule d t o find branch gray rule string app id env env string cluster name string namespace name string branch name return rest template get env app app id cluster cluster name namespace namespace name branch branch name rule gray release rule d t o class app id cluster name namespace name branch name public void update branch gray rule string app id env env string cluster name string namespace name string branch name gray release rule d t o rule rest template put env app app id cluster cluster name namespace namespace name branch branch name rule rule app id cluster name namespace name branch name public void delete branch string app id env env string cluster name string namespace name string branch name string operator rest template delete env app app id cluster cluster name namespace namespace name branch branch name operator operator app id cluster name namespace name branch name operator 
admin service a p i service public static class release history a p i extend api private parameterized type reference page d t o release history d t o type new parameterized type reference page d t o release history d t o public page d t o release history d t o find release history by namespace string app id env env string cluster name string namespace name int page int size return rest template get env app app id cluster cluster name namespace namespace name release history page page size size type app id cluster name namespace name page size get body public page d t o release history d t o find by release id and operation env env long release id int operation int page int size return rest template get env release history by release id and operation release id release id operation operation page page size size type release id operation page size get body public page d t o release history d t o find by previous release id and operation env env long previous release id int operation int page int size return rest template get env release history by previous release id and operation previous release id release id operation operation page page size size type previous release id operation page size get body 
portal meta domain service service public class portal meta domain service private static final logger logger logger factory get logger portal meta domain service class private static final long refresh interval in second min static final string default meta url http apollo meta private final map env string meta server address cache map new concurrent map initialize meta server provider without cache multiple link portal meta server provider private final list portal meta server provider portal meta server provider new array list env meta server address cache comma separate meta server address select single meta server address cache private final map string string select meta server address cache map new concurrent map private final atomic boolean periodic refresh start new atomic boolean false portal meta domain service final portal config portal config high priority with datum in database portal meta server provider add new database portal meta server provider portal config system property os environment configuration file portal meta server provider add new default portal meta server provider return one meta server address if multiple meta server address be configure will select one public string get domain env env string meta server address get meta server address env if there be more than one address need to select one if meta server address contain return select meta server address meta server address return meta server address return meta server address if multiple meta server address be configure will return the comma separate string public string get meta server address env env in cache if meta server address cache contain key env put it to cache meta server address cache put env get meta server address cache value portal meta server provider env get from cache return meta server address cache get env get the meta server from provider by given environment if there be no available meta server url for the given environment the default meta server url will be use http apollo meta param provider provide environment s meta server address param env environment return meta server address private string get meta server address cache value collection portal meta server provider provider env env null value string meta address null for portal meta server provider portal meta server provider provider if portal meta server provider exist env meta address portal meta server provider get meta server address env logger info locate meta server address for env meta address env break check find it or not if string be null or empty meta address fallback to default meta address meta address default meta url logger warn meta server address fallback to for env because it be not available in meta server provider meta address env return meta address trim reload all link portal meta server provider clear cache link this meta server address cache public void reload for portal meta server provider portal meta server provider portal meta server provider portal meta server provider reload meta server address cache clear select one available meta server from the comma separate meta server address e g http 1.2 3.4 http 2.3 4.5 br in production environment we still suggest use one single domain like http config xxx com back by software load balancer like nginx instead of multiple ip address private string select meta server address string meta server address string meta address select select meta server address cache get meta server address if meta address select null initialize if periodic refresh start compare and set false true schedule periodic refresh update meta server address meta server address meta address select select meta server address cache get meta server address return meta address select private void update meta server address string meta server address logger debug select meta server address for meta server address transaction transaction tracer new transaction apollo meta service refresh meta server address transaction add datum url meta server address try list string meta server list new array list meta server address split random load balance collection shuffle meta server boolean server available false for string address meta server address address trim check whether service config be accessible if net util ping url address service config select the first available meta server select meta server address cache put meta server address address server available true logger debug select meta server address for address meta server address break we need to make sure the map be not empty e g the first update might be fail if select meta server address cache contain key meta server address select meta server address cache put meta server address meta server get trim if server available logger warn could not find available meta server for configure meta server address fallback to meta server address select meta server address cache get meta server address transaction set status transaction success catch throwable ex transaction set status ex throw ex finally transaction complete private void schedule periodic refresh schedule executor service schedule executor service executor new schedule thread pool apollo thread factory create meta service locator true schedule executor service schedule at fix rate new runnable override public void run try for string meta server address select meta server address cache key set update meta server address meta server address catch throwable ex logger warn string format refresh meta server address fail will retry in d seconds refresh interval in second ex refresh interval in second refresh interval in second time unit seconds 
access key service service public class access key service private final admin service a p i access key a p i access key a p i public access key service access key a p i access key a p i this access key a p i access key a p i public list access key d t o find by app id env env string app id return access key a p i find by app id env app id public access key d t o create access key env env access key d t o access key access key d t o access key d t o access key a p i create env access key tracer log event tracer event type create access key access key get app id return access key d t o public void delete access key env env string app id long id string operator access key a p i delete env app id id operator public void enable env env string app id long id string operator access key a p i enable env app id id operator public void disable env env string app id long id string operator access key a p i disable env app id id operator 
app namespace service service public class app namespace service private static final int private app namespace notification count private static final joiner app namespace joiner joiner on skip null private final user info holder user info holder private final app namespace repository app namespace repository private final role initialization service role initialization service private final app service app service private final role permission service role permission service public app namespace service final user info holder user info holder final app namespace repository app namespace repository final role initialization service role initialization service final lazy app service app service final role permission service role permission service this user info holder user info holder this app namespace repository app namespace repository this role initialization service role initialization service this app service app service this role permission service role permission service app n app n public list app namespace find public app namespace return app namespace repository find by be public true public app namespace find public app namespace string namespace name list app namespace app namespace app namespace repository find by name and be public namespace name true if collection util be empty app namespace return null return app namespace get private list app namespace find all private app namespace string namespace name return app namespace repository find by name and be public namespace name false public app namespace find by app id and name string app id string namespace name return app namespace repository find by app id and name app id namespace name public list app namespace find by app id string app id return app namespace repository find by app id app id transactional public void create default app namespace string app id if be app namespace name unique app id config const namespace application throw new bad request exception string format app already have application namespace app id s app id app namespace app n new app namespace app n set app id app id app n set name config const namespace application app n set comment default app namespace app n set format config file format property get value string user id user info holder get user get user id app n set datum change create by user id app n set datum change last modify by user id app namespace repository save app n public boolean be app namespace name unique string app id string namespace name object require non null app id app id must not be null object require non null namespace name namespace must not be null return object be null app namespace repository find by app id and name app id namespace name public app namespace create app namespace in local app namespace app namespace return create app namespace in local app namespace true transactional public app namespace create app namespace in local app namespace app namespace boolean append namespace prefix string app id app namespace get app id add app org id as prefix app app app service load app id if app null throw new bad request exception app not exist app id app id string builder app namespace name new string builder add prefix postfix app namespace name append app namespace be public append namespace prefix app get org id append app namespace get name append app namespace format as enum config file format property app namespace get format app namespace set name app namespace name to string if app namespace get comment null app namespace set comment if config file format be valid format app namespace get format throw new bad request exception invalid namespace format format must be property json yaml yml xml string operator app namespace get datum change create by if string util be empty operator operator user info holder get user get user id app namespace set datum change create by operator app namespace set datum change last modify by operator globally uniqueness check for public app namespace if app namespace be public check app namespace global uniqueness app namespace else check private app namespace if app namespace repository find by app id and name app namespace get app id app namespace get name null throw new bad request exception private app namespace app namespace get name already exist should not have the same with public app namespace check public app namespace global uniqueness app namespace app namespace create app namespace app namespace repository save app namespace role initialization service init namespace role app namespace get app id app namespace get name operator role initialization service init namespace env role app namespace get app id app namespace get name operator return create app namespace private void check app namespace global uniqueness app namespace app namespace check public app namespace global uniqueness app namespace list app namespace private app namespace find all private app namespace app namespace get name if collection util be empty private app namespace set string app id set new hash set for app namespace ans private app namespace app id add ans get app id if app id size private app namespace notification count break throw new bad request exception public app namespace app namespace get name already exist as private app namespace in app id app namespace joiner join app id etc please select another name private void check public app namespace global uniqueness app namespace app namespace app namespace public app namespace find public app namespace app namespace get name if public app namespace null throw new bad request exception app namespace app namespace get name already exist as public namespace in app id public app namespace get app id transactional public app namespace delete app namespace string app id string namespace name app namespace app namespace app namespace repository find by app id and name app id namespace name if app namespace null throw new bad request exception string format app namespace not exist app id s namespace name s app id namespace name string operator user info holder get user get user id this operator be pass to com ctrip framework apollo portal listener deletion listener on app namespace deletion event app namespace set datum change last modify by operator delete app namespace in portal db app namespace repository delete app id namespace name operator delete permission and role relate datum role permission service delete role permission by app id and namespace app id namespace name operator return app namespace public void batch delete by app id string app id string operator app namespace repository batch delete by app id app id operator 
app service service public class app service private final user info holder user info holder private final admin service a p i app a p i app a p i private final app repository app repository private final cluster service cluster service private final app namespace service app namespace service private final role initialization service role initialization service private final role permission service role permission service private final favorite service favorite service private final user service user service public app service final user info holder user info holder final admin service a p i app a p i app a p i final app repository app repository final cluster service cluster service final app namespace service app namespace service final role initialization service role initialization service final role permission service role permission service final favorite service favorite service final user service user service this user info holder user info holder this app a p i app a p i this app repository app repository this cluster service cluster service this app namespace service app namespace service this role initialization service role initialization service this role permission service role permission service this favorite service favorite service this user service user service public list app find all iterable app app app repository find all if app null return collection empty list return list new array list app public page d t o app find all pageable pageable page app app app repository find all pageable return new page d t o app get content pageable app get total element public page d t o app search by app id or app name string query pageable pageable page app app app repository find by app id contain or name contain query query pageable return new page d t o app get content pageable app get total element public list app find by app id set string app id return app repository find by app id in app id public list app find by app id set string app id pageable pageable return app repository find by app id in app id pageable public list app find by owner name string owner name pageable page return app repository find by owner name owner name page public app load string app id return app repository find by app id app id public app d t o load env env string app id return app a p i load app env app id public void create app in remote env env app app string username user info holder get user get user id app set datum change create by username app set datum change last modify by username app d t o app d t o bean util transform app d t o class app app a p i create app env app d t o transactional public app create app in local app app string app id app get app id app manage app app repository find by app id app id if manage app null throw new bad request exception string format app already exist app id s app id user info owner user service find by user id app get owner name if owner null throw new bad request exception application s owner not exist app set owner email owner get email string operator user info holder get user get user id app set datum change create by operator app set datum change last modify by operator app create app app repository save app app namespace service create default app namespace app id role initialization service init app role create app tracer log event tracer event type create app app id return create app transactional public app update app in local app app string app id app get app id app manage app app repository find by app id app id if manage app null throw new bad request exception string format app not exist app id s app id manage app set name app get name manage app set org id app get org id manage app set org name app get org name string owner name app get owner name user info owner user service find by user id owner name if owner null throw new bad request exception string format app s owner not exist owner s owner name manage app set owner name owner get user id manage app set owner email owner get email string operator user info holder get user get user id manage app set datum change last modify by operator return app repository save manage app public env cluster info create env nav node env env string app id env cluster info node new env cluster info env node set cluster cluster service find cluster env app id return node transactional public app delete app in local string app id app manage app app repository find by app id app id if manage app null throw new bad request exception string format app not exist app id s app id string operator user info holder get user get user id this operator be pass to com ctrip framework apollo portal listener deletion listener on app deletion event manage app set datum change last modify by operator portal app app repository delete app app id operator portal app namespace app namespace service batch delete by app id app id operator portal favorite service batch delete by app id app id operator portal permission role role permission service delete role permission by app id app id operator return manage app 
cluster service service public class cluster service private final user info holder user info holder private final admin service a p i cluster a p i cluster a p i public cluster service final user info holder user info holder final admin service a p i cluster a p i cluster a p i this user info holder user info holder this cluster a p i cluster a p i public list cluster d t o find cluster env env string app id return cluster a p i find cluster by app app id env public cluster d t o create cluster env env cluster d t o cluster if cluster a p i be cluster unique cluster get app id env cluster get name throw new bad request exception string format cluster s already exist cluster get name cluster d t o cluster d t o cluster a p i create env cluster tracer log event tracer event type create cluster cluster get app id cluster get name return cluster d t o public void delete cluster env env string app id string cluster name cluster a p i delete env app id cluster name user info holder get user get user id public cluster d t o load cluster string app id env env string cluster name return cluster a p i load cluster app id env cluster name 
commit service service public class commit service private final admin service a p i commit a p i commit a p i public commit service final admin service a p i commit a p i commit a p i this commit a p i commit a p i public list commit d t o find string app id env env string cluster name string namespace name int page int size return commit a p i find app id env cluster name namespace name page size 
favorite service service public class favorite service public static final long position default private final user info holder user info holder private final favorite repository favorite repository private final user service user service public favorite service final user info holder user info holder final favorite repository favorite repository final user service user service this user info holder user info holder this favorite repository favorite repository this user service user service public favorite add favorite favorite favorite user info user user service find by user id favorite get user id if user null throw new bad request exception user not exist user info login user user info holder get user user can only add himself favorite app if login user equal user throw new bad request exception add favorite fail because favorite s user be not current login user favorite check favorite favorite repository find by user id and app id login user get user id favorite get app id if check favorite null return check favorite favorite set position position default favorite set datum change create by user get user id favorite set datum change last modify by user get user id return favorite repository save favorite public list favorite search string user id string app id pageable page boolean be user id empty string util be empty user id boolean be app id empty string util be empty app id if be app id empty be user id empty throw new bad request exception user id and app id can t be empty at the same time if be user id empty user info login user user info holder get user user can only search he own favorite app if object equal login user get user id user id user id login user get user id search by user id if be app id empty be user id empty return favorite repository find by user id order by position asc datum change create time asc user id page search by app id if be app id empty be user id empty return favorite repository find by app id order by position asc datum change create time asc app id page search by user id and app id return array as list favorite repository find by user id and app id user id app id public void delete favorite long favorite id favorite favorite favorite repository find by id favorite id or else null check user operate permission favorite favorite repository delete favorite public void adjust favorite to first long favorite id favorite favorite favorite repository find by id favorite id or else null check user operate permission favorite string user id favorite get user id favorite first favorite favorite repository find first by user id order by position asc datum change create time asc user id long min position first favorite get position favorite set position min position favorite repository save favorite private void check user operate permission favorite favorite if favorite null throw new bad request exception favorite not exist if object equal user info holder get user get user id favorite get user id throw new bad request exception can not operate other person s favorite public void batch delete by app id string app id string operator favorite repository batch delete by app id app id operator 
instance service service public class instance service private final admin service a p i instance a p i instance a p i public instance service final admin service a p i instance a p i instance a p i this instance a p i instance a p i public page d t o instance d t o get by release env env long release id int page int size return instance a p i get by release env release id page size public page d t o instance d t o get by namespace env env string app id string cluster name string namespace name string instance app id int page int size return instance a p i get by namespace app id env cluster name namespace name instance app id page size public int get instance count by namepsace string app id env env string cluster name string namespace name return instance a p i get instance count by namespace app id env cluster name namespace name public list instance d t o get by release not in env env string app id string cluster name string namespace name set long release id return instance a p i get by release not in app id env cluster name namespace name release id 
item service service public class item service private gson gson new gson private final user info holder user info holder private final admin service a p i namespace a p i namespace a p i private final admin service a p i item a p i item a p i private final admin service a p i release a p i release a p i private final config text resolver file text resolver private final config text resolver property resolver public item service final user info holder user info holder final namespace a p i namespace a p i final item a p i item a p i final release a p i release a p i final qualifier file text resolver config text resolver file text resolver final qualifier property resolver config text resolver property resolver this user info holder user info holder this namespace a p i namespace a p i this item a p i item a p i this release a p i release a p i this file text resolver file text resolver this property resolver property resolver parse config text and update config item return parse result public void update config item by text namespace text model model string app id model get app id env env model get env string cluster name model get cluster name string namespace name model get namespace name namespace d t o namespace namespace a p i load namespace app id env cluster name namespace name if namespace null throw new bad request exception namespace namespace name not exist in env env cluster cluster name long namespace id namespace get id string config text model get config text config text resolver resolver model get format config file format property property resolver file text resolver item change set change set resolver resolve namespace id config text item a p i find item app id env cluster name namespace name if change set be empty return change set set datum change last modify by user info holder get user get user id update item app id env cluster name namespace name change set tracer log event tracer event type modify namespace by text string format s s s s app id env cluster name namespace name tracer log event tracer event type modify namespace string format s s s s app id env cluster name namespace name public void update item string app id env env string cluster name string namespace name item change set change set item a p i update item by change set app id env cluster name namespace name change set public item d t o create item string app id env env string cluster name string namespace name item d t o item namespace d t o namespace namespace a p i load namespace app id env cluster name namespace name if namespace null throw new bad request exception namespace namespace name not exist in env env cluster cluster name item set namespace id namespace get id item d t o item d t o item a p i create item app id env cluster name namespace name item tracer log event tracer event type modify namespace string format s s s s app id env cluster name namespace name return item d t o public void update item string app id env env string cluster name string namespace name item d t o item item a p i update item app id env cluster name namespace name item get id item public void delete item env env long item id string user id item a p i delete item env item id user id public list item d t o find item string app id env env string cluster name string namespace name return item a p i find item app id env cluster name namespace name public list item d t o find delete item string app id env env string cluster name string namespace name return item a p i find delete item app id env cluster name namespace name public item d t o load item env env string app id string cluster name string namespace name string key return item a p i load item env app id cluster name namespace name key public item d t o load item by id env env long item id item d t o item item a p i load item by id env item id if item null throw new bad request exception item not find for item id item id return item public void sync item list namespace identifier compare namespace list item d t o source item list item diff item diff compare compare namespace source item for item diff item diff item diff namespace identifier namespace identifier item diff get namespace item change set change set item diff get diff change set set datum change last modify by user info holder get user get user id string app id namespace identifier get app id env env namespace identifier get env string cluster name namespace identifier get cluster name string namespace name namespace identifier get namespace name item a p i update item by change set app id env cluster name namespace name change set tracer log event tracer event type sync namespace string format s s s s app id env cluster name namespace name public void revoke item string app id env env string cluster name string namespace name namespace d t o namespace namespace a p i load namespace app id env cluster name namespace name if namespace null throw new bad request exception namespace namespace name not exist in env env cluster cluster name long namespace id namespace get id map string string release item d t os new hash map release d t o latest release release a p i load latest release app id env cluster name namespace name if latest release null release item d t os gson from json latest release get configuration gson type config list item d t o base item item a p i find item app id env cluster name namespace name map string item d t o old key map item bean util map by key key base item map string item d t o delete item d t os new hash map delete item for comment find delete item app id env cluster name namespace name for each item delete item d t os put item get key item item change set change set new item change set atomic integer line num new atomic integer release item d t os for each key value item d t o old item old key map item get key if old item null item d t o delete item dto delete item d t os compute if absent key k new item d t o change set add create item build normal item 0 l namespace id key value delete item dto get comment line num get else if old item get value equal value line num get old item get line num change set add update item build normal item old item get id namespace id key value old item get comment line num get old key map item remove key line num set line num get old key map item for each key value change set add delete item old key map item get key change set set datum change last modify by user info holder get user get user id update item app id env cluster name namespace name change set tracer log event tracer event type modify namespace by text string format s s s s app id env cluster name namespace name tracer log event tracer event type modify namespace string format s s s s app id env cluster name namespace name public list item diff compare list namespace identifier compare namespace list item d t o source item list item diff result new link list for namespace identifier namespace compare namespace item diff item diff new item diff namespace try item diff set diff parse change set namespace source item catch bad request exception e item diff set diff new item change set item diff set ext info namespace get namespace name namespace result add item diff return result private long get namespace id namespace identifier namespace identifier string app id namespace identifier get app id string cluster name namespace identifier get cluster name string namespace name namespace identifier get namespace name env env namespace identifier get env namespace d t o namespace d t o null try namespace d t o namespace a p i load namespace app id env cluster name namespace name catch http client error exception e if e get status code http status not find throw new bad request exception string format namespace not exist app id s env s cluster name s namespace name s app id env cluster name namespace name throw e return namespace d t o get id private item change set parse change set namespace identifier namespace list item d t o source item item change set change set new item change set list item d t o target item item a p i find item namespace get app id namespace get env namespace get cluster name namespace get namespace name long namespace id get namespace id namespace if collection util be empty target item all source item be add int line num for item d t o source item source item change set add create item build item namespace id line num source item else map string item d t o target item map bean util map by key key target item string key source value source comment item d t o target item null int max line num target item size append to last for item d t o source item source item key source item get key source value source item get value source comment source item get comment target item target item map get key if target item null add item change set add create item build item namespace id max line num source item else if be modify source value target item get value source comment target item get comment modify item target item set value source value target item set comment source comment change set add update item target item return change set private item d t o build item long namespace id int line num item d t o source item item d t o create item new item d t o bean util copy entity property source item create item create item set line num line num create item set namespace id namespace id return create item private item d t o build normal item long id long namespace id string key string value string comment int line num item d t o item new item d t o key value comment line num item set id id item set namespace id namespace id return item private boolean be modify string source value string target value string source comment string target comment if source value equal target value return true if source comment null return string util be empty target comment if target comment null return source comment equal target comment return false 
namespace branch service service public class namespace branch service private final item comparator item comparator private final user info holder user info holder private final namespace service namespace service private final item service item service private final admin service a p i namespace branch a p i namespace branch a p i private final release service release service public namespace branch service final item comparator item comparator final user info holder user info holder final namespace service namespace service final item service item service final admin service a p i namespace branch a p i namespace branch a p i final release service release service this item comparator item comparator this user info holder user info holder this namespace service namespace service this item service item service this namespace branch a p i namespace branch a p i this release service release service transactional public namespace d t o create branch string app id env env string parent cluster name string namespace name string operator user info holder get user get user id return create branch app id env parent cluster name namespace name operator transactional public namespace d t o create branch string app id env env string parent cluster name string namespace name string operator namespace d t o create branch namespace branch a p i create branch app id env parent cluster name namespace name operator tracer log event tracer event type create gray release string format s s s s app id env parent cluster name namespace name return create branch public gray release rule d t o find branch gray rule string app id env env string cluster name string namespace name string branch name return namespace branch a p i find branch gray rule app id env cluster name namespace name branch name public void update branch gray rule string app id env env string cluster name string namespace name string branch name gray release rule d t o rule string operator user info holder get user get user id update branch gray rule app id env cluster name namespace name branch name rule operator public void update branch gray rule string app id env env string cluster name string namespace name string branch name gray release rule d t o rule string operator rule set datum change create by operator rule set datum change last modify by operator namespace branch a p i update branch gray rule app id env cluster name namespace name branch name rule tracer log event tracer event type update gray release rule string format s s s s app id env cluster name namespace name public void delete branch string app id env env string cluster name string namespace name string branch name string operator user info holder get user get user id delete branch app id env cluster name namespace name branch name operator public void delete branch string app id env env string cluster name string namespace name string branch name string operator namespace branch a p i delete branch app id env cluster name namespace name branch name operator tracer log event tracer event type delete gray release string format s s s s app id env cluster name namespace name public release d t o merge string app id env env string cluster name string namespace name string branch name string title string comment boolean be emergency publish boolean delete branch string operator user info holder get user get user id return merge app id env cluster name namespace name branch name title comment be emergency publish delete branch operator public release d t o merge string app id env env string cluster name string namespace name string branch name string title string comment boolean be emergency publish boolean delete branch string operator item change set change set calculate branch change set app id env cluster name namespace name branch name operator release d t o merged result release service update and publish app id env cluster name namespace name title comment branch name be emergency publish delete branch change set tracer log event tracer event type merge gray release string format s s s s app id env cluster name namespace name return merge result private item change set calculate branch change set string app id env env string cluster name string namespace name string branch name string operator namespace b o parent namespace namespace service load namespace b o app id env cluster name namespace name if parent namespace null throw new bad request exception base namespace not exist if parent namespace get item modify cnt throw new bad request exception merge operation fail because master have modify item list item d t o master item item service find item app id env cluster name namespace name list item d t o branch item item service find item app id env branch name namespace name item change set change set item comparator compare ignore blank and comment item parent namespace get base info get id master item branch item change set set delete item collection empty list change set set datum change last modify by operator return change set public namespace d t o find branch base info string app id env env string cluster name string namespace name return namespace branch a p i find branch app id env cluster name namespace name public namespace b o find branch string app id env env string cluster name string namespace name namespace d t o namespace d t o find branch base info app id env cluster name namespace name if namespace d t o null return null return namespace service load namespace b o app id env namespace d t o get cluster name namespace name 
namespace lock service service public class namespace lock service private final admin service a p i namespace lock a p i namespace lock a p i private final portal config portal config public namespace lock service final admin service a p i namespace lock a p i namespace lock a p i final portal config portal config this namespace lock a p i namespace lock a p i this portal config portal config public namespace lock d t o get namespace lock string app id env env string cluster name string namespace name return namespace lock a p i get namespace lock owner app id env cluster name namespace name public lock info get namespace lock info string app id env env string cluster name string namespace name lock info lock info new lock info namespace lock d t o namespace lock d t o namespace lock a p i get namespace lock owner app id env cluster name namespace name string lock owner namespace lock d t o null namespace lock d t o get datum change create by lock info set lock owner lock owner lock info set emergency publish allow portal config be emergency publish allow env return lock info 
namespace service service public class namespace service private logger logger logger factory get logger namespace service class private gson gson new gson private final portal config portal config private final portal setting portal setting private final user info holder user info holder private final admin service a p i namespace a p i namespace a p i private final item service item service private final release service release service private final app namespace service app namespace service private final instance service instance service private final namespace branch service branch service private final role permission service role permission service public namespace service final portal config portal config final portal setting portal setting final user info holder user info holder final admin service a p i namespace a p i namespace a p i final item service item service final release service release service final app namespace service app namespace service final instance service instance service final lazy namespace branch service branch service final role permission service role permission service this portal config portal config this portal setting portal setting this user info holder user info holder this namespace a p i namespace a p i this item service item service this release service release service this app namespace service app namespace service this instance service instance service this branch service branch service this role permission service role permission service public namespace d t o create namespace env env namespace d t o namespace if string util be empty namespace get datum change create by namespace set datum change create by user info holder get user get user id namespace set datum change last modify by user info holder get user get user id namespace d t o create namespace namespace a p i create namespace env namespace tracer log event tracer event type create namespace string format s s s s namespace get app id env namespace get cluster name namespace get namespace name return create namespace transactional public void delete namespace string app id env env string cluster name string namespace name app namespace app namespace app namespace service find by app id and name app id namespace name check parent namespace have not instance if namespace have instance app id env cluster name namespace name throw new bad request exception can not delete namespace because namespace have active instance check child namespace have not instance namespace d t o child namespace branch service find branch base info app id env cluster name namespace name if child namespace null namespace have instance app id env child namespace get cluster name namespace name throw new bad request exception can not delete namespace because namespace s branch have active instance check public namespace have not associate namespace if app namespace null app namespace be public public app namespace have associate namespace namespace name env throw new bad request exception can not delete public namespace which have associate namespace string operator user info holder get user get user id namespace a p i delete namespace env app id cluster name namespace name operator public namespace d t o load namespace base info string app id env env string cluster name string namespace name namespace d t o namespace namespace a p i load namespace app id env cluster name namespace name if namespace null throw new bad request exception namespace not exist return namespace load cluster all namespace info with item public list namespace b o find namespace b os string app id env env string cluster name list namespace d t o namespace namespace a p i find namespace by cluster app id env cluster name if namespace null namespace size throw new bad request exception namespace not exist list namespace b o namespace b os new link list for namespace d t o namespace namespace namespace b o namespace b o try namespace b o transform namespace2 b o env namespace namespace b os add namespace b o catch exception e logger error parse namespace error app id env cluster name namespace app id env cluster name namespace get namespace name e throw e return namespace b os public list namespace d t o find namespace string app id env env string cluster name return namespace a p i find namespace by cluster app id env cluster name public list namespace d t o get public app namespace all namespace env env string public namespace name int page int size return namespace a p i get public app namespace all namespace env public namespace name page size public namespace b o load namespace b o string app id env env string cluster name string namespace name namespace d t o namespace namespace a p i load namespace app id env cluster name namespace name if namespace null throw new bad request exception namespace not exist return transform namespace2 b o env namespace public boolean namespace have instance string app id env env string cluster name string namespace name return instance service get instance count by namepsace app id env cluster name namespace name public boolean public app namespace have associate namespace string public namespace name env env return namespace a p i count public app namespace associate namespace env public namespace name public namespace b o find public namespace for associated namespace env env string app id string cluster name string namespace name namespace d t o namespace namespace a p i find public namespace for associated namespace env app id cluster name namespace name return transform namespace2 b o env namespace public map string map string boolean get namespace publish info string app id map string map string boolean result map new hash map set env envs portal config publish tip support env for env env envs if portal setting be env active env result put env to string namespace a p i get namespace publish info env app id return result private namespace b o transform namespace2 b o env env namespace d t o namespace namespace b o namespace b o new namespace b o namespace b o set base info namespace string app id namespace get app id string cluster name namespace get cluster name string namespace name namespace get namespace name fill app namespace property namespace b o list item b o item b os new link list namespace b o set item item b os latest release release d t o latest release map string string release item new hash map map string item d t o delete item d t os new hash map latest release release service load latest release app id env cluster name namespace name if latest release null release item gson from json latest release get configuration gson type config not release config item list item d t o item item service find item app id env cluster name namespace name int modify item cnt for item d t o item d t o item item b o item b o transform item2 b o item d t o release item if item b o be modify modify item cnt item b os add item b o delete item item service find delete item app id env cluster name namespace name for each item delete item d t os put item get key item list item b o delete item parse delete item item release item delete item d t os item b os add all delete item modify item cnt delete item size namespace b o set item modify cnt modify item cnt return namespace b o private void fill app namespace property namespace b o namespace namespace d t o namespace d t o namespace get base info app id app namespace app namespace app namespace service find by app id and name namespace d t o get app id namespace d t o get namespace name app namespace if app namespace null app namespace app namespace service find public app namespace namespace d t o get namespace name string format boolean be public if app namespace null dirty datum format config file format property get value be public true set to true because public namespace allow to delete by user else format app namespace get format be public app namespace be public namespace set parent app id app namespace get app id namespace set comment app namespace get comment namespace set format format namespace set public be public private list item b o parse delete item list item d t o new item map string string release item map string item d t o delete item d t os map string item d t o new item map bean util map by key key new item list item b o delete item new link list for map entry string string entry release item entry set string key entry get key if new item map get key null item b o delete item new item b o delete item set delete true item d t o delete item dto delete item d t os compute if absent key k new item d t o delete item dto set key key string old value entry get value delete item set item delete item dto delete item dto set value old value delete item set modify true delete item set old value old value delete item set new value delete item add delete item return delete item private item b o transform item2 b o item d t o item d t o map string string release item string key item d t o get key item b o item b o new item b o item b o set item item d t o string new value item d t o get value string old value release item get key new item or modify if string util be empty key old value null new value equal old value item b o set modify true item b o set old value old value null old value item b o set new value new value return item b o public void assign namespace role to operator string app id string namespace name string operator default assign modify release namespace role to namespace creator role permission service assign role to user role util build namespace role name app id namespace name role type modify namespace set new hash set operator operator role permission service assign role to user role util build namespace role name app id namespace name role type release namespace set new hash set operator operator 
release history service service public class release history service private gson gson new gson private final admin service a p i release history a p i release history a p i private final release service release service public release history service final admin service a p i release history a p i release history a p i final release service release service this release history a p i release history a p i this release service release service public release history b o find latest by release id and operation env env long release id int operation page d t o release history d t o page d t o release history a p i find by release id and operation env release id operation if page d t o null page d t o have content release history d t o release history page d t o get content get release d t o release release service find release by id env release history get release id return transform release history d t o2 b o release history release return null public release history b o find latest by previous release id and operation env env long previous release id int operation page d t o release history d t o page d t o release history a p i find by previous release id and operation env previous release id operation if page d t o null page d t o have content release history d t o release history page d t o get content get release d t o release release service find release by id env release history get release id return transform release history d t o2 b o release history release return null public list release history b o find namespace release history string app id env env string cluster name string namespace name int page int size page d t o release history d t o result release history a p i find release history by namespace app id env cluster name namespace name page size if result null result have content return collection empty list list release history d t o content result get content set long release id new hash set for release history d t o release history d t o content long release id release history d t o get release id if release id release id add release id list release d t o release release service find release by id env release id return transform release history d t o2 b o content release private list release history b o transform release history d t o2 b o list release history d t o source list release d t o release map long release d t o release map bean util map by key id release list release history b o bos new array list source size for release history d t o dto source release d t o release release map get dto get release id bos add transform release history d t o2 b o dto release return bos private release history b o transform release history d t o2 b o release history d t o dto release d t o release release history b o bo new release history b o bo set id dto get id bo set app id dto get app id bo set cluster name dto get cluster name bo set namespace name dto get namespace name bo set branch name dto get branch name bo set release id dto get release id bo set previous release id dto get previous release id bo set operator dto get datum change create by bo set operation dto get operation date release time dto get datum change last modify time bo set release time release time bo set release time format relative date format format release time bo set operation context dto get operation context set release info set release info to release history b o bo release return bo private void set release info to release history b o release history b o bo release d t o release if release null bo set release title release get name bo set release comment release get comment map string string configuration gson from json release get configuration gson type config list entity pair string item new array list configuration size for map entry string string entry configuration entry set entity pair string entity pair new entity pair entry get key entry get value item add entity pair bo set configuration item else bo set release title no release information bo set configuration null 
release service service public class release service private static final gson gson new gson private final user info holder user info holder private final admin service a p i release a p i release a p i public release service final user info holder user info holder final admin service a p i release a p i release a p i this user info holder user info holder this release a p i release a p i public release d t o publish namespace release model model env env model get env boolean be emergency publish model be emergency publish string app id model get app id string cluster name model get cluster name string namespace name model get namespace name string release by string util be empty model get release by user info holder get user get user id model get release by release d t o release d t o release a p i create release app id env cluster name namespace name model get release title model get release comment release by be emergency publish tracer log event tracer event type release namespace string format s s s s app id env cluster name namespace name return release d t o gray deletion release public release d t o publish namespace gray del release model model string release by env env model get env boolean be emergency publish model be emergency publish string app id model get app id string cluster name model get cluster name string namespace name model get namespace name release d t o release d t o release a p i create gray deletion release app id env cluster name namespace name model get release title model get release comment release by be emergency publish model get gray del key tracer log event tracer event type release namespace string format s s s s app id env cluster name namespace name return release d t o public release d t o update and publish string app id env env string cluster name string namespace name string release title string release comment string branch name boolean be emergency publish boolean delete branch item change set change set return release a p i update and publish app id env cluster name namespace name release title release comment branch name be emergency publish delete branch change set public list release b o find all release string app id env env string cluster name string namespace name int page int size list release d t o release d t os release a p i find all release app id env cluster name namespace name page size if collection util be empty release d t os return collection empty list list release b o release new link list for release d t o release d t o release d t os release b o release new release b o release set base info release d t o set k v entity kv entity new link hash set map string string configuration gson from json release d t o get configuration gson type config set map entry string string entry configuration entry set for map entry string string entry entry kv entity add new k v entity entry get key entry get value release set item kv entity release d t o set configuration release add release return release public list release d t o find active release string app id env env string cluster name string namespace name int page int size return release a p i find active release app id env cluster name namespace name page size public release d t o find release by id env env long release id set long release id new hash set release id add release id list release d t o release find release by id env release id if collection util be empty release return null return release get public list release d t o find release by id env env set long release id return release a p i find release by id env release id public release d t o load latest release string app id env env string cluster name string namespace name return release a p i load latest release app id env cluster name namespace name public void rollback env env long release id string operator release a p i rollback env release id operator public release compare result compare env env long base release id long to compare release id release d t o base release null release d t o to compare release null if base release id base release release a p i load release env base release id if to compare release id to compare release release a p i load release env to compare release id return compare base release to compare release public release compare result compare release d t o base release release d t o to compare release map string string base release configuration base release null new hash map gson from json base release get configuration gson type config map string string to compare release configuration to compare release null new hash map gson from json to compare release get configuration gson type config release compare result compare result new release compare result add and modify in first release for map entry string string entry base release configuration entry set string key entry get key string first value entry get value string second value to compare release configuration get key add if second value null compare result add entity pair change type delete new k v entity key first value new k v entity key null else if object equal first value second value compare result add entity pair change type modify new k v entity key first value new k v entity key second value delete in first release for map entry string string entry to compare release configuration entry set string key entry get key string value entry get value if base release configuration get key null compare result add entity pair change type add new k v entity key new k v entity key value return compare result 
system role manager service service public class system role manager service public static final logger logger logger factory get logger system role manager service class public static final string system permission target id system role public static final string create application role name role util build create application role name permission type create application system permission target id public static final string create application limit switch key role create application enable public static final string manage app master limit switch key role manage app master enable private final role permission service role permission service private final portal config portal config private final role initialization service role initialization service autowire public system role manager service final role permission service role permission service final portal config portal config final role initialization service role initialization service this role permission service role permission service this portal config portal config this role initialization service role initialization service post construct private void init role initialization service init create app role private boolean be create application permission enable return portal config be create application permission enable public boolean be manage app master permission enable return portal config be manage app master permission enable public boolean have create application permission string user id if be create application permission enable return true return role permission service user have permission user id permission type create application system permission target id public boolean have manage app master permission string user id string app id if be manage app master permission enable return true return role permission service user have permission user id permission type manage app master app id 
config servlet inner service public class config servlet inner autowired private long polling service long polling service autowire private persist service persist service private static final int try get lock time private static final int start long polling version num public string do polling config http servlet request request http servlet response response map string string client md5 map int probe request size throw i o exception long polling if long polling service be support long polling request long polling service add long polling client request response client md5 map probe request size return http servlet response sc ok compatible with short polling logic list string change group m d5 util compare md5 request response client md5 map compatible with short polling result string old result m d5 util compare md5 old result change group string new result m d5 util compare md5 result string change group string version request get header constant client version header if version null version 2.0 int version num protocol get version number version befor 2.0 version return value be put into header if version num start long polling version num response add header constant probe modify response old result response add header constant probe modify response new new result else request set attribute content new result logger auth info new content new result disable cache response set header pragma no cache response set date header expire response set header cache control no cache no store response set status http servlet response sc ok return http servlet response sc ok execute to get config api public string do get config http servlet request request http servlet response response string datum id string group string tenant string tag string client ip throw i o exception servlet exception final string group key group key2 get key datum id group tenant string auto tag request get header vipserver tag string request ip app request util get app name request int lock result try config read lock group key final string request ip request util get remote ip request boolean be beta false if lock result file input stream fis null try string md5 constant null long last modify 0 l cache item cache item config cache service get content cache group key if cache item null if cache item be beta if cache item get ips4 beta contain client ip be beta true string config type cache item get type response set header config type null config type config type text file file null config info base config info base null print writer out null if be beta md5 cache item get md54 beta last modify cache item get last modify ts4 beta if property util be direct read config info base persist service find config info4 beta datum id group tenant else file disk util target beta file datum id group tenant response set header be beta true else if string util be blank tag if be use tag cache item auto tag if cache item null if cache item tag md5 null md5 cache item tag md5 get auto tag if cache item tag last modify ts null last modify cache item tag last modify t get auto tag if property util be direct read config info base persist service find config info4 tag datum id group tenant auto tag else file disk util target tag file datum id group tenant auto tag response set header vipserver tag u r l encoder encode auto tag standard charset utf display name else md5 cache item get md5 last modify cache item get last modify t if property util be direct read config info base persist service find config info datum id group tenant else file disk util target file datum id group tenant if config info base null file not exist file fixme cache item no longer exist it be impossible to simply calculate the push delay here simply record it as config trace service log pull event datum id group tenant request ip app config trace service pull event notfound request ip pull log info client get client ip no datum new object client ip group key response set status http servlet response sc not find response get writer println config datum not exist return http servlet response sc not find else if cache item null if cache item tag md5 null md5 cache item tag md5 get tag if cache item tag last modify ts null long lm cache item tag last modify t get tag if lm null last modify lm if property util be direct read config info base persist service find config info4 tag datum id group tenant tag else file disk util target tag file datum id group tenant tag if config info base null file not exist file fixme cache item no longer exist it be impossible to simply calculate the push delay here simply record it as config trace service log pull event datum id group tenant request ip app config trace service pull event notfound request ip pull log info client get client ip no datum new object client ip group key response set status http servlet response sc not find response get writer println config datum not exist return http servlet response sc not find response set header constant content m d5 md5 disable cache response set header pragma no cache response set date header expire response set header cache control no cache no store if property util be direct read response set date header last modify last modify else fis new file input stream file response set date header last modify file last modify if property util be direct read out response get writer out print config info base get content out flush out close else fi get channel transfer to 0 l fi get channel size channel new channel response get output stream log util pull check log warn group key request ip md5 time util get current time str final long delay system current time millis last modify todo distinguish pull get push get otherwise delay can not be use as the basis of push delay directly because the delay value of active get request be very large config trace service log pull event datum id group tenant request ip app last modify config trace service pull event ok delay request ip finally release config read lock group key if null fis fis close else if lock result fixme cache item no longer exist it be impossible to simply calculate the push delay here simply record it as config trace service log pull event datum id group tenant request ip app config trace service pull event notfound request ip response set status http servlet response sc not find response get writer println config datum not exist return http servlet response sc not find else pull log info client get client ip get datum during dump client ip group key response set status http servlet response sc conflict response get writer println request file be be modify please try later return http servlet response sc conflict return http servlet response sc ok private static void release config read lock string group key config cache service release read lock group key private static int try config read lock string group key lock fail by default int lock result try to get lock time max value for int i try get lock time i i lock result config cache service try read lock group key the datum be non existent if lock result break success if lock result break retry if i try thread sleep catch exception e log util pull check log error a exception occur while thread sleep e return lock result private static boolean be use tag cache item cache item string tag if cache item null cache item tag md5 null cache item tag md5 size return string util be not blank tag cache item tag md5 contain key tag return false private static boolean file not exist file file return file null file exist 
memory monitor service public class memory monitor autowire public memory monitor async notify service notify single service config executor schedule config task new print memory task delay seconds delay seconds time unit seconds config executor schedule config task new print get config respone task delay seconds delay seconds time unit seconds config executor schedule config task new notify task queue monitor task notify single service delay seconds delay seconds time unit seconds private static final long delay seconds schedule cron 0 0 public void clear metric monitor get config monitor set metric monitor get publish monitor set 
aggr whitelist service public class aggr whitelist public static final string aggrid metadata com alibaba naco metadata aggr i d judge whether specify datum id include aggregation white list param datum id data id string value return whether to match aggregation rule public static boolean be aggr datum id string data id if null datum id throw new illegal argument exception datum id be null for pattern pattern aggr dataid whitelist get if pattern matcher datum id match return true return false load aggregation white list base content parameter value param content content string value public static void load string content if string util be blank content fatal log error aggr datum id whitelist be blank return default log warn aggr datum id content try list string line io util read line new string reader content compile line catch exception ioe default log error fail to load aggr whitelist ioe to string ioe static void compile list string whitelist list pattern list new array list pattern whitelist size for string line whitelist if string util be blank line string regex regex parser regex format line trim list add pattern compile regex aggr dataid whitelist set list public static list pattern get white list return aggr dataid whitelist get static final atomic reference list pattern aggr dataid whitelist new atomic reference list pattern new array list pattern 
capacity service service public class capacity service private static final logger logger logger factory get logger capacity service class private static final integer zero private static final int init page size autowire private group capacity persist service group capacity persist service autowired private tenant capacity persist service tenant capacity persist service autowired private persist service persist service init post construct suppress warning pmd thread pool creation rule public void init all server have job that modify usage idempotent config executor schedule correct usage task new runnable override public void run logger info capacity management start correct usage stopwatch stopwatch stopwatch create start correct usage logger info capacity management end correct usage cost s stopwatch elapse time unit seconds property util get correct usage delay property util get correct usage delay time unit seconds public void correct usage correct group usage correct tenant usage correct the usage of group capacity private void correct group usage long last id int page size while true list group capacity group capacity list group capacity persist service get capacity list4 correct usage last id page size if group capacity list be empty break last id group capacity list get group capacity list size get id for group capacity group capacity group capacity list string group group capacity get group group capacity persist service correct usage group time util get current time try thread sleep catch interrupt exception e ignore public void correct group usage string group group capacity persist service correct usage group time util get current time public void correct tenant usage string tenant tenant capacity persist service correct usage tenant time util get current time correct the usage of group capacity private void correct tenant usage long last id int page size while true list tenant capacity tenant capacity list tenant capacity persist service get capacity list4 correct usage last id page size if tenant capacity list be empty break last id tenant capacity list get tenant capacity list size get id try thread sleep catch interrupt exception ignore for tenant capacity tenant capacity tenant capacity list string tenant tenant capacity get tenant tenant capacity persist service correct usage tenant time util get current time public void init all capacity init all capacity false init all capacity true private void init all capacity boolean be tenant int page while true list string list if be tenant list persist service get tenant id list page init page size else list persist service get group id list page init page size for string target id list if be tenant insert tenant capacity target id auto expansion null target id else insert group capacity target id auto expansion target id null if list size init page size break try thread sleep catch interrupt exception ignore page to cluster if the capacity information do not exist initialize the capacity information update capacity usage plus or minus one param counter mode increase or decrease mode param ignore quota limit ignore quota limit flag return public boolean insert and update cluster usage counter mode counter mode boolean ignore quota limit capacity capacity group capacity persist service get cluster capacity if capacity null insert group capacity group capacity persist service cluster return update group usage counter mode group capacity persist service cluster property util get default cluster quota ignore quota limit public boolean update cluster usage counter mode counter mode return update group usage counter mode group capacity persist service cluster property util get default cluster quota false it be use for count when the limit check function of capacity management be turn off if the capacity information do not exist initialize the capacity information update capacity usage plus or minus one param counter mode increase or decrease mode param group tenant string value param ignore quota limit ignore quota limit flag return operate successfully or not public boolean insert and update group usage counter mode counter mode string group boolean ignore quota limit group capacity group capacity get group capacity group if group capacity null init group capacity group null null null null return update group usage counter mode group property util get default group quota ignore quota limit public boolean update group usage counter mode counter mode string group return update group usage counter mode group property util get default group quota false private boolean update group usage counter mode counter mode string group int default quota boolean ignore quota limit final timestamp now time util get current time group capacity group capacity new group capacity group capacity set group group group capacity set quota default quota group capacity set gmt modify now if counter mode increment counter mode if ignore quota limit return group capacity persist service increment usage group capacity first update the quota accord to the default value in most case it be the default value the quota field in the default value table be return group capacity persist service increment usage with default quota limit group capacity group capacity persist service increment usage with quota limit group capacity return group capacity persist service decrement usage group capacity public group capacity get group capacity string group return group capacity persist service get group capacity group initialize the capacity information of the group if the quota be reach the capacity will be automatically expand to reduce the operation and maintenance cost param group group string value return init result public boolean init group capacity string group return init group capacity group null null null null initialize the capacity information of the group if the quota be reach the capacity will be automatically expand to reduce the operation and maintenance cost param group group string value param quota quota int value param max size max size int value param max aggr count max aggr count int value param max aggr size max aggr size int value return init result private boolean init group capacity string group integer quota integer max size integer max aggr count integer max aggr size boolean insert success insert group capacity group quota max size max aggr count max aggr size if quota null return insert success auto expansion group null return insert success expand capacity automatically param group group string value param tenant tenant string value private void auto expansion string group string tenant capacity capacity get capacity group tenant int default quota get default quota tenant null integer usage capacity get usage if usage default quota return initialize the capacity information of the group if the quota be reach the capacity will be automatically expand to reduce the operation and maintenance cost int initial expansion percent property util get initial expansion percent if initial expansion percent int final quota int usage default quota 1.0 initial expansion percent if tenant null tenant capacity persist service update quota tenant final quota log util default log warn capacity management tenant usage default quota final quota else group capacity persist service update quota group final quota log util default log warn capacity management group group usage default quota final quota private int get default quota boolean be tenant if be tenant return property util get default tenant quota return property util get default group quota public capacity get capacity string group string tenant if tenant null return get tenant capacity tenant return get group capacity group public capacity get capacity with default string group string tenant capacity capacity boolean be tenant string util be not blank tenant if be tenant capacity get tenant capacity tenant else capacity get group capacity group if capacity null return null integer quota capacity get quota if quota if be tenant capacity set quota property util get default tenant quota else if group capacity persist service cluster equal group capacity set quota property util get default cluster quota else capacity set quota property util get default group quota integer max size capacity get max size if max size capacity set max size property util get default max size integer max aggr count capacity get max aggr count if max aggr count capacity set max aggr count property util get default max aggr count integer max aggr size capacity get max aggr size if max aggr size capacity set max aggr size property util get default max aggr size return capacity init capacity param group group string value param tenant tenant string value return init result public boolean init capacity string group string tenant if string util be not blank tenant return init tenant capacity tenant if group capacity persist service cluster equal group return insert group capacity group capacity persist service cluster group can expand capacity automatically return init group capacity group private boolean insert group capacity string group return insert group capacity group null null null null private boolean insert group capacity string group integer quota integer max size integer max aggr count integer max aggr size try final timestamp now time util get current time group capacity group capacity new group capacity group capacity set group group when add a new quota quota mean that the quota be the default value in order to update the default quota only the naco configuration need to be modify and most of the datum in the table need not be update group capacity set quota quota null zero quota when add new datum maxsize mean that the size be the default value in order to update the default size you only need to modify the naco configuration without update most of the datum in the table group capacity set max size max size null zero max size group capacity set max aggr count max aggr count null zero max aggr count group capacity set max aggr size max aggr size null zero max aggr size group capacity set gmt create now group capacity set gmt modify now return group capacity persist service insert group capacity group capacity catch duplicate key exception e insert ignore log util default log warn group message group e get message return false it be use for count when the limit check function of capacity management be turn off if the capacity information do not exist initialize the capacity information update capacity usage plus or minus one param counter mode increase or decrease mode param tenant tenant string value param ignore quota limit ignore quota limit flag return operate successfully or not public boolean insert and update tenant usage counter mode counter mode string tenant boolean ignore quota limit tenant capacity tenant capacity get tenant capacity tenant if tenant capacity null init capacity information init tenant capacity tenant return update tenant usage counter mode tenant ignore quota limit private boolean update tenant usage counter mode counter mode string tenant boolean ignore quota limit final timestamp now time util get current time tenant capacity tenant capacity new tenant capacity tenant capacity set tenant tenant tenant capacity set quota property util get default tenant quota tenant capacity set gmt modify now if counter mode increment counter mode if ignore quota limit return tenant capacity persist service increment usage tenant capacity first update the quota accord to the default value in most case it be the default value the quota field in the default value table be return tenant capacity persist service increment usage with default quota limit tenant capacity tenant capacity persist service increment usage with quota limit tenant capacity return tenant capacity persist service decrement usage tenant capacity public boolean update tenant usage counter mode counter mode string tenant return update tenant usage counter mode tenant false initialize the capacity information of the tenant if the quota be reach the capacity will be automatically expand to reduce the operation and maintenance cos param tenant tenant string value return init result public boolean init tenant capacity string tenant return init tenant capacity tenant null null null null initialize the capacity information of the tenant if the quota be reach the capacity will be automatically expand to reduce the operation and maintenance cost param tenant tenant string value param quota quota int value param max size max size int value param max aggr count max aggr count int value param max aggr size max aggr size int value return public boolean init tenant capacity string tenant integer quota integer max size integer max aggr count integer max aggr size boolean insert success insert tenant capacity tenant quota max size max aggr count max aggr size if quota null return insert success auto expansion null tenant return insert success private boolean insert tenant capacity string tenant return insert tenant capacity tenant null null null null private boolean insert tenant capacity string tenant integer quota integer max size integer max aggr count integer max aggr size try final timestamp now time util get current time tenant capacity tenant capacity new tenant capacity tenant capacity set tenant tenant when add a new quota quota mean that the quota be the default value in order to update the default quota only the naco configuration need to be modify and most of the datum in the table need not be update tenant capacity set quota quota null zero quota when add new datum maxsize mean that the size be the default value in order to update the default size you only need to modify the naco configuration without update most of the datum in the table tenant capacity set max size max size null zero max size tenant capacity set max aggr count max aggr count null zero max aggr count tenant capacity set max aggr size max aggr size null zero max aggr size tenant capacity set gmt create now tenant capacity set gmt modify now return tenant capacity persist service insert tenant capacity tenant capacity catch duplicate key exception e insert ignore log util default log warn tenant message tenant e get message return false public tenant capacity get tenant capacity string tenant return tenant capacity persist service get tenant capacity tenant support for api interface tenant initialize if the record do not exist and update the capacity quota or content size directly if it exist param group group string value param tenant tenant string value param quota quota int value param max size max size int value param max aggr count max aggr count int value param max aggr size max aggr size int value return operate successfully or not public boolean insert or update capacity string group string tenant integer quota integer max size integer max aggr count integer max aggr size if string util be not blank tenant capacity capacity tenant capacity persist service get tenant capacity tenant if capacity null return init tenant capacity tenant quota max size max aggr count max aggr size return tenant capacity persist service update tenant capacity tenant quota max size max aggr count max aggr size capacity capacity group capacity persist service get group capacity group if capacity null return init group capacity group quota max size max aggr count max aggr size return group capacity persist service update group capacity group quota max size max aggr count max aggr size 
group capacity persist service service public class group capacity persist service static final string cluster private static final group capacity row mapper group capacity row mapper new group capacity row mapper private jdbc template jdbc template private datum source service datum source service post construct public void init this data source service dynamic datum source get instance get datum source this jdbc template datum source service get jdbc template private static final class group capacity row mapper implement row mapper group capacity override public group capacity map row result set rs int row num throw s q l exception group capacity group capacity new group capacity group capacity set id rs get long id group capacity set quota rs get int quota group capacity set usage rs get int usage group capacity set max size rs get int max size group capacity set max aggr count rs get int max aggr count group capacity set max aggr size rs get int max aggr size group capacity set group rs get string group id return group capacity public group capacity get group capacity string group id string sql select id quota usage max size max aggr count max aggr size group id from group capacity where group id list group capacity list jdbc template query sql new object group id group capacity row mapper if list be empty return null return list get public capacity get cluster capacity return get group capacity cluster insert group capacity into db param capacity capacity object instance return operate result public boolean insert group capacity final group capacity capacity string sql if cluster equal capacity get group sql insert into group capacity group id quota usage max size max aggr count max aggr size gmt create gmt modify select count from config info else note add tenant id condition sql insert into group capacity group id quota usage max size max aggr count max aggr size gmt create gmt modify select count from config info where group id and tenant id return insert group capacity sql capacity private boolean insert group capacity final string sql final group capacity capacity try generate key holder generate key holder new generate key holder prepared statement creator prepared statement creator new prepared statement creator override public prepared statement create prepared statement connection connection throw s q l exception prepared statement ps connection prepare statement sql statement return generate key string group capacity get group ps set string group ps set int capacity get quota ps set int capacity get max size ps set int capacity get max aggr count ps set int capacity get max aggr size ps set timestamp capacity get gmt create ps set timestamp capacity get gmt modify if cluster equal group ps set string group return ps jdbc template update prepared statement creator generate key holder return generate key holder get key null catch can not get jdbc connection exception e fatal log error db error e throw e public int get cluster usage capacity cluster capacity get cluster capacity if cluster capacity null return cluster capacity get usage string sql select count from config info integer result jdbc template query for object sql integer class if result null throw new illegal argument exception config info count error return result int value increment usage with default quota limit param group capacity group capacity object instance return operate result public boolean increment usage with default quota limit group capacity group capacity string sql update group capacity set usage usage gmt modify where group id and usage and quota try int affect row jdbc template update sql group capacity get gmt modify group capacity get group group capacity get quota return affect row catch can not get jdbc connection exception e fatal log error db error e throw e increment usage with quota limit param group capacity group capacity object instance return operate result public boolean increment usage with quota limit group capacity group capacity string sql update group capacity set usage usage gmt modify where group id and usage quota and quota try return jdbc template update sql group capacity get gmt modify group capacity get group catch can not get jdbc connection exception e fatal log error db error e throw e increment usage param group capacity group capacity object instance return operate result public boolean increment usage group capacity group capacity string sql update group capacity set usage usage gmt modify where group id try int affect row jdbc template update sql group capacity get gmt modify group capacity get group return affect row catch can not get jdbc connection exception e fatal log error db error e throw e decrement usage param group capacity group capacity object instance return operate result public boolean decrement usage group capacity group capacity string sql update group capacity set usage usage gmt modify where group id and usage try return jdbc template update sql group capacity get gmt modify group capacity get group catch can not get jdbc connection exception e fatal log error db error e throw e update group capacity param group group string value param quota quota int value param max size max size int value param max aggr count max aggr count int value param max aggr size max aggr size int value return public boolean update group capacity string group integer quota integer max size integer max aggr count integer max aggr size list object arg list list new array list string builder sql new string builder update group capacity set if quota null sql append quota arg list add quota if max size null sql append max size arg list add max size if max aggr count null sql append max aggr count arg list add max aggr count if max aggr size null sql append max aggr size arg list add max aggr size sql append gmt modify arg list add time util get current time sql append where group id arg list add group try return jdbc template update sql to string arg list to array catch can not get jdbc connection exception e fatal log error db error e throw e public boolean update quota string group integer quota return update group capacity group quota null null null public boolean update max size string group integer max size return update group capacity group null max size null null correct usage param group group string value param gmt modify gmt modify return operate result public boolean correct usage string group timestamp gmt modify string sql if cluster equal group sql update group capacity set usage select count from config info gmt modify where group id try return jdbc template update sql gmt modify group catch can not get jdbc connection exception e fatal log error db error e throw e else note add tenant id condition sql update group capacity set usage select count from config info where group id and tenant id gmt modify where group id try return jdbc template update sql group gmt modify group catch can not get jdbc connection exception e fatal log error db error e throw e get group capacity list noly have id and group id value param last id last id long value param page size page size long value return group capacity list public list group capacity get capacity list4 correct usage long last id int page size string sql select id group id from group capacity where id limit if property util be embed storage sql select id group id from group capacity where id offset row fetch next row only try return jdbc template query sql new object last id page size new row mapper group capacity override public group capacity map row result set rs int row num throw s q l exception group capacity group capacity new group capacity group capacity set id rs get long id group capacity set group rs get string group id return group capacity catch can not get jdbc connection exception e fatal log error db error e throw e delete group capacity param group group string value return operate result public boolean delete group capacity final string group try prepared statement creator prepared statement creator new prepared statement creator override public prepared statement create prepared statement connection connection throw s q l exception prepared statement ps connection prepare statement delete from group capacity where group id ps set string group return ps return jdbc template update prepared statement creator catch can not get jdbc connection exception e fatal log error db error e throw e 
tenant capacity persist service service public class tenant capacity persist service private static final tenant capacity row mapper tenant capacity row mapper new tenant capacity row mapper private jdbc template jdbc template private datum source service datum source service post construct public void init this data source service dynamic datum source get instance get datum source this jdbc template datum source service get jdbc template private static final class tenant capacity row mapper implement row mapper tenant capacity override public tenant capacity map row result set rs int row num throw s q l exception tenant capacity tenant capacity new tenant capacity tenant capacity set id rs get long id tenant capacity set quota rs get int quota tenant capacity set usage rs get int usage tenant capacity set max size rs get int max size tenant capacity set max aggr count rs get int max aggr count tenant capacity set max aggr size rs get int max aggr size tenant capacity set tenant rs get string tenant id return tenant capacity public tenant capacity get tenant capacity string tenant id string sql select id quota usage max size max aggr count max aggr size tenant id from tenant capacity where tenant id list tenant capacity list jdbc template query sql new object tenant id tenant capacity row mapper if list be empty return null return list get insert tenant capacity param tenant capacity tenant capacity object instance return operate result public boolean insert tenant capacity final tenant capacity tenant capacity final string sql insert into tenant capacity tenant id quota usage max size max aggr count max aggr size gmt create gmt modify select count from config info where tenant id try generate key holder generate key holder new generate key holder prepared statement creator prepared statement creator new prepared statement creator override public prepared statement create prepared statement connection connection throw s q l exception prepared statement ps connection prepare statement sql statement return generate key string tenant tenant capacity get tenant ps set string tenant ps set int tenant capacity get quota ps set int tenant capacity get max size ps set int tenant capacity get max aggr count ps set int tenant capacity get max aggr size ps set timestamp tenant capacity get gmt create ps set timestamp tenant capacity get gmt modify ps set string tenant capacity get tenant return ps jdbc template update prepared statement creator generate key holder return generate key holder get key null catch can not get jdbc connection exception e fatal log error db error e throw e increment usage with default quota limit param tenant capacity tenant capacity object instance return operate result public boolean increment usage with default quota limit tenant capacity tenant capacity string sql update tenant capacity set usage usage gmt modify where tenant id and usage and quota try int affect row jdbc template update sql tenant capacity get gmt modify tenant capacity get tenant tenant capacity get quota return affect row catch can not get jdbc connection exception e fatal log error db error e throw e increment usage with quota limit param tenant capacity tenant capacity object instance return operate result public boolean increment usage with quota limit tenant capacity tenant capacity string sql update tenant capacity set usage usage gmt modify where tenant id and usage quota and quota try return jdbc template update sql tenant capacity get gmt modify tenant capacity get tenant catch can not get jdbc connection exception e fatal log error db error e throw e increment usage param tenant capacity tenant capacity object instance return operate result public boolean increment usage tenant capacity tenant capacity string sql update tenant capacity set usage usage gmt modify where tenant id try int affect row jdbc template update sql tenant capacity get gmt modify tenant capacity get tenant return affect row catch can not get jdbc connection exception e fatal log error db error e throw e decrement usage param tenant capacity tenant capacity object instance return operate result public boolean decrement usage tenant capacity tenant capacity string sql update tenant capacity set usage usage gmt modify where tenant id and usage try return jdbc template update sql tenant capacity get gmt modify tenant capacity get tenant catch can not get jdbc connection exception e fatal log error db error e throw e update tenant capacity param tenant tenant string value param quota quota int value param max size max size int value param max aggr count max aggr count int value param max aggr size max aggr size int value return operate result public boolean update tenant capacity string tenant integer quota integer max size integer max aggr count integer max aggr size list object arg list list new array list string builder sql new string builder update tenant capacity set if quota null sql append quota arg list add quota if max size null sql append max size arg list add max size if max aggr count null sql append max aggr count arg list add max aggr count if max aggr size null sql append max aggr size arg list add max aggr size sql append gmt modify arg list add time util get current time sql append where tenant id arg list add tenant try return jdbc template update sql to string arg list to array catch can not get jdbc connection exception e fatal log error db error e throw e public boolean update quota string tenant integer quota return update tenant capacity tenant quota null null null correct usage param tenant tenant param gmt modify gmt modify return operate result public boolean correct usage string tenant timestamp gmt modify string sql update tenant capacity set usage select count from config info where tenant id gmt modify where tenant id try return jdbc template update sql tenant gmt modify tenant catch can not get jdbc connection exception e fatal log error db error e throw e get tenant capacity list only include id and tenant id value param last id last id long value param page size page size int value return tenant capacity list public list tenant capacity get capacity list4 correct usage long last id int page size string sql select id tenant id from tenant capacity where id limit if property util be embed storage sql select id tenant id from tenant capacity where id offset row fetch next row only try return jdbc template query sql new object last id page size new row mapper tenant capacity override public tenant capacity map row result set rs int row num throw s q l exception tenant capacity tenant capacity new tenant capacity tenant capacity set id rs get long id tenant capacity set tenant rs get string tenant id return tenant capacity catch can not get jdbc connection exception e fatal log error db error e throw e delete tenant capacity param tenant tenant string value return operate result public boolean delete tenant capacity final string tenant try prepared statement creator prepared statement creator new prepared statement creator override public prepared statement create prepared statement connection connection throw s q l exception prepared statement ps connection prepare statement delete from tenant capacity where tenant id ps set string tenant return ps return jdbc template update prepared statement creator catch can not get jdbc connection exception e fatal log error db error e throw e 
client ip white list service public class client ip white list judge whether specify client ip include in the whitelist param client ip client ip string value return judge result public static boolean be legal client string client ip if string util be blank client ip throw new illegal argument exception client ip be empty client ip client ip trim if client ip whitelist get contain client ip return true return false whether start client ip whitelist return true enable false disable public static boolean be enable whitelist return be open load white list base content parameter value param content content string value public static void load string content if string util be blank content default log warn client ip white list be blank close whitelist be open false client ip whitelist get clear return default log warn client ip white list content try acl info acl acl info j s o n util deserialize object content acl info class be open acl get be open client ip whitelist set acl get ip catch exception ioe default log error fail to load client ip white list ioe to string ioe public static final string client ip whitelist metadata com alibaba naco metadata client ip whitelist private static final atomic reference list string client ip whitelist new atomic reference list string new array list string private static boolean be open false 
config sub service service public class config sub service private server member manager member manager autowire suppress warning pmd thread pool creation rule public config sub service server member manager member manager this member manager member manager protect config sub service get and return call url string value param ip ip param relative path path return all path private string get url string ip string relative path return http ip application util get context path relative path private list sample result run collection job string url map string string param completion service sample result completion service list sample result result list collection member ip list member manager all member list sample result collection result new array list sample result ip list size submit query task for member ip ip list try completion service submit new job ip get address url param catch exception e send request failed log util default log warn get client info from with exception during submit job ip e get message get and merge result sample result sample result null for member member ip list try future sample result f completion service poll time unit millisecond try if f null sample result f get time unit millisecond if sample result null collection result add sample result else log util default log warn the task in ip do not complete in ms member catch timeout exception e if f null f cancel true log util default log warn get task result with timeout exception e get message catch interrupt exception e log util default log warn get task result with interrupted exception e get message catch execution exception e log util default log warn get task result with execution exception e get message return collection result merge sample result param sample collect result sample collect result param sample result sample result return sample result public sample result merge sample result sample result sample collect result list sample result sample result sample result merge result new sample result map string string lisenter groupkey status null if sample collect result get lisenter groupkey status null sample collect result get lisenter groupkey status be empty lisenter groupkey status new hash map string string else lisenter groupkey status sample collect result get lisenter groupkey status for sample result sample result sample result map string string lisenter groupkey status tmp sample result get lisenter groupkey status for map entry string string entry lisenter groupkey status tmp entry set lisenter groupkey status put entry get key entry get value merge result set lisenter groupkey status lisenter groupkey status return merge result query subsrciber s task from every naco server node author naco class job implement callable sample result private string ip private string url private map string string param public job string ip string url map string string param this ip ip this url url this param param override public sample result call throw exception try string builder param url new string builder for map entry string string param param entry set param url append append param get key append append u r l encoder encode param get value constant encode string url all get url ip url param url com alibaba naco config server service notify notify service http result result notify service invoke u r l url all null constant encode http code if result code http u r l connection http ok string json result content sample result result obj j s o n util deserialize object json new type reference sample result return result obj else log util default log info can not get client info from with ip result code return null catch exception e log util default log warn get client info from with exception ip e get message return null public sample result get collect sample result string datum id string group string tenant int sample time throw exception list sample result result list new array list sample result string url constant communication controller path config watcher map string string param new hash map string string param put datum id data id param put group group if string util be blank tenant param put tenant tenant block queue future sample result queue new link blocking deque future sample result member manager get server list size completion service sample result completion service new executor completion service sample result config executor get config sub service executor queue sample result sample collect result new sample result for int i i sample time i list sample result sample result run collection job url param completion service result list if sample result null sample collect result merge sample result sample collect result sample result return sample collect result public sample result get collect sample result by ip string ip int sample time throw exception list sample result result list new array list sample result string url constant communication controller path watcher config map string string param new hash map string string param put ip ip block queue future sample result queue new link blocking deque future sample result member manager get server list size completion service sample result completion service new executor completion service sample result config executor get config sub service executor queue sample result sample collect result new sample result for int i i sample time i list sample result sample result run collection job url param completion service result list if sample result null sample collect result merge sample result sample collect result sample result return sample collect result 
long polling service service public class long polling service private static final int fix polling interval ms private static final int sample period private static final int sample time private static final string true str true private map string long retain ip new concurrent hash map string long private static boolean be fix polling return switch service get switch boolean switch service fix polling false private static int get fix polling interval return switch service get switch integer switch service fix polling interval fix polling interval m public boolean be client long polling string client ip return get client polling record client ip null public map string string get client sub config info string client ip client long polling record get client polling record client ip if record null return collection string string empty map return record client md5 map public sample result get subscrible info string datum id string group string tenant string group key group key get key tenant datum id group tenant sample result sample result new sample result map string string lisenter groupkey status new hash map string string for client long polling client long polling all sub if client long polling client md5 map contain key group key lisenter groupkey status put client long polling ip client long polling client md5 map get group key sample result set lisenter groupkey status lisenter groupkey status return sample result public sample result get subscrible info by ip string client ip sample result sample result new sample result map string string lisenter groupkey status new hash map string string for client long polling client long polling all sub if client long polling ip equal client ip one ip can have multiple listener if lisenter groupkey status equal client long polling client md5 map lisenter groupkey status put all client long polling client md5 map sample result set lisenter groupkey status lisenter groupkey status return sample result aggregate the sampling ip and monitoring configuration information in the sampling result there be no problem for the merge strategy to cover the previous one with the latter param sample result sample result return result public sample result merge sample result list sample result sample result sample result merge result new sample result map string string lisenter groupkey status new hash map string string for sample result sample result sample result map string string lisenter groupkey status tmp sample result get lisenter groupkey status for map entry string string entry lisenter groupkey status tmp entry set lisenter groupkey status put entry get key entry get value merge result set lisenter groupkey status lisenter groupkey status return merge result collect application subscribe configinfo return configinfo result public map string set string collect application subscribe config info if all sub null all sub be empty return null hash map string set string app2 groupkey new hash map string set string for client long polling client long polling all sub if string util be empty client long polling app name unknown equal ignore case client long polling app name continue set string app subscribe config app2 groupkey get client long polling app name set string client subscribe config client long polling client md5 map key set if app subscribe configs null app subscribe configs new hash set string client subscribe config size app subscribe config add all client subscribe config app2 groupkey put client long polling app name app subscribe config return app2 groupkey public sample result get collect subscrible info string datum id string group string tenant list sample result sample result lst new array list sample result for int i i sample time i sample result sample tmp get subscrible info datum id group tenant if sample tmp null sample result lst add sample tmp if i sample time try thread sleep sample period catch interrupt exception e log util client log error sleep wrong e sample result sample result merge sample result sample result lst return sample result public sample result get collect subscrible info by ip string ip sample result sample result new sample result sample result set lisenter groupkey status new hash map string string for int i i sample time i sample result sample tmp get subscrible info by ip ip if sample tmp null if sample tmp get lisenter groupkey status null sample result get lisenter groupkey status equal sample tmp get lisenter groupkey status sample result get lisenter groupkey status put all sample tmp get lisenter groupkey status if i sample time try thread sleep sample period catch interrupt exception e log util client log error sleep wrong e return sample result private client long polling get client polling record string client ip if all sub null return null for client long polling client long polling all sub http servlet request request http servlet request client long polling async context get request if client ip equal request util get remote ip request return client long polling return null add long polling client param req http servlet request param rsp http servlet response param client md5 map client md5 map param probe request size probe request size public void add long polling client http servlet request req http servlet response rsp map string string client md5 map int probe request size string str req get header long polling service long polling header string no hang up flag req get header long polling service long polling no hang up header string app name req get header request util client appname header string tag req get header vipserver tag int delay time switch service get switch integer switch service fix delay time add delay time for load balance and one response be return m in advance to avoid client timeout long timeout math max long parse long str delay time if be fix polling timeout math max get fix polling interval do nothing but set fix polling timeout else long start system current time millis list string change group m d5 util compare md5 req rsp client md5 map if change group size generate response req rsp change group log util client log info system current time millis start instant request util get remote ip req polling client md5 map size probe request size change group size return else if no hang up flag null no hang up flag equal ignore case true str log util client log info system current time milli start nohangup request util get remote ip req polling client md5 map size probe request size change group size return string ip request util get remote ip req must be call by http thread or send response final async context async context req start async async context set timeout be incorrect control by oneself async context set timeout 0 l config executor execute long polling new client long polling async context client md5 map ip probe request size timeout app name tag public static boolean be support long polling http servlet request req return null req get header long polling header suppress warning pmd thread pool creation rule public long polling service all sub new concurrent link queue client long polling config executor schedule long polling new stat task 0 l 10 l time unit seconds register local datum change event to notify center notify center register to publisher local datum change event class notify center ring buffer size register a subscriber to subscribe local datum change event notify center register subscriber new subscriber override public void on event event event if be fix polling ignore else if event instanceof local datum change event local datum change event evt local datum change event event config executor execute long polling new datum change task evt group key evt be beta evt beta ip override public class extend event subscribe type return local datum change event class public static final string long polling header long pull timeout public static final string long polling no hang up header long pull timeout no hangup client long polling subsciber final queue client long polling all sub class datum change task implement runnable override public void run try config cache service get content beta md5 group key for iterator client long polling iter all sub iterator iter have next client long polling client sub iter next if client sub client md5 map contain key group key if publish tag be not in the beta list then it skip if be beta collection util contain beta ips client sub ip continue if publish tag be not in the tag list then it skip if string util be not blank tag tag equal client sub tag continue get retain ip put client sub ip system current time millis iter remove delete subscriber relationship log util client log info system current time millis change time in advance request util get remote ip http servlet request client sub async context get request polling client sub client md5 map size client sub probe request size group key client sub send response array as list group key catch throwable t log util default log error datum change error exception util get stack trace t datum change task string group key boolean be beta list string beta ip this group key be beta beta ips null datum change task string group key boolean be beta list string beta ip string tag this group key group key this be beta be beta this beta ip beta ip this tag tag final string group key final long change time system current time millis final boolean be beta final list string beta ip final string tag class stat task implement runnable override public void run memory log info long pull client count all sub size metric monitor get long polling monitor set all sub size class client long polling implement runnable override public void run async timeout future config executor schedule long polling new runnable override public void run try get retain ip put client long polling this ip system current time milli delete subsciber s relation all sub remove client long polling this if be fix polling log util client log info system current time millis create time fix request util get remote ip http servlet request async context get request polling client md5 map size probe request size list string change group m d5 util compare md5 http servlet request async context get request http servlet response async context get response client md5 map if change group size send response change group else send response null else log util client log info system current time millis create time timeout request util get remote ip http servlet request async context get request polling client md5 map size probe request size send response null catch throwable t log util default log error long polling error t get message t get cause timeout time time unit millisecond all sub add this void send response list string change group cancel time out task if null async timeout future async timeout future cancel false generate response change group void generate response list string change group if null changed group tell web container to send http response async context complete return http servlet response response http servlet response async context get response try final string resp string m d5 util compare md5 result string change group disable cache response set header pragma no cache response set date header expire response set header cache control no cache no store response set status http servlet response sc ok response get writer println resp string async context complete catch exception ex pull log error ex to string ex async context complete client long polling async context ac map string string client md5 map string ip int probe request size long timeout time string app name string tag this async context ac this client md5 map client md5 map this probe request size probe request size this create time system current time millis this ip ip this timeout time timeout time this app name app name this tag tag final async context async context final map string string client md5 map final long create time final string ip final string app name final string tag final int probe request size final long timeout time future async timeout future override public string to string return client long polling client md5 map client md5 map create time create time ip ip app name app name tag tag probe request size probe request size timeout time timeout time void generate response http servlet request request http servlet response response list string change group if null changed group return try final string resp string m d5 util compare md5 result string change group disable cache response set header pragma no cache response set date header expire response set header cache control no cache no store response set status http servlet response sc ok response get writer println resp string catch exception ex pull log error ex to string ex public map string long get retain ips return retain ips public void set retain ips map string long retain ip this retain ip retain ip 
merge datum service service public class merge datum service private persist service persist service static final int init thread count static final atomic integer finish new atomic integer static int total autowired public merge datum service persist service persist service this persist service persist service merge task new task manager com alibaba naco merge datum merge task set default task processor new merge task processor persist service this static list list config info change split list list config info change list int count list list config info change result new array list list config info change count for int i i count i result add new array list config info change for int i i list size i config info change config list get i result get i count add config return result call after datum change to add aggregation task public void add merge task string datum id string group id string tenant string tag string client ip if can execute return merge datum task task new merge datum task datum id group id tenant tag client ip merge task add task task get id task call after datum change to add aggregation task public void add merge task string datum id string group id string tenant string client ip if can execute return merge datum task task new merge datum task datum id group id tenant client ip merge task add task task get id task merge all public void merge all if can execute return for config info change item persist service find all aggr group add merge task item get datum id item get group item get tenant inet util get self ip private boolean can execute if property util be embed storage return true if application util get standalone mode return true protocol manager protocol manager application util get bean protocol manager class return protocol manager get cp protocol be leader constant config model raft group class merge all datum worker extend thread static final int page size private list config info change config info list public merge all datum worker list config info change config info list super merge all datum worker this config info list config info list override public void run for config info change config info config info list string data id config info get datum id string group config info get group string tenant config info get tenant try list config info aggr datum list new array list config info aggr int row count persist service aggr config info count datum id group tenant int page count int math ceil row count 1.0 page size for int page no page no page count page no page config info aggr page persist service find config info aggr by page datum id group tenant page no page size if page null datum list add all page get page item logger info merge query size total datum id group datum list size row count final timestamp time time util get current time if datum list size merge config info cf merge task processor merge datum id group tenant datum list persist service insert or update null null cf time null false logger info merge ok size length md5 content datum id group datum list size cf get content length cf get md5 content util truncate content cf get content else remove persist service remove config info datum id group tenant inet util get self ip null logger warn merge delete delete config info because no datum data id datum id group id group catch exception e logger info merge error datum id group e to string e finish increment and get if finish get logger info all merge dump finish get total logger info all merge dump finish get total private static final logger logger logger factory get logger merge datum service class final task manager merge task 
async notify service service public class async notify service autowire public async notify service server member manager member manager this member manager member manager httpclient start register config datum change event to notify center notify center register to publisher config datum change event class notify center ring buffer size register a subscriber to subscribe config datum change event notify center register subscriber new subscriber override public void on event event event generate config datum change event concurrently if event instanceof config datum change event config datum change event evt config datum change event event long dump t evt last modify t string data id evt datum id string group evt group string tenant evt tenant string tag evt tag collection member ip list member manager all member in fact any type of queue here can be queue notify single task queue new link list notify single task for member member ip list queue add new notify single task datum id group tenant tag dump t member get address evt be beta config executor execute async notify new async task httpclient queue override public class extend event subscribe type return config datum change event class private request config request config request config custom set connect timeout property util get notify connect timeout set socket timeout property util get notify socket timeout build private closeable http async client httpclient http async client custom set default request config request config build private static final logger logger logger factory get logger async notify service class private server member manager member manager class async task implement runnable public async task closeable http async client httpclient queue notify single task queue this httpclient httpclient this queue queue override public void run execute async invoke private void execute async invoke while queue be empty notify single task task queue poll string target ip task get target i p if member manager have member target ip start the health check and there be ips that be not monitor put they directly in the notification queue otherwise notify boolean un health need delay member manager be un health target ip if un health need delay target ip be unhealthy then put it in the notification list config trace service log notify event task get datum id task get group task get tenant null task get last modify inet util get self ip config trace service notify event unhealth task target get delay time and set fail count to the task async task execute task else http get request new http get task url request set header notify service notify header last modify string value of task get last modify request set header notify service notify header op handle ip inet util get self ip if task be beta request set header be beta true httpclient execute request new async notify call back httpclient task private queue notify single task queue private closeable http async client httpclient private void async task execute notify single task task int delay get delay time task queue notify single task queue new link list notify single task queue add task async task async task new async task httpclient queue config executor schedule async notify async task delay time unit millisecond class async notify call back implement future callback http response public async notify call back closeable http async client http client notify single task task this task task this http client http client override public void complete http response response long delay system current time millis task get last modify if response get status line get status code http status sc ok config trace service log notify event task get datum id task get group task get tenant null task get last modify inet util get self ip config trace service notify event ok delay task target else logger error notify error target datum id group t code task target task get datum id task get group task get last modify response get status line get status code config trace service log notify event task get datum id task get group task get tenant null task get last modify inet util get self ip config trace service notify event error delay task target get delay time and set fail count to the task async task execute task log util notify log error notify retry target datum id group t task target task get datum id task get group task get last modify metric monitor get config notify exception increment http client util close quietly response override public void fail exception ex long delay system current time millis task get last modify logger error notify exception target datum id group t ex task target task get datum id task get group task get last modify ex to string config trace service log notify event task get datum id task get group task get tenant null task get last modify inet util get self ip config trace service notify event exception delay task target get delay time and set fail count to the task async task execute task log util notify log error notify retry target datum id group t task target task get datum id task get group task get last modify metric monitor get config notify exception increment override public void cancel log util notify log error notify exception target datum id group t method task target task get datum id task get group task get last modify cancel get delay time and set fail count to the task async task execute task log util notify log error notify retry target datum id group t task target task get datum id task get group task get last modify metric monitor get config notify exception increment private notify single task task private closeable http async client http client static class notify single task extend notify task private string target public string url private boolean be beta private static final string url pattern http constant communication controller path datum change datum id group private static final string url pattern tenant http constant communication controller path datum change datum id group tenant private int fail count public notify single task string datum id string group string tenant long last modify string target this data id group tenant last modify target false public notify single task string datum id string group string tenant long last modify string target boolean be beta this data id group tenant null last modify target be beta public notify single task string datum id string group string tenant string tag long last modify string target boolean be beta super datum id group tenant last modify this target target this be beta be beta try datum id u be l encoder encode datum id constant encode group u be l encoder encode group constant encode catch unsupported encode exception e logger error u r l encoder encode error e if string util be blank tenant this url message format format url pattern target application util get context path datum id group else this url message format format url pattern tenant target application util get context path datum id group tenant if string util be not empty tag url url tag tag fail count this executor executor override public void set fail count int count this fail count count override public int get fail count return fail count public string get target i p return target get delay time and also set fail count to task the failure time index increase so as not to retry invalid task in the offline scene which affect the normal synchronization param task notify task return delay private static int get delay time notify single task task int fail count task get fail count int delay min retry interval fail count fail count increase step if fail count max count task set fail count fail count return delay private static final int min retry interval private static final int increase step private static final int max count 
switch service service public class switch service public static final string switch meta dataid com alibaba naco meta switch public static final string fix polling be fix polling public static final string fix polling interval fix polling inertval public static final string fix delay time fix delay time public static final string disable app collector disable app collector private static volatile map string string switch new hash map string string public static boolean get switch boolean string key boolean default value boolean rtn default value try string value switch get key rtn value null boolean parse boolean value default value catch exception e rtn default value log util fatal log error corrupt switch value key switch get key return rtn public static int get switch integer string key int default value int rtn default value try string status switch get key rtn status null integer parse int status default value catch exception e rtn default value log util fatal log error corrupt switch value key switch get key return rtn public static string get switch string string key string default value string value switch get key return string util be blank value default value value load config param config config content string value public static void load string config if string util be blank config fatal log error switch config be blank return fatal log warn switch config config map string string map new hash map string string try for string line io util read line new string reader config if string util be blank line line start with string array line split if array null array length log util fatal log error corrupt switch record line continue string key array trim string value array trim map put key value switch map fatal log warn reload switch get switch catch i o exception e log util fatal log warn reload switch error config public static string get switch string builder sb new string builder string split for map entry string string entry switch entry set string key entry get key string value entry get value sb append split sb append key sb append sb append value split return sb to string 
config trace service service public class config trace service public static final string persistence event pub pub public static final string persistence event remove remove public static final string persistence event merge merge public static final string notify event ok ok public static final string notify event error error public static final string notify event unhealth unhealth public static final string notify event exception exception public static final string dump event ok ok public static final string dump event remove ok remove ok public static final string dump event error error public static final string pull event ok ok public static final string pull event notfound not find public static final string pull event conflict conflict public static final string pull event error error log persistence event param datum id datum id param group group param tenant tenant param request ip app name request ip app name param t t param handle ip handle ip param type type param content content public static void log persistence event string datum id string group string tenant string request ip app name long t string handle ip string type string content if log util trace log be info enable return convenient tlog segmentation if string util be blank tenant tenant null local ip dataid group tenant request ip app name t handle ip event type delay ext md5 string md5 content null null m d5 util md5 hex content constant encode log util trace log info inet util get self ip datum id group tenant request ip app name t handle ip persist type md5 log notify event param datum id datum id param group group param tenant tenant param request ip app name request ip app name param t t param handle ip handle ip param type type param delay delay param target ip target ip public static void log notify event string datum id string group string tenant string request ip app name long t string handle ip string type long delay string target ip if log util trace log be info enable return metric monitor get notify rt timer record delay time unit millisecond convenient tlog segmentation if string util be blank tenant tenant null local ip dataid group tenant request ip app name t handle ip event type delay ext target ip log util trace log info inet util get self ip datum id group tenant request ip app name t handle ip notify type delay target ip log dump event param datum id datum id param group group param tenant tenant param request ip app name request ip app name param t t param handle ip handle ip param type type param delay delay param length length public static void log dump event string datum id string group string tenant string request ip app name long t string handle ip string type long delay long length if log util trace log be info enable return convenient tlog segmentation if string util be blank tenant tenant null local ip dataid group tenant request ip app name t handle ip event type delay length log util trace log info inet util get self ip datum id group tenant request ip app name t handle ip dump type delay length log dump all event param datum id datum id param group group param tenant tenant param request ip app name request ip app name param t t param handle ip handle ip param type type public static void log dump all event string datum id string group string tenant string request ip app name long t string handle ip string type if log util trace log be info enable return convenient tlog segmentation if string util be blank tenant tenant null local ip dataid group tenant request ip app name t handle ip event type delayed log util trace log info inet util get self ip datum id group tenant request ip app name t handle ip dump all type log pull event param datum id datum id param group group param tenant tenant param request ip app name request ip app name param t t param type type param delay delay param client ip client ip public static void log pull event string datum id string group string tenant string request ip app name long t string type long delay string client ip if log util trace log be info enable return convenient tlog segmentation if string util be blank tenant tenant null local ip dataid group tenant request ip app name t event type delay ext client ip log util trace log info inet util get self ip datum id group tenant request ip app name t pull type delay client ip 
naco role service impl service public class naco role service impl public static final string global admin role role admin autowire private auth configs auth configs autowired private role persist service role persist service autowired private naco user detail service impl user detail service autowire private permission persist service permission persist service private final set string role set new concurrent hash set private final map string list role info role info map new concurrent hash map private final map string list permission info permission info map new concurrent hash map schedule initial delay fix delay private void reload try page role info role info page role persist service get role by user name string util empty integer max value if role info page null return set string tmp role set new hash set map string list role info tmp role info map new concurrent hash map for role info role info role info page get page item if tmp role info map contain key role info get username tmp role info map put role info get username new array list tmp role info map get role info get username add role info tmp role set add role info get role map string list permission info tmp permission info map new concurrent hash map for string role tmp role set page permission info permission info page permission persist service get permission role integer max value tmp permission info map put role permission info page get page item role set add all tmp role set role info map put all tmp role info map permission info map put all tmp permission info map catch exception e logger auth warn load role load fail e determine if the user have permission of the resource p note if the user have many role this method return true if any one role of the user have the desire permission param username user info param permission permission to auth return true if grant false otherwise public boolean have permission string username permission permission list role info role info list get role username if collection be empty role info list return false global admin pass for role info role info role info list if global admin role equal role info get role return true old global admin can pass resource console if permission get resource start with naco auth config console resource name prefix return false for other role use a pattern match to decide if pass or not for role info role info role info list list permission info permission info list get permission role info get role if collection be empty permission info list continue for permission info permission info permission info list string permission resource permission info get resource replace all string permission action permission info get action if permission action contain permission get action pattern match permission resource permission get resource return true return false public list role info get role string username list role info role info list role info map get username if auth configs be cache enable page role info role info page get role from database username integer max value if role info page null role info list role info page get page item return role info list public page role info get role from database string user name int page no int page size page role info role role persist service get role by user name user name page no page size if role null return new page return role public list permission info get permission string role list permission info permission info list permission info map get role if auth configs be cache enable page permission info permission info page get permission from database role integer max value if permission info page null permission info list permission info page get page item return permission info list public page permission info get permission by role from database string role int page no int page size return permission persist service get permission role page no page size add role param role role name param username user name public void add role string role string username if user detail service get user from database username null throw new illegal argument exception user username not find if global admin role equal role throw new illegal argument exception role global admin role be not permit to create role persist service add role role username role set add role public void delete role string role string user name role persist service delete role role user name public void delete role string role role persist service delete role role role set remove role public page permission info get permission from database string role int page no int page size page permission info page info permission persist service get permission role page no page size if page info null return new page return page info add permission param role role name param resource resource param action action public void add permission string role string resource string action if role set contain role throw new illegal argument exception role role not find permission persist service add permission role resource action public void delete permission string role string resource string action permission persist service delete permission role resource action 
naco user detail service impl service public class naco user detail service impl implement user detail service private map string user user map new concurrent hash map autowire private user persist service user persist service autowired private auth config auth config schedule initial delay fix delay private void reload try page user user get user from database integer max value if user null return map string user map new concurrent hash map for user user user get page item map put user get username user user map map catch exception e logger auth warn load user load fail e override public user detail load user by username string username throw username not find exception user user user map get username if auth configs be cache enable user user persist service find user by username username if user null throw new username not find exception username return new naco user detail user public void update user password string username string password user persist service update user password username password public page user get user from database int page no int page size return user persist service get user page no page size public user get user string username user user user map get username if auth configs be cache enable user get user from database username return user public user get user from database string username return user persist service find user by username username public void create user string username string password user persist service create user username password public void delete user string username user persist service delete user username 
mcp server intercepter service public class mcp server intercepter implement server interceptor private static final string intercepte method name establish resource stream override public r t server call listener r intercept call server call r t call metadata header server call handler r t next socket address address call get attribute get grpc transport attr remote addr string method name call get method descriptor get full method name logger main info remote address method address method name return next start call call header 
naco mcp server service public class naco mcp server private final int port private server server autowire private istio config istio config autowire private mcp server intercepter intercepter autowire private naco mcp service naco mcp service start throw i o exception io exception post construct public void start throw i o exception if istio config be mcp server enable return logger main info mcp server start naco mcp server server server builder for port port add service server interceptor intercept naco mcp service intercepter build server start runtime get runtime add shutdown hook new thread override public void run system out println stop naco mcp server naco mcp server this stop system out println naco mcp server stop stop public void stop if server null server shutdown 
server status manager service public class server status manager resource name consistency delegate private consistency service consistency service autowire private switch domain switch domain private server status server status server status start post construct public void init global executor register server status updater new server status updater private void refresh server status if string util be not blank switch domain get override server status server status server status value of switch domain get override server status return if consistency service be available server status server status up else server status server status down public server status get server status return server status public class server status updater implement runnable override public void run refresh server status 
delegate consistency service impl depend on protocol manager service consistency delegate public class delegate consistency service impl implement consistency service private final persistent consistency service persistent consistency service private final ephemeral consistency service ephemeral consistency service public delegate consistency service impl persistent consistency service persistent consistency service ephemeral consistency service ephemeral consistency service this persistent consistency service persistent consistency service this ephemeral consistency service ephemeral consistency service override public void put string key record value throw naco exception map consistency service key put key value override public void remove string key throw naco exception map consistency service key remove key override public datum get string key throw naco exception return map consistency service key get key override public void listen string key record listener listener throw naco exception this special key be listen by both if key builder service meta key prefix equal key persistent consistency service listen key listener ephemeral consistency service listen key listener return map consistency service key listen key listener override public void un listen string key record listener listener throw naco exception map consistency service key un listen key listener override public boolean be available return ephemeral consistency service be available persistent consistency service be available private consistency service map consistency service string key return key builder match ephemeral key key ephemeral consistency service persistent consistency service 
raft consistency service impl depend on protocol manager service public class raft consistency service impl implement persistent consistency service autowire private raft core raft core autowire private raft peer set peer autowire private switch domain switch domain override public void put string key record value throw naco exception try raft core signal publish key value catch exception e logger raft error raft put fail e throw new naco exception naco exception server error raft put fail key key value value e override public void remove string key throw naco exception try if key builder match instance list key key raft core be leader datum datum new datum datum key key raft core on delete datum key peer get leader raft core unlisten all key return raft core signal delete key raft core unlisten all key catch exception e logger raft error raft remove fail e throw new naco exception naco exception server error raft remove fail key key e override public datum get string key throw naco exception return raft core get datum key override public void listen string key record listener listener throw naco exception raft core listen key listener override public void un listen string key record listener listener throw naco exception raft core un listen key listener override public boolean be available return raft core be initialize server status up name equal switch domain get override server status put a new datum from other server param datum datum param source source server throw naco exception naco exception public void on put datum datum raft peer source throw naco exception try raft core on publish datum source catch exception e logger raft error raft on put fail e throw new naco exception naco exception server error raft on put fail datum datum source source e remove a new datum from other server param datum datum param source source server throw naco exception naco exception public void on remove datum datum raft peer source throw naco exception try raft core on delete datum key source catch exception e logger raft error raft on remove fail e throw new naco exception naco exception server error raft on remove fail datum datum source source e 
subscribe manager service public class subscribe manager private static final string subscriber on sync url service subscriber autowire private push service push service autowire private server member manager member manager private list subscriber get subscriber fuzzy string service name string namespace id return push service get client fuzzy service name namespace id private list subscriber get subscriber string service name string namespace id return push service get client service name namespace id get subscriber param service name service name param namespace id namespace id param aggregation aggregation return list of subscriber throw interrupted exception interrupted exception public list subscriber get subscriber string service name string namespace id boolean aggregation throw interrupted exception if aggregation size mean only myself in the list we need at least one another server alive if member manager get server list size return get subscriber fuzzy service name namespace id list subscriber subscriber list new array list subscriber try sync datum from remote server for member server member manager all member map string string param value new hash map param value put common param service name service name param value put common param namespace id namespace id param value put aggregation string value of boolean false if net util local server equal server get address subscriber list add all get subscriber fuzzy service name namespace id continue http client http result result http client http get http server get address application util get context path util and common naco name context subscriber on sync url new array list param value if http u r l connection http ok result code subscriber subscriber jackson util to obj result content subscriber class subscriber list add all subscriber get subscriber return collection util be not empty subscriber list subscriber list stream filter distinct by key subscriber to string collect collector to list collection empty list else local server return get subscriber fuzzy service name namespace id public static t predicate t distinct by key function super t object key extractor map object boolean see new concurrent hash map return object see put if absent key extractor apply object boolean true null 
cluster assign service impl service public class cluster assign service impl implement cluster assign service private final logger logger logger factory get logger cluster assign service impl class autowire private sentinel api client sentinel api client autowire private cluster config service cluster config service private boolean be machine in app non empty string machine id return machine id contain private cluster app assign result v o handle unbind cluster server not in app string app string machine id set string fail set new hash set try list cluster universal state pair v o list cluster config service get cluster universal state app get time unit seconds set string to modify set list stream filter e e get state get state info get mode cluster state manager cluster client filter e machine id equal e get state get client get client config get server host e get state get client get client config get server port map e e get ip e get command port collect collector to set modify mode to not start for all associate token client modify to non start to modify set fail set catch exception ex throwable e ex instanceof execution exception ex get cause ex logger error fail to unbind machine machine id e fail set add machine id return new cluster app assign result v o set fail client set fail set set fail server set new hash set private void modify to non start set string to modify set set string fail set to modify set parallel stream map machine util parse command ip and port filter optional be present map optional get map e completable future void f modify mode e r1 e r2 cluster state manager cluster not start return tuple2 of e r1 e r2 f for each f handle future sync f fail set override public cluster app assign result v o unbind cluster server string app string machine id assert util assert not blank app app can not be blank assert util assert not blank machine id machine id can not be blank if be machine in app machine id return handle unbind cluster server not in app app machine id set string fail set new hash set try cluster group entity entity cluster config service get cluster universal state for app machine app machine id get time unit seconds set string to modify set new hash set to modify set add machine id if entity get client set null to modify set add all entity get client set modify mode to not start for all choose token server and associate token client modify to non start to modify set fail set catch exception ex throwable e ex instanceof execution exception ex get cause ex logger error fail to unbind machine machine id e fail set add machine id return new cluster app assign result v o set fail client set fail set set fail server set new hash set override public cluster app assign result v o unbind cluster server string app set string machine id set assert util assert not blank app app can not be blank assert util be true machine id set null machine id set be empty machine id set can not be empty cluster app assign result v o result new cluster app assign result v o set fail client set new hash set set fail server set new hash set for string machine id machine id set cluster app assign result v o result v o unbind cluster server app machine id result get fail client set add all result v o get fail client set result get fail server set add all result v o get fail server set return result override public cluster app assign result v o apply assign to app string app list cluster app assign map cluster map set string remain set assert util assert not blank app app can not be blank assert util not null cluster map cluster map can not be null set string fail server set new hash set set string fail client set new hash set assign server and apply config cluster map stream filter object non null filter cluster app assign map get belong to app map e string ip e get ip int command port parse port e completable future void f modify mode ip command port cluster state manager cluster server then compose v apply server config change app ip command port e return tuple2 of e get machine id f for each t handle future sync t fail server set assign client of server and apply config cluster map parallel stream filter object non null for each e apply all client config change app e fail client set unbind remain unassigned machine apply all remain machine set app remain set fail client set return new cluster app assign result v o set fail client set fail client set set fail server set fail server set private void apply all remain machine set string app set string remain set set string fail set if remain set null remain set be empty return remain set parallel stream filter object non null map machine util parse command ip and port filter optional be present map optional get map ip port string ip ip port r1 int command port ip port r2 completable future void f modify mode ip command port cluster state manager cluster not start return tuple2 of ip command port f for each t handle future sync t fail set private void apply all client config change string app cluster app assign map assign map set string fail set set string client set assign map get client set if client set null client set be empty return final string server ip assign map get ip final int server port assign map get port client set stream map machine util parse command ip and port filter optional be present map optional get map ip port completable future void f sentinel api client modify cluster mode ip port r1 ip port r2 cluster state manager cluster client then compose v sentinel api client modify cluster client config app ip port r1 ip port r2 new cluster client config set request timeout set server host server ip set server port server port return tuple2 of ip port r1 ip port r2 f for each t handle future sync t fail set private void handle future sync tuple2 string completable future void t set string fail set try t r2 get time unit seconds catch exception ex if ex instanceof execution exception logger error request for failed t r1 ex get cause else logger error request for failed t r1 ex fail set add t r1 private completable future void apply server config change string app string ip int command port cluster app assign map assign map server transport config transport config new server transport config set port assign map get port set idle seconds return sentinel api client modify cluster server transport config app ip command port transport config then compose v apply server flow config change app ip command port assign map then compose v apply server namespace set config app ip command port assign map private completable future void apply server flow config change string app string ip int command port cluster app assign map assign map double max allow qp assign map get max allow qps if max allow qps null max allow qps max allow qps return completable future complete future null return sentinel api client modify cluster server flow config app ip command port new server flow config set max allow qps max allow qps private completable future void apply server namespace set config string app string ip int command port cluster app assign map assign map set string namespace set assign map get namespace set if namespace set null namespace set be empty return completable future complete future null return sentinel api client modify cluster server namespace set app ip command port namespace set private completable future void modify mode string ip int port int mode return sentinel api client modify cluster mode ip port mode private int parse port cluster app assign map assign map return machine util parse command port assign map get machine id or else server transport config default port 
cluster config service service public class cluster config service autowire private sentinel api client sentinel api client autowire private app management app management public completable future void modify cluster client config cluster client modify request request if not client request valid request throw new illegal argument exception invalid request string app request get app string ip request get ip int port request get port return sentinel api client modify cluster client config app ip port request get client config then compose v sentinel api client modify cluster mode ip port cluster state manager cluster client private boolean not client request valid non null cluster client modify request request cluster client config config request get client config return config null string util be empty config get server host config get server port null config get server port config get request timeout null config get request timeout public completable future void modify cluster server config cluster server modify request request server transport config transport config request get transport config server flow config flow config request get flow config set string namespace set request get namespace set if invalid transport config transport config throw new illegal argument exception invalid transport config in request if invalid flow config flow config throw new illegal argument exception invalid flow config in request if namespace set null throw new illegal argument exception namespace set can not be null string app request get app string ip request get ip int port request get port return sentinel api client modify cluster server namespace set app ip port namespace set then compose v sentinel api client modify cluster server transport config app ip port transport config then compose v sentinel api client modify cluster server flow config app ip port flow config then compose v sentinel api client modify cluster mode ip port cluster state manager cluster server get cluster state list of all available machine of provide application param app application name return cluster state list of all available machine of the application since 1.4 public completable future list cluster universal state pair v o get cluster universal state string app if string util be blank app return async util new fail future new illegal argument exception app can not be empty app info app info app management get detail app app if app info null app info get machine null return completable future complete future new array list list completable future cluster universal state pair v o future app info get machine stream filter e e be healthy map machine get cluster universal state app machine get ip machine get port then apply e new cluster universal state pair v o machine get ip machine get port e collect collector to list return async util sequence success future future public completable future cluster group entity get cluster universal state for app machine string app string machine id if string util be blank app return async util new fail future new illegal argument exception app can not be empty app info app info app management get detail app app if app info null app info get machine null return async util new fail future new illegal argument exception app do not have machine boolean machine ok app info get machine stream filter e e be healthy map e e get ip e get port any match e e equal machine id if machine ok return async util new fail future new illegal state exception machine do not exist or disconnected return get cluster universal state app then apply cluster entity util wrap to cluster group then compose e e stream filter e1 e1 get machine id equal machine id find any map completable future complete future or else async util new fail future new illegal state exception not a server machine id public completable future cluster universal state v o get cluster universal state string app string ip int port return sentinel api client fetch cluster mode ip port then apply e new cluster universal state v o set state info e then compose vo if vo get state info get client available return sentinel api client fetch cluster client info and config ip port then apply cc vo set client new cluster client state v o set client config cc else return completable future complete future vo then compose vo if vo get state info get server available return sentinel api client fetch cluster server basic info ip port then apply vo set server else return completable future complete future vo private boolean invalid transport config server transport config transport config return transport config null transport config get port null transport config get port transport config get idle seconds null transport config get idle seconds private boolean invalid flow config server flow config flow config return flow config null flow config get sample count null flow config get sample count flow config get interval ms null flow config get interval ms flow config get interval ms flow config get sample count flow config get max allow qps null flow config get max allow qps 
test service impl service public class test service impl implement test service override sentinel resource value test block handler handle exception block handler class exception util class public void test system out println test override sentinel resource value hello fallback hello fallback public string hello long s if s throw new illegal argument exception invalid arg return string format hello at d s override sentinel resource value hello another default fallback default fallback exception to ignore illegal state exception class public string hello another string name if name null bad equal name throw new illegal argument exception oops if foo equal name throw new illegal state exception oops return hello name public string hello fallback long s throwable ex do some log here ex print stack trace return oops error occur at s public string default fallback system out println go to default fallback return default fallback 
foo service impl service public class foo service impl implement foo service override public string say hello string name return string format hello s at s name local date time now override public string do another return local date time now to string override public string exception test boolean biz boolean timeout if biz throw new runtime exception biz exception if timeout try thread sleep catch interrupt exception e e print stack trace return success 
demo service service public class demo service sentinel resource block handler say hello block handler public string say hello string name return hello name public string say hello block handler string name block exception ex this be the block handler ex print stack trace return string format oops s block by sentinel name 
foo service impl service public class foo service impl implement foo service override public string say hello string name return string format hello s at s name local date time now override public string do another return local date time now to string 
foo service impl service public class foo service impl implement foo service override public string say hello string name return string format hello s at s name local date time now override public string do another return local date time now to string 
baz service service public class baz service autowire private reactive redis template string string template public mono string get by id long id if id null id return mono error new illegal argument exception invalid id id return template op for value get key prefix id switch if empty mono just not find public mono boolean set value long id string value if id null id value null return mono error new illegal argument exception invalid parameter return template op for value set key prefix id value private static final string key prefix sentinel reactor test 
foo service service public class foo service suppress warning pmd thread pool creation rule private final executor service pool executor new fix thread pool private final scheduler scheduler scheduler from executor pool public mono string emit single return mono just thread local random current next int map e e d public flux integer emit multiple int start thread local random current next int return flux range start public mono string do something slow return mono from callable thread sleep system out println do something slow thread current thread get name return ok publish on scheduler 
bar service service sentinel resource default fallback do fallback fallback class global fallback class public class bar service sentinel resource value api another bar with default fallback default fallback fallback func public string another bar int i if i throw new illegal argument exception oops return hello for i sentinel resource public string do something int i if i throw new illegal argument exception oops return do something public string fallback func throwable t system out println t get message return eee 
foo service service public class foo service sentinel resource value api foo block handler foo block handler exception to trace illegal argument exception class public string foo int i throw exception if i throw new illegal access exception if i throw new illegal argument exception return hello for i sentinel resource value api foo with fallback block handler foo block handler fallback foo fallback func exception to trace illegal argument exception class public string foo with fallback int i throw exception if i throw new illegal access exception if i throw new illegal argument exception return hello for i sentinel resource value api another foo with default fallback default fallback global default fallback fallback class foo util class public string another foo int i if i throw new illegal argument exception oops return hello for i sentinel resource block handler global block handler block handler class foo util class public int random return thread local random current next int sentinel resource value api baz block handler baz block handler exception to ignore illegal monitor state exception class public string baz string name if name equal fail throw new illegal monitor state exception boom return cheer name public string foo block handler int i block exception ex return oops i public string foo fallback func int i return eee 
