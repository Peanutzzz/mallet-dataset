sy user controller test run with spring runner class spring boot test class user center app class public class sy user controller test autowire private web application context wac private mock mvc mock mvc before public void setup mock mvc mock mvc builder web app context setup wac build test public void when query success throw exception string result mock mvc perform get user name admin content type media type application json u t f8 and expect status be ok and return get response get content as string system out println result test public void when get info success throw exception string result mock mvc perform get user content type media type application json u t f8 and expect status be ok and expect json path username value admin and return get response get content as string system out println result test public void when get info not exist throw exception string result mock mvc perform get user content type media type application json u t f8 and expect status be ok and return get response get content as string assert that result be empty test public void when get url404 throw exception mock mvc perform get user a content type media type application json u t f8 and expect status is4xx client error test transactional public void when delete success throw exception mock mvc perform delete user header x userid header header x user header admin header x tenant header web app content type media type application json u t f8 and expect status be ok test transactional public void when save or update success throw exception string content id username admin role id 1,2 mock mvc perform post user save or update header x userid header header x user header admin header x tenant header web app content type media type application json u t f8 content content and expect status be ok test transactional public void when update success throw exception string content id username admin role id 1,2 mock mvc perform put user header x userid header header x user header admin header x tenant header web app content type media type application json u t f8 content content and expect status be ok 
sy user mapper test run with spring runner class spring boot test public class sy user mapper test resource private sy user mapper sy user mapper test public void test find by username list sy user user sy user mapper select list new query wrapper sy user eq username admin assert that user size be greater than 
sy user service test run with spring runner class spring boot test public class sy user service test autowire private i sy user service sy user service test public void test find by username login app user login app user sy user service find by username admin assert that login app user be not null test public void test find user map string object param new hash map param put page param put limit page result sy user page sy user service find user param assert that page be not null assert that page get count be greater than 
abstract spring mvc test web app configuration run with spring j unit4 class runner class context configuration location classpath spring xml public class abstract spring mvc test autowire private web application context application context protect mock mvc mock mvc before public void setup this mock mvc mock mvc builder web app context setup this application context build 
xxl job group dao test run with spring j unit4 class runner class context configuration location classpath spring applicationcontext xml public class xxl job group dao test resource private xxl job group dao xxl job group dao test public void test list xxl job group list xxl job group dao find all list xxl job group list2 xxl job group dao find by address type xxl job group group new xxl job group group set app name set app name group set title set title group set order group set address type group set address list set address list int ret xxl job group dao save group xxl job group group2 xxl job group dao load group get id group2 set app name set app name2 group2 set title set title2 group2 set order group2 set address type group2 set address list set address list2 int ret2 xxl job group dao update group2 int ret3 xxl job group dao remove group get id 
xxl job info dao test run with spring j unit4 class runner class context configuration location classpath spring applicationcontext xml public class xxl job info dao test resource private xxl job info dao xxl job info dao test public void page list list xxl job info list xxl job info dao page list null null int list count xxl job info dao page list count null null system out println list system out println list count list xxl job info list2 xxl job info dao get job by group test public void save load xxl job info info new xxl job info info set job group info set job cron job cron info set job desc desc info set author set author info set alarm email set alarm email info set executor route strategy set executor route strategy info set executor handler set executor handler info set executor param set executor param info set executor block strategy set executor block strategy info set glue type set glue type info set glue source set glue source info set glue remark set glue remark info set child job id int count xxl job info dao save info xxl job info info2 xxl job info dao load by id info get id info2 set job cron job cron2 info2 set job desc desc2 info2 set author set author2 info2 set alarm email set alarm email2 info2 set executor route strategy set executor route strategy2 info2 set executor handler set executor handler2 info2 set executor param set executor param2 info2 set executor block strategy set executor block strategy2 info2 set glue type set glue type2 info2 set glue source set glue source2 info2 set glue remark set glue remark2 info2 set glue updatetime new date info2 set child job id int item2 xxl job info dao update info2 xxl job info dao delete info2 get id list xxl job info list2 xxl job info dao get job by group int ret3 xxl job info dao find all count 
xxl job log dao test run with spring j unit4 class runner class context configuration location classpath spring applicationcontext xml public class xxl job log dao test resource private xxl job log dao xxl job log dao test public void test list xxl job log list xxl job log dao page list null null int list count xxl job log dao page list count null null xxl job log log new xxl job log log set job group log set job id int ret1 xxl job log dao save log xxl job log dto xxl job log dao load log get id log set trigger time new date log set trigger code log set trigger msg log set executor address log set executor handler log set executor param ret1 xxl job log dao update trigger info log dto xxl job log dao load log get id log set handle time new date log set handle code log set handle msg ret1 xxl job log dao update handle info log dto xxl job log dao load log get id list map string object list2 xxl job log dao trigger count by day date util add day new date new date int ret4 xxl job log dao clear log new date int ret2 xxl job log dao delete log get job id int ret3 xxl job log dao trigger count by handle code 
xxl job log glue dao test run with spring j unit4 class runner class context configuration location classpath spring applicationcontext xml public class xxl job log glue dao test resource private xxl job log glue dao xxl job log glue dao test public void test xxl job log glue log glue new xxl job log glue log glue set job id log glue set glue type log glue set glue source log glue set glue remark int ret xxl job log glue dao save log glue list xxl job log glue list xxl job log glue dao find by job id int ret2 xxl job log glue dao remove old int ret3 xxl job log glue dao delete by job id 
xxl job registry dao test run with spring j unit4 class runner class context configuration location classpath spring applicationcontext xml public class xxl job registry dao test resource private xxl job registry dao xxl job registry dao test public void test int ret xxl job registry dao registry update g1 k1 v1 if ret ret xxl job registry dao registry save g1 k1 v1 list xxl job registry list xxl job registry dao find all int ret2 xxl job registry dao remove dead 
i18n util test run with spring j unit4 class runner class context configuration location classpath spring applicationcontext xml public class i18n util test test public void test system out println i18n util get string admin name system out println i18n util get mult string admin name admin name full system out println i18n util get mult string 
jwt util test run with spring runner class public class jwt util test test public void test string jwt token ey jhb gci oi j s uz i1 ni be in r5c c i6 ikp x v c j9 ey j0 z x n0 ijoi y w jj iiwid x nlcl9u y w1l ijoi y w rta w4i l c jz y29w z s i6 wy jhc h be x swi z xhw ijox n t yz njgy m t i4 l c jhd x rob3 jpd gllcy i6 wy j b r e1 j ti jd l c jqd gki oi jl m d fl n g u0 yi1h z d vk l t rl m t qt o dhi m c00 o g q4 yz bj n2 u5 yjki l c jjb gllbn rfa w qi oi j3 z w j bc h aif q qrh2a eo n4 t l w i q9 upx dr w12aqqo vqxe y826sjbea2 l b24 r b n d y ql1 j5vw xz ma ql g9 agj h r l4b t qihw b y yfd l vu j xx0 l0x o nbz9 h pq60a3g ahx onek n s5 qet5fe tw7j4o2 ow nlxo xty5s8u2l q y21z ce0te t4 xe m76 j t bp rb q u f g u u3 e kxt u fi3 nk9 a i i4zer w1 ab q nv lo4 y w2 wvj 0lq5a x nd cc hl jid8v kgz e f3v3w e c ov6 ojg l f u n8 vp we y vt1 q zp8op p af t3 o v ttr v i wr j z v w v9d6 d n5myn kt z7 m dy mwo 5w3ro a z0aho b k p krt y qy ew q j s o n object claim jwt util decode and verify jwt token token system out println claim boolean be valid jwt util check exp claim system out println be valid 
namespace lock test run with mockito j unit runner class public class namespace lock test private static final string app app test private static final string cluster cluster test private static final string namespace namespace test private static final string current user user test private static final string another user user test2 private static final long namespace id mock private namespace lock service namespace lock service mock private namespace service namespace service mock private item service item service mock private biz config biz config inject mock namespace acquire lock aspect namespace lock aspect test public void acquire lock with not lock and switch o n when biz config be namespace lock switch off then return true namespace lock aspect acquire lock app cluster namespace current user verify namespace service time find one app cluster namespace test public void acquire lock with not lock and switch o f f when biz config be namespace lock switch off then return false when namespace service find one app cluster namespace then return mock namespace when namespace lock service find lock any long then return null namespace lock aspect acquire lock app cluster namespace current user verify biz config be namespace lock switch off verify namespace service find one app cluster namespace verify namespace lock service find lock any long verify namespace lock service try lock any test expect bad request exception class public void acquire lock with already lock by other guy when biz config be namespace lock switch off then return false when namespace service find one app cluster namespace then return mock namespace when namespace lock service find lock namespace id then return mock namespace lock another user namespace lock aspect acquire lock app cluster namespace current user verify biz config be namespace lock switch off verify namespace service find one app cluster namespace verify namespace lock service find lock namespace id test public void acquire lock with already lock by self when biz config be namespace lock switch off then return false when namespace service find one app cluster namespace then return mock namespace when namespace lock service find lock namespace id then return mock namespace lock current user namespace lock aspect acquire lock app cluster namespace current user verify biz config be namespace lock switch off verify namespace service find one app cluster namespace verify namespace lock service find lock namespace id test public void acquire lock with namespace id switch on when biz config be namespace lock switch off then return false when namespace service find one namespace id then return mock namespace when namespace lock service find lock namespace id then return null namespace lock aspect acquire lock namespace id current user verify biz config be namespace lock switch off verify namespace service find one namespace id verify namespace lock service find lock namespace id verify namespace lock service try lock any test expect service exception class public void test duplicate lock when biz config be namespace lock switch off then return false when namespace service find one namespace id then return mock namespace when namespace lock service find lock namespace id then return null when namespace lock service try lock any then throw datum integrity violation exception class namespace lock aspect acquire lock namespace id current user verify biz config be namespace lock switch off verify namespace service find one namespace id verify namespace lock service time find lock namespace id verify namespace lock service try lock any private namespace mock namespace namespace namespace new namespace namespace set id namespace id namespace set app id app namespace set cluster name cluster namespace set namespace name namespace return namespace private namespace lock mock namespace lock string loce user namespace lock lock new namespace lock lock set namespace id namespace id lock set datum change create by loce user return lock 
namespace unlock aspect test run with mockito j unit runner class public class namespace unlock aspect test mock private release service release service mock private item service item service mock private namespace service namespace service inject mock private namespace unlock aspect namespace unlock aspect test public void test namespace have no normal item and release long namespace id namespace namespace create namespace namespace id when release service find latest active release namespace then return null when item service find item without order namespace id then return collection singleton list create item boolean be modify namespace unlock aspect be modify namespace assert assert false be modify test public void test namespace add item long namespace id namespace namespace create namespace namespace id release release create release k1 v1 list item item array as list create item k1 v1 create item k2 v2 when release service find latest active release namespace then return release when item service find item without order namespace id then return item when namespace service find parent namespace namespace then return null boolean be modify namespace unlock aspect be modify namespace assert assert true be modify test public void test namespace modify item long namespace id namespace namespace create namespace namespace id release release create release k1 v1 list item item array as list create item k1 v2 when release service find latest active release namespace then return release when item service find item without order namespace id then return item when namespace service find parent namespace namespace then return null boolean be modify namespace unlock aspect be modify namespace assert assert true be modify test public void test namespace delete item long namespace id namespace namespace create namespace namespace id release release create release k1 v1 list item item array as list create item k2 v2 when release service find latest active release namespace then return release when item service find item without order namespace id then return item when namespace service find parent namespace namespace then return null boolean be modify namespace unlock aspect be modify namespace assert assert true be modify test public void test child namespace modify long child namespace id parent namespace id namespace child namespace create namespace child namespace id namespace parent namespace create namespace parent namespace id release child release create release k1 v1 k2 v2 list item child item array as list create item k1 v3 release parent release create release k1 v1 k2 v2 when release service find latest active release child namespace then return child release when release service find latest active release parent namespace then return parent release when item service find item without order child namespace id then return child item when namespace service find parent namespace child namespace then return parent namespace boolean be modify namespace unlock aspect be modify child namespace assert assert true be modify test public void test child namespace not modify long child namespace id parent namespace id namespace child namespace create namespace child namespace id namespace parent namespace create namespace parent namespace id release child release create release k1 v3 k2 v2 list item child item array as list create item k1 v3 release parent release create release k1 v1 k2 v2 when release service find latest active release child namespace then return child release when release service find latest active release parent namespace then return parent release when item service find item without order child namespace id then return child item when namespace service find parent namespace child namespace then return parent namespace boolean be modify namespace unlock aspect be modify child namespace assert assert false be modify test public void test parent namespace not release long child namespace id parent namespace id namespace child namespace create namespace child namespace id namespace parent namespace create namespace parent namespace id release child release create release k1 v3 k2 v2 list item child item array as list create item k1 v2 create item k2 v2 when release service find latest active release child namespace then return child release when release service find latest active release parent namespace then return null when item service find item without order child namespace id then return child item when namespace service find parent namespace child namespace then return parent namespace boolean be modify namespace unlock aspect be modify child namespace assert assert true be modify private namespace create namespace long namespace id namespace namespace new namespace namespace set id namespace id return namespace private item create item string key string value item item new item item set key key item set value value return item private release create release string configuration release release new release release set configuration configuration return release 
abstract controller test run with spring j unit4 class runner class spring boot test class admin service test configuration class web environment web environment random port public abstract class abstract controller test autowire private http message converter http message converter protect rest template rest template new test rest template get rest template post construct private void post construct rest template set error handler new default response error handler rest template set message converter http message converter get converter value local server port int port protect string url string path return http localhost port path 
controller exception test run with mockito j unit runner class public class controller exception test private app controller app controller mock private app service app service mock private admin service admin service before public void set up app controller new app controller app service admin service test expect not find exception class public void test find not exist when app service find one any string class then return null app controller get unexist test expect not find exception class public void test delete not exist when app service find one any string class then return null app controller delete unexist null test public void test find empty when app service find all any pageable class then return new array list app pageable pageable page request of list app d t o app d t os app controller find null pageable assert assert not null app d t os assert assert equal app d t os size app d t os app controller find pageable assert assert not null app d t os assert assert equal app d t os size test public void test find by name pageable pageable page request of list app d t o app d t os app controller find unexist pageable assert assert not null app d t os assert assert equal app d t os size test expect service exception class public void create fail app d t o dto generate sample d t o datum when app service find one any string class then return null when admin service create new app any app class then throw new service exception create app fail app controller create dto private app d t o generate sample d t o datum app d t o dto new app d t o dto set app id some app id dto set name some name dto set owner name some owner dto set owner email some owner ctrip com dto set datum change last modify by test dto set datum change create by test return dto 
instance config controller test run with mockito j unit runner class public class instance config controller test private instance config controller instance config controller mock private release service release service mock private instance service instance service private pageable pageable before public void set up throw exception instance config controller new instance config controller release service instance service pageable page request of test public void get by release throw exception long some release id long some instance id long another instance id string some release key some key release some release new release some release set release key some release key string some app id some app id string another app id another app id string some cluster some cluster string some datum center some d c string some config app id some config app id string some config namespace some namespace string some ip some ip date some release delivery time new date date another release delivery time new date when release service find one some release id then return some release instance config some instance config assemble instance config some instance id some config app id some config namespace some release key some release delivery time instance config another instance config assemble instance config another instance id some config app id some config namespace some release key another release delivery time list instance config instance config list new array list some instance config another instance config page instance config instance config page new page impl instance config pageable instance config size when instance service find active instance config by release key some release key pageable then return instance config page instance some instance assemble instance some instance id some app id some cluster some datum center some ip instance another instance assemble instance another instance id another app id some cluster some datum center some ip list instance instance list new array list some instance another instance set long instance id set new hash set some instance id another instance id when instance service find instance by id instance id then return instance page d t o instance d t o result instance config controller get by release some release id pageable assert equal result get content size instance d t o some instance dto null instance d t o another instance dto null for instance d t o instance d t o result get content if instance d t o get id some instance id some instance dto instance d t o else if instance d t o get id another instance id another instance dto instance d t o verify instance some instance some instance dto verify instance another instance another instance dto assert equal some instance dto get config size assert equal some release delivery time some instance dto get config get get release delivery time assert equal another instance dto get config size assert equal another release delivery time another instance dto get config get get release delivery time test expect not find exception class public void test get by release when release be not find throw exception long some release id not exist when release service find one some release id not exist then return null instance config controller get by release some release id not exist pageable test public void test get by release not in throw exception string some config app id some config app id string some config cluster name some config cluster name string some config namespace name some config namespace name long some release id long another release id string release id joiner on join some release id another release id date some release delivery time new date date another release delivery time new date release some release mock release class release another release mock release class string some release key some release key string another release key another release key when some release get release key then return some release key when another release get release key then return another release key when release service find by release id set new hash set some release id another release id then return list new array list some release another release long some instance id long another instance id string some instance config release key some instance config release key string another instance config release key another instance config release key instance config some instance config mock instance config class instance config another instance config mock instance config class when some instance config get instance id then return some instance id when another instance config get instance id then return another instance id when some instance config get release key then return some instance config release key when another instance config get release key then return another instance config release key when some instance config get release delivery time then return some release delivery time when another instance config get release delivery time then return another release delivery time when instance service find instance config by namespace with release key not in some config app id some config cluster name some config namespace name set new hash set some release key another release key then return list new array list some instance config another instance config string some instance app id some instance app id string some instance cluster name some instance cluster name string some instance namespace name some instance namespace name string some ip some ip string another ip another ip instance some instance assemble instance some instance id some instance app id some instance cluster name some instance namespace name some ip instance another instance assemble instance another instance id some instance app id some instance cluster name some instance namespace name another ip when instance service find instance by id set new hash set some instance id another instance id then return list new array list some instance another instance release some instance config release new release some instance config release set release key some instance config release key release another instance config release new release another instance config release set release key another instance config release key when release service find by release key set new hash set some instance config release key another instance config release key then return list new array list some instance config release another instance config release list instance d t o result instance config controller get by release not in some config app id some config cluster name some config namespace name release id assert equal result size instance d t o some instance dto null instance d t o another instance dto null for instance d t o instance d t o result if instance d t o get id some instance id some instance dto instance d t o else if instance d t o get id another instance id another instance dto instance d t o verify instance some instance some instance dto verify instance another instance another instance dto assert equal some instance config release key some instance dto get config get get release get release key assert equal another instance config release key another instance dto get config get get release get release key assert equal some release delivery time some instance dto get config get get release delivery time assert equal another release delivery time another instance dto get config get get release delivery time test public void test get instance by namespace throw exception string some app id some app id string some cluster name some cluster name string some namespace name some namespace name string some ip some ip long some instance id long another instance id instance some instance assemble instance some instance id some app id some cluster name some namespace name some ip instance another instance assemble instance another instance id some app id some cluster name some namespace name some ip page instance instance new page impl list new array list some instance another instance pageable when instance service find instance by namespace some app id some cluster name some namespace name pageable then return instance page d t o instance d t o result instance config controller get instance by namespace some app id some cluster name some namespace name null pageable assert equal result get content size instance d t o some instance dto null instance d t o another instance dto null for instance d t o instance d t o result get content if instance d t o get id some instance id some instance dto instance d t o else if instance d t o get id another instance id another instance dto instance d t o verify instance some instance some instance dto verify instance another instance another instance dto test public void test get instance by namespace and instance app id throw exception string some instance app id some instance app id string some app id some app id string some cluster name some cluster name string some namespace name some namespace name string some ip some ip long some instance id long another instance id instance some instance assemble instance some instance id some app id some cluster name some namespace name some ip instance another instance assemble instance another instance id some app id some cluster name some namespace name some ip page instance instance new page impl list new array list some instance another instance pageable when instance service find instance by namespace and instance app id some instance app id some app id some cluster name some namespace name pageable then return instance page d t o instance d t o result instance config controller get instance by namespace some app id some cluster name some namespace name some instance app id pageable assert equal result get content size instance d t o some instance dto null instance d t o another instance dto null for instance d t o instance d t o result get content if instance d t o get id some instance id some instance dto instance d t o else if instance d t o get id another instance id another instance dto instance d t o verify instance some instance some instance dto verify instance another instance another instance dto test public void test get instance count by namespace throw exception string some app id some app id string some cluster name some cluster name string some namespace name some namespace name page instance instance new page impl collection empty list pageable when instance service find instance by namespace eq some app id eq some cluster name eq some namespace name any pageable class then return instance long result instance config controller get instance count by namespace some app id some cluster name some namespace name assert equal result private void verify instance instance instance instance d t o instance d t o assert equal instance get id instance d t o get id assert equal instance get app id instance d t o get app id assert equal instance get cluster name instance d t o get cluster name assert equal instance get datum center instance d t o get datum center assert equal instance get ip instance d t o get ip assert equal instance get datum change create time instance d t o get datum change create time private instance assemble instance long instance id string app id string cluster name string datum center string ip instance instance new instance instance set id instance id instance set app id app id instance set ip ip instance set cluster name cluster name instance set datum center datum center instance set datum change create time new date return instance private instance config assemble instance config long instance id string config app id string config namespace name string release key date release delivery time instance config instance config new instance config instance config set instance id instance id instance config set config app id config app id instance config set config namespace name config namespace name instance config set release key release key instance config set datum change last modify time new date instance config set release delivery time release delivery time return instance config 
abstract integration test run with spring j unit4 class runner class rollback transactional spring boot test class biz test configuration class web environment web environment random port public abstract class abstract integration test 
abstract unit test run with mockito j unit runner class public abstract class abstract unit test 
biz config test run with mockito j unit runner class public class biz config test mock private configurable environment environment private biz config biz config before public void set up throw exception biz config new biz config new biz d b property source reflection test util set field biz config environment environment test public void test release message notification batch throw exception int some batch when environment get property apollo release message notification batch then return string value of some batch assert equal some batch biz config release message notification batch test public void test release message notification batch with default value throw exception int default batch assert equal default batch biz config release message notification batch test public void test release message notification batch with invalid number throw exception int some batch int default batch when environment get property apollo release message notification batch then return string value of some batch assert equal default batch biz config release message notification batch test public void test release message notification batch with n a n throw exception string some n a n some n a n int default batch when environment get property apollo release message notification batch then return some n a n assert equal default batch biz config release message notification batch test public void test check int throw exception int some invalid value int another invalid value int some valid value int some default value int some min some invalid value int some max another invalid value assert equal some default value biz config check int some invalid value some min integer max value some default value assert equal some default value biz config check int another invalid value integer min value some max some default value assert equal some valid value biz config check int some valid value integer min value integer max value some default value 
gray release rule holder test run with mockito j unit runner class public class gray release rule holder test private static final joiner string joiner joiner on config const cluster namespace separator private gray release rule holder gray release rule holder mock private biz config biz config mock private gray release rule repository gray release rule repository private gson gson new gson private atomic long id counter before public void set up throw exception gray release rule holder spy new gray release rule holder reflection test util set field gray release rule holder biz config biz config reflection test util set field gray release rule holder gray release rule repository gray release rule repository id counter new atomic long test public void test scan gray release rule throw exception string some app id some app id string some cluster name some cluster name string some namespace name some namespace name string another namespace name another namespace name long some release id 1 l int active branch status namespace branch status active string some client app id client app id1 string some client ip 1.1 1.1 string another client app id client app id2 string another client ip 2.2 2.2 gray release rule some rule assemble gray release rule some app id some cluster name some namespace name list new array list assemble rule item some client app id set new hash set some client ip some release id active branch status when biz config gray release rule scan interval then return when gray release rule repository find first500 by id greater than order by id asc 0 l then return list new array list some rule scan rule gray release rule holder after property set assert equal some release id gray release rule holder find release id from gray release rule some client app id some client ip some app id some cluster name some namespace name assert equal some release id gray release rule holder find release id from gray release rule some client app id to upper case some client ip some app id to upper case some cluster name some namespace name to upper case assert null gray release rule holder find release id from gray release rule some client app id another client ip some app id some cluster name some namespace name assert null gray release rule holder find release id from gray release rule another client app id some client ip some app id some cluster name some namespace name assert null gray release rule holder find release id from gray release rule another client app id another client ip some app id some cluster name some namespace name assert true gray release rule holder have gray release rule some client app id some client ip some namespace name assert true gray release rule holder have gray release rule some client app id to upper case some client ip some namespace name to upper case assert false gray release rule holder have gray release rule some client app id another client ip some namespace name assert false gray release rule holder have gray release rule some client app id some client ip another namespace name assert false gray release rule holder have gray release rule another client app id another client ip some namespace name assert false gray release rule holder have gray release rule another client app id another client ip another namespace name gray release rule another rule assemble gray release rule some app id some cluster name some namespace name list new array list assemble rule item another client app id set new hash set another client ip some release id active branch status when gray release rule repository find by app id and cluster name and namespace name some app id some cluster name some namespace name then return list new array list another rule send message gray release rule holder handle message assemble release message some app id some cluster name some namespace name topic apollo release topic assert null gray release rule holder find release id from gray release rule some client app id some client ip some app id some cluster name some namespace name assert equal some release id gray release rule holder find release id from gray release rule another client app id another client ip some app id some cluster name some namespace name assert false gray release rule holder have gray release rule some client app id some client ip some namespace name assert false gray release rule holder have gray release rule some client app id some client ip another namespace name assert true gray release rule holder have gray release rule another client app id another client ip some namespace name assert false gray release rule holder have gray release rule another client app id some client ip some namespace name assert false gray release rule holder have gray release rule another client app id another client ip another namespace name private gray release rule assemble gray release rule string app id string cluster name string namespace name list gray release rule item d t o rule item long release id int branch status gray release rule rule new gray release rule rule set id id counter increment and get rule set app id app id rule set cluster name cluster name rule set namespace name namespace name rule set branch name some branch rule set rule gson to json rule item rule set release id release id rule set branch status branch status return rule private gray release rule item d t o assemble rule item string client app id set string client ip list return new gray release rule item d t o client app id client ip list private release message assemble release message string app id string cluster name string namespace name string message string joiner join app id cluster name namespace name release message release message new release message message return release message 
json config file test run with mockito j unit runner class public class json config file test private string some namespace mock private config repository config repository private config source type some source type before public void set up throw exception some namespace some name test public void test when have content throw exception property some property new property string key config const config file content key string some value some value some property set property key some value some source type config source type local when config repository get config then return some property when config repository get source type then return some source type json config file config file new json config file some namespace config repository assert equal config file format json config file get config file format assert equal some namespace config file get namespace assert true config file have content assert equal some value config file get content assert equal some source type config file get source type test public void test when have no content throw exception when config repository get config then return null json config file config file new json config file some namespace config repository assert false config file have content assert null config file get content test public void test when config repository have error throw exception when config repository get config then throw new runtime exception some error json config file config file new json config file some namespace config repository assert false config file have content assert null config file get content assert equal config source type none config file get source type test public void test on repository change throw exception property some property new property string key config const config file content key string some value some value string another value another value some property set property key some value some source type config source type local when config repository get config then return some property when config repository get source type then return some source type json config file config file new json config file some namespace config repository assert equal some value config file get content assert equal some source type config file get source type property another property new property another property set property key another value config source type another source type config source type remote when config repository get source type then return another source type config file on repository change some namespace another property assert equal another value config file get content assert equal another source type config file get source type test public void test when config repository have error and then recover throw exception property some property new property string key config const config file content key string some value some value some property set property key some value some source type config source type local when config repository get config then throw new runtime exception some error when config repository get source type then return some source type json config file config file new json config file some namespace config repository assert false config file have content assert null config file get content assert equal config source type none config file get source type config file on repository change some namespace some property assert true config file have content assert equal some value config file get content assert equal some source type config file get source type 
property compatible file config repository test run with mockito j unit runner class public class property compatible file config repository test mock private property compatible config file config file private string some namespace name mock private property some property before public void set up throw exception some namespace name some namespace name when config file get namespace then return some namespace name when config file as property then return some property test public void test get config throw exception property compatible file config repository config file repository new property compatible file config repository config file assert same some property config file repository get config verify config file time add change listener config file repository test public void test get config fail and then recover throw exception runtime exception some exception new runtime exception some exception when config file as property then throw some exception property compatible file config repository config file repository new property compatible file config repository config file throwable exception throw null try config file repository get config catch throwable ex exception throw ex assert same some exception exception throw recover reset config file property some property mock property class when config file as property then return some property assert same some property config file repository get config test expect illegal state exception class public void test get config with config file return null property throw exception when config file as property then return null property compatible file config repository config file repository new property compatible file config repository config file config file repository get config test public void test get source type throw exception config source type some type config source type remote when config file get source type then return some type property compatible file config repository config file repository new property compatible file config repository config file assert same some type config file repository get source type test public void test on change throw exception property another property mock property class config file change event some change event mock config file change event class repository change listener some listener mock repository change listener class property compatible file config repository config file repository new property compatible file config repository config file config file repository add change listener some listener assert same some property config file repository get config when config file as property then return another property config file repository on change some change event assert same another property config file repository get config verify some listener time on repository change some namespace name another property 
property config file test run with mockito j unit runner class public class property config file test private string some namespace mock private config repository config repository mock private property factory property factory before public void set up throw exception some namespace some name mock injector reset when property factory get property instance then answer new answer property override public property answer invocation on mock invocation return new property mock injector set instance property factory class property factory test public void test when have content throw exception property some property new property string some key some key string some value some value some property set property some key some value when config repository get config then return some property property config file config file new property config file some namespace config repository assert equal config file format property config file get config file format assert equal some namespace config file get namespace assert true config file have content assert true config file get content contain string format s s some key some value test public void test when have no content throw exception when config repository get config then return null property config file config file new property config file some namespace config repository assert false config file have content assert null config file get content test public void test when config repository have error throw exception when config repository get config then throw new runtime exception some error property config file config file new property config file some namespace config repository assert false config file have content assert null config file get content test public void test on repository change throw exception property some property new property string some key some key string some value some value string another value another value some property set property some key some value when config repository get config then return some property property config file config file new property config file some namespace config repository assert true config file get content contain string format s s some key some value property another property new property another property set property some key another value final settable future config file change event config file change future settable future create config file change listener some listener new config file change listener override public void on change config file change event change event config file change future set change event config file add change listener some listener config file on repository change some namespace another property config file change event change event config file change future get time unit millisecond assert false config file get content contain string format s s some key some value assert true config file get content contain string format s s some key another value assert equal some namespace change event get namespace assert true change event get old value contain string format s s some key some value assert true change event get new value contain string format s s some key another value assert equal property change type modify change event get change type test public void test when config repository have error and then recover throw exception property some property new property string some key some key string some value some value some property set property some key some value when config repository get config then throw new runtime exception some error property config file config file new property config file some namespace config repository assert false config file have content assert null config file get content config file on repository change some namespace some property assert true config file have content assert true config file get content contain string format s s some key some value 
remote config long poll service test run with mockito j unit runner class public class remote config long poll service test private remote config long poll service remote config long poll service mock private http response list apollo config notification poll response mock private http util http util mock private config service locator config service locator private type response type private static string some server url private static string some app id private static string some cluster private static string some secret before public void set up throw exception mock injector reset mock injector set instance http util class http util some server url http some server service d t o service d t o mock service d t o class when service d t o get homepage url then return some server url when config service locator get config service then return list new array list service d t o mock injector set instance config service locator class config service locator mock injector set instance config util class new mock config util remote config long poll service new remote config long poll service response type type reflection test util get field remote config long poll service m response type some app id some app id some cluster some cluster test public void test submit long poll namespace with304 response throw exception remote config repository some repository mock remote config repository class final string some namespace some namespace when poll response get status code then return http servlet response sc not modify final settable future boolean long poll finish settable future create do answer new answer http response list apollo config notification override public http response list apollo config notification answer invocation on mock invocation throw throwable try time unit millisecond sleep catch interrupted exception e http request request invocation get argument at http request class assert true request get url contain some server url notification v2 assert true request get url contain app id some app id assert true request get url contain cluster some cluster assert true request get url contain notification assert true request get url contain some namespace long poll finish set true return poll response when http util do get any http request class eq response type remote config long poll service submit some namespace some repository long poll finish get time unit millisecond remote config long poll service stop long polling refresh verify some repository never on long poll notify any service d t o class any apollo notification message class test public void test submit long poll namespace with200 response throw exception remote config repository some repository mock remote config repository class final string some namespace some namespace apollo notification message notification message new apollo notification message string some key some key long some notification id string another key another key long another notification id notification message put some key some notification id notification message put another key another notification id apollo config notification some notification mock apollo config notification class when some notification get namespace name then return some namespace when some notification get message then return notification message when poll response get status code then return http servlet response sc ok when poll response get body then return list new array list some notification do answer new answer http response list apollo config notification override public http response list apollo config notification answer invocation on mock invocation throw throwable try time unit millisecond sleep catch interrupted exception e return poll response when http util do get any http request class eq response type final settable future boolean on notify settable future create do answer new answer void override public void answer invocation on mock invocation throw throwable on notify set true return null when some repository on long poll notify any service d t o class any apollo notification message class remote config long poll service submit some namespace some repository on notify get time unit millisecond remote config long poll service stop long polling refresh final argument captor apollo notification message captor argument captor for class apollo notification message class verify some repository time on long poll notify any service d t o class captor capture apollo notification message capture captor get value assert equal capture get detail size assert equal some notification id capture get some key long value assert equal another notification id capture get another key long value test public void test submit long poll namespace with access key secret throw exception some secret some secret remote config repository some repository mock remote config repository class final string some namespace some namespace apollo notification message notification message new apollo notification message string some key some key long some notification id notification message put some key some notification id apollo config notification some notification mock apollo config notification class when some notification get namespace name then return some namespace when some notification get message then return notification message when poll response get status code then return http servlet response sc ok when poll response get body then return list new array list some notification do answer new answer http response list apollo config notification override public http response list apollo config notification answer invocation on mock invocation throw throwable try time unit millisecond sleep catch interrupted exception e http request request invocation get argument at http request class map string string header request get header assert not null header assert true header contain key signature http header timestamp assert true header contain key signature http header authorization return poll response when http util do get any http request class eq response type final settable future boolean on notify settable future create do answer new answer void override public void answer invocation on mock invocation throw throwable on notify set true return null when some repository on long poll notify any service d t o class any apollo notification message class remote config long poll service submit some namespace some repository on notify get time unit millisecond remote config long poll service stop long polling refresh verify some repository time on long poll notify any service d t o class any apollo notification message class test public void test submit long poll multiple namespace throw exception remote config repository some repository mock remote config repository class remote config repository another repository mock remote config repository class final string some namespace some namespace final string another namespace another namespace final apollo config notification some notification mock apollo config notification class when some notification get namespace name then return some namespace final apollo config notification another notification mock apollo config notification class when another notification get namespace name then return another namespace final settable future boolean submit another namespace start settable future create final settable future boolean submit another namespace finish settable future create do answer new answer http response list apollo config notification final atomic integer counter new atomic integer override public http response list apollo config notification answer invocation on mock invocation throw throwable try time unit millisecond sleep catch interrupted exception e the first time if counter increment and get http request request invocation get argument at http request class assert true request get url contain notification assert true request get url contain some namespace submit another namespace start set true when poll response get status code then return http servlet response sc ok when poll response get body then return list new array list some notification else if submit another namespace finish get http request request invocation get argument at http request class assert true request get url contain notification assert true request get url contain some namespace assert true request get url contain another namespace when poll response get status code then return http servlet response sc ok when poll response get body then return list new array list another notification else when poll response get status code then return http servlet response sc not modify when poll response get body then return null return poll response when http util do get any http request class eq response type final settable future boolean on another repository notify settable future create do answer new answer void override public void answer invocation on mock invocation throw throwable on another repository notify set true return null when another repository on long poll notify any service d t o class any apollo notification message class remote config long poll service submit some namespace some repository submit another namespace start get time unit millisecond remote config long poll service submit another namespace another repository submit another namespace finish set true on another repository notify get time unit millisecond remote config long poll service stop long polling refresh verify some repository time on long poll notify any service d t o class any apollo notification message class verify another repository time on long poll notify any service d t o class any apollo notification message class test public void test submit long poll multiple namespace with multiple notification return throw exception remote config repository some repository mock remote config repository class remote config repository another repository mock remote config repository class final string some namespace some namespace final string another namespace another namespace apollo notification message notification message new apollo notification message string some key some key long some notification id notification message put some key some notification id apollo notification message another notification message new apollo notification message string another key another key long another notification id another notification message put another key another notification id final apollo config notification some notification mock apollo config notification class when some notification get namespace name then return some namespace when some notification get message then return notification message final apollo config notification another notification mock apollo config notification class when another notification get namespace name then return another namespace when another notification get message then return another notification message when poll response get status code then return http servlet response sc ok when poll response get body then return list new array list some notification another notification do answer new answer http response list apollo config notification override public http response list apollo config notification answer invocation on mock invocation throw throwable try time unit millisecond sleep catch interrupted exception e return poll response when http util do get any http request class eq response type final settable future boolean some repository notify settable future create do answer new answer void override public void answer invocation on mock invocation throw throwable some repository notify set true return null when some repository on long poll notify any service d t o class any apollo notification message class final settable future boolean another repository notify settable future create do answer new answer void override public void answer invocation on mock invocation throw throwable another repository notify set true return null when another repository on long poll notify any service d t o class any apollo notification message class remote config long poll service submit some namespace some repository remote config long poll service submit another namespace another repository some repository notify get time unit millisecond another repository notify get time unit millisecond remote config long poll service stop long polling refresh final argument captor apollo notification message captor argument captor for class apollo notification message class final argument captor apollo notification message another captor argument captor for class apollo notification message class verify some repository time on long poll notify any service d t o class captor capture verify another repository time on long poll notify any service d t o class another captor capture apollo notification message result captor get value assert equal result get detail size assert equal some notification id result get some key long value apollo notification message another result another captor get value assert equal another result get detail size assert equal another notification id another result get another key long value test public void test submit long poll namespace with message update throw exception remote config repository some repository mock remote config repository class final string some namespace some namespace apollo notification message notification message new apollo notification message string some key some key long some notification id notification message put some key some notification id apollo config notification some notification mock apollo config notification class when some notification get namespace name then return some namespace when some notification get message then return notification message when poll response get status code then return http servlet response sc ok when poll response get body then return list new array list some notification do answer new answer http response list apollo config notification override public http response list apollo config notification answer invocation on mock invocation throw throwable try time unit millisecond sleep catch interrupted exception e return poll response when http util do get any http request class eq response type final settable future boolean on notify settable future create do answer new answer void override public void answer invocation on mock invocation throw throwable on notify set true return null when some repository on long poll notify any service d t o class any apollo notification message class remote config long poll service submit some namespace some repository on notify get time unit millisecond reset to when poll response get status code then return http servlet response sc not modify final argument captor apollo notification message captor argument captor for class apollo notification message class verify some repository time on long poll notify any service d t o class captor capture apollo notification message capture captor get value assert equal capture get detail size assert equal some notification id capture get some key long value final settable future boolean another on notify settable future create do answer new answer void override public void answer invocation on mock invocation throw throwable another on notify set true return null when some repository on long poll notify any service d t o class any apollo notification message class string another key another key long another notification id notification message put another key another notification id send notification when poll response get status code then return http servlet response sc ok another on notify get time unit millisecond remote config long poll service stop long polling refresh verify some repository time on long poll notify any service d t o class captor capture capture captor get value assert equal capture get detail size assert equal some notification id capture get some key long value assert equal another notification id capture get another key long value test public void test assemble long poll refresh url throw exception string some uri some server url string some app id some app id string some cluster some cluster some sign string some namespace some name long some notification id map string long notification map immutable map of some namespace some notification id string long poll refresh url remote config long poll service assemble long poll refresh url some uri some app id some cluster null notification map assert true long poll refresh url contain some server url notification v2 assert true long poll refresh url contain app id some app id assert true long poll refresh url contain cluster some cluster 2 b some sign assert true long poll refresh url contain notification 5 b 7 b 22namespace name 22 % 3 a some namespace 22 % 2 c 22notification id 22 % 3 a 7 d 5 d test public void test assemble long poll refresh url with multiple namespace throw exception string some uri some server url string some app id some app id string some cluster some cluster some sign string some namespace some name string another namespace another name long some notification id long another notification id map string long notification map immutable map of some namespace some notification id another namespace another notification id string long poll refresh url remote config long poll service assemble long poll refresh url some uri some app id some cluster null notification map assert true long poll refresh url contain some server url notification v2 assert true long poll refresh url contain app id some app id assert true long poll refresh url contain cluster some cluster 2 b some sign assert true long poll refresh url contain notification 5 b 7 b 22namespace name 22 % 3 a some namespace 22 % 2 c 22notification id 22 % 3 a some notification id 7 d 2 c 7 b 22namespace name 22 % 3 a another namespace 22 % 2 c 22notification id 22 % 3 a another notification id 7 d 5 d public static class mock config util extend config util override public string get app id return some app id override public string get cluster return some cluster override public string get access key secret return some secret override public string get datum center return null override public int get load config q p s return override public int get long poll q p s return override public long get long polling initial delay in mill return 
remote config repository test run with mockito j unit runner class public class remote config repository test mock private config service locator config service locator private string some namespace private string some server url private config util config util private http util http util mock private static http response apollo config some response mock private static http response list apollo config notification poll response private remote config long poll service remote config long poll service mock private property factory property factory private static string some app id private static string some cluster private static string some secret before public void set up throw exception some namespace some name when poll response get status code then return http servlet response sc not modify mock injector reset config util new mock config util mock injector set instance config util class config util some server url http some server service d t o service d t o mock service d t o class when service d t o get homepage url then return some server url when config service locator get config service then return list new array list service d t o mock injector set instance config service locator class config service locator http util spy new mock http util mock injector set instance http util class http util remote config long poll service new remote config long poll service mock injector set instance remote config long poll service class remote config long poll service when property factory get property instance then answer new answer property override public property answer invocation on mock invocation return new property mock injector set instance property factory class property factory some app id some app id some cluster some cluster test public void test load config throw exception string some key some key string some value some value map string string configuration map new hash map configuration put some key some value apollo config some apollo config assemble apollo config configuration when some response get status code then return when some response get body then return some apollo config remote config repository remote config repository new remote config repository some namespace property config remote config repository get config assert equal configuration config assert equal config source type remote remote config repository get source type remote config long poll service stop long polling refresh test public void test load config with order property throw exception string some key some key string some value some value map string string configuration map new link hash map configuration put some key some value configuration put some key2 some value2 apollo config some apollo config assemble apollo config configuration when some response get status code then return when some response get body then return some apollo config when property factory get property instance then answer new answer property override public property answer invocation on mock invocation return new order property remote config repository remote config repository new remote config repository some namespace property config remote config repository get config assert true config instanceof order property assert equal configuration config assert equal config source type remote remote config repository get source type remote config long poll service stop long polling refresh string actual array config key set to array new string string expect array some key some key2 assert array equal expect array actual array test public void test load config with access key secret throw exception some secret some secret string some key some key string some value some value map string string configuration map new hash map configuration put some key some value apollo config some apollo config assemble apollo config configuration when some response get status code then return when some response get body then return some apollo config do answer new answer http response apollo config override public http response apollo config answer invocation on mock invocation throw throwable http request request invocation get argument at http request class map string string header request get header assert not null header assert true header contain key signature http header timestamp assert true header contain key signature http header authorization return some response when http util do get any http request class any class class remote config repository remote config repository new remote config repository some namespace property config remote config repository get config assert equal configuration config assert equal config source type remote remote config repository get source type remote config long poll service stop long polling refresh test expect apollo config exception class public void test get remote config with server error throw exception when some response get status code then return remote config repository remote config repository new remote config repository some namespace must stop the long polling before exception occur remote config long poll service stop long polling refresh remote config repository get config test public void test repository change listener throw exception map string string configuration immutable map of some key some value apollo config some apollo config assemble apollo config configuration when some response get status code then return when some response get body then return some apollo config repository change listener some listener mock repository change listener class remote config repository remote config repository new remote config repository some namespace remote config repository add change listener some listener final argument captor property captor argument captor for class property class map string string new configuration immutable map of some key another value apollo config new apollo config assemble apollo config new configuration when some response get body then return new apollo config remote config repository sync verify some listener time on repository change eq some namespace captor capture assert equal new configuration captor get value remote config long poll service stop long polling refresh test public void test long polling refresh throw exception map string string configuration immutable map of some key some value apollo config some apollo config assemble apollo config configuration when some response get status code then return when some response get body then return some apollo config final settable future boolean long poll finish settable future create repository change listener some listener mock repository change listener class do answer new answer void override public void answer invocation on mock invocation throw throwable long poll finish set true return null when some listener on repository change any string class any property class remote config repository remote config repository new remote config repository some namespace remote config repository add change listener some listener final argument captor property captor argument captor for class property class map string string new configuration immutable map of some key another value apollo config new apollo config assemble apollo config new configuration apollo notification message notification message new apollo notification message string some key some key long some notification id notification message put some key some notification id apollo config notification some notification mock apollo config notification class when some notification get namespace name then return some namespace when some notification get message then return notification message when poll response get status code then return http servlet response sc ok when poll response get body then return list new array list some notification when some response get body then return new apollo config long poll finish get time unit millisecond remote config long poll service stop long polling refresh verify some listener time on repository change eq some namespace captor capture assert equal new configuration captor get value final argument captor http request http request argument captor argument captor for class http request class verify http util at least do get http request argument captor capture eq apollo config class http request request http request argument captor get value assert true request get url contain message 7 b 22details 22 % 3 a 7 b 22some key 22 % 3 a1 7 d 7 d test public void test assemble query config url throw exception gson gson new gson string some uri http some server string some app id some app id string some cluster some cluster some sign string some release key 20160705193346 - 583078 ef5716c055 20160705193308 - 31 c471ddf9087c3f apollo notification message notification message new apollo notification message string some key some key long some notification id string another key another key long another notification id notification message put some key some notification id notification message put another key another notification id remote config repository remote config repository new remote config repository some namespace apollo config some apollo config mock apollo config class when some apollo config get release key then return some release key string query config url remote config repository assemble query config url some uri some app id some cluster some namespace null notification message some apollo config remote config long poll service stop long polling refresh assert true query config url contain http some server config some app id some cluster some sign some namespace assert true query config url contain release key 20160705193346 - 583078 ef5716c055 2 b20160705193308 31c471 ddf9087c3f assert true query config url contain message url escaper url form parameter escaper escape gson to json notification message private apollo config assemble apollo config map string string configuration string some app id app id string some cluster name cluster string some release key apollo config apollo config new apollo config some app id some cluster name some namespace some release key apollo config set configuration configuration return apollo config public static class mock config util extend config util override public string get app id return some app id override public string get cluster return some cluster override public string get access key secret return some secret override public string get datum center return null override public int get load config q p s return override public int get long poll q p s return override public long get on error retry interval return override public time unit get on error retry interval time unit return time unit millisecond override public long get long polling initial delay in mill return public static class mock http util extend http util override public t http response t do get http request http request class t response type if some response get status code some response get status code return http response t some response throw new apollo config exception string format http request fail due to status code d some response get status code override public t http response t do get http request http request type response type try time unit millisecond sleep catch interrupted exception e return http response t poll response 
simple config test run with mockito j unit runner class public class simple config test private string some namespace mock private config repository config repository mock private property factory property factory private config source type some source type before public void set up throw exception some namespace some name when property factory get property instance then answer new answer property override public property answer invocation on mock invocation return new property mock injector set instance property factory class property factory test public void test get property throw exception property some property new property string some key some key string some value some value some property set property some key some value some source type config source type local when config repository get config then return some property when config repository get source type then return some source type simple config config new simple config some namespace config repository assert equal some value config get property some key null assert equal some source type config get source type test public void test load config from config repository error throw exception string some key some key string any value any value math random when config repository get config then throw mock runtime exception class config config new simple config some namespace config repository assert equal any value config get property some key any value assert equal config source type none config get source type test public void test on repository change throw exception property some property new property string some key some key string some value some value string another key another key string another value another value some property put all immutable map of some key some value another key another value property another property new property string new key new key string new value new value string some value new some value new another property put all immutable map of some key some value new new key new value some source type config source type local when config repository get config then return some property when config repository get source type then return some source type final settable future config change event config change future settable future create config change listener some listener new config change listener override public void on change config change event change event config change future set change event simple config config new simple config some namespace config repository assert equal some source type config get source type config add change listener some listener config source type another source type config source type remote when config repository get source type then return another source type config on repository change some namespace another property config change event change event config change future get time unit millisecond assert equal some namespace change event get namespace assert equal change event change key size config change some key change change event get change some key assert equal some value some key change get old value assert equal some value new some key change get new value assert equal property change type modify some key change get change type config change another key change change event get change another key assert equal another value another key change get old value assert equal null another key change get new value assert equal property change type delete another key change get change type config change new key change change event get change new key assert equal null new key change get old value assert equal new value new key change get new value assert equal property change type add new key change get change type assert equal another source type config get source type 
txt config file test run with mockito j unit runner class public class txt config file test private string some namespace mock private config repository config repository before public void set up throw exception some namespace some name test public void test when have content throw exception property some property new property string key config const config file content key string some value some value some property set property key some value when config repository get config then return some property txt config file config file new txt config file some namespace config repository assert equal config file format txt config file get config file format assert equal some namespace config file get namespace assert true config file have content assert equal some value config file get content 
xml config file test run with mockito j unit runner class public class xml config file test private string some namespace mock private config repository config repository mock private property factory property factory before public void set up throw exception some namespace some name when property factory get property instance then answer new answer property override public property answer invocation on mock invocation return new property mock injector set instance property factory class property factory after public void tear down throw exception system clear property property factory apollo property order enable test public void test when have content throw exception property some property new property string key config const config file content key string some value some value some property set property key some value when config repository get config then return some property xml config file config file new xml config file some namespace config repository assert equal config file format xml config file get config file format assert equal some namespace config file get namespace assert true config file have content assert equal some value config file get content test public void test when have no content throw exception when config repository get config then return null xml config file config file new xml config file some namespace config repository assert false config file have content assert null config file get content test public void test when config repository have error throw exception when config repository get config then throw new runtime exception some error xml config file config file new xml config file some namespace config repository assert false config file have content assert null config file get content test public void test on repository change throw exception property some property new property string key config const config file content key string some value some value string another value another value some property set property key some value when config repository get config then return some property xml config file config file new xml config file some namespace config repository assert equal some value config file get content property another property new property another property set property key another value final settable future config file change event config file change future settable future create config file change listener some listener new config file change listener override public void on change config file change event change event config file change future set change event config file add change listener some listener config file on repository change some namespace another property config file change event change event config file change future get time unit millisecond assert equal another value config file get content assert equal some namespace change event get namespace assert equal some value change event get old value assert equal another value change event get new value assert equal property change type modify change event get change type test public void test on repository change with content add throw exception property some property new property string key config const config file content key string some value some value when config repository get config then return some property xml config file config file new xml config file some namespace config repository assert equal null config file get content property another property new property another property set property key some value final settable future config file change event config file change future settable future create config file change listener some listener new config file change listener override public void on change config file change event change event config file change future set change event config file add change listener some listener config file on repository change some namespace another property config file change event change event config file change future get time unit millisecond assert equal some value config file get content assert equal some namespace change event get namespace assert equal null change event get old value assert equal some value change event get new value assert equal property change type add change event get change type test public void test on repository change with content delete throw exception property some property new property string key config const config file content key string some value some value some property set property key some value when config repository get config then return some property xml config file config file new xml config file some namespace config repository assert equal some value config file get content property another property new property final settable future config file change event config file change future settable future create config file change listener some listener new config file change listener override public void on change config file change event change event config file change future set change event config file add change listener some listener config file on repository change some namespace another property config file change event change event config file change future get time unit millisecond assert equal null config file get content assert equal some namespace change event get namespace assert equal some value change event get old value assert equal null change event get new value assert equal property change type delete change event get change type test public void test when config repository have error and then recover throw exception property some property new property string key config const config file content key string some value some value some property set property key some value when config repository get config then throw new runtime exception some error xml config file config file new xml config file some namespace config repository assert false config file have content assert null config file get content config file on repository change some namespace some property assert true config file have content assert equal some value config file get content 
yaml config file test run with mockito j unit runner class public class yaml config file test private string some namespace mock private config repository config repository mock private yaml parser yaml parser mock private property factory property factory private config source type some source type before public void set up throw exception some namespace some name mock injector reset mock injector set instance yaml parser class yaml parser when property factory get property instance then answer new answer property override public property answer invocation on mock invocation return new property mock injector set instance property factory class property factory test public void test when have content throw exception property some property new property string key config const config file content key string some content some key some value some property set property key some content some source type config source type local property yaml property new property yaml property set property some key some value when config repository get config then return some property when config repository get source type then return some source type when yaml parser yaml to property some content then return yaml property yaml config file config file new yaml config file some namespace config repository assert same some content config file get content assert same yaml property config file as property test public void test when have content with order throw exception when property factory get property instance then answer new answer property override public property answer invocation on mock invocation return new order property property some property new property string key config const config file content key string some content some key some value nsome key2 some value2 some property set property key some content some source type config source type local property yaml property new yaml parser yaml to property some content when config repository get config then return some property when config repository get source type then return some source type when yaml parser yaml to property some content then return yaml property yaml config file config file new yaml config file some namespace config repository assert same some content config file get content assert same yaml property config file as property string actual array config file as property key set to array new string string expect array some key some key2 assert array equal expect array actual array test public void test when have no content throw exception when config repository get config then return null yaml config file config file new yaml config file some namespace config repository assert false config file have content assert null config file get content property property config file as property assert true property be empty test public void test when invalid yaml content throw exception property some property new property string key config const config file content key string some invalid content some property set property key some invalid content some source type config source type local when config repository get config then return some property when config repository get source type then return some source type when yaml parser yaml to property some invalid content then throw new runtime exception some exception yaml config file config file new yaml config file some namespace config repository assert same some invalid content config file get content throwable exception throw null try config file as property catch throwable ex exception throw ex assert true exception throw instanceof apollo config exception assert not null exception throw get cause test public void test when config repository have error throw exception when config repository get config then throw new runtime exception some error yaml config file config file new yaml config file some namespace config repository assert false config file have content assert null config file get content assert equal config source type none config file get source type property property config file as property assert true property be empty test public void test on repository change throw exception property some property new property string key config const config file content key string some value some key some value string another value another key another value some property set property key some value some source type config source type local property some yaml property new property some yaml property set property some key some value property another yaml property new property another yaml property set property another key another value when config repository get config then return some property when config repository get source type then return some source type when yaml parser yaml to property some value then return some yaml property when yaml parser yaml to property another value then return another yaml property yaml config file config file new yaml config file some namespace config repository assert equal some value config file get content assert equal some source type config file get source type assert same some yaml property config file as property property another property new property another property set property key another value config source type another source type config source type remote when config repository get source type then return another source type config file on repository change some namespace another property assert equal another value config file get content assert equal another source type config file get source type assert same another yaml property config file as property test public void test when config repository have error and then recover throw exception property some property new property string key config const config file content key string some value some key some value some property set property key some value some source type config source type local property some yaml property new property some yaml property set property some key some value when config repository get config then throw new runtime exception some error when config repository get source type then return some source type when yaml parser yaml to property some value then return some yaml property yaml config file config file new yaml config file some namespace config repository assert false config file have content assert null config file get content assert equal config source type none config file get source type assert true config file as property be empty config file on repository change some namespace some property assert true config file have content assert equal some value config file get content assert equal some source type config file get source type assert same some yaml property config file as property 
bootstrap config test run with enclose class public class bootstrap config test private static final string test bean conditional on key apollo test test bean private static final string fx apollo namespace fx apollo run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional on extend abstract spring integration test private static final string some property some property private static final string some value some value autowire required false private test bean test bean apollo config private config config value some property private string some inject value private static config mock config before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true mock config mock config class when mock config get property name then return set new hash set test bean conditional on key some property when mock config get property eq test bean conditional on key any string then return boolean true to string when mock config get property eq some property any string then return some value mock config config const namespace application mock config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute assert assert equal mock config config assert assert equal some value some inject value run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and namespace and conditional on extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap namespace string format s s config const namespace application fx apollo namespace config config mock config class config another config mock config class when config get property name then return set new hash set test bean conditional on key when config get property eq test bean conditional on key any string then return boolean true to string mock config config const namespace application another config mock config fx apollo namespace config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap namespace do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and namespace and conditional on with yaml file extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap namespace string format s s application yml fx apollo namespace prepare yaml config file application yml read yaml content as config file property case6 yml config another config mock config class mock config config const namespace application another config mock config fx apollo namespace another config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap namespace do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional on fail extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true config config mock config class when config get property name then return set new hash set test bean conditional on key when config get property eq test bean conditional on key any string then return boolean false to string mock config config const namespace application config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable do tear down test public void test throw exception assert assert null test bean run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional on fail with yaml file extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap namespace application yml prepare yaml config file application yml read yaml content as config file property case7 yml after class public static void after class throw exception system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap namespace do tear down test public void test throw exception assert assert null test bean run with spring j unit4 class runner class spring boot test class configuration without conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional off extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true config config mock config class mock config config const namespace application config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute run with spring j unit4 class runner class spring boot test class configuration without conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional off with yaml file extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap namespace application yml prepare yaml config file application yml read yaml content as config file property case8 yml after class public static void after class throw exception system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap namespace do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap disabled and default namespace and conditional on extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up config config mock config class when config get property name then return set new hash set test bean conditional on key when config get property eq test bean conditional on key any string then return boolean false to string mock config config const namespace application config after class public static void after class throw exception do tear down test public void test throw exception assert assert null test bean run with spring j unit4 class runner class spring boot test class configuration without conditional on property class dirty context public static class test with bootstrap disabled and default namespace and conditional off extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up config config mock config class mock config config const namespace application config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute run with spring j unit4 class runner class spring boot test class configuration without conditional on property class dirty context public static class test with bootstrap enable and eager load enable extend abstract spring integration test before class public static void before class do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap eager load enable true config config mock config class mock config config const namespace application config after class public static void after class system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap eager load enable do tear down test public void test list environment post processor processor list spring factory loader load factory environment post processor class get class get class loader boolean contain apollo collections2 filter processor list new predicate environment post processor override public boolean apply environment post processor input return input instanceof apollo application context initializer be empty assert assert true contain apollo enable auto configuration configuration static class configuration without conditional on property bean public test bean test bean return new test bean conditional on property test bean conditional on key enable auto configuration configuration static class configuration with conditional on property bean public test bean test bean return new test bean static class test bean public boolean execute return true 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional on extend abstract spring integration test private static final string some property some property private static final string some value some value autowire required false private test bean test bean apollo config private config config value some property private string some inject value private static config mock config before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true mock config mock config class when mock config get property name then return set new hash set test bean conditional on key some property when mock config get property eq test bean conditional on key any string then return boolean true to string when mock config get property eq some property any string then return some value mock config config const namespace application mock config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute assert assert equal mock config config assert assert equal some value some inject value 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and namespace and conditional on extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap namespace string format s s config const namespace application fx apollo namespace config config mock config class config another config mock config class when config get property name then return set new hash set test bean conditional on key when config get property eq test bean conditional on key any string then return boolean true to string mock config config const namespace application another config mock config fx apollo namespace config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap namespace do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and namespace and conditional on with yaml file extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap namespace string format s s application yml fx apollo namespace prepare yaml config file application yml read yaml content as config file property case6 yml config another config mock config class mock config config const namespace application another config mock config fx apollo namespace another config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap namespace do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional on fail extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true config config mock config class when config get property name then return set new hash set test bean conditional on key when config get property eq test bean conditional on key any string then return boolean false to string mock config config const namespace application config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable do tear down test public void test throw exception assert assert null test bean 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional on fail with yaml file extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap namespace application yml prepare yaml config file application yml read yaml content as config file property case7 yml after class public static void after class throw exception system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap namespace do tear down test public void test throw exception assert assert null test bean 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration without conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional off extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true config config mock config class mock config config const namespace application config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration without conditional on property class dirty context public static class test with bootstrap enable and default namespace and conditional off with yaml file extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap namespace application yml prepare yaml config file application yml read yaml content as config file property case8 yml after class public static void after class throw exception system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap namespace do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration with conditional on property class dirty context public static class test with bootstrap disabled and default namespace and conditional on extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up config config mock config class when config get property name then return set new hash set test bean conditional on key when config get property eq test bean conditional on key any string then return boolean false to string mock config config const namespace application config after class public static void after class throw exception do tear down test public void test throw exception assert assert null test bean 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration without conditional on property class dirty context public static class test with bootstrap disabled and default namespace and conditional off extend abstract spring integration test autowire required false private test bean test bean before class public static void before class throw exception do set up config config mock config class mock config config const namespace application config after class public static void after class throw exception system clear property property source constant apollo bootstrap enable do tear down test public void test throw exception assert assert not null test bean assert assert true test bean execute 
bootstrap config test run with spring j unit4 class runner class spring boot test class configuration without conditional on property class dirty context public static class test with bootstrap enable and eager load enable extend abstract spring integration test before class public static void before class do set up system set property property source constant apollo bootstrap enable true system set property property source constant apollo bootstrap eager load enable true config config mock config class mock config config const namespace application config after class public static void after class system clear property property source constant apollo bootstrap enable system clear property property source constant apollo bootstrap eager load enable do tear down test public void test list environment post processor processor list spring factory loader load factory environment post processor class get class get class loader boolean contain apollo collections2 filter processor list new predicate environment post processor override public boolean apply environment post processor input return input instanceof apollo application context initializer be empty assert assert true contain apollo 
config property source test run with mockito j unit runner class public class config property source test private config property source config property source mock private config some config before public void set up throw exception string some name some name config property source new config property source some name some config test public void test get property name throw exception string some property name some property name string another property name another property name set string some property name set new hash set some property name another property name when some config get property name then return some property name string result config property source get property name verify some config time get property name assert array equal some property name to array result test public void test get empty property name throw exception when some config get property name then return set string new hash set assert equal config property source get property name length test public void test get property throw exception string some property name some property name string some value some value when some config get property some property name null then return some value assert equal some value config property source get property some property name verify some config time get property some property name null test public void test add change listener throw exception config change listener some listener mock config change listener class config change listener another listener mock config change listener class final list config change listener listener list new array list do answer new answer override public object answer invocation on mock invocation throw throwable listener add invocation get argument at config change listener class return void class when some config add change listener any config change listener class config property source add change listener some listener config property source add change listener another listener assert equal listener size assert true listener contain all list new array list some listener another listener 
conditional on profile test run with spring j unit4 class runner class context configuration class conditional on profile test test configuration class active profile some profile another profile public class conditional on profile test static final string some profile some profile static final string another profile another profile static final string yet another profile yet another profile static boolean some configuration enable false static boolean another configuration enable false static boolean yet another configuration enable false static boolean combine configuration enable false static boolean another combine configuration enable false test public void test throw exception assert true some configuration enable assert false another configuration enable assert true yet another configuration enable assert true combine configuration enable assert false another combine configuration enable configuration static class test configuration configuration conditional on profile some profile static class some configuration some configuration enable true configuration conditional on miss profile another profile static class another configuration another configuration enable true configuration conditional on miss profile yet another profile static class yet another configuration yet another configuration enable true configuration conditional on profile some profile another profile conditional on miss profile yet another profile static class combine configuration combine configuration enable true configuration conditional on profile some profile conditional on miss profile yet another profile another profile static class another combine configuration another combine configuration enable true 
config controller test run with mockito j unit runner class public class config controller test private config controller config controller mock private config service config service mock private app namespace service with cache app namespace service private string some app id private string some cluster name private string default cluster name private string default namespace name private string some public namespace name private string some datum center private string some client ip private string some message as string mock private apollo notification message some notification message mock private release some release mock private release some public release mock private namespace util namespace util mock private instance config audit util instance config audit util mock private http servlet request some request private gson gson new gson before public void set up throw exception config controller spy new config controller config service app namespace service namespace util instance config audit util gson some app id some cluster name some cluster name default cluster name config const cluster name default default namespace name config const namespace application some public namespace name some public namespace some datum center some d c some client ip some client ip string some valid configuration apollo bar foo string some public configuration apollo public bar foo when some release get app id then return some app id when some release get cluster name then return some cluster name when some release get configuration then return some valid configuration when some public release get configuration then return some public configuration when namespace util filter namespace name default namespace name then return default namespace name when namespace util filter namespace name some public namespace name then return some public namespace name when namespace util normalize namespace some app id default namespace name then return default namespace name when namespace util normalize namespace some app id some public namespace name then return some public namespace name some message as string some valid json when config controller transform message some message as string then return some notification message test public void test query config throw exception string some client side release key string some server side new release key http servlet response some response mock http servlet response class when config service load config some app id some client ip some app id some cluster name default namespace name some datum center some notification message then return some release when some release get release key then return some server side new release key when some release get namespace name then return default namespace name apollo config result config controller query config some app id some cluster name default namespace name some datum center some client side release key some client ip some message as string some request some response verify config service time load config some app id some client ip some app id some cluster name default namespace name some datum center some notification message assert equal some app id result get app id assert equal some cluster name result get cluster assert equal default namespace name result get namespace name assert equal some server side new release key result get release key verify instance config audit util time audit some app id some cluster name some datum center some client ip some app id some cluster name default namespace name some server side new release key test public void test query config file throw exception string some client side release key string some server side new release key http servlet response some response mock http servlet response class string some namespace name string format s s default cluster name property when config service load config some app id some client ip some app id some cluster name default namespace name some datum center some notification message then return some release when some release get release key then return some server side new release key when namespace util filter namespace name some namespace name then return default namespace name when namespace util normalize namespace some app id default namespace name then return default namespace name apollo config result config controller query config some app id some cluster name some namespace name some datum center some client side release key some client ip some message as string some request some response verify config service time load config some app id some client ip some app id some cluster name default namespace name some datum center some notification message assert equal some app id result get app id assert equal some cluster name result get cluster assert equal some namespace name result get namespace name assert equal some server side new release key result get release key test public void test query config file with private namespace throw exception string some client side release key string some server side new release key string some private namespace datasource http servlet response some response mock http servlet response class string some private namespace name string format s s some private namespace xml app namespace app namespace mock app namespace class when config service load config some app id some client ip some app id some cluster name some private namespace some datum center some notification message then return some release when some release get release key then return some server side new release key when namespace util filter namespace name some private namespace name then return some private namespace when namespace util normalize namespace some app id some private namespace then return some private namespace when app namespace service find by app id and namespace some app id some private namespace then return app namespace apollo config result config controller query config some app id some cluster name some private namespace name some datum center some client side release key some client ip some message as string some request some response assert equal some app id result get app id assert equal some cluster name result get cluster assert equal some private namespace name result get namespace name assert equal some server side new release key result get release key test public void test query config with release not find throw exception string some client side release key http servlet response some response mock http servlet response class when config service load config some app id some client ip some app id some cluster name default namespace name some datum center some notification message then return null apollo config result config controller query config some app id some cluster name default namespace name some datum center some client side release key some client ip some message as string some request some response assert null result verify some response time send error eq http servlet response sc not find any string test public void test query config with apollo config not modify throw exception string some client side release key string some server side release key some client side release key http servlet response some response mock http servlet response class when config service load config some app id some client ip some app id some cluster name default namespace name some datum center some notification message then return some release when some release get release key then return some server side release key apollo config result config controller query config some app id some cluster name default namespace name some datum center string value of some client side release key some client ip some message as string some request some response assert null result verify some response time set status http servlet response sc not modify test public void test query config with app own namespace throw exception string some client side release key string some server side release key string some app own namespace name some app own http servlet response some response mock http servlet response class app namespace some app own namespace assemble public app namespace some app id some app own namespace name when config service load config some app id some client ip some app id some cluster name some app own namespace name some datum center some notification message then return some release when app namespace service find public namespace by name some app own namespace name then return some app own namespace when some release get release key then return some server side release key when namespace util filter namespace name some app own namespace name then return some app own namespace name when namespace util normalize namespace some app id some app own namespace name then return some app own namespace name apollo config result config controller query config some app id some cluster name some app own namespace name some datum center some client side release key some client ip some message as string some request some response assert equal some server side release key result get release key assert equal some app id result get app id assert equal some cluster name result get cluster assert equal some app own namespace name result get namespace name assert equal foo result get configuration get apollo bar test public void test query config with pubic namespace and no app override throw exception string some client side release key string some server side release key http servlet response some response mock http servlet response class string some public app id some public app id string some public cluster name some public cluster name app namespace some public app namespace assemble public app namespace some public app id some public namespace name when config service load config some app id some client ip some app id some cluster name some public namespace name some datum center some notification message then return null when app namespace service find public namespace by name some public namespace name then return some public app namespace when config service load config some app id some client ip some public app id some cluster name some public namespace name some datum center some notification message then return some public release when some public release get release key then return some server side release key when some public release get app id then return some public app id when some public release get cluster name then return some public cluster name when some public release get namespace name then return some public namespace name apollo config result config controller query config some app id some cluster name some public namespace name some datum center some client side release key some client ip some message as string some request some response assert equal some server side release key result get release key assert equal some app id result get app id assert equal some cluster name result get cluster assert equal some public namespace name result get namespace name assert equal foo result get configuration get apollo public bar verify instance config audit util time audit some app id some cluster name some datum center some client ip some public app id some public cluster name some public namespace name some server side release key test public void test query config file with public namespace and no app override throw exception string some client side release key string some server side release key http servlet response some response mock http servlet response class string some public app id some public app id string some namespace string format s s some public namespace name property app namespace some public app namespace assemble public app namespace some public app id some public namespace name when config service load config some app id some client ip some app id some cluster name some public namespace name some datum center some notification message then return null when app namespace service find public namespace by name some public namespace name then return some public app namespace when config service load config some app id some client ip some public app id some cluster name some public namespace name some datum center some notification message then return some public release when some public release get release key then return some server side release key when namespace util filter namespace name some namespace then return some public namespace name when namespace util normalize namespace some app id some public namespace name then return some public namespace name when app namespace service find by app id and namespace some app id some public namespace name then return null apollo config result config controller query config some app id some cluster name some namespace some datum center some client side release key some client ip some message as string some request some response assert equal some server side release key result get release key assert equal some app id result get app id assert equal some cluster name result get cluster assert equal some namespace result get namespace name assert equal foo result get configuration get apollo public bar test public void test query config with public namespace and app override throw exception string some app side release key string some public app side release key http servlet response some response mock http servlet response class string some public app id some public app id app namespace some public app namespace assemble public app namespace some public app id some public namespace name when some release get configuration then return apollo public foo foo override when some public release get configuration then return apollo public foo foo apollo public bar bar when config service load config some app id some client ip some app id some cluster name some public namespace name some datum center some notification message then return some release when some release get release key then return some app side release key when some release get namespace name then return some public namespace name when app namespace service find public namespace by name some public namespace name then return some public app namespace when config service load config some app id some client ip some public app id some cluster name some public namespace name some datum center some notification message then return some public release when some public release get release key then return some public app side release key when some public release get app id then return some public app id when some public release get cluster name then return some datum center when some public release get namespace name then return some public namespace name apollo config result config controller query config some app id some cluster name some public namespace name some datum center some app side release key some client ip some message as string some request some response assert equal joiner on config const cluster namespace separator join some app side release key some public app side release key result get release key assert equal some app id result get app id assert equal some cluster name result get cluster assert equal some public namespace name result get namespace name assert equal foo override result get configuration get apollo public foo assert equal bar result get configuration get apollo public bar verify instance config audit util time audit some app id some cluster name some datum center some client ip some app id some cluster name some public namespace name some app side release key verify instance config audit util time audit some app id some cluster name some datum center some client ip some public app id some datum center some public namespace name some public app side release key test public void test merge configuration throw exception gson gson new gson string key1 key1 string value1 value1 string another value1 another value1 string key2 key2 string value2 value2 map string string config immutable map of key1 another value1 map string string another config immutable map of key1 value1 key2 value2 release release with high priority new release release with high priority set configuration gson to json config release release with low priority new release release with low priority set configuration gson to json another config map string string result config controller merge release configuration list new array list release with high priority release with low priority assert equal result key set size assert equal another value1 result get key1 assert equal value2 result get key2 test expect json syntax exception class public void test transform configuration to map fail throw exception string some invalid configuration xxx release some release new release some release set configuration some invalid configuration config controller merge release configuration list new array list some release test public void test query config for no app id place holder throw exception string some client side release key http servlet response some response mock http servlet response class string app id config const no appid placeholder apollo config result config controller query config app id some cluster name default namespace name some datum center some client side release key some client ip some message as string some request some response verify config service never load config app id some client ip some app id some cluster name default namespace name some datum center some notification message verify app namespace service never find public namespace by name default namespace name assert null result verify some response time send error eq http servlet response sc not find any string test public void test query config for no app id place holder with public namespace throw exception string some client side release key string some server side release key http servlet response some response mock http servlet response class string some public app id some public app id app namespace some public app namespace assemble public app namespace some public app id some public namespace name string app id config const no appid placeholder when app namespace service find public namespace by name some public namespace name then return some public app namespace when config service load config app id some client ip some public app id some cluster name some public namespace name some datum center some notification message then return some public release when some public release get release key then return some server side release key when namespace util normalize namespace app id some public namespace name then return some public namespace name apollo config result config controller query config app id some cluster name some public namespace name some datum center some client side release key some client ip some message as string some request some response verify config service never load config app id some client ip app id some cluster name some public namespace name some datum center some notification message assert equal some server side release key result get release key assert equal app id result get app id assert equal some cluster name result get cluster assert equal some public namespace name result get namespace name assert equal foo result get configuration get apollo public bar test public void test transform message throw exception string some key some key long some notification id string another key another key long another notification id apollo notification message notification message new apollo notification message notification message put some key some notification id notification message put another key another notification id string some message as string gson to json notification message apollo notification message result config controller transform message some message as string assert equal notification message get detail result get detail test public void test transform invalid message throw exception string some invalid message some invalid message assert null config controller transform message some invalid message private app namespace assemble public app namespace string app id string namespace return assemble app namespace app id namespace true private app namespace assemble app namespace string app id string namespace boolean be public app namespace app namespace new app namespace app namespace set app id app id app namespace set name namespace app namespace set public be public return app namespace 
config file controller test run with mockito j unit runner class public class config file controller test mock private config controller config controller mock private watch key util watch key util mock private namespace util namespace util mock private gray release rule holder gray release rule holder private config file controller config file controller private string some app id private string some cluster name private string some namespace private string some datum center private string some client ip mock private http servlet response some response mock private http servlet request some request multimap string string watch keys2 cache key multimap string string cache key2 watch key before public void set up throw exception config file controller new config file controller config controller namespace util watch key util gray release rule holder some app id some app id some cluster name some cluster name some namespace some namespace some datum center some datum center some client ip 10.1 1.1 when namespace util filter namespace name some namespace then return some namespace when namespace util normalize namespace some app id some namespace then return some namespace when gray release rule holder have gray release rule any string any string any string then return false watch keys2 cache key multimap string string reflection test util get field config file controller watch keys2 cache key cache key2 watch key multimap string string reflection test util get field config file controller cache key2 watch key test public void test query config as property throw exception string some key some key string some value some value string another key another key string another value another value string some watch key some watch key string another watch key another watch key set string watch key set new hash set some watch key another watch key string cache key config file controller assemble cache key config file controller config file output format property some app id some cluster name some namespace some datum center map string string configuration immutable map of some key some value another key another value apollo config some apollo config mock apollo config class when some apollo config get configuration then return configuration when config controller query config some app id some cluster name some namespace some datum center some client ip null some request some response then return some apollo config when watch key util assemble all watch key some app id some cluster name some namespace some datum center then return watch key response entity string response config file controller query config as property some app id some cluster name some namespace some datum center some client ip some request some response assert equal watch keys2 cache key size assert equal cache key2 watch key size assert true watch keys2 cache key contain entry some watch key cache key assert true watch keys2 cache key contain entry another watch key cache key assert true cache key2 watch key contain entry cache key some watch key assert true cache key2 watch key contain entry cache key another watch key assert equal http status ok response get status code assert true response get body contain string format s s some key some value assert true response get body contain string format s s another key another value response entity string another response config file controller query config as property some app id some cluster name some namespace some datum center some client ip some request some response assert equal response another response verify config controller time query config some app id some cluster name some namespace some datum center some client ip null some request some response test public void test query config as json throw exception string some key some key string some value some value gson gson new gson type response type new type token map string string get type string some watch key some watch key set string watch key set new hash set some watch key map string string configuration immutable map of some key some value apollo config some apollo config mock apollo config class when config controller query config some app id some cluster name some namespace some datum center some client ip null some request some response then return some apollo config when some apollo config get configuration then return configuration when watch key util assemble all watch key some app id some cluster name some namespace some datum center then return watch key response entity string response config file controller query config as json some app id some cluster name some namespace some datum center some client ip some request some response assert equal http status ok response get status code assert equal configuration gson from json response get body response type test public void test query config with gray release throw exception string some key some key string some value some value gson gson new gson type response type new type token map string string get type map string string configuration immutable map of some key some value when gray release rule holder have gray release rule some app id some client ip some namespace then return true apollo config some apollo config mock apollo config class when some apollo config get configuration then return configuration when config controller query config some app id some cluster name some namespace some datum center some client ip null some request some response then return some apollo config response entity string response config file controller query config as json some app id some cluster name some namespace some datum center some client ip some request some response response entity string another response config file controller query config as json some app id some cluster name some namespace some datum center some client ip some request some response verify config controller time query config some app id some cluster name some namespace some datum center some client ip null some request some response assert equal http status ok response get status code assert equal configuration gson from json response get body response type assert true watch keys2 cache key be empty assert true cache key2 watch key be empty test public void test handle message throw exception string some watch key some watch key string another watch key another watch key string some cache key some cache key string another cache key another cache key string some value some value release message some release message mock release message class when some release message get message then return some watch key cache string string cache cache string string reflection test util get field config file controller local cache cache put some cache key some value cache put another cache key some value watch keys2 cache key put all some watch key list new array list some cache key another cache key watch keys2 cache key put all another watch key list new array list some cache key another cache key cache key2 watch key put all some cache key list new array list some watch key another watch key cache key2 watch key put all another cache key list new array list some watch key another watch key config file controller handle message some release message topic apollo release topic assert true watch keys2 cache key be empty assert true cache key2 watch key be empty 
notification controller test run with mockito j unit runner class public class notification controller test private notification controller controller private string some app id private string some cluster private string default namespace private string some datum center private long some notification id private string some client ip mock private release message service with cache release message service mock private entity manager util entity manager util mock private namespace util namespace util mock private watch key util watch key util private multimap string defer result response entity apollo config notification defer result before public void set up throw exception controller new notification controller watch key util release message service entity manager util namespace util some app id some app id some cluster some cluster default namespace config const namespace application some datum center some d c some notification id some client ip some client ip when namespace util filter namespace name default namespace then return default namespace defer result multimap string defer result response entity apollo config notification reflection test util get field controller defer result test public void test poll notification with default namespace throw exception string some watch key some key string another watch key another key set string watch key set new hash set some watch key another watch key when watch key util assemble all watch key some app id some cluster default namespace some datum center then return watch key defer result response entity apollo config notification defer result controller poll notification some app id some cluster default namespace some datum center some notification id some client ip assert equal watch key size defer result size for string watch key watch key assert true defer result get watch key contain deferred result test public void test poll notification with default namespace as file throw exception string namespace string format s s default namespace property when namespace util filter namespace name namespace then return default namespace string some watch key some key string another watch key another key set string watch key set new hash set some watch key another watch key when watch key util assemble all watch key some app id some cluster default namespace some datum center then return watch key defer result response entity apollo config notification defer result controller poll notification some app id some cluster namespace some datum center some notification id some client ip assert equal watch key size defer result size for string watch key watch key assert true defer result get watch key contain deferred result test public void test poll notification with some namespace as file throw exception string namespace string format some namespace xml when namespace util filter namespace name namespace then return namespace string some watch key some key set string watch key set new hash set some watch key when watch key util assemble all watch key some app id some cluster namespace some datum center then return watch key defer result response entity apollo config notification defer result controller poll notification some app id some cluster namespace some datum center some notification id some client ip assert equal watch key size defer result size for string watch key watch key assert true defer result get watch key contain deferred result test public void test poll notification with default namespace with notification id out date throw exception long notification id some notification id release message some release message mock release message class string some watch key some key set string watch key set new hash set some watch key when watch key util assemble all watch key some app id some cluster default namespace some datum center then return watch key when some release message get id then return notification id when release message service find latest release message for message watch key then return some release message defer result response entity apollo config notification defer result controller poll notification some app id some cluster default namespace some datum center some notification id some client ip response entity apollo config notification result response entity apollo config notification defer result get result assert equal http status ok result get status code assert equal default namespace result get body get namespace name assert equal notification id result get body get notification id test public void test poll notification with default namespace and handle message throw exception string some watch key some key string another watch key joiner on config const cluster namespace separator join some app id some cluster default namespace set string watch key set new hash set some watch key another watch key when watch key util assemble all watch key some app id some cluster default namespace some datum center then return watch key defer result response entity apollo config notification defer result controller poll notification some app id some cluster default namespace some datum center some notification id some client ip long some id release message some release message new release message another watch key some release message set id some id controller handle message some release message topic apollo release topic response entity apollo config notification response response entity apollo config notification defer result get result apollo config notification notification response get body assert equal http status ok response get status code assert equal default namespace notification get namespace name assert equal some id notification get notification id 
notification controller v2 test run with mockito j unit runner class public class notification controller v2 test private notification controller v2 controller private string some app id private string some cluster private string default cluster private string default namespace private string some public namespace private string some datum center private long some notification id private string some client ip mock private release message service with cache release message service mock private entity manager util entity manager util mock private namespace util namespace util mock private watch key util watch key util mock private biz config biz config private gson gson private multimap string defer result wrapper defer result before public void set up throw exception gson new gson controller new notification controller v2 watch key util release message service entity manager util namespace util gson biz config when biz config release message notification batch then return when biz config release message notification batch interval in milli then return some app id some app id some cluster some cluster default cluster config const cluster name default default namespace config const namespace application some public namespace some public namespace some datum center some d c some notification id some client ip some client ip when namespace util filter namespace name default namespace then return default namespace when namespace util filter namespace name some public namespace then return some public namespace when namespace util normalize namespace some app id default namespace then return default namespace when namespace util normalize namespace some app id some public namespace then return some public namespace defer result multimap string defer result wrapper reflection test util get field controller defer result test public void test poll notification with default namespace throw exception string some watch key some key string another watch key another key multimap string string watch key map assemble multi map default namespace list new array list some watch key another watch key string notification as string transform apollo config notification to string default namespace some notification id when watch key util assemble all watch key some app id some cluster set new hash set default namespace some datum center then return watch key map defer result response entity list apollo config notification defer result controller poll notification some app id some cluster notification as string some datum center some client ip assert equal watch key map size defer result size assert watch key watch key map defer result test public void test poll notification with default namespace as file throw exception string namespace string format s s default namespace property when namespace util filter namespace name namespace then return default namespace string some watch key some key string another watch key another key multimap string string watch key map assemble multi map default namespace list new array list some watch key another watch key string notification as string transform apollo config notification to string namespace some notification id when watch key util assemble all watch key some app id some cluster set new hash set default namespace some datum center then return watch key map defer result response entity list apollo config notification defer result controller poll notification some app id some cluster notification as string some datum center some client ip assert equal watch key map size defer result size assert watch key watch key map defer result test public void test poll notification with multiple namespace throw exception string default namespace as file default namespace property string some public namespace as file some public namespace xml when namespace util filter namespace name default namespace as file then return default namespace when namespace util filter namespace name some public namespace as file then return some public namespace as file when namespace util normalize namespace some app id some public namespace as file then return some public namespace as file string some watch key some key string another watch key another key string some public watch key some public watch key string some public file watch key some public file watch key multimap string string watch key map assemble multi map default namespace list new array list some watch key another watch key watch key map put all assemble multi map some public namespace list new array list some public watch key watch key map put all assemble multi map some public namespace as file list new array list some public file watch key string notification as string transform apollo config notification to string default namespace as file some notification id some public namespace some notification id some public namespace as file some notification id when watch key util assemble all watch key some app id some cluster set new hash set default namespace some public namespace some public namespace as file some datum center then return watch key map defer result response entity list apollo config notification defer result controller poll notification some app id some cluster notification as string some datum center some client ip assert equal watch key map size defer result size assert watch key watch key map deferred result verify watch key util time assemble all watch key some app id some cluster set new hash set default namespace some public namespace some public namespace as file some datum center test public void test poll notification with multiple namespace with notification id out date throw exception string some watch key some key string another watch key joiner on config const cluster namespace separator join some app id some cluster some public namespace string yet another watch key joiner on config const cluster namespace separator join some app id default cluster some public namespace long notification id some notification id long yet another notification id some notification id multimap string string watch key map assemble multi map default namespace list new array list some watch key watch key map put all assemble multi map some public namespace list new array list another watch key yet another watch key when watch key util assemble all watch key some app id some cluster set new hash set default namespace some public namespace some datum center then return watch key map release message some release message mock release message class when some release message get id then return notification id when some release message get message then return another watch key release message yet another release message mock release message class when yet another release message get id then return yet another notification id when yet another release message get message then return yet another watch key when release message service find latest release message group by message set new hash set watch key map value then return list new array list some release message yet another release message string notification as string transform apollo config notification to string default namespace some notification id some public namespace some notification id defer result response entity list apollo config notification defer result controller poll notification some app id some cluster notification as string some datum center some client ip response entity list apollo config notification result response entity list apollo config notification defer result get result assert equal http status ok result get status code assert equal result get body size assert equal some public namespace result get body get get namespace name assert equal notification id result get body get get notification id apollo notification message notification message result get body get get message assert equal notification message get detail size assert equal notification id notification message get another watch key long value assert equal yet another notification id notification message get yet another watch key long value test public void test poll notification with multiple namespace and handle message throw exception string some watch key some key string another watch key joiner on config const cluster namespace separator join some app id some cluster some public namespace multimap string string watch key map assemble multi map default namespace list new array list some watch key watch key map put all assemble multi map some public namespace list new array list another watch key when watch key util assemble all watch key some app id some cluster set new hash set default namespace some public namespace some datum center then return watch key map string notification as string transform apollo config notification to string default namespace some notification id some public namespace some notification id defer result response entity list apollo config notification defer result controller poll notification some app id some cluster notification as string some datum center some client ip assert equal watch key map size defer result size long some id release message some release message new release message another watch key some release message set id some id controller handle message some release message topic apollo release topic response entity list apollo config notification response response entity list apollo config notification defer result get result assert equal response get body size apollo config notification notification response get body get assert equal http status ok response get status code assert equal some public namespace notification get namespace name assert equal some id notification get notification id apollo notification message notification message response get body get get message assert equal notification message get detail size assert equal some id notification message get another watch key long value test public void test poll notification with handle message in batch throw exception string some watch key joiner on config const cluster namespace separator join some app id some cluster default namespace int some batch int some batch interval multimap string string watch key map assemble multi map default namespace list new array list some watch key string notification as string transform apollo config notification to string default namespace some notification id when watch key util assemble all watch key some app id some cluster set new hash set default namespace some datum center then return watch key map when biz config release message notification batch then return some batch when biz config release message notification batch interval in milli then return some batch interval defer result response entity list apollo config notification defer result controller poll notification some app id some cluster notification as string some datum center some client ip defer result response entity list apollo config notification another deferred result controller poll notification some app id some cluster notification as string some datum center some client ip long some id release message some release message new release message some watch key some release message set id some id controller handle message some release message topic apollo release topic in batch mode at most one of they should have result assert false deferred result have result another deferred result have result time unit millisecond sleep some batch interval now both of they should have result assert true deferred result have result another deferred result have result test public void test poll notification with incorrect case throw exception string app id with incorrect case some app id to upper case string namespace with incorrect case default namespace to upper case string some message joiner on config const cluster namespace separator join some app id some cluster default namespace string some watch key joiner on config const cluster namespace separator join app id with incorrect case some cluster default namespace multimap string string watch key map assemble multi map default namespace list new array list some watch key string notification as string transform apollo config notification to string default namespace to upper case some notification id when namespace util filter namespace name namespace with incorrect case then return namespace with incorrect case when namespace util normalize namespace app id with incorrect case namespace with incorrect case then return default namespace when watch key util assemble all watch key app id with incorrect case some cluster set new hash set default namespace some datum center then return watch key map defer result response entity list apollo config notification defer result controller poll notification app id with incorrect case some cluster notification as string some datum center some client ip long some id release message some release message new release message some message some release message set id some id controller handle message some release message topic apollo release topic assert true deferred result have result response entity list apollo config notification response response entity list apollo config notification defer result get result assert equal response get body size apollo config notification notification response get body get assert equal http status ok response get status code assert equal namespace with incorrect case notification get namespace name assert equal some id notification get notification id apollo notification message notification message notification get message assert equal notification message get detail size assert equal some id notification message get some message long value private string transform apollo config notification to string string namespace long notification id list apollo config notification notification list new array list assemble apollo config notification namespace notification id return gson to json notification private string transform apollo config notification to string string namespace long notification id string another namespace long another notification id list apollo config notification notification list new array list assemble apollo config notification namespace notification id assemble apollo config notification another namespace another notification id return gson to json notification private string transform apollo config notification to string string namespace long notification id string another namespace long another notification id string yet another namespace long yet another notification id list apollo config notification notification list new array list assemble apollo config notification namespace notification id assemble apollo config notification another namespace another notification id assemble apollo config notification yet another namespace yet another notification id return gson to json notification private apollo config notification assemble apollo config notification string namespace long notification id apollo config notification notification new apollo config notification namespace notification id return notification private multimap string string assemble multi map string key iterable string value multimap string string multimap hash multimap create multimap put all key value return multimap private void assert watch key multimap string string watch key map deferred result defer result for string watch key watch key map value collection defer result wrapper defer result wrapper defer result get watch key boolean find false for deferred result wrapper wrapper defer result wrapper if object equal wrapper get result deferred result find true assert true find 
client authentication filter test run with mockito j unit runner class public class client authentication filter test private client authentication filter client authentication filter mock private access key util access key util mock private http servlet request request mock private http servlet response response mock private filter chain filter chain before public void set up client authentication filter new client authentication filter access key util test public void test invalid app id throw exception when access key util extract app id from request any then return null client authentication filter do filter request response filter chain verify response send error http servlet response sc bad request invalid app id verify filter chain never do filter request response test public void test request time too skewed throw exception string app id some app id list string secret list new array list some secret string one min ago timestamp long to string system current time millis when access key util extract app id from request any then return app id when access key util find available secret app id then return secret when request get header signature http header timestamp then return one min ago timestamp client authentication filter do filter request response filter chain verify response send error http servlet response sc unauthorized request time too skewed verify filter chain never do filter request response test public void test unauthorized throw exception string app id some app id string available signature some signature list string secret list new array list some secret string one min ago timestamp long to string system current time millis string error authorization apollo some app id wrong signature when access key util extract app id from request any then return app id when access key util find available secret app id then return secret when access key util build signature any any any any then return available signature when request get header signature http header timestamp then return one min ago timestamp when request get header signature http header authorization then return error authorization client authentication filter do filter request response filter chain verify response send error http servlet response sc unauthorized unauthorized verify filter chain never do filter request response test public void test authorize successfully throw exception string app id some app id string available signature some signature list string secret list new array list some secret string one min ago timestamp long to string system current time millis string correct authorization apollo some app id some signature when access key util extract app id from request any then return app id when access key util find available secret app id then return secret when access key util build signature any any any any then return available signature when request get header signature http header timestamp then return one min ago timestamp when request get header signature http header authorization then return correct authorization client authentication filter do filter request response filter chain verify response never send error http servlet response sc bad request invalid app id verify response never send error http servlet response sc unauthorized request time too skewed verify response never send error http servlet response sc unauthorized unauthorized verify filter chain time do filter request response 
abstract base integration test run with spring j unit4 class runner class spring boot test class abstract base integration test test configuration class web environment web environment random port public abstract class abstract base integration test autowire private release message repository release message repository autowire private release repository release repository private gson gson new gson protect rest template rest template new test rest template get rest template post construct private void post construct rest template set error handler new default response error handler value local server port int port protect string get host url return localhost port configuration import config service test configuration class protect static class test configuration bean public biz config biz config final biz d b property source biz d b property source return new test biz config biz d b property source protect void send release message string message release message release message new release message message release message repository save release message public release build release string name string comment namespace namespace map string string configuration string owner release release new release release set release key release key generator generate release key namespace release set datum change create time new date release set datum change create by owner release set datum change last modify by owner release set name name release set comment comment release set app id namespace get app id release set cluster name namespace get cluster name release set namespace name namespace get namespace name release set configuration gson to json configuration release release repository save release return release protect void periodic send message executor service executor service string message atomic boolean stop executor service submit runnable wait for the request connect to server while stop get thread current thread be interrupted try time unit millisecond sleep catch interrupted exception e double check if stop get break send release message message private static class test biz config extend biz config public test biz config final biz d b property source property source super property source override public int app namespace cache scan interval should be short enough to update the app namespace cache in time return override public time unit app namespace cache scan interval time unit return time unit millisecond 
access key service with cache test run with mockito j unit runner silent class public class access key service with cache test private access key service with cache access key service with cache mock private access key repository access key repository mock private biz config biz config private int scan interval private time unit scan interval time unit before public void set up access key service with cache new access key service with cache access key repository biz config scan interval scan interval time unit time unit millisecond when biz config access key cache scan interval then return scan interval when biz config access key cache scan interval time unit then return scan interval time unit when biz config access key cache rebuild interval then return scan interval when biz config access key cache rebuild interval time unit then return scan interval time unit test public void test get available secret throw exception string app id some app id access key first access key assemble access key 1 l app id secret false false l access key second access key assemble access key 2 l app id secret false false l access key third access key assemble access key 3 l app id secret true false l initialize access key service with cache after property set assert that access key service with cache get available secret app id be empty add access key disable by default when access key repository find first500 by datum change last modify time greater than order by datum change last modify time asc new date 0 l then return list new array list first access key second access key when access key repository find all by id any list then return list new array list first access key second access key scan interval time unit sleep scan interval assert that access key service with cache get available secret app id be empty update access key enable both of they first access key assemble access key 1 l app id secret true false l second access key assemble access key 2 l app id secret true false l when access key repository find first500 by datum change last modify time greater than order by datum change last modify time asc new date l then return list new array list first access key second access key when access key repository find all by id any list then return list new array list first access key second access key scan interval time unit sleep scan interval assert that access key service with cache get available secret app id contain exactly secret secret update access key disable the first one first access key assemble access key 1 l app id secret false false l when access key repository find first500 by datum change last modify time greater than order by datum change last modify time asc new date l then return list new array list first access key when access key repository find all by id any list then return list new array list first access key second access key scan interval time unit sleep scan interval assert that access key service with cache get available secret app id contain exactly secret delete access key delete the second one when access key repository find all by id any list then return list new array list first access key scan interval time unit sleep scan interval assert that access key service with cache get available secret app id be empty add new access key in runtime enable by default when access key repository find first500 by datum change last modify time greater than order by datum change last modify time asc new date l then return list new array list third access key when access key repository find all by id any list then return list new array list first access key third access key scan interval time unit sleep scan interval assert that access key service with cache get available secret app id contain exactly secret public access key assemble access key long id string app id string secret boolean enable boolean delete long datum change last modify time access key access key new access key access key set id id access key set app id app id access key set secret secret access key set enable enable access key set delete delete access key set datum change last modify time new date datum change last modify time return access key 
app namespace service with cache test run with mockito j unit runner class public class app namespace service with cache test private app namespace service with cache app namespace service with cache mock private app namespace repository app namespace repository mock private biz config biz config private int scan interval private time unit scan interval time unit private comparator app namespace app namespace comparator o1 o2 int o1 get id o2 get id before public void set up throw exception app namespace service with cache new app namespace service with cache app namespace repository biz config scan interval scan interval time unit time unit millisecond when biz config app namespace cache rebuild interval then return scan interval when biz config app namespace cache rebuild interval time unit then return scan interval time unit when biz config app namespace cache scan interval then return scan interval when biz config app namespace cache scan interval time unit then return scan interval time unit test public void test app namespace throw exception string some app id some app id string some private namespace some private namespace string some private namespace with incorrect case some private namespace to upper case long some private namespace id string yet another private namespace another private namespace long yet another private namespace id string another public namespace another public namespace long another public namespace id string some public app id some public app id string some public namespace some public namespace string some public namespace with incorrect case some public namespace to upper case long some public namespace id string another private namespace another private namespace long another private namespace id int sleep interval scan interval app namespace some private app namespace assemble app namespace some private namespace id some app id some private namespace false app namespace some public app namespace assemble app namespace some public namespace id some public app id some public namespace true app namespace another private app namespace assemble app namespace another private namespace id some public app id another private namespace false app namespace yet another private app namespace assemble app namespace yet another private namespace id some app id yet another private namespace false app namespace another public app namespace assemble app namespace another public namespace id some app id another public namespace true set string some app id namespace set new hash set some private namespace yet another private namespace another public namespace set string some app id namespace with incorrect case set new hash set some private namespace with incorrect case yet another private namespace another public namespace set string some public app id namespace set new hash set some public namespace another private namespace set string public namespace set new hash set some public namespace another public namespace set string public namespace with incorrect case set new hash set some public namespace with incorrect case another public namespace list long app namespace id list new array list some private namespace id some public namespace id another private namespace id yet another private namespace id another public namespace id list app namespace all app namespace list new array list some private app namespace some public app namespace another private app namespace yet another private app namespace another public app namespace test init app namespace service with cache after property set should have no record now assert null app namespace service with cache find by app id and namespace some app id some private namespace assert null app namespace service with cache find by app id and namespace some app id some private namespace with incorrect case assert null app namespace service with cache find by app id and namespace some app id yet another private namespace assert null app namespace service with cache find by app id and namespace some app id another public namespace assert true app namespace service with cache find by app id and namespace some app id some app id namespace be empty assert true app namespace service with cache find by app id and namespace some app id some app id namespace with incorrect case be empty assert null app namespace service with cache find by app id and namespace some public app id some public namespace assert null app namespace service with cache find by app id and namespace some public app id some public namespace with incorrect case assert null app namespace service with cache find by app id and namespace some public app id another private namespace assert true app namespace service with cache find by app id and namespace some public app id some public app id namespace be empty assert null app namespace service with cache find public namespace by name some public namespace assert null app namespace service with cache find public namespace by name some public namespace with incorrect case assert null app namespace service with cache find public namespace by name another public namespace assert true app namespace service with cache find public namespace by name public namespace be empty assert true app namespace service with cache find public namespace by name public namespace with incorrect case be empty add private namespace and public namespace when app namespace repository find first500 by id greater than order by id asc then return list new array list some private app namespace some public app namespace when app namespace repository find all by id list new array list some private namespace id some public namespace id then return list new array list some private app namespace some public app namespace scan interval time unit sleep sleep interval assert equal some private app namespace app namespace service with cache find by app id and namespace some app id some private namespace assert equal some private app namespace app namespace service with cache find by app id and namespace some app id some private namespace with incorrect case check list new array list some private app namespace app namespace service with cache find by app id and namespace some app id some app id namespace check list new array list some private app namespace app namespace service with cache find by app id and namespace some app id some app id namespace with incorrect case assert equal some public app namespace app namespace service with cache find by app id and namespace some public app id some public namespace assert equal some public app namespace app namespace service with cache find by app id and namespace some public app id some public namespace with incorrect case check list new array list some public app namespace app namespace service with cache find by app id and namespace some public app id some public app id namespace assert equal some public app namespace app namespace service with cache find public namespace by name some public namespace assert equal some public app namespace app namespace service with cache find public namespace by name some public namespace with incorrect case check list new array list some public app namespace app namespace service with cache find public namespace by name public namespace check list new array list some public app namespace app namespace service with cache find public namespace by name public namespace with incorrect case add private namespace and public namespace when app namespace repository find first500 by id greater than order by id asc some public namespace id then return list new array list another private app namespace yet another private app namespace another public app namespace when app namespace repository find all by id app namespace id then return all app namespace scan interval time unit sleep sleep interval check list new array list some private app namespace yet another private app namespace another public app namespace list new array list app namespace service with cache find by app id and namespace some app id some private namespace app namespace service with cache find by app id and namespace some app id yet another private namespace app namespace service with cache find by app id and namespace some app id another public namespace check list new array list some private app namespace yet another private app namespace another public app namespace app namespace service with cache find by app id and namespace some app id some app id namespace check list new array list some public app namespace another private app namespace list new array list app namespace service with cache find by app id and namespace some public app id some public namespace app namespace service with cache find by app id and namespace some public app id another private namespace check list new array list some public app namespace another private app namespace app namespace service with cache find by app id and namespace some public app id some public app id namespace check list new array list some public app namespace another public app namespace list new array list app namespace service with cache find public namespace by name some public namespace app namespace service with cache find public namespace by name another public namespace check list new array list some public app namespace another public app namespace app namespace service with cache find public namespace by name public namespace update name string some private namespace new some private namespace new app namespace some private app namespace new assemble app namespace some private app namespace get id some private app namespace get app id some private namespace new some private app namespace be public some private app namespace new set datum change last modify time new date with delta some private app namespace get datum change last modify time update app id string some app id new some app id new app namespace yet another private app namespace new assemble app namespace yet another private app namespace get id some app id new yet another private app namespace get name false yet another private app namespace new set datum change last modify time new date with delta yet another private app namespace get datum change last modify time update be public app namespace some public app namespace new assemble app namespace some public app namespace get id some public app namespace get app id some public app namespace get name some public app namespace be public some public app namespace new set datum change last modify time new date with delta some public app namespace get datum change last modify time delete private and public should prepare for the case after delete first or in rebuild interval all will be delete list long app namespace id after delete list new array list some private namespace id some public namespace id yet another private namespace id when app namespace repository find all by id app namespace id after delete then return list new array list some private app namespace new yet another private app namespace new some public app namespace new do delete when app namespace repository find all by id app namespace id then return list new array list some private app namespace new yet another private app namespace new some public app namespace new scan interval time unit sleep sleep interval assert null app namespace service with cache find by app id and namespace some app id some private namespace assert null app namespace service with cache find by app id and namespace some app id yet another private namespace assert null app namespace service with cache find by app id and namespace some app id another public namespace check collection empty list app namespace service with cache find by app id and namespace some app id some app id namespace assert equal some public app namespace new app namespace service with cache find by app id and namespace some public app id some public namespace check list new array list some public app namespace new app namespace service with cache find by app id and namespace some public app id some public app id namespace assert null app namespace service with cache find public namespace by name some public namespace assert null app namespace service with cache find public namespace by name another public namespace check collection empty list app namespace service with cache find public namespace by name public namespace assert equal some private app namespace new app namespace service with cache find by app id and namespace some app id some private namespace new check list new array list some private app namespace new app namespace service with cache find by app id and namespace some app id set new hash set some private namespace new assert equal yet another private app namespace new app namespace service with cache find by app id and namespace some app id new yet another private namespace check list new array list yet another private app namespace new app namespace service with cache find by app id and namespace some app id new set new hash set yet another private namespace private void check list app namespace some list list app namespace another list some list sort app namespace comparator another list sort app namespace comparator assert equal some list another list private date new date with delta date date int delta in seconds calendar calendar calendar get instance calendar set time date calendar add calendar second delta in seconds return calendar get time private app namespace assemble app namespace long id string app id string name boolean be public app namespace app namespace new app namespace app namespace set id id app namespace set app id app id app namespace set name name app namespace set public be public app namespace set datum change last modify time new date return app namespace 
config service with cache test run with mockito j unit runner class public class config service with cache test private config service with cache config service with cache mock private release service release service mock private release message service release message service mock private release some release mock private release message some release message private string some app id private string some cluster name private string some namespace name private string some key private long some notification id private apollo notification message some notification message before public void set up throw exception config service with cache new config service with cache reflection test util set field config service with cache release service release service reflection test util set field config service with cache release message service release message service config service with cache initialize some app id some app id some cluster name some cluster name some namespace name some namespace name some notification id some key release message key generator generate some app id some cluster name some namespace name some notification message new apollo notification message test public void test find active one throw exception long some id when release service find active one some id then return some release assert equal some release config service with cache find active one some id some notification message verify release service time find active one some id test public void test find active one with same id multiple time throw exception long some id when release service find active one some id then return some release assert equal some release config service with cache find active one some id some notification message assert equal some release config service with cache find active one some id some notification message assert equal some release config service with cache find active one some id some notification message verify release service time find active one some id test public void test find active one with multiple id multiple time throw exception long some id long another id release another release mock release class when release service find active one some id then return some release when release service find active one another id then return another release assert equal some release config service with cache find active one some id some notification message assert equal some release config service with cache find active one some id some notification message assert equal another release config service with cache find active one another id some notification message assert equal another release config service with cache find active one another id some notification message verify release service time find active one some id verify release service time find active one another id test public void test find active one with release not find multiple time throw exception long some id when release service find active one some id then return null assert null config service with cache find active one some id some notification message assert null config service with cache find active one some id some notification message assert null config service with cache find active one some id some notification message verify release service time find active one some id test public void test find latest active release throw exception when release message service find latest release message for message list new array list some key then return some release message when release service find latest active release some app id some cluster name some namespace name then return some release when some release message get id then return some notification id release release config service with cache find latest active release some app id some cluster name some namespace name some notification message release another release config service with cache find latest active release some app id some cluster name some namespace name some notification message int retry time for int i i retry time i config service with cache find latest active release some app id some cluster name some namespace name some notification message assert equal some release release assert equal some release another release verify release message service time find latest release message for message list new array list some key verify release service time find latest active release some app id some cluster name some namespace name test public void test find latest active release with release not find throw exception when release message service find latest release message for message list new array list some key then return null when release service find latest active release some app id some cluster name some namespace name then return null release release config service with cache find latest active release some app id some cluster name some namespace name some notification message release another release config service with cache find latest active release some app id some cluster name some namespace name some notification message int retry time for int i i retry time i config service with cache find latest active release some app id some cluster name some namespace name some notification message assert null release assert null another release verify release message service time find latest release message for message list new array list some key verify release service time find latest active release some app id some cluster name some namespace name test public void test find latest active release with dirty release throw exception long some new notification id some notification id release message another release message mock release message class release another release mock release class when release message service find latest release message for message list new array list some key then return some release message when release service find latest active release some app id some cluster name some namespace name then return some release when some release message get id then return some notification id release release config service with cache find latest active release some app id some cluster name some namespace name some notification message when release message service find latest release message for message list new array list some key then return another release message when release service find latest active release some app id some cluster name some namespace name then return another release when another release message get id then return some new notification id release still old release config service with cache find latest active release some app id some cluster name some namespace name some notification message some notification message put some key some new notification id release should be new release config service with cache find latest active release some app id some cluster name some namespace name some notification message assert equal some release release assert equal some release still old release assert equal another release should be new release verify release message service time find latest release message for message list new array list some key verify release service time find latest active release some app id some cluster name some namespace name test public void test find latest active release with release message notification throw exception long some new notification id some notification id release message another release message mock release message class release another release mock release class when release message service find latest release message for message list new array list some key then return some release message when release service find latest active release some app id some cluster name some namespace name then return some release when some release message get id then return some notification id release release config service with cache find latest active release some app id some cluster name some namespace name some notification message when release message service find latest release message for message list new array list some key then return another release message when release service find latest active release some app id some cluster name some namespace name then return another release when another release message get message then return some key when another release message get id then return some new notification id release still old release config service with cache find latest active release some app id some cluster name some namespace name some notification message config service with cache handle message another release message topic apollo release topic release should be new release config service with cache find latest active release some app id some cluster name some namespace name some notification message assert equal some release release assert equal some release still old release assert equal another release should be new release verify release message service time find latest release message for message list new array list some key verify release service time find latest active release some app id some cluster name some namespace name test public void test find latest active release with irrelevant message throw exception long some new notification id some notification id string some irrelevant key some irrelevant key when release message service find latest release message for message list new array list some key then return some release message when release service find latest active release some app id some cluster name some namespace name then return some release when some release message get id then return some notification id release release config service with cache find latest active release some app id some cluster name some namespace name some notification message release still old release config service with cache find latest active release some app id some cluster name some namespace name some notification message some notification message put some irrelevant key some new notification id release should still be old release config service with cache find latest active release some app id some cluster name some namespace name some notification message assert equal some release release assert equal some release still old release assert equal some release should still be old release verify release message service time find latest release message for message list new array list some key verify release service time find latest active release some app id some cluster name some namespace name 
default config service test run with mockito j unit runner class public class default config service test private default config service config service private string some client app id private string some config app id private string some cluster name private string default cluster name private string default namespace name private string some datum center private string some client ip mock private apollo notification message some notification message mock private release service release service mock private gray release rule holder gray release rule holder mock private release some release before public void set up throw exception config service new default config service reflection test util set field config service release service release service reflection test util set field config service gray release rule holder gray release rule holder some client app id some config app id some cluster name some cluster name default cluster name config const cluster name default default namespace name config const namespace application some datum center some d c some client ip some client ip when gray release rule holder find release id from gray release rule any string any string any string any string any string then return null test public void test load config throw exception when release service find latest active release some config app id some cluster name default namespace name then return some release release release config service load config some client app id some client ip some config app id some cluster name default namespace name some datum center some notification message verify release service time find latest active release some config app id some cluster name default namespace name assert equal some release release test public void test load config with gray release throw exception release gray release mock release class long gray release id when gray release rule holder find release id from gray release rule some client app id some client ip some config app id some cluster name default namespace name then return gray release id when release service find active one gray release id then return gray release release release config service load config some client app id some client ip some config app id some cluster name default namespace name some datum center some notification message verify release service time find active one gray release id verify release service never find latest active release some config app id some cluster name default namespace name assert equal gray release release test public void test load config with release not find throw exception when release service find latest active release some config app id some cluster name default namespace name then return null release release config service load config some client app id some client ip some config app id some cluster name default namespace name some datum center some notification message assert null release test public void test load config with default cluster with datum center release throw exception when release service find latest active release some config app id some datum center default namespace name then return some release release release config service load config some client app id some client ip some config app id default cluster name default namespace name some datum center some notification message verify release service time find latest active release some config app id some datum center default namespace name assert equal some release release test public void test load config with default cluster with no datum center release throw exception when release service find latest active release some config app id some datum center default namespace name then return null when release service find latest active release some config app id default cluster name default namespace name then return some release release release config service load config some client app id some client ip some config app id default cluster name default namespace name some datum center some notification message verify release service time find latest active release some config app id some datum center default namespace name verify release service time find latest active release some config app id default cluster name default namespace name assert equal some release release 
release message service with cache test run with mockito j unit runner class public class release message service with cache test private release message service with cache release message service with cache mock private release message repository release message repository mock private biz config biz config private int scan interval private time unit scan interval time unit before public void set up throw exception release message service with cache new release message service with cache release message repository biz config scan interval scan interval time unit time unit millisecond when biz config release message cache scan interval then return scan interval when biz config release message cache scan interval time unit then return scan interval time unit test public void test when no release message throw exception when release message repository find first500 by id greater than order by id asc 0 l then return collection empty list release message service with cache after property set string some message some message string another message another message set string message set new hash set some message another message assert null release message service with cache find latest release message for message message assert true release message service with cache find latest release message group by message message be empty test public void test when have release msg and have repeat msg throw exception string some msg content msg1 release message some msg assemble release msg some msg content string another msg content msg2 release message another msg assemble release msg another msg content release message another repeat msg assemble release msg another msg content when release message repository find first500 by id greater than order by id asc 0 l then return array as list some msg another msg another repeat msg release message service with cache after property set verify biz config release message cache scan interval release message latest release msg release message service with cache find latest release message for message set new hash set some msg content another msg content assert not null latest release msg assert equal latest release msg get id assert equal another msg content latest release msg get message list release message latest release msg group by msg content release message service with cache find latest release message group by message set new link hash set array as list some msg content another msg content assert equal latest release msg group by msg content size assert equal latest release msg group by msg content get get id assert equal another msg content latest release msg group by msg content get get message assert equal latest release msg group by msg content get get id assert equal some msg content latest release msg group by msg content get get message test public void test when release msg size bigger than500 throw exception string some msg content msg1 list release message first batch release msg new array list for int i i i first batch release msg add assemble release msg i some msg content string anther msg content msg2 release message anther msg assemble release msg anther msg content when release message repository find first500 by id greater than order by id asc 0 l then return first batch release msg when release message repository find first500 by id greater than order by id asc l then return collection singleton list anther msg release message service with cache after property set verify release message repository time find first500 by id greater than order by id asc l release message latest release msg release message service with cache find latest release message for message set new hash set some msg content anther msg content assert not null latest release msg assert equal latest release msg get id assert equal anther msg content latest release msg get message list release message latest release msg group by msg content release message service with cache find latest release message group by message set new hash set some msg content anther msg content assert equal latest release msg group by msg content size assert equal latest release msg group by msg content get get id assert equal latest release msg group by msg content get get id test public void test new release message before handle message throw exception string some message content some message long some message id release message some message assemble release msg some message id some message content when release message repository find first500 by id greater than order by id asc 0 l then return list new array list some message release message service with cache after property set release message latest release msg release message service with cache find latest release message for message set new hash set some message content list release message latest release msg group by msg content release message service with cache find latest release message group by message set new hash set some message content assert equal some message id latest release msg get id assert equal some message content latest release msg get message assert equal latest release msg latest release msg group by msg content get long new message id release message new message assemble release msg new message id some message content when release message repository find first500 by id greater than order by id asc some message id then return list new array list new message scan interval time unit sleep scan interval release message new latest release msg release message service with cache find latest release message for message set new hash set some message content list release message new latest release msg group by msg content release message service with cache find latest release message group by message set new hash set some message content assert equal new message id new latest release msg get id assert equal some message content new latest release msg get message assert equal new latest release msg new latest release msg group by msg content get test public void test new release with handle message throw exception string some message content some message long some message id release message some message assemble release msg some message id some message content when release message repository find first500 by id greater than order by id asc 0 l then return list new array list some message release message service with cache after property set release message latest release msg release message service with cache find latest release message for message set new hash set some message content list release message latest release msg group by msg content release message service with cache find latest release message group by message set new hash set some message content assert equal some message id latest release msg get id assert equal some message content latest release msg get message assert equal latest release msg latest release msg group by msg content get long new message id release message new message assemble release msg new message id some message content release message service with cache handle message new message topic apollo release topic release message new latest release msg release message service with cache find latest release message for message set new hash set some message content list release message new latest release msg group by msg content release message service with cache find latest release message group by message set new hash set some message content assert equal new message id new latest release msg get id assert equal some message content new latest release msg get message assert equal new latest release msg new latest release msg group by msg content get private release message assemble release msg long id string msg content release message msg new release message msg content msg set id id return msg 
access key util test run with mockito j unit runner class public class access key util test private access key util access key util mock private access key service with cache access key service with cache mock private http servlet request request before public void set up access key util new access key util access key service with cache test public void test find available secret string app id some app id list string return secret list new array list some secret when access key service with cache get available secret app id then return return secret list string available secret access key util find available secret app id assert that available secret contain exactly some secret verify access key service with cache get available secret app id test public void test extract app id from request1 when request get servlet path then return configs some app id default application string app id access key util extract app id from request request assert that app id be equal to some app id test public void test extract app id from request2 when request get servlet path then return configfile json some app id default application string app id access key util extract app id from request request assert that app id be equal to some app id test public void test extract app id from request3 when request get servlet path then return configfile some app id default application string app id access key util extract app id from request request assert that app id be equal to some app id test public void test extract app id from request4 when request get servlet path then return notification v2 when request get parameter app id then return some app id string app id access key util extract app id from request request assert that app id be equal to some app id test public void build signature string path config some app id default application string query ip 10.0 0.1 string timestamp string secret some secret string actual signature access key util build signature path query timestamp secret string expect signature w yjjy j fei6 d yia mlw zjew2 o yqk assert that actual signature be equal to expect signature 
instance config audit util test run with mockito j unit runner class public class instance config audit util test private instance config audit util instance config audit util mock private instance service instance service private blocking queue instance config audit util instance config audit model audits private string some app id private string some config cluster name private string some cluster name private string some datum center private string some ip private string some config app id private string some config namespace private string some release key private instance config audit util instance config audit model some audit model before public void set up throw exception instance config audit util new instance config audit util instance service audits block queue instance config audit util instance config audit model reflection test util get field instance config audit util audits some app id some app id some cluster name some cluster name some datum center some datum center some ip some ip some config app id some config app id some config cluster name some config cluster name some config namespace some config namespace some release key some release key some audit model new instance config audit util instance config audit model some app id some cluster name some datum center some ip some config app id some config cluster name some config namespace some release key test public void test audit throw exception boolean result instance config audit util audit some app id some cluster name some datum center some ip some config app id some config cluster name some config namespace some release key instance config audit util instance config audit model audit audits poll assert true result assert true object equal some audit model audit test public void test do audit throw exception long some instance id instance some instance mock instance class when some instance get id then return some instance id when instance service create instance any instance class then return some instance instance config audit util do audit some audit model verify instance service time find instance some app id some cluster name some datum center some ip verify instance service time create instance any instance class verify instance service time find instance config some instance id some config app id some config namespace verify instance service time create instance config any instance config class 
namespace util test run with mockito j unit runner class public class namespace util test private namespace util namespace util mock private app namespace service with cache app namespace service with cache before public void set up throw exception namespace util new namespace util app namespace service with cache test public void test filter namespace name throw exception string some name a property assert equal a namespace util filter namespace name some name test public void test filter namespace name unchanged throw exception string some name a xml assert equal some name namespace util filter namespace name some name test public void test filter namespace name with multiple property suffix throw exception string some name a property property assert equal a property namespace util filter namespace name some name test public void test filter namespace name with random case throw exception string some name ab c pro p erty assert equal ab c namespace util filter namespace name some name test public void test filter namespace name with random case unchanged throw exception string some name ab c d x ml assert equal some name namespace util filter namespace name some name test public void test normalize namespace with private namespace throw exception string some app id some app id string some namespace name some namespace name string some normalize namespace name some normalize namespace name app namespace some app namespace mock app namespace class when some app namespace get name then return some normalize namespace name when app namespace service with cache find by app id and namespace some app id some namespace name then return some app namespace assert equal some normalize namespace name namespace util normalize namespace some app id some namespace name verify app namespace service with cache time find by app id and namespace some app id some namespace name verify app namespace service with cache never find public namespace by name some namespace name test public void test normalize namespace with public namespace throw exception string some app id some app id string some namespace name some namespace name string some normalize namespace name some normalize namespace name app namespace some app namespace mock app namespace class when some app namespace get name then return some normalize namespace name when app namespace service with cache find by app id and namespace some app id some namespace name then return null when app namespace service with cache find public namespace by name some namespace name then return some app namespace assert equal some normalize namespace name namespace util normalize namespace some app id some namespace name verify app namespace service with cache time find by app id and namespace some app id some namespace name verify app namespace service with cache time find public namespace by name some namespace name test public void test normalize namespace fail throw exception string some app id some app id string some namespace name some namespace name when app namespace service with cache find by app id and namespace some app id some namespace name then return null when app namespace service with cache find public namespace by name some namespace name then return null assert equal some namespace name namespace util normalize namespace some app id some namespace name verify app namespace service with cache time find by app id and namespace some app id some namespace name verify app namespace service with cache time find public namespace by name some namespace name 
watch key util test run with mockito j unit runner class public class watch key util test mock private app namespace service with cache app namespace service mock private app namespace some app namespace mock private app namespace another app namespace mock private app namespace some public app namespace private watch key util watch key util private string some app id private string some cluster private string some namespace private string another namespace private string some public namespace private string default cluster private string some d c private string some public app id before public void set up throw exception watch key util new watch key util app namespace service some app id some id some cluster some cluster some namespace some name another namespace another name some public namespace some public name default cluster config const cluster name default some d c some d c some public app id some public id when some app namespace get name then return some namespace when another app namespace get name then return another namespace when app namespace service find by app id and namespace some app id set new hash set some namespace then return list new array list some app namespace when app namespace service find by app id and namespace some app id set new hash set some namespace another namespace then return list new array list some app namespace another app namespace when app namespace service find by app id and namespace some app id set new hash set some namespace another namespace some public namespace then return list new array list some app namespace another app namespace when some public app namespace get app id then return some public app id when some public app namespace get name then return some public namespace when app namespace service find public namespace by name set new hash set some public namespace then return list new array list some public app namespace when app namespace service find public namespace by name set new hash set some namespace some public namespace then return list new array list some public app namespace test public void test assemble all watch key with one namespace and default cluster throw exception set string watch key watch key util assemble all watch key some app id default cluster some namespace null set string cluster set new hash set default cluster assert equal cluster size watch key size assert watch key some app id cluster some namespace watch key test public void test assemble all watch key with one namespace and some d c throw exception set string watch key watch key util assemble all watch key some app id some d c some namespace some d c set string cluster set new hash set default cluster some d c assert equal cluster size watch key size assert watch key some app id cluster some namespace watch key test public void test assemble all watch key with one namespace and some d c and some cluster throw exception set string watch key watch key util assemble all watch key some app id some cluster some namespace some d c set string cluster set new hash set default cluster some cluster some d c assert equal cluster size watch key size assert watch key some app id cluster some namespace watch key test public void test assemble all watch key with multiple namespace throw exception multimap string string watch key map watch key util assemble all watch key some app id some cluster set new hash set some namespace another namespace some d c set string cluster set new hash set default cluster some cluster some d c assert equal cluster size watch key map size assert watch key some app id cluster some namespace watch key map get some namespace assert watch key some app id cluster another namespace watch key map get another namespace test public void test assemble all watch key with private and public namespace throw exception multimap string string watch key map watch key util assemble all watch key some app id some cluster set new hash set some namespace another namespace some public namespace some d c set string cluster set new hash set default cluster some cluster some d c assert equal cluster size watch key map size assert watch key some app id cluster some namespace watch key map get some namespace assert watch key some app id cluster another namespace watch key map get another namespace assert watch key some app id cluster some public namespace watch key map get some public namespace assert watch key some public app id cluster some public namespace watch key map get some public namespace test public void test assemble watch key for no app id place holder throw exception multimap string string watch key map watch key util assemble all watch key config const no appid placeholder some cluster set new hash set some namespace another namespace some d c assert true watch key map be empty test public void test assemble watch key for no app id place holder and public namespace throw exception multimap string string watch key map watch key util assemble all watch key config const no appid placeholder some cluster set new hash set some namespace some public namespace some d c set string cluster set new hash set default cluster some cluster some d c assert equal cluster size watch key map size assert watch key some public app id cluster some public namespace watch key map get some public namespace private void assert watch key string app id set string cluster string namespace name collection string watch key for string cluster cluster string key joiner on config const cluster namespace separator join app id cluster namespace name assert true watch key contain key 
case insensitive map wrapper test run with mockito j unit runner class public class case insensitive map wrapper test private case insensitive map wrapper object case insensitive map wrapper mock private map string object some map before public void set up throw exception case insensitive map wrapper new case insensitive map wrapper some map test public void test get throw exception string some key some key object some value mock object class when some map get some key to lower case then return some value assert equal some value case insensitive map wrapper get some key verify some map time get some key to lower case test public void test put throw exception string some key some key object some value mock object class object another value mock object class when some map put some key to lower case some value then return another value assert equal another value case insensitive map wrapper put some key some value verify some map time put some key to lower case some value test public void test remove throw exception string some key some key object some value mock object class when some map remove some key to lower case then return some value assert equal some value case insensitive map wrapper remove some key verify some map time remove some key to lower case 
apollo mock server spring integration test run with spring j unit4 class runner class spring boot test class test configuration class public class apollo mock server spring integration test private static final string other namespace other namespace class rule public static embed apollo embed apollo new embed apollo autowire private test bean test bean autowire private test interested key prefix bean test interested key prefix bean test dirty context public void test property inject assert equal value1 test bean key1 assert equal value2 test bean key2 test dirty context public void test listener trigger by add throw interrupted exception execution exception timeout exception embed apollo add or modify property other namespace some key some value config change event change event test bean future datum get time unit millisecond assert equal other namespace change event get namespace assert equal some value change event get change some key get new value test dirty context public void test listener trigger by del throw interrupted exception execution exception timeout exception embed apollo delete property other namespace key1 config change event change event test bean future datum get time unit millisecond assert equal other namespace change event get namespace assert equal property change type delete change event get change key1 get change type test dirty context public void should notify on interested pattern throw exception embed apollo add or modify property other namespace server port embed apollo add or modify property other namespace server path apollo embed apollo add or modify property other namespace spring application name whatever config change event change event test interested key prefix bean future datum get time unit millisecond assert equal other namespace change event get namespace assert equal change event get change server port get new value assert equal apollo change event get change server path get new value test expect timeout exception class dirty context public void should not notify on uninterested pattern throw exception embed apollo add or modify property other namespace spring application name apollo test interested key prefix bean future datum get time unit millisecond enable apollo config configuration static class test configuration bean public test bean test bean return new test bean bean public test interested key prefix bean test interested key prefix bean return new test interested key prefix bean private static class test bean value key1 default private string key1 value key2 default private string key2 private settable future config change event future datum settable future create apollo config change listener other namespace private void on change config change event change event future datum set change event private static class test interested key prefix bean private settable future config change event future datum settable future create apollo config change listener value other namespace interested key prefix server private void on change config change event change event future datum set change event 
abstract open api service test run with mockito j unit runner class abstract class abstract open api service test mock protect closeable http client http client mock protect closeable http response some http response mock protected status line status line protect gson gson protect string some base url before public void set up throw exception gson new gson builder set date format apollo open api constant json date format create some base url http some base url when some http response get status line then return status line when status line get status code then return when http client execute any http uri request class then return some http response 
beat reactor test run with mockito j unit runner class public class beat reactor test mock private naming proxy name proxy test public void test throw no such field exception illegal access exception interrupt exception naco exception beat info beat info new beat info beat info set service name test beat info set ip 11.11 11.11 beat info set port beat info set cluster cluster name beat info set weight beat info set metadata new hash map string string beat info set schedule false beat info set period l beat reactor beat reactor new beat reactor name proxy beat reactor add beat info test service beat info assert assert equal get active thread beat reactor thread sleep l beat reactor remove beat info test service beat info get ip beat info get port thread sleep l assert assert equal get active thread beat reactor private int get active thread beat reactor beat reactor throw no such field exception illegal access exception field field beat reactor class get declare field executor service field set accessible true schedule thread pool executor schedule executor service schedule thread pool executor field get beat reactor return schedule executor service get queue size 
host reactor test run with mockito j unit runner class public class host reactor test private static final string cache dir host reactor test class get resource get path cache mock private naming proxy name proxy mock private event dispatcher event dispatcher private host reactor host reactor private beat reactor beat reactor before public void set up throw exception beat reactor new beat reactor name proxy beat info beat info new beat info beat info set service name test name beat info set ip 1.1 1.1 beat info set port beat info set cluster cluster name beat info set weight beat info set metadata new hash map string string beat info set schedule false beat info set period l beat reactor add beat info test name beat info host reactor new host reactor event dispatcher name proxy beat reactor cache dir test public void test process service json service info actual host reactor process service json example assert service info actual host reactor process service json change datum example beat info actual beat info beat reactor dom2 beat get beat reactor build key test name 1.1 1.1 assert equal 2.0 actual beat info get weight 0.0 test public void test get service info directly from server throw naco exception when name proxy query list test name test cluster false then return example service info actual host reactor get service info directly from server test name test cluster assert service info actual private void assert service info service info actual assert equal test name actual get name assert equal test cluster actual get cluster assert equal actual get checksum assert equal actual get cache milli assert equal actual get last ref time assert null actual get group name assert true actual be valid assert false actual be all i ps assert equal actual get host size assert instance actual get host get private void assert instance instance actual assert equal 1.1 1.1 actual get ip assert equal test cluster actual get cluster name assert equal test name actual get service name assert equal actual get port private static final string example n t name test name n t cluster test cluster n t cache millis n t host n t t ip 1.1 1.1 n t t port n t t weight 1.0 n t t healthy true n t t enable true n t t ephemeral true n t t cluster name test cluster n t t service name test name n t t metadata n t t instance heart beat interval n t t instance heart beat time out n t t ip delete timeout n t t instance id generator simple n t n t last ref time n t checksum n t all i ps false n t valid true n the weight change from 1.0 to 2.0 private static final string change datum example n t name test name n t cluster test cluster n t cache millis n t host n t t ip 1.1 1.1 n t t port n t t weight 2.0 n t t healthy true n t t enable true n t t ephemeral true n t t cluster name test cluster n t t service name test name n t t metadata n t t instance heart beat interval n t t instance heart beat time out n t t ip delete timeout n t t instance id generator simple n t n t last ref time n t checksum n t all i ps false n t valid true n 
health controller unit test run with spring j unit4 class runner class context configuration class mock servlet context class web app configuration public class health controller unit test inject mock health controller health controller mock datum source service datum source service private mock mvc mockmvc before public void set up throw exception mockmvc mock mvc builder standalone setup health controller build test public void test get health throw exception mockito when datum source service get health then return up mock http servlet request builder builder mock mvc request builder get constant health controller path string actual value mockmvc perform builder and return get response get content as string assert assert equal up actual value 
aggr whitelist test run with spring j unit4 class runner class web app configuration public class aggr whitelist test aggr whitelist service before public void before throw exception service new aggr whitelist test public void test be aggr datum id list string list new array list string list add com taobao jiuren list add ns nacos subscription topic list add com taobao tae app list on grid aggr whitelist compile list assert false aggr whitelist be aggr datum id com abc assert false aggr whitelist be aggr datum id com taobao jiuren assert false aggr whitelist be aggr datum id com taobao jiuren a b c assert true aggr whitelist be aggr datum id com taobao jiuren abc assert true aggr whitelist be aggr datum id n naco subscription topic abc assert true aggr whitelist be aggr datum id com taobao tae app list on grid abc 
client track service test run with spring j unit4 class runner class web app configuration public class client track service test before public void before client track service client record clear test public void test track client md5 string client ip 1.1 1.1 string datum id com taobao session xml string group online string group key group key2 get key datum id group string md5 xxxxxxxxxxxxx config cache service update md5 group key md5 system current time millis client track service track client md5 client ip group key md5 client track service track client md5 client ip group key md5 assert assert equal true client track service be client uptodate client ip get group key assert assert equal client track service subscribe client count assert assert equal client track service subscriber count config cache service update md5 group key md5 system current time milli assert assert equal false client track service be client uptodate client ip get group key 
disk service unit test run with spring j unit4 class runner class web app configuration public class disk service unit test private disk util disk service private file temp file private string path before public void set up throw i o exception this temp file file create temp file disk service test tmp this path temp file get parent this disk service new disk util test public void test create config throw i o exception disk util save to disk test datum id test group test tenant test content string content disk util get config test datum id test group test tenant assert equal content test content after public void tear down throw i o exception temp file delete 
dump service test run with spring j unit4 class runner class spring boot test web app configuration public class dump service test autowire dump service service test public void init throw throwable service init 
group key test run with spring j unit4 class runner class web app configuration public class group key test rule public final expect exception throw expect exception none test public void test parse invalid group key string key 11111 +222 333333 +444 try group key2 parse key key assert fail catch illegal argument exception e system out println e to string key try group key2 parse key key assert fail catch illegal argument exception e system out println e to string key 11111 % 29 try group key2 parse key key assert fail catch illegal argument exception e system out println e to string key 11111 % 2 b try group key2 parse key key assert fail catch illegal argument exception e system out println e to string key 11111 % 25 string pair group key2 parse key key assert assert equal pair assert assert equal pair test public void test get key by three param act final string actual group key get key assert result assert assert equal actual test public void test get key by two param act final string actual group key get key assert result assert assert equal actual test public void test get key tenant by plus three param act final string actual group key get key tenant assert result assert assert equal 3 +1 actual test public void test get key tenant by percent three param act final string actual group key get key tenant u0000 u0000 null assert result assert assert equal u0000 u0000 25 % 2 b actual test public void test parse key by single character act final string actual group key parse key assert result assert assert array equal new string null null actual test public void test parse key for plus illegal argument exception act throw expect illegal argument exception class group key parse key method be not expect to return due to exception throw test public void test parse key for percent illegal argument exception act throw expect illegal argument exception class group key parse key u0000 method be not expect to return due to exception throw test public void test parse key for invalid string index out of bound exception act throw expect string index out of bound exception class group key parse key method be not expect to return due to exception throw test public void test url encode plus arrange final string builder sb new string builder act group key url encode sb assert side effect assert assert not null sb assert assert equal 2 b sb to string test public void test url encode by percent arrange final string builder sb new string builder act group key url encode sb assert side effect assert assert not null sb assert assert equal sb to string test public void test url encode for null string builder act throw expect null pointer exception class group key url encode null method be not expect to return due to exception throw 
simple read write lock test run with spring j unit4 class runner class web app configuration public class simple read write lock test test public void test double read lock by all release and write lock simple read write lock lock new simple read write lock assert true lock try read lock assert true lock try read lock lock release read lock lock release read lock assert true lock try write lock test public void test add write lock simple read write lock lock new simple read write lock assert true lock try write lock lock release write lock test public void test double write lock simple read write lock lock new simple read write lock assert true lock try write lock assert false lock try write lock test public void test first read lock then write lock simple read write lock lock new simple read write lock assert true lock try read lock assert false lock try write lock test public void test double read lock and one release one fail simple read write lock lock new simple read write lock assert true lock try read lock assert true lock try read lock lock release read lock assert false lock try write lock 
health controller test run with spring j unit4 class runner class context configuration class mock servlet context class web app configuration public class health controller test inject mock private health controller health controller mock private persist service persist service mock private operator controller api command private mock mvc mockmvc before public void set up mockmvc mock mvc builder standalone setup health controller build test public void test liveness throw exception string url v1 console health liveness mock http servlet request builder builder mock mvc request builder get url assert assert equal mockmvc perform builder and return get response get status test public void test readiness throw exception string url v1 console health readiness mockito when persist service config info count any string class then return mockito when api command metric any http servlet request class then return jackson util create empty json node mock http servlet request builder builder mock mvc request builder get url assert assert equal mockmvc perform builder and return get response get status config and naming be not in readiness mockito when persist service config info count any string class then throw new runtime exception health controller test test readiness mockito when api command metric any http servlet request class then throw new runtime exception health controller test test readiness builder mock mvc request builder get url mock http servlet response response mockmvc perform builder and return get response assert assert equal response get status assert assert equal config and naming be not in readiness response get content as string config be not in readiness mockito when persist service config info count any string class then throw new runtime exception health controller test test readiness mockito when api command metric any http servlet request class then return jackson util create empty json node response mockmvc perform builder and return get response assert assert equal response get status assert assert equal config be not in readiness response get content as string naming be not in readiness mockito when persist service config info count any string class then return mockito when api command metric any http servlet request class then throw new runtime exception health controller test test readiness builder mock mvc request builder get url response mockmvc perform builder and return get response assert assert equal response get status assert assert equal naming be not in readiness response get content as string 
user controller test run with mockito j unit runner class public class user controller test mock private http servlet request request mock private http servlet response response mock private auth configs auth configs mock private naco auth manager auth manager private user controller user controller private naco user user before public void set up throw exception user controller new user controller user new naco user user set user name naco user set global admin true user set token inject object auth config auth config inject object auth manager auth manager test public void test login with authe user throw access exception when auth manager login request then return user when auth config get naco auth system type then return auth system type naco name when auth config get token validity in seconds then return l object actual user controller login naco naco response request assert that actual instance of json node class string actual string actual to string assert true actual string contain access token assert true actual string contain token ttl assert true actual string contain global admin true private void inject object string field name object value throw no such field exception illegal access exception field field user controller class get declare field field name field set accessible true field set user controller value 
naco default property source environment post processor test run with spring runner class spring boot test class naco default property source environment post processor test class web environment spring boot test web environment none public class naco default property source environment post processor test autowire private configurable environment environment test public void test naco default property source present mutable property source property source environment get property source naco default must be present assert assert true property source contain naco default get property source via property source name property source property source get naco default property source naco default must be present assert assert not null property source make sure property source be last one assert assert equal property source size property source precedence of property source test public void test default property web server assert property equal server port assert property equal server tomcat uri encode utf http encoding assert property equal spring http encode force true assert property equal spring http encode enable true i18n assert property equal spring message encode utf test public void test default property name assert property name naco version server servlet context path server port server tomcat uri encode spring http encode force spring http encode enable spring message encode spring autoconfigure exclude private void assert property name string property name composite property source property source get naco default property source assert assert equal please property from resource resource location pattern new hash set string as list property name new hash set string as list property source get property name private void assert property equal string property name string expect value property source property source get naco default property source assert assert equal expect value property source get property property name private composite property source get naco default property source mutable property source property source environment get property source get property source via property source name composite property source property source composite property source property source get property source name return property source 
standalone profile application listener test run with spring runner class spring boot test class standalone profile application listener test class web environment spring boot test web environment none public class standalone profile application listener test autowire private environment environment before class public static void init system set property naco standalone true test public void test profile assert assert true array util contain environment get active profile standalone spring profile 
base test run with mockito j unit runner class public class base test protect static final string test cluster name test cluster protect static final string test service name test service protect static final string test group name test group name protect static final string test namespace test namespace mock public service manager service manager mock public raft peer set peer set mock public raft core raft core rule public expect exception expect exception expect exception none spy protect configurable application context context mock protect distro mapper distro mapper spy protect switch domain switch domain mock protected health check processor delegate delegate mock protect push service push service spy private mock environment environment before public void before application util inject environment environment application util inject context context protect void mock raft raft peer peer new raft peer peer ip net util local server raft core set peer set peer set mockito when peer set local then return peer mockito when peer set get leader then return peer mockito when peer set be leader net util local server then return true protect void mock inject push server do return push service when context get bean push service class protect void mock inject health check processor do return delegate when context get bean health check processor delegate class protect void mock inject switch domain do return switch domain when context get bean switch domain class protect void mock inject distro mapper do return distro mapper when context get bean distro mapper class 
catalog controller test run with mockito j unit runner class public class catalog controller test mock private service manager service manager private catalog controller catalog controller private service service private cluster cluster before public void set up throw no such field exception illegal access exception catalog controller new catalog controller field field catalog controller get class get declare field service manager field set accessible true field set catalog controller service manager service new service test service name service set namespace id constant default namespace id service set protect threshold 12.34 f service set group name test group name cluster new cluster test cluster name service cluster set default port service add cluster cluster when service manager get service constant default namespace id test group name constant service info spliter test service name then return service test public void test service detail throw exception object node result catalog controller service detail constant default namespace id test group name constant service info spliter test service name string actual result to string assert true actual contain service assert true actual contain group name test group name assert true actual contain metadata assert true actual contain name test service assert true actual contain selector type none assert true actual contain protect threshold 12.34 assert true actual contain cluster assert true actual contain default check port assert true actual contain default port assert true actual contain health checker type tcp assert true actual contain metadata assert true actual contain name test cluster assert true actual contain service name test service assert true actual contain use i p port4 check true test expect naco exception class public void test service detail not find throw exception catalog controller service detail constant default namespace id test service name private static final string test cluster name test cluster private static final string test service name test service private static final string test group name test group name test public void test instance list throw naco exception instance instance new instance 1.1 1.1 test cluster name cluster update ip collection singleton list instance false object node result catalog controller instance list constant default namespace id test group name constant service info spliter test service name test cluster name string actual result to string assert true actual contain count assert true actual contain list assert true actual contain cluster name test cluster assert true actual contain ip 1.1 1.1 assert true actual contain port test public void test list detail todo test public void test rt4 service todo 
cluster controller test run with spring j unit4 class runner class context configuration class mock servlet context class web app configuration public class cluster controller test extend base test inject mock private cluster controller cluster controller private mock mvc mockmvc before public void before super before mockmvc mock mvc builder standalone setup cluster controller build test public void test update throw exception service service new service test service name service set namespace id test namespace when service manager get service constant default namespace id test service name then return service mock http servlet request builder builder mock mvc request builder put util and common naco name context cluster param cluster name test cluster name param service name test service name param health checker type http param check port param use instance port4 check true assert assert equal ok mockmvc perform builder and return get response get content as string cluster expect cluster new cluster test cluster name service cluster actual cluster service get cluster map get test cluster name assert assert equal expect cluster actual cluster assert assert equal actual cluster get def ckport assert assert true actual cluster be use i p port4 check test public void test update no service throw exception expect exception expect cause be a nacos exception class expect exception expect message service not find test service not find mock http servlet request builder builder mock mvc request builder put util and common naco name context cluster param cluster name test cluster name param service name test service not find param health checker type http param check port param use instance port4 check true mockmvc perform builder test public void test update invalid type throw exception expect exception expect cause be a nacos exception class expect exception expect message unknown health check type type service service new service test service name service set namespace id constant default namespace id when service manager get service constant default namespace id test service name then return service mock http servlet request builder builder mock mvc request builder put util and common naco name context cluster param cluster name test cluster name param service name test service name param health checker type param check port param use instance port4 check true mockmvc perform builder 
instance controller test run with spring j unit4 class runner class context configuration class mock servlet context class web app configuration public class instance controller test extend base test inject mock private instance controller instance controller mock private raft peer set peer set private mock mvc mockmvc before public void before super before mockmvc mock mvc builder standalone setup instance controller build test public void register instance throw exception service service new service service set name test service name cluster cluster new cluster util and common default cluster name service service add cluster cluster instance instance new instance instance set ip 1.1 1.1 instance set port list instance ip list new array list ip list add instance service update i ps ip list false mockito when service manager get service constant default namespace id test service name then return service mock http servlet request builder builder mock mvc request builder put util and common naco name context instance param service name test service name param ip 1.1 1.1 param port string actual value mockmvc perform builder and return get response get content as string assert assert equal ok actual value test public void deregister instance throw exception mock http servlet request builder builder mock mvc request builder delete util and common naco name context instance param service name test service name param ip 1.1 1.1 param port param cluster name util and common default cluster name string actual value mockmvc perform builder and return get response get content as string assert assert equal ok actual value test public void get instance throw exception service service new service service set name test service name cluster cluster new cluster util and common default cluster name service service add cluster cluster instance instance new instance instance set ip 10.10 10.10 instance set port instance set weight 2.0 instance set service name test service name list instance ip list new array list ip list add instance service update i ps ip list false mockito when service manager get service constant default namespace id test service name then return service mock http servlet request builder builder mock mvc request builder get util and common naco name context instance list param service name test service name mock http servlet response response mockmvc perform builder and return get response string actual value response get content as string json node result jackson util to obj actual value assert assert equal test service name result get name as text json node host result get host assert assert not null host assert assert equal host size json node host host get assert assert not null host assert assert equal 10.10 10.10 host get ip as text assert assert equal host get port as int assert assert equal 2.0 host get weight as double 0.001 test public void get null service instance throw exception mockito when service manager get service constant default namespace id test service name then return null mock http servlet request builder builder mock mvc request builder get util and common naco name context instance list param service name test service name mock http servlet response response mockmvc perform builder and return get response string actual value response get content as string json node result jackson util to obj actual value json node host result get host assert assert equal host size 
cluster test run with mockito j unit runner class public class cluster test private cluster cluster mock private configurable application context context mock private switch domain switch domain before public void before application util inject context context when context get bean switch domain class then return switch domain when switch domain get tcp health param then return new tcp health param service service new service service set name naco service cluster new cluster naco cluster service cluster set def ckport cluster set def i p port cluster init test public void update cluster service service new service service set name naco service cluster new cluster new cluster naco cluster service new cluster set def ckport new cluster set def i p port http health check config new http health check config set path naco path health check config set expect response code health check config set header client version naco test new cluster set health checker health check config cluster update new cluster assert equal cluster get def ckport assert equal cluster get def i p port assert true cluster get health checker instanceof http http http health check http cluster get health checker assert equal naco path http health check get path assert equal http health check get expect response code assert equal client version naco test http health check get header test public void update ip instance instance1 new instance instance1 set ip 1.1 1.1 instance1 set port instance instance2 new instance instance2 set ip 1.1 1.1 instance2 set port list instance list new array list list add instance1 list add instance2 cluster update ip list false list instance ip cluster all i ps assert not null ip assert equal ip size assert equal 1.1 1.1 ip get get ip assert equal ip get get port assert equal 1.1 1.1 ip get get ip assert equal ip get get port test public void test validate service service new service naco service cluster new cluster naco cluster service cluster validate test expect illegal argument exception class public void test validate cluster name null service service new service naco service cluster new cluster null service cluster validate test expect illegal argument exception class public void test validate service null cluster new cluster naco cluster null cluster validate test public void test serialize throw exception string actual jackson util to json cluster system out println actual assert true actual contain default port assert true actual contain def i p port assert true actual contain health checker type tcp assert true actual contain metadata assert true actual contain def ckport assert true actual contain name naco cluster assert true actual contain default check port assert true actual contain service name naco service assert true actual contain use i p port4 check true assert true actual contain sitegroup assert true actual contain empty true assert false actual contain service test suppress warning checkstyle linelength public void test deserialize throw exception string example def ckport def i p port default check port default port empty true health checker type tcp metadata name naco cluster service name naco service sitegroup use i p port4 check true cluster actual jackson util to obj example cluster class assert equal actual get def ckport assert equal actual get def i p port assert equal actual get default check port assert equal actual get default port assert true actual be empty assert true actual get metadata be empty assert true actual be use i p port4 check assert equal naco cluster actual get name assert equal naco service actual get service name assert equal actual get sitegroup assert null actual get health check task 
push service test run with spring j unit4 class runner class context configuration class mock servlet context class web app configuration public class push service test extend base test inject mock private push service push service before public void before super before test public void test get client fuzzy throw exception string namespace id public string cluster default string agent naco java client v1 1.4 string client ip localhost string app naco int udp port string hello service name hello group name hello service name int hello udp port string test service name test group name test service name int test udp port push service add client namespace id hello service name cluster agent new inet socket address client ip hello udp port null namespace id app push service add client namespace id test service name cluster agent new inet socket address client ip test udp port null namespace id app list subscriber fuzzylist push service get client fuzzy hello hello public assert assert equal fuzzylist size assert assert equal fuzzylist get get service name hello group name hello service name list subscriber list push service get client fuzzy hello group name hello service name public assert assert equal list size assert assert equal list get get service name hello group name hello service name list subscriber no datum list push service get client fuzzy bad group name bad service name public assert assert equal no datum list size 
subscribe manager test spring boot test run with spring j unit4 class runner class context configuration class mock servlet context class public class subscribe manager test extend base test mock private subscribe manager subscribe manager mock private push service push service mock private server member manager member manager before public void before super before subscribe manager new subscribe manager test public void get subscriber with false string service name test string namespace id public boolean aggregation boolean false try list subscriber client new array list subscriber subscriber subscriber new subscriber 127.0 0.1 test app 127.0 0.1 namespace id service name client add subscriber mockito when push service get client mockito any string mockito any string then return client list subscriber list subscribe manager get subscriber service name namespace id aggregation assert assert not null list assert assert equal list size assert assert equal public list get get namespace id catch exception ignore test public void test get subscriber fuzzy string service name test string namespace id public boolean aggregation boolean true try list subscriber client new array list subscriber subscriber subscriber new subscriber 127.0 0.1 test app 127.0 0.1 namespace id test group name test subscriber client add subscriber mockito when push service get client fuzzy mockito any string mockito any string then return client list subscriber list subscribe manager get subscriber service name namespace id aggregation assert assert not null list assert assert equal list size assert assert equal test group name test subscriber list get get service name catch exception ignore test public void get subscriber with true string service name test string namespace id public boolean aggregation boolean true try list subscriber client new array list subscriber subscriber subscriber new subscriber 127.0 0.1 test app 127.0 0.1 namespace id service name client add subscriber list member healthy server new array list for int i i i member server new member server set ip 127.0 0.1 server set port i server set state node state up server set extend val member meta datum constant ad weight server set extend val member meta datum constant site key site server set extend val member meta datum constant weight server set extend val member meta datum constant raft port i healthy server add server mockito when member manager all member then return healthy server mockito do return when server list manager get healthy server size list subscriber list subscribe manager get subscriber service name namespace id aggregation assert assert not null list assert assert equal list size assert assert equal public list get get namespace id catch exception ignore 
client beat check task test run with mockito j unit runner silent class public class client beat check task test inject mock spy private client beat check task client beat check task mock private distro mapper distro mapper spy mock private service service spy mock private global config global config mock private push service push service before public void init reflection test util set field client beat check task service service spy mockito do return distro mapper spy when client beat check task get distro mapper mockito do return global config when client beat check task get global config mockito do return push service when client beat check task get push service test public void test heart beat not timeout instance instance new instance instance set last beat system current time millis instance set marked false instance set healthy true map string string metadata new hash map metadata put preserve metadata key heart beat timeout instance set metadata metadata list instance instance new array list instance add instance mockito when service spy all i ps true then return instance mockito do return test when service spy get name mockito do return true when distro mapper spy responsible mockito any string client beat check task run assert assert true instance be healthy test public void test heart beat timeout instance instance new instance instance set last beat system current time millis instance set marked false instance set healthy true map string string metadata new hash map metadata put preserve metadata key heart beat timeout instance set metadata metadata list instance instance new array list instance add instance mockito do return test when service spy get name mockito do return true when distro mapper spy responsible mockito any string mockito when service spy all i ps true then return instance client beat check task run assert assert false instance be healthy test public void test ip delete time out instance instance new instance instance set last beat system current time millis instance set marked true instance set healthy true map string string metadata new hash map metadata put preserve metadata key ip delete timeout instance set metadata metadata list instance instance new array list instance add instance mockito do return true when distro mapper spy responsible null mockito do return true when global config be expire instance mockito when service spy all i ps true then return instance client beat check task run test public void test ip delete not time out instance instance new instance instance set last beat system current time millis instance set marked true instance set healthy true map string string metadata new hash map metadata put preserve metadata key ip delete timeout instance set metadata metadata list instance instance new array list instance add instance mockito do return true when distro mapper spy responsible null mockito do return true when global config be expire instance mockito when service spy all i ps true then return instance client beat check task run 
naco async rest template i t case suppress warning all fix method order method sorter jvm run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class naco async rest template i t case local server port private int port private naco async rest template naco rest template http client bean holder get naco async rest template logger factory get logger naco async rest template i t case class private final string config instance path naco v1 n private string ip null before public void init throw naco exception ip string format http localhost d port private class callback map t implement callback t private http rest result t rest result private throwable throwable override public void on receive rest result t result rest result http rest result t result override public void on error throwable throwable throwable throwable public http rest result t get rest result return rest result public throwable get throwable return throwable test public void test url post form throw exception string url ip config instance path instance map string string param new hash map param put service name app test param put port param put ip 11.11 11.11 callback map string callback map new callback map naco rest template post form url header new instance query new instance param string class callback map thread sleep http rest result string rest result callback map get rest result system out println rest result get datum system out println rest result get header assert assert true rest result ok test public void test url put form throw exception string url ip config instance path instance map string string param new hash map param put service name app test change param put port param put ip 11.11 11.11 callback map string callback map new callback map naco rest template post form url header new instance query new instance param string class callback map thread sleep http rest result string rest result callback map get rest result system out println rest result get datum system out println rest result get header assert assert true rest result ok test public void test url get throw exception string url ip config instance path instance list query query query new instance add param service name app test callback map map callback map new callback map naco rest template get url header new instance query map class callback map thread sleep http rest result map rest result callback map get rest result system out println rest result get datum system out println rest result get header assert assert true rest result ok assert assert equal rest result get datum get dom app test test public void test url by map throw exception string url ip config instance path instance list map string string param new hash map param put service name app test callback map map callback map new callback map naco rest template get url header new instance param map class callback map thread sleep http rest result map rest result callback map get rest result system out println rest result get datum system out println rest result get header assert assert true rest result ok assert assert equal rest result get datum get dom app test test public void test url delete throw exception string url ip config instance path instance query query query new instance add param ip 11.11 11.11 add param port add param service name app test callback map string callback map new callback map naco rest template delete url header new instance query string class callback map thread sleep http rest result string rest result callback map get rest result system out println rest result get datum system out println rest result get header assert assert true rest result ok 
naco rest template interceptor i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port fix method order method sorter jvm public class naco rest template interceptor i t case local server port private int port private naco rest template naco rest template http client bean holder get naco rest template logger factory get logger naco rest template interceptor i t case class private final string config path naco v1 c private string ip null private class termination interceptor implement http client request interceptor override public http client response intercept return new http client response override public header get header return header empty override public input stream get body throw i o exception return new byte array input stream stop request get byte override public int get status code return naco exception server error override public string get status text return null override public void close throw i o exception override public boolean be intercept uri uri string http method request http entity request http entity return true before public void init throw naco exception naco rest template set interceptor array as list new termination interceptor ip string format http localhost d port test public void test url post config throw exception string url ip config path config map string string param new hash map param put datum id test param put group default group param put content aaa b http rest result string rest result naco rest template post form url header new instance query empty param string class assert assert equal rest result get code assert assert equal stop request rest result get datum system out println rest result get datum system out println rest result get header 
naco rest template i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port fix method order method sorter jvm public class naco rest template i t case local server port private int port private naco rest template naco rest template http client bean holder get naco rest template logger factory get logger naco rest template i t case class private final string instance path naco v1 n private final string config path naco v1 c private string ip null before public void init throw naco exception ip string format http localhost d port test public void test url post config throw exception string url ip config path config map string string param new hash map param put datum id test param put group default group param put content aaa b http rest result string rest result naco rest template post form url header new instance query empty param string class assert assert true rest result ok system out println rest result get datum system out println rest result get header test public void test url get return rest result throw exception string url ip config path config query query query new instance add param beta true add param datum id test add param group default group http rest result config info4 beta rest result naco rest template get url header new instance query new type reference rest result config info4 beta get type assert assert true rest result ok system out println rest result get datum system out println rest result get header test public void test url post form throw exception string url ip instance path instance map string string param new hash map param put service name app test param put port param put ip 11.11 11.11 http rest result string rest result naco rest template post form url header new instance query new instance param string class assert assert true rest result ok system out println rest result get datum test public void test url put from throw exception string url ip instance path instance map string string param new hash map param put service name app test change param put port param put ip 11.11 11.11 http rest result string rest result naco rest template put form url header new instance query new instance param string class assert assert true rest result ok system out println rest result get datum test public void test url get throw exception string url ip instance path instance list query query query new instance add param service name app test http rest result map rest result naco rest template get url header new instance query map class assert assert true rest result ok assert assert equal rest result get datum get dom app test system out println rest result get datum test public void test url get by map throw exception string url ip instance path instance list map string string param new hash map param put service name app test http rest result map rest result naco rest template get url header new instance param map class assert assert true rest result ok assert assert equal rest result get datum get dom app test system out println rest result get datum test public void test url delete throw exception string url ip instance path instance query query query new instance add param ip 11.11 11.11 add param port add param service name app test http rest result string rest result naco rest template delete url header new instance query string class assert assert true rest result ok system out println rest result 
config a p i c i t case run with spring runner class spring boot test class naco class property server servlet context path naco server port web environment spring boot test web environment define port public class config a p i c i t case public static final long time out static config service iconfig null static http agent agent null static final string config controller path v1 c config string special character string datum id yanlin string group yanlin local server port private int port before public void set up throw exception property property new property property put property key const server addr 127.0 0.1 port property put property key const context path naco iconfig naco factory create config service property agent new metric http agent new server http agent property agent start after public void cleanup throw exception http rest result string result null try map string string param new hash map param put datum id data id param put group group param put beta true result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert true jackson util to obj result get datum get datum boolean value assert assert true jackson util to obj result get datum get datum boolean value catch exception e e print stack trace assert fail before class after class public static void clean client cache throw exception config clean util clean client cache t c description naco test step expect result test timeout time out public void naco getconfig throw exception final string content test boolean result iconfig publish config datum id group content thread sleep time out assert assert true result string value iconfig get config datum id group time out assert assert equal content value result iconfig remove config datum id group thread sleep time out assert assert true result value iconfig get config datum id group time out system out println value assert assert null value throw exception t c description naco test timeout time out public void naco getconfig throw exception string content iconfig get config datum id naco time out assert assert null content throw exception t c description naco datum id null test timeout time out public void naco getconfig throw exception try string content iconfig get config null group time out catch exception e assert assert true true return assert fail throw exception t c description naco group null test timeout time out public void naco getconfig throw exception final string datum id naco getconfig final string content test boolean result iconfig publish config datum id null content assert assert true result thread sleep time out string value iconfig get config datum id null time out assert assert equal content value result iconfig remove config datum id null thread sleep time out assert assert true result throw exception t c description naco test timeout time out public void naco publish config throw exception final string content publish config test boolean result iconfig publish config datum id group content thread sleep time out assert assert true result result iconfig remove config datum id group assert assert true result throw exception t c description naco test timeout time out public void naco publish config throw exception final string content publish config test boolean result iconfig publish config datum id group content thread sleep time out assert assert true result final string content1 test abc result iconfig publish config datum id group content1 thread sleep time out string value iconfig get config datum id group time out assert assert equal content1 value throw exception t c description naco test timeout time out public void naco publish config throw exception string content test special character boolean result iconfig publish config datum id group content thread sleep time out assert assert true result string value iconfig get config datum id group time out assert assert equal content value throw exception t c description naco datum id null test timeout time out public void naco publish config throw exception try string content test boolean result iconfig publish config null group content thread sleep time out assert assert true result catch exception e assert assert true true return assert fail throw exception t c description naco group null test timeout time out public void naco publish config throw exception final string datum id naco publish config string content test boolean result iconfig publish config datum id null content thread sleep time out assert assert true result string value iconfig get config datum id null time out assert assert equal content value throw exception t c description nacos null test timeout time out public void naco publish config throw exception string content null try boolean result iconfig publish config datum id group content thread sleep time out catch exception e assert assert true true return assert fail throw exception t c description naco test timeout time out public void naco publish config throw exception string content abc boolean result iconfig publish config datum id group content thread sleep time out assert assert true result string value iconfig get config datum id group time out assert assert equal content value throw exception t c description naco test public void naco remove config throw exception string content test boolean result iconfig publish config datum id group content assert assert true result thread sleep time out result iconfig remove config datum id group assert assert true result thread sleep time out string value iconfig get config datum id group time out assert assert null value throw exception t c description naco test timeout time out public void naco remove config throw exception group remove config2 boolean result iconfig remove config datum id group assert assert true result throw exception t c description naco datum id null test timeout time out public void naco remove config throw exception try boolean result iconfig remove config null group assert assert true result catch exception e assert assert true true return assert fail throw exception t c description naco group null test timeout time out public void naco remove config throw exception boolean result iconfig remove config datum id null assert assert true result throw exception t c description naco datum id test timeout time out public void naco add listener throw exception final atomic integer count new atomic integer final string content test abc boolean result iconfig publish config datum id group content assert assert true result listener ml new listener override public void receive config info string config info system out println recieve23 config info count increment and get assert assert equal content config info override public executor get executor return null iconfig add listener datum id group ml while count get thread sleep assert assert true count get iconfig remove listener datum id group ml t c description nacos null test step expect result author xiaochun xxc since 3.6 test timeout time out expect illegal argument exception class public void naco add listener throw exception iconfig add listener datum id group null t c description naco datum id test step todo test step expect result todo expect result author xiaochun xxc since 3.6 test timeout constant config long poll timeout public void naco add listener throw interrupted exception naco exception final atomic integer count new atomic integer final string datum id naco add listener final string group naco add listener final string content test abc system current time millis final string new content naco add listener system current time millis boolean result iconfig publish config datum id group content assert assert true result maximum assurance level notification have be perform thread util sleep listener ml new abstract listener override public void receive config info string config info count increment and get assert assert equal new content config info string receive iconfig get config and sign listener datum id group l ml assert assert equal content receive result iconfig publish config datum id group new content assert assert true result get enough sleep to ensure that the monitor be trigger only once during the two long training session thread util sleep constant config long poll timeout assert assert equal count get iconfig remove listener datum id group ml t c description naco datum id test step todo test step expect result todo expect result author xiaochun xxc since 3.6 test timeout time out public void naco add listener throw exception final atomic integer count new atomic integer iconfig remove config datum id group thread sleep time out listener ml new abstract listener override public void receive config info string config info count increment and get iconfig add listener datum id group ml thread sleep time out string content test abc boolean result iconfig publish config datum id group content assert assert true result while count get thread sleep assert assert equal count get iconfig remove listener datum id group ml t c description naco listener listener test step todo test step expect result todo expect result author chuntaojun since 3.6 test public void naco add listener throw interrupted exception naco exception final atomic integer count new atomic integer final string datum id naco add listener final string group naco add listener final string content test abc final string new content new test def boolean result iconfig publish config datum id group content assert assert true result thread sleep listener ml new abstract listener override public void receive config info string config info count increment and get assert assert equal new content config info string receive content iconfig get config and sign listener datum id group ml system out println receive content result iconfig publish config datum id group new content assert assert true result assert assert equal content receive content thread sleep assert assert equal count get iconfig remove listener datum id group ml t c description naco listener listener test step todo test step expect result todo expect result author chuntaojun since 3.6 test public void naco add listener throw interrupted exception naco exception property property new property property put property key const server addr 127.0 0.1 port property put property key const enable remote sync config true config service iconfig naco factory create config service property final atomic integer count new atomic integer final string datum id naco add listener final string group naco add listener final string content test abc final string new content new test def boolean result iconfig publish config datum id group content assert assert true result thread sleep listener ml new abstract listener override public void receive config info string config info count increment and get system out println listener receive config info assert assert equal new content config info iconfig add listener datum id group ml string receive content iconfig get config datum id group system out println receive content result iconfig publish config datum id group new content assert assert true result thread sleep receive content iconfig get config datum id group assert assert equal new content receive content assert assert equal count get iconfig remove listener datum id group ml t c description naco test step todo test step expect result todo expect result author xiaochun xxc since 3.6 test timeout time out public void naco remove listener throw exception iconfig add listener datum id group new abstract listener override public void receive config info string config info assert fail thread sleep time out try iconfig remove listener datum id group new abstract listener override public void receive config info string config info system out println remove recieve config info catch exception e t c description naco datum id test step todo test step expect result todo expect result author xiaochun xxc since 3.6 test timeout time out public void naco remove listener group test naco try iconfig remove listener datum id group new abstract listener override public void receive config info string config info catch exception e assert fail t c description naco test step todo test step expect result todo expect result author xiaochun xxc since 3.6 test timeout time out public void naco remove listener throw exception final string content remove test abc two final atomic integer count new atomic integer listener ml new abstract listener override public void receive config info string config info count increment and get listener ml1 new abstract listener override public void receive config info string config info system out println ml1 remove listener recieve config info count increment and get assert assert equal content remove config info iconfig add listener datum id group ml iconfig add listener datum id group ml1 iconfig remove listener datum id group ml thread sleep time out boolean result iconfig publish config datum id group content remove thread sleep time out assert assert true result while count get thread sleep assert assert not equal count get t c description nacos null test step todo test step expect result todo expect result author xiaochun xxc since 3.6 test timeout time out public void naco remove listener iconfig remove listener datum id group null t c description naco open a p i test step expect result author xiaochun xxc since 3.6 test timeout time out public void naco open a p i detail config http rest result string result null try final string content test boolean ret iconfig publish config datum id group content thread sleep time out assert assert true ret map string string param new hash map param put datum id data id param put group group param put show all result agent http get config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert equal content jackson util to obj result get datum get content text value catch exception e assert fail t c description naco open a p i catalog test step expect result author xiaochun xxc since 3.6 test timeout time out public void naco open a p i catalog http rest result string result null try final string content test boolean ret iconfig publish config datum id group content thread sleep time out assert assert true ret map string string param new hash map param put datum id data id param put group group result agent http get config controller path catalog null param agent get encode time out assert assert equal http u be l connection http ok result get code system out println result get datum assert assert false jackson util to obj result get datum get datum be null catch exception e assert fail t c description naco open a p i query beta test step expect result author xiaochun xxc since 3.6 test timeout time out public void naco open a p i query beta http rest result string result null try final string content test beta map string string header new hash map header put beta ip 127.0 0.1 map string string param new hash map param put datum id data id param put group group param put content content result agent http post config controller path header param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert equal true result get datum param clear param put datum id data id param put group group param put beta true result agent http get config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert equal content jackson util to obj result get datum get datum get content text value delete datum result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code catch exception e assert fail t c description naco open a p i query beta test step beta expect result author xiaochun xxc since 3.6 test timeout time out public void naco open a p i query beta delete http rest result string result null try final string content test beta map string string header new hash map header put beta ip 127.0 0.1 map string string param new hash map param put datum id data id param put group group param put content content result agent http post config controller path header param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert equal true result get datum param clear param put datum id data id param put group group param put beta true result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert true jackson util to obj result get datum get datum boolean value catch exception e e print stack trace assert fail t c description naco open a p i test step expect result author xiaochun xxc since 3.6 test timeout time out public void naco open a p i fuzzy search config http rest result string result null try final string content test123 boolean ret iconfig publish config datum id group content thread sleep time out assert assert true ret map string string param new hash map param put datum id data id param put group group param put page no param put page size param put search blur result agent http get config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert true jackson util to obj result get datum get total count int value assert assert true jackson util to obj result get datum get page item get get content text value start with content catch exception e assert fail t c description naco open a p i test step expect result author xiaochun xxc since 3.6 test timeout time out public void naco open a p i fuzzy search config http rest result string result null try final string content test123 boolean ret iconfig publish config datum id group content thread sleep time out assert assert true ret map string string param new hash map param put datum id data id param put group group param put page no param put page size param put search blur result agent http get config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert true jackson util to obj result get datum get total count int value assert assert equal content jackson util to obj result get datum get page item get get content text value catch exception e assert fail t c description naco open a p i test step expect result author xiaochun xxc since 3.6 test timeout time out public void naco open a p i search config http rest result string result null try final string content test123 boolean ret iconfig publish config datum id group content assert assert true ret thread sleep time out map string string param new hash map param put datum id data id param put group group param put page no param put page size param put search accurate result agent http get config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert equal jackson util to obj result get datum get total count int value assert assert equal content jackson util to obj result get datum get page item get get content text value catch exception e assert fail t c description naco open a p i utf test step expect result author xiaochun xxc since 3.6 test timeout time out public void naco open a p i search config http rest result string result null try final string content test boolean ret iconfig publish config datum id group content assert assert true ret thread sleep time out map string string param new hash map param put datum id data id param put group group param put page no param put page size param put search accurate result agent http get config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code assert assert equal jackson util to obj result get datum get total count int value assert assert equal content jackson util to obj result get datum get page item get get content text value catch exception e assert fail 
config beta c i t case run with spring runner class spring boot test class naco class property server servlet context path naco server port web environment spring boot test web environment define port public class config beta c i t case local server port private int port private string url autowire private test rest template rest template static final string config controller path naco v1 c string data id com dungu test string group default string tenant dungu string content test string app name naco before class after class public static void clean client cache throw exception config clean util clean client cache before public void init throw naco exception url string format http localhost d port t c description beta test step expect result test public void publish beta config throw exception http header header new http header header add beta ip 127.0 0.1 127.0 0.2 response entity string response request config controller path config header param new param append param datum id datum id append param group group append param tenant tenant append param content content append param config tag append param app name app name do string class http method post system out println publish beta config response assert assert true response get status code is2xx successful assert assert equal true response get body t c description content beta test step expect result test public void publish beta config no content throw exception http header header new http header header add beta ip 127.0 0.1 127.0 0.2 response entity string response request config controller path config header param new param append param datum id datum id append param group group append param tenant tenant append param config tag append param app name app name do string class http method post system out println publish beta config no content response assert assert false response get status code is2xx successful t c description beta ip beta test step expect result test public void publish beta config no beta ip beta throw exception http header header new http header beta ip response entity string response request config controller path config header param new param append param datum id datum id append param group group append param tenant tenant append param content content append param config tag append param app name app name do string class http method post system out println publish beta config no beta ip beta post response assert assert true response get status code is2xx successful assert assert equal true response get body response entity string response1 request config controller path config beta true param new param append param datum id datum id append param group group append param tenant tenant do string class http method get system out println publish beta config no beta ip beta get response assert assert true response1 get status code is2xx successful assert assert true jackson util to obj response1 get body get datum be null t c description beta ip beta test step expect result test public void publish beta config no beta ip throw exception http header header new http header beta ip final string datum id publish beta config no beta ip final string group id publish beta config no beta ip final string content publish beta config no beta ip response entity string response request config controller path config header param new param append param datum id datum id append param group group id append param tenant tenant append param content content append param config tag append param app name app name do string class http method post system out println publish beta config no beta ip post response assert assert true response get status code is2xx successful assert assert equal true response get body thread util sleep l response request config controller path config beta false param new param append param datum id datum id append param group group id append param tenant tenant do string class http method get system out println publish beta config no beta ip get response assert assert true response get status code is2xx successful assert assert equal content response get body t c description beta test step expect result test public void get beta config throw exception http header header new http header header add beta ip 127.0 0.1 127.0 0.2 response entity string response request config controller path config header param new param append param datum id datum id append param group group append param tenant tenant append param content content append param config tag append param app name app name do string class http method post system out println get beta config post response assert assert true response get status code is2xx successful assert assert equal true response get body response request config controller path config beta true param new param append param datum id datum id append param group group append param tenant tenant do string class http method get system out println get beta config get response assert assert true response get status code is2xx successful assert assert equal com dungu test jackson util to obj response get body get datum get datum id as text t c description beta test step expect result test public void delete beta config throw exception http header header new http header header add beta ip 127.0 0.1 127.0 0.2 response entity string response request config controller path config header param new param append param datum id datum id append param group group append param tenant tenant append param content content append param config tag append param app name app name do string class http method post system out println delete beta config post response assert assert true response get status code is2xx successful assert assert equal true response get body response request config controller path config beta true param new param append param datum id datum id append param group group append param tenant tenant do string class http method get system out println delete beta config get response assert assert true response get status code is2xx successful assert assert equal com dungu test jackson util to obj response get body get datum get datum id as text response request config controller path config beta true param new param append param datum id datum id append param group group append param tenant tenant do string class http method delete system out println delete beta config delete response assert assert true response get status code is2xx successful assert assert equal true jackson util to obj response get body get datum as text response request config controller path config beta true param new param append param datum id datum id append param group group append param tenant tenant do string class http method get system out println delete beta config after delete then get response assert assert true response get status code is2xx successful assert assert true jackson util to obj response get body get datum be null t c description beta false beta test step expect result test public void delete beta config delete beta false throw exception http header header new http header header add beta ip 127.0 0.1 127.0 0.2 response entity string response request config controller path config header param new param append param datum id datum id append param group group append param tenant tenant append param content content append param config tag append param app name app name do string class http method post system out println delete beta config delete beta false post response assert assert true response get status code is2xx successful assert assert equal true response get body response request config controller path config beta true param new param append param datum id datum id append param group group append param tenant tenant do string class http method get system out println delete beta config delete beta false get response assert assert true response get status code is2xx successful assert assert equal com dungu test jackson util to obj response get body get datum get datum id as text response request config controller path config beta false param new param append param datum id datum id append param group group append param tenant tenant do string class http method delete system out println delete beta config delete beta false delete response assert assert true response get status code is2xx successful assert assert equal true response get body response request config controller path config beta true param new param append param datum id datum id append param group group append param tenant tenant do string class http method get system out println delete beta config delete beta false after delete then get response assert assert true response get status code is2xx successful assert assert equal com dungu test jackson util to obj response get body get datum get datum id as text t response entity t request string path multi value map string string param class t clazz http method http method http header header new http header http entity entity new http entity t header uri component builder builder uri component builder from http url this url to string path query param param return this rest template exchange builder to uri string http method entity clazz t response entity t request string path http header header multi value map string string param class t clazz http method http method http entity entity new http entity t header uri component builder builder uri component builder from http url this url to string path query param param return this rest template exchange builder to uri string http method entity clazz 
config derby import c i t case run with spring runner class spring boot test class naco class property server servlet context path naco server port web environment spring boot test web environment define port public class config derby import c i t case autowire private application context context test public void test derby import throw throwable database operate operate context get bean database operate class file file disk util create tmp file derby import system current time millis tmp disk util write file file byte util to byte sql script context false try completable future rest result string future operate datum import file rest result string result future join system out println result assert assert true result ok final string query data id people final string query group default group final string expect content people enable true persist service persist service context get bean persist service class config info config info persist service find config info query data id query group system out println config info assert assert not null config info assert assert equal query datum id config info get datum id assert assert equal query group config info get group assert assert equal config info get tenant assert assert equal expect content config info get content finally disk util delete quietly file private static string sql script context insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value boot test alibaba dept ngroup 2ca50d002a7dabf81497f666a7967e15 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value people default group people enable true d92cbf8d02080017a805b7efc4481b6c 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value apple default group apple n list n n n n n list map n key n n n n n key n aa n dd n ee n rr 4eb5a2258ba6ecddd9631ec10cf36342 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value naco log log develop log level com alibaba boot naco sample error 96c1909608 cad11034802b336b0c5490 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null text null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value naco log default group log level com alibaba cloud example error 43ed366ef7542af8bf37fb6dbe39e46d 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null text null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value test default group dept aliware ngroup alibaba 2f60 cf534f6eb67c6c95c8e0acbcff0a 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value common property default group user age nuser name liaochuntao b68ec4349bb2a824d622c423ce3cbcce 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null property null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value naco cloud test default group user remark this be nacos springboot adaper testing 89lll nuser age bca25308a96ec491c 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value extension1 property default group user age 4585b001 cc1c4ff4ac94d8dbccdb888f 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null property null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value first property source data id default group user name mercy ma e36dc37603eabe6dbd08ddab5ae728e3 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value before os env property source data id default group path home my path 44dae1248f3b8bbc72698e2de4441cc3 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value after system property property source data id default group user name mercyblitz f6a3287654d0c79ec47dc3359ea419fa 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value example default group use local cache true 25a822367 cd73c79acc56da3c73fa07e 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value people develop people enable true d92cbf8d02080017a805b7efc4481b6c 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value test naco default group this be test liaochuntao n nkey value n nredis url 127.0 0.1 2482e3802 f8fc5fd34545bbbbd121719 2020 - 04 13 13 44:43 2020 - 04 30 10 45:21 null 127.0 0.1 null null null null null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value develop test default group develop test develop testdevelop testdevelop testdevelop test cc4ffd21bdd54362b84d629fd243e050 2020 - 04 13 13 51:48 2020 - 04 13 13 51:48 null 127.0 0.1 188c49 ac d06f 4abe 9d05 7bb87185ac34 null null null property null n insert into config info id datum id group id content md5 gmt create gmt modify src user src ip app name tenant id c desc c use effect type c schema value application property default group name liaochuntao be man 17581188a1 cdc684721dde500c693c07 2020 - 04 30 10 45:21 2020 - 04 30 10 45:21 null 127.0 0.1 null null null property null n n 
config export and import a p i c i t case run with spring runner class spring boot test class naco class property server servlet context path naco server port web environment spring boot test web environment define port public class config export and import a p i c i t case private static final long time out private static final string config controller path v1 c config private common ok http client http client new common ok http client builder build local server port private int port private string server addr null private http agent agent null before class after class public static void clean client cache throw exception config clean util clean client cache before public void set up throw exception server addr http 127.0 0.1 port naco property property new property property put property key const server addr 127.0 0.1 port agent new metric http agent new server http agent property agent start map string string prarm new hash map prarm put datum id test no appname1 yml prarm put group export import test group prarm put content test test prarm put desc test no appname1 prarm put type yaml assert assert equal true http client post server addr config controller path prarm null prarm put datum id test no appname2 txt prarm put group t e s t1 group prarm put content test test prarm put desc test no appname2 prarm put type text assert assert equal true http client post server addr config controller path prarm null prarm put datum id test have appname1 property prarm put group export import test group prarm put content test test1 value test prarm put desc test have appname1 prarm put type property prarm put app name test app1 assert assert equal true http client post server addr config controller path prarm null after public void cleanup throw exception http rest result string result try map string string param new hash map param put datum id test no appname1 yml param put group export import test group param put beta false result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code param put datum id test no appname2 txt param put group t e s t1 group param put beta false result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code param put datum id test have appname1 property param put group export import test group param put beta false result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code param put datum id test1 yml param put group test import param put beta false result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code param put datum id test2 txt param put group test import param put beta false result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code param put datum id test3 property param put group test import param put beta false result agent http delete config controller path null param agent get encode time out assert assert equal http u be l connection http ok result get code catch exception e assert fail agent shutdown test public void test export by id string get datum url search accurate datum id group app name config tag page no page size tenant namespace id string query result http client get server addr config controller path get datum url null json node result obj jackson util to obj query result json node result config result obj get page item json node config1 result config get json node config2 result config get string id1 config1 get id as text string id2 config2 get id as text string export by id url export true tenant group app name id id1 id2 system out println export by id url byte zip datum http client download server addr config controller path export by id url null zip util un zip result un zip zip util unzip zip datum list zip util zip item zip item list un zip get zip item list assert assert equal zip item list size string config1 name config1 get group text value config1 get datum id text value string config2 name config2 get group text value config2 get datum id text value for zip util zip item zip item zip item list if config1 name equal zip item get item name config2 name equal zip item get item name assert fail test timeout time out public void test export by group string get datum url search accurate datum id group export import test group app name config tag page no page size tenant namespace id string query result http client get server addr config controller path get datum url null json node result obj jackson util to obj query result json node result config result obj get page item assert assert equal result config size json node config1 result config get json node config2 result config get string export by id url export true tenant group export import test group app name id byte zip datum http client download server addr config controller path export by id url null zip util un zip result un zip zip util unzip zip datum list zip util zip item zip item list un zip get zip item list assert assert equal zip item list size string config1 name config1 get group text value config1 get datum id text value string config2 name config2 get group text value config2 get datum id text value for zip util zip item zip item zip item list if config1 name equal zip item get item name config2 name equal zip item get item name assert fail verification metadata map string string meta data process meta datum un zip get meta datum item string meta datum name package meta name export import test group test have appname1 property string app name meta datum get meta datum name assert assert not null app name assert assert equal test app1 app name test timeout time out public void test export by group and app string get datum url search accurate datum id group export import test group app name test app1 config tag page no page size tenant namespace id string query result http client get server addr config controller path get datum url null json node result obj jackson util to obj query result json node result config result obj get page item assert assert equal result config size json node config1 result config get string export by id url export true tenant group export import test group app name test app1 id byte zip datum http client download server addr config controller path export by id url null zip util un zip result un zip zip util unzip zip datum list zip util zip item zip item list un zip get zip item list assert assert equal zip item list size string config1 name config1 get group text value config1 get datum id text value for zip util zip item zip item zip item list if config1 name equal zip item get item name assert fail verification metadata map string string meta data process meta datum un zip get meta datum item string meta datum name package meta name export import test group test have appname1 property string app name meta datum get meta datum name assert assert not null app name assert assert equal test app1 app name test timeout time out public void test export all string export by id url export true tenant group app name id byte zip datum http client download server addr config controller path export by id url null zip util un zip result un zip zip util unzip zip datum list zip util zip item zip item list un zip get zip item list string config1 name export import test group test no appname1 yml string config2 name t e s t1 group test no appname2 txt string config3 name export import test group test have appname1 property int success count for zip util zip item zip item zip item list if config1 name equal zip item get item name config2 name equal zip item get item name config3 name equal zip item get item name success count assert assert equal success count verification metadata map string string meta data process meta datum un zip get meta datum item string meta datum name package meta name export import test group test have appname1 property string app name meta datum get meta datum name assert assert not null app name assert assert equal test app1 app name test timeout time out public void test import list zip util zip item zip item list new array list zip item list add new zip util zip item test import test1 yml test test1 zip item list add new zip util zip item test import test2 txt test test1 zip item list add new zip util zip item test import test3 property test test1 value test string meta datum str test import test2 txt app test app1 be n t e s t import test3 property app test app2 zip item list add new zip util zip item meta yml meta datum str string import url import true namespace map string string import prarm new hash map import prarm put policy overwrite upload byte file upload byte file new upload byte file upload byte file set file name test import zip upload byte file set file byte zip util zip zip item list upload byte file set media type application zip upload byte file set prarm name file http client post server addr config controller path import url import prarm collection singleton list upload byte file null string get datum url search accurate datum id group test import app name config tag page no page size tenant namespace id string query result http client get server addr config controller path get datum url null json node result obj jackson util to obj query result json node result config result obj get page item assert assert equal result config size for int i i result config size i json node config result config get i if test import equal config get group text value assert fail switch config get datum id text value case test1 yml case test2 txt case test3 property break default assert fail private map string string process meta datum zip util zip item meta datum zip item map string string meta datum map new hash map if meta datum zip item null string meta datum str meta datum zip item get item datum string meta datum arr meta datum str split be n for string meta datum item meta datum arr string meta datum item arr meta datum item split assert assert equal meta datum item arr length meta datum map put meta datum item arr meta datum item arr return meta datum map private string package meta name string group string datum id string temp datum id data id if temp datum id contain temp datum id temp datum id substr temp datum id last index of temp datum id substr temp datum id last index of return group temp datum id app 
config long poll return change c i t case run with spring runner class spring boot test class naco class property server servlet context path naco server port web environment spring boot test web environment define port public class config long poll return change c i t case local server port private int port private config service config service before class after class public static void clean client cache throw exception config clean util clean client cache before public void init throw naco exception property property new property property put property key const server addr 127.0 0.1 port property put property key const config long poll timeout property put property key const config retry time property put property key const max retry config service naco factory create config service property after public void destroy try config service shut down catch nacos exception ex test public void test add throw interrupted exception naco exception count down latch latch new count down latch final string datum id test system current time millis final string group default group final string content config datum config service add listener datum id group new abstract config change listener override public void receive config change config change event event try config change item cci event get change item content assert assert equal null cci get old value assert assert equal content cci get new value assert assert equal property change type add cci get type system out println cci finally latch count down boolean result config service publish config datum id group content assert assert true result config service get config datum id group latch await l time unit millisecond test public void test modify throw interrupted exception naco exception count down latch latch new count down latch final string datum id test system current time millis final string group default group final string old datum old datum final string new datum new datum boolean result config service publish config datum id group old datum assert assert true result config service add listener datum id group new abstract config change listener override public void receive config change config change event event try config change item cci event get change item content assert assert equal old datum cci get old value assert assert equal new datum cci get new value assert assert equal property change type modify cci get type system out println cci finally latch count down config service publish config datum id group new datum latch await l time unit millisecond test public void test delete throw interrupted exception naco exception count down latch latch new count down latch final string datum id test system current time millis final string group default group final string old datum old datum boolean result config service publish config datum id group old datum assert assert true result config service add listener datum id group new abstract config change listener override public void receive config change config change event event try config change item cci event get change item content assert assert equal old datum cci get old value assert assert equal null cci get new value assert assert equal property change type delete cci get type system out println cci finally latch count down config service remove config datum id group latch await l time unit millisecond 
config long poll c i t case run with spring runner class spring boot test class naco class property server servlet context path naco server port web environment spring boot test web environment define port public class config long poll c i t case local server port private int port private config service config service before class after class public static void clean client cache throw exception config clean util clean client cache before public void init throw naco exception property property new property property put property key const server addr 127.0 0.1 port property put property key const config long poll timeout property put property key const config retry time property put property key const max retry config service naco factory create config service property after public void destroy try config service shut down catch nacos exception ex test public void test throw interrupted exception naco exception config service add listener test default group new listener override public executor get executor return null override public void receive config info string config info system out println config info config service add listener test default group new listener override public executor get executor return null override public void receive config info string config info system out println config info time unit seconds sleep 
config auth i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class config auth i t case extend auth base local server port private int port public static final long time out public config service iconfig null private string datum id yanlin private string group yanlin before public void init throw exception super init port after public void destroy try iconfig shut down catch nacos exception ex test public void write with read permission throw exception construct config service property put property key const username username1 property put property key const password password1 iconfig naco factory create config service property final string content test try iconfig publish config datum id group content fail catch naco exception ne assert assert equal http status sc forbid ne get err code try iconfig remove config datum id group fail catch naco exception ne assert assert equal http status sc forbid ne get err code test public void read with read permission throw exception count down latch latch new count down latch atomic integer be new atomic integer property put property key const username username1 property put property key const password password1 iconfig naco factory create config service property final string content test system current time millis system out println content iconfig add listener datum id group new abstract config change listener override public void receive config change config change event event config change item cci event get change item content system out println content cci if content equal cci get new value return latch count down time unit seconds sleep 3 l property put property key const username username2 property put property key const password password2 config service config service naco factory create config service property boolean result config service publish config datum id group content assert assert true result time unit seconds sleep 5 l string re iconfig get config datum id group time out assert assert equal content re latch await 5 l time unit seconds assert assert equal latch get count test public void write with write permission throw exception construct config service property put property key const username username2 property put property key const password password2 iconfig naco factory create config service property final string content test boolean re iconfig publish config datum id group content assert assert true re re iconfig remove config datum id group assert assert true re test public void read with write permission throw exception count down latch latch new count down latch property put property key const namespace namespace1 property put property key const username username2 property put property key const password password2 iconfig naco factory create config service property final string content test system current time millis iconfig add listener datum id group new abstract config change listener override public void receive config change config change event event config change item cci event get change item content system out println content cci if content equal cci get new value return latch count down time unit seconds sleep 3 l boolean result iconfig publish config datum id group content assert assert true result time unit seconds sleep 5 l try iconfig get config datum id group time out fail catch naco exception ne assert assert equal http status sc forbid ne get err code latch await 5 l time unit seconds assert assert true latch get count test public void read write with full permission throw exception count down latch latch new count down latch atomic integer be new atomic integer property put property key const username username3 property put property key const password password3 iconfig naco factory create config service property final string content test system current time millis iconfig add listener datum id group new abstract config change listener override public void receive config change config change event event config change item cci event get change item content system out println content cci if content equal cci get new value return latch count down time unit seconds sleep 3 l boolean result iconfig publish config datum id group content assert assert true result time unit seconds sleep 5 l string re iconfig get config datum id group time out assert assert equal content re latch await 5 l time unit seconds assert assert equal latch get count result iconfig remove config datum id group assert assert true result 
name auth i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class name auth i t case extend auth base local server port private int port private naming service naming service before public void init throw exception super init port after public void destroy super destroy test public void write with read permission throw exception property put property key const username username1 property put property key const password password1 naming service naco factory create naming service property try name service register instance test 1.2 3.4 fail catch naco exception ne assert assert equal http status sc forbid ne get err code try name service deregister instance test 1.2 3.4 fail catch naco exception ne assert assert equal http status sc forbid ne get err code naming service shut down test public void read with read permission throw exception property put property key const username username2 property put property key const password password2 naming service name service1 naco factory create naming service property name service1 register instance test 1.2 3.4 time unit seconds sleep 5 l property put property key const username username1 property put property key const password password1 naming service naco factory create naming service property list instance list naming service get all instance test assert assert equal list size name service1 shut down naming service shut down test public void write with write permission throw exception property put property key const username username2 property put property key const password password2 naming service naco factory create naming service property name service register instance test 1.2 3.4 time unit seconds sleep 5 l naming service deregister instance test 1.2 3.4 naming service shut down test public void read with write permission throw exception property put property key const username username2 property put property key const password password2 naming service naco factory create naming service property name service register instance test 1.2 3.4 time unit seconds sleep 5 l list instance list naming service get all instance test assert assert equal list size naming service shut down test public void read write with full permission throw exception property put property key const username username3 property put property key const password password3 naming service naco factory create naming service property name service register instance test 1.2 3.4 time unit seconds sleep 5 l list instance list naming service get all instance test assert assert equal list size naming service shut down 
permission i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class permission i t case extend http client4 test local server port private int port private string access token before public void init throw exception time unit seconds sleep 5 l string url string format http localhost d port this base new url url after public void destroy delete permission response entity string response request naco v1 auth permission param new param append param role role1 append param resource public append param action rw append param access token access token do string class http method delete assert assert true response get status code is2xx successful delete permission response request naco v1 auth permission param new param append param role role1 append param resource test1 append param action r append param access token access token do string class http method delete assert assert true response get status code is2xx successful delete role response request naco v1 auth role param new param append param role role1 append param username username3 append param access token access token do string class http method delete assert assert true response get status code is2xx successful delete a user response request naco v1 auth user param new param append param username username3 append param access token access token do string class http method delete assert assert true response get status code is2xx successful test public void login response entity string response request naco v1 auth user login param new param append param username naco append param password naco do string class http method post assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert true json have access token access token json get access token text value test public void create delete query permission login create a user response entity string response request naco v1 auth user param new param append param username username3 append param password password1 append param access token access token do string class http method post assert assert true response get status code is2xx successful create role response request naco v1 auth role param new param append param role role1 append param username username3 append param access token access token do string class http method post assert assert true response get status code is2xx successful create permission response request naco v1 auth permission param new param append param role role1 append param resource public append param action rw append param access token access token do string class http method post assert assert true response get status code is2xx successful create another permission response request naco v1 auth permission param new param append param role role1 append param resource test1 append param action r append param access token access token do string class http method post assert assert true response get status code is2xx successful query permission response request naco v1 auth permission param new param append param role role1 append param page no append param page size append param access token access token do string class http method get system out println response assert assert true response get status code is2xx successful page permission permission page jackson util to obj response get body new type reference page permission assert assert not null permission page assert assert not null permission page get page item boolean found1 false found2 false for permission permission permission page get page item if permission get resource equal public permission get action equal rw found1 true if permission get resource equal test1 permission get action equal r found2 true if found1 found2 break assert assert true found1 assert assert true found2 delete permission response request naco v1 auth permission param new param append param role role1 append param resource public append param action rw append param access token access token do string class http method delete assert assert true response get status code is2xx successful query permission response request naco v1 auth permission param new param append param role role1 append param page no append param page size append param access token access token do string class http method get assert assert true response get status code is2xx successful permission page jackson util to obj response get body new type reference page permission assert assert not null permission page assert assert not null permission page get page item found1 false found2 false for permission permission permission page get page item if permission get resource equal public permission get action equal rw found1 true if permission get resource equal test1 permission get action equal r found2 true assert assert false found1 assert assert true found2 delete permission response request naco v1 auth permission param new param append param role role1 append param resource test1 append param action r append param access token access token do string class http method delete assert assert true response get status code is2xx successful query permission response request naco v1 auth permission param new param append param role role1 append param page no append param page size append param access token access token do string class http method get assert assert true response get status code is2xx successful permission page jackson util to obj response get body new type reference page permission assert assert not null permission page assert assert not null permission page get page item found1 false found2 false for permission permission permission page get page item if permission get resource equal public permission get action equal rw found1 true if permission get resource equal test1 permission get action equal r found2 true assert assert false found1 assert assert false found2 
role i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class role i t case extend http client4 test local server port private int port private string access token before public void init throw exception time unit seconds sleep 5 l string url string format http localhost d port this base new url url after public void destroy delete role response entity string response request naco v1 auth role param new param append param role role1 append param username username2 append param access token access token do string class http method delete assert assert true response get status code is2xx successful delete role response request naco v1 auth role param new param append param role role2 append param username username2 append param access token access token do string class http method delete assert assert true response get status code is2xx successful delete a user response request naco v1 auth user param new param append param username username2 append param access token access token do string class http method delete assert assert true response get status code is2xx successful test public void login response entity string response request naco v1 auth user login param new param append param username naco append param password naco do string class http method post assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert true json have access token access token json get access token text value test public void create delete query role login create a user response entity string response request naco v1 auth user param new param append param username username2 append param password password1 append param access token access token do string class http method post assert assert true response get status code is2xx successful create a role response request naco v1 auth role param new param append param role role1 append param username username2 append param access token access token do string class http method post assert assert true response get status code is2xx successful query role of user response request naco v1 auth role param new param append param username username2 append param page no append param page size append param access token access token do string class http method get assert assert true response get status code is2xx successful page role info role info page jackson util to obj response get body new type reference page role info assert assert not null role info page assert assert not null role info page get page item boolean find false for role info role info role info page get page item if role info get role equal role1 find true break assert assert true find add second role to user response request naco v1 auth role param new param append param role role2 append param username username2 append param access token access token do string class http method post assert assert true response get status code is2xx successful query role of user response request naco v1 auth role param new param append param username username2 append param page no append param page size append param access token access token do string class http method get assert assert true response get status code is2xx successful role info page jackson util to obj response get body new type reference page role info assert assert not null role info page assert assert not null role info page get page item find false boolean found2 false for role info role info role info page get page item if role info get role equal role1 find true if role info get role equal role2 found2 true if find found2 break assert assert true find assert assert true found2 delete role response request naco v1 auth role param new param append param role role2 append param username username2 append param access token access token do string class http method delete assert assert true response get status code is2xx successful query role of user response request naco v1 auth role param new param append param username username2 append param page no append param page size append param access token access token do string class http method get assert assert true response get status code is2xx successful role info page jackson util to obj response get body new type reference page role info assert assert not null role info page assert assert not null role info page get page item find false found2 false for role info role info role info page get page item if role info get role equal role1 find true if role info get role equal role2 found2 true assert assert false found2 assert assert true find delete role response request naco v1 auth role param new param append param role role1 append param username username2 append param access token access token do string class http method delete assert assert true response get status code is2xx successful query role of user response request naco v1 auth role param new param append param username username2 append param page no append param page size append param access token access token do string class http method get assert assert true response get status code is2xx successful role info page jackson util to obj response get body new type reference page role info assert assert not null role info page assert assert not null role info page get page item find false found2 false for role info role info role info page get page item if role info get role equal role1 find true if role info get role equal role2 found2 true assert assert false found2 assert assert false find 
user i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class user i t case extend http client4 test local server port private int port private string access token before public void init throw exception time unit seconds sleep 5 l string url string format http localhost d port this base new url url after public void destroy delete a user response entity string response request naco v1 auth user param new param append param username username1 append param access token access token do string class http method delete assert assert true response get status code is2xx successful test public void login response entity string response request naco v1 auth user login param new param append param username naco append param password naco do string class http method post assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert true json have access token access token json get access token text value test public void create update delete user login create a user response entity string response request naco v1 auth user param new param append param username username1 append param password password1 append param access token access token do string class http method post assert assert true response get status code is2xx successful query a user response request naco v1 auth user param new param append param page no append param page size string value of integer max value append param access token access token do string class assert assert true response get status code is2xx successful page user user page jackson util to obj response get body new type reference page user assert assert not null user page assert assert not null user page get page item assert assert true user page get page item size boolean find false for user user user page get page item if username1 equal user get username password encoder util match password1 user get password find true break assert assert true find update a user response request naco v1 auth user param new param append param username username1 append param new password password2 append param access token access token do string class http method put assert assert true response get status code is2xx successful query a user response request naco v1 auth user param new param append param page no append param page size string value of integer max value append param access token access token do string class user page jackson util to obj response get body new type reference page user assert assert not null user page assert assert not null user page get page item assert assert true user page get page item size find false for user user user page get page item if username1 equal user get username password encoder util match password2 user get password find true break assert assert true find delete a user response request naco v1 auth user param new param append param username username1 append param access token access token do string class http method delete assert assert true response get status code is2xx successful query a user response request naco v1 auth user param new param append param page no append param page size string value of integer max value append param access token access token do string class assert assert true response get status code is2xx successful user page jackson util to obj response get body new type reference page user assert assert not null user page assert assert not null user page get page item assert assert true user page get page item size find false for user user user page get page item if username1 equal user get username find true break assert assert false find 
auto deregister instance i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class auto deregister instance i t case private naming service name private naming service naming2 local server port private int port before public void init throw exception naming base prepare server port if naming null naming name factory create naming service 127.0 0.1 port while true if up equal name get server status application util get port thread sleep l continue break after public void destroy throw exception naming base destory server port cluster throw exception test public void auto dreg dom cluster test throw exception string service name random domain name name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.2 test port c2 time unit seconds sleep list instance instance instance name get all instance service name assert assert equal instance size naco name service naming service impl naco name service name naming service impl get beat reactor remove beat info constant default group constant service info spliter service name 127.0 0.1 test port verify instance list instance service name instance name get all instance service name assert assert equal instance size instance name get all instance service name array as list c2 assert assert equal instance size instance name get all instance service name array as list c1 assert assert equal instance size throw exception test public void auto dreg dom test throw exception string service name random domain name name register instance service name 127.0 0.1 test port name register instance service name 127.0 0.2 test port time unit seconds sleep list instance instance instance name get all instance service name assert assert equal instance size naco name service naming service impl naco name service name naming service impl get beat reactor remove beat info constant default group constant service info spliter service name 127.0 0.1 test port verify instance list instance service name instance name get all instance service name assert assert equal instance size throw exception test public void auto reg dom test throw exception string service name random domain name name register instance service name 127.0 0.1 test port name register instance service name 127.0 0.2 test port time unit seconds sleep list instance instance instance name get all instance service name assert assert equal instance size naco name service naming service impl naco name service name naming service impl get beat reactor remove beat info constant default group constant service info spliter service name 127.0 0.1 test port verify instance list instance service name instance name get all instance service name assert assert equal instance size beat info beat info new beat info beat info set service name constant default group constant service info spliter service name beat info set ip 127.0 0.1 beat info set port test port naming service impl get beat reactor add beat info constant default group constant service info spliter service name beat info verify instance list instance service name instance name get all instance service name assert assert equal instance size cluster throw exception test public void auto reg dom cluster test throw exception string service name random domain name name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.2 test port c2 time unit seconds sleep list instance instance instance name get all instance service name assert assert equal instance size naco name service naming service impl naco name service name naming service impl get beat reactor remove beat info constant default group constant service info spliter service name 127.0 0.1 test port verify instance list instance service name instance name get all instance service name assert assert equal instance size beat info beat info new beat info beat info set service name constant default group constant service info spliter service name beat info set ip 127.0 0.1 beat info set port test port beat info set cluster c1 naming service impl get beat reactor add beat info constant default group constant service info spliter service name beat info time unit seconds sleep verify instance list instance service name instance name get all instance service name assert assert equal instance size instance name get all instance service name array as list c2 assert assert equal instance size time unit seconds sleep instance name get all instance service name array as list c1 assert assert equal instance size public void verify instance list list instance instance int size string service name throw exception int i while i instance name get all instance service name if instance size size break else time unit seconds sleep i 
client beat i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class client beat i t case extend name base private naming service name local server port private int port before public void init throw exception naming base prepare server port if naming null naming name factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break string url string format http localhost d port this base new url url test public void test light beat throw exception string service name random domain name name register instance service name 1.2 3.4 instance instance new instance instance set ip 1.2 3.4 instance set port instance add metadata k1 v1 instance add metadata k2 v2 name register instance service name instance time unit seconds sleep 2 l list instance list name get all instance service name assert assert equal list size for instance instance1 list assert assert equal 1.2 3.4 instance1 get ip assert assert true instance1 get port instance1 get port if instance1 get port assert assert equal v1 instance1 get metadata get or default k1 string util empty assert assert equal v2 instance1 get metadata get or default k2 string util empty sleep seconds and see if instance list not change time unit seconds sleep 35 l list name get all instance service name assert assert equal list size for instance instance1 list assert assert equal 1.2 3.4 instance1 get ip assert assert true instance1 get port instance1 get port if instance1 get port assert assert equal v1 instance1 get metadata get or default k1 string util empty assert assert equal v2 instance1 get metadata get or default k2 string util empty change the light beat switch of server response entity string response request naming base name controller path operator switch param new param append param entry light beat enable append param value false do string class http method put assert assert true response get status code is2xx successful sleep seconds and see if instance list not change time unit seconds sleep 35 l list name get all instance service name assert assert equal list size for instance instance1 list assert assert equal 1.2 3.4 instance1 get ip assert assert true instance1 get port instance1 get port if instance1 get port assert assert equal v1 instance1 get metadata get or default k1 string util empty assert assert equal v2 instance1 get metadata get or default k2 string util empty reset the light beat switch of server response request naming base name controller path operator switch param new param append param entry light beat enable append param value true do string class http method put assert assert true response get status code is2xx successful 
cmdb i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port ignore public class cmdb i t case private naming service name private url base public static final long time out autowired private test rest template rest template local server port private int port before public void set up throw exception string url string format http s s test ip dom port this base new url url if naming null naming name factory create naming service test ip dom port after public void cleanup throw exception t c description cmdb label throw exception test public void cmdb get instance list throw exception string service name random domain name system out println service name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 string service name2 random domain name naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep 5 l object node json jackson util create empty json node json put type label json put expression consumer label label1 provider label label1 response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name append param client i p 11.11 11.11 do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body assert assert equal result get host size t c description cmdb label instance throw exception test public void cmdb get instance list throw exception string service name random domain name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 string service name2 random domain name naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label json put expression consumer label label1 provider label label1 response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body assert assert equal result get host size t c description cmdb ip instance throw exception test public void cmdb get instance list throw exception string service name random domain name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 string service name2 random domain name naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label json put expression consumer label label1 provider label label1 consumer label label2 provider label label2 response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name append param client i p 66.66 66.66 do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body system out println instance list result assert assert equal result get host size t c description cmdb service name throw exception test public void cmdb get instance list throw exception string service name random domain name string service name2 random domain name system out println service name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label json put expression consumer label label1 provider label label1 consumer label label2 provider label label2 response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n service param new param append param service name service name append param namespace id constant default namespace id do string class http method get system out println service list jackson util to obj http result get body http result request naco v1 n instance list param new param append param service name service name append param client i p 66.66 66.66 do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body system out println instance list result assert assert equal result get host size t c description cmdb ip instance service name throw exception test public void cmdb get instance list throw exception string service name random domain name string service name2 random domain name system out println service name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label json put expression consumer label label1 provider label label1 consumer label label2 provider label label2 response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name append param client i p 77.77 77.77 do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body system out println instance list result assert assert equal result get host size t c description cmdb selector throw exception test public void cmdb get instance list throw exception string service name random domain name string service name2 random domain name system out println service name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label json put expression consumer label label1 provider label label1 consumer label label2 provider label label2 response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name append param client i p 11.11 11.11 do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body system out println instance list result assert assert equal result get host size t c description cmdb selector throw exception test public void cmdb get instance list throw exception string service name random domain name string service name2 random domain name system out println service name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label json put expression consumer label label1 provider label label1 consumer label label2 provider label label2 list string params array as list service name service name protect threshold selector json to string response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name append param client i p 11.11 11.11 do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body system out println instance list result assert assert equal json get host size http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name append param client i p 11.11 11.11 do string class http method get assert assert equal http u be l connection http ok http result get status code value result jackson util to obj http result get body system out println instance list result assert assert equal result get host size t c description cmdb expression throw exception test public void cmdb get instance list throw exception string service name random domain name string service name2 random domain name system out println service name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label json put expression response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name append param client i p 11.11 11.11 do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body system out println instance list result assert assert equal result get host size t c description cmdb expression null instance throw exception test public void cmdb get instance list throw exception string service name random domain name string service name2 random domain name system out println service name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label json put expression response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http ok http result get status code value http result request naco v1 n instance list param new param append param service name service name append param client i p 11.11 11.11 do string class http method get assert assert equal http u be l connection http ok http result get status code value json node result jackson util to obj http result get body system out println instance list result assert assert equal result get host size t c description cmdb type label throw exception test public void cmdb get instance list throw exception string service name random domain name string service name2 random domain name system out println service name naming service create service name constant default namespace id constant default group instance register service name constant default namespace id constant default group 11.11 11.11 string value of test port dom c1 instance register service name constant default namespace id constant default group 22.22 22.22 string value of test port dom c1 instance register service name constant default namespace id constant default group 33.33 33.33 string value of test port dom c2 instance register service name constant default namespace id constant default group 44.44 44.44 string value of test port dom c2 instance register service name constant default namespace id constant default group 55.55 55.55 string value of test port dom c1 instance register service name constant default namespace id constant default group 66.66 66.66 string value of test port dom c1 naming service create service name2 constant default namespace id constant default group instance register service name2 constant default namespace id constant default group 77.77 77.77 string value of test port dom c2 instance register service name2 constant default namespace id constant default group 88.88 88.88 string value of test port dom c2 time unit seconds sleep object node json jackson util create empty json node json put type label1 json put expression consumer label label1 provider label label1 consumer label label2 provider label label2 response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold append param selector json to string do string class http method put assert assert equal http u be l connection http bad request http result get status code value public void instance register string service name string namespace string group name string ip string port string cluster name throw i o exception response entity string http result request naco v1 n instance param new param append param service name service name append param ip ip append param port port append param namespace id namespace append param group name group name append param cluster name cluster name append param ephemeral false do string class http method post assert assert equal http u be l connection http ok http result get status code value public void naming service create string service name string namespace throw i o exception naming service create service name namespace constant default group public void naming service create string service name string namespace string group name throw i o exception list string list param array as list service name service name protect threshold 0.3 namespace id namespace group name group name response entity string http result request naco v1 n service param new param append param service name service name append param protect threshold 0.3 append param namespace id namespace append param group name group name do string class http method post assert assert equal http u be l connection http ok http result get status code value private t response entity t request string path multi value map string string param class t clazz return request path param clazz org springframework http http method get private t response entity t request string path multi value map string string param class t clazz org springframework http http method http method http header header new http header http entity entity new http entity t header uri component builder builder uri component builder from http url this base to string path query param param return this rest template exchange builder to uri string http method entity clazz 
c p instance a p i i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class c p instance a p i i t case private naming service name private naming service naming1 private naming service naming2 local server port private int port private url base autowire private test rest template rest template before public void set up throw exception string url string format http localhost d port this base new url url name naming factory create naming service 127.0 0.1 port property property new property property put property key const namespace test namespace property put property key const server addr 127.0 0.1 port naming1 name factory create naming service property property new property property put property key const namespace test namespace property put property key const server addr 127.0 0.1 port naming2 name factory create naming service property after public void cleanup throw exception t c description service name register instance ephemeral true test step expect result test public void register instance ephemeral true throw exception string service name naming base random domain name naming service create service name test namespace test group instance instance new instance instance set ephemeral true instance set cluster name c1 instance set ip 11.11 11.11 instance set port naming1 register instance service name test group instance time unit seconds sleep 3 l naming1 deregister instance service name test group instance naming service delete service name test namespace test group t c description service name register instance ephemeral false test step expect result test public void register instance ephemeral false throw exception string service name naming base random domain name naming service create service name test namespace test group instance instance new instance instance set ephemeral false instance set cluster name c1 instance set ip 11.11 11.11 instance set port naming1 register instance service name test group instance naming service delete service name test namespace test group t c description service name register instance ephemeral false test step expect result test public void register instance ephemeral false deregister instance throw exception string service name naming base random domain name naming service create service name test namespace test group instance instance new instance instance set ephemeral false instance set cluster name c1 instance set ip 11.11 11.11 instance set port naming1 register instance service name test group instance naming1 deregister instance service name test group instance time unit seconds sleep 3 l naming service delete service name test namespace test group t c description service name test step expect result test public void create service throw exception string service name naming base random domain name naming service create service name test namespace naming service delete service name test namespace t c description service name test step expect result test public void delete service have instace throw exception string service name naming base random domain name naming service create service name test namespace response entity string response request naming base name controller path instance param new param append param service name service name append param ip 11.11 11.11 append param port append param namespace id test namespace do string class http method post assert assert true response get status code is2xx successful naming service delete service name test namespace t c description service name http test step expect result test public void get service throw exception string service name naming base random domain name naming service create service name test namespace response entity string response request naming base name controller path service param new param append param service name service name append param namespace id test namespace append param protect threshold 0.5 do string class http method put assert assert true response get status code is2xx successful assert assert equal ok response get body get service response request naming base name controller path service param new param append param service name service name append param namespace id test namespace do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal service name json get name text value assert assert equal 0.5 json get protect threshold as text naming service delete service name test namespace t c description service name test step expect result test public void get service throw exception string service name naming base random domain name list view string list view naming1 get service of server naming service create service name test namespace time unit seconds sleep 5 l list view string list view1 naming1 get service of server assert assert equal list view get count list view1 get count naming service delete service name test namespace t c description list test step expect result test public void list service throw exception string service name naming base random domain name list view string list view name get service of server naming service create service name constant default namespace id get service response entity string response request naming base name controller path service list param new param append param service name service name append param page no append param page size do string class system out println json response get body assert assert true response get status code is2xx successful json node json jackson util to obj response get body int count json get count int value assert assert equal list view get count count naming service delete service name constant default namespace id t c description service name test step expect result test public void register instance api throw exception string service name naming base random domain name naming service create service name constant default namespace id instance register service name constant default namespace id 33.33 33.33 test p o r t2 dom response entity string response request name controller path instance list param new param append param service name service name naming append param namespace id constant default namespace id do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size instance deregister service name constant default namespace id 33.33 33.33 test p o r t2 dom naming service delete service name constant default namespace id t c description service name test step expect result test public void register instance query throw exception string service name naming base random domain name naming service create service name constant default namespace id instance register service name constant default namespace id 33.33 33.33 test p o r t2 dom list instance instance name get all instance service name assert assert equal instance size assert assert equal 33.33 33.33 instance get get ip instance deregister service name constant default namespace id 33.33 33.33 test p o r t2 dom time unit seconds sleep 3 l instance name get all instance service name assert assert equal instance size naming service delete service name constant default namespace id t c description service name group test step expect result test public void register instance throw exception string service name naming base random domain name naming service create service name constant default namespace id naming service create service name constant default namespace id test group instance register service name constant default namespace id 33.33 33.33 test p o r t2 dom instance register service name constant default namespace id test group 22.22 22.22 test p o r t2 dom response entity string response request name controller path instance list param new param append param service name service name naming append param namespace id constant default namespace id do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size instance deregister service name constant default namespace id 33.33 33.33 test p o r t2 dom instance deregister service name constant default namespace id test group 22.22 22.22 test p o r t2 dom naming service delete service name constant default namespace id naming service delete service name constant default namespace id test group private void instance deregister string service name string namespace string ip string port instance deregister service name namespace constant default group ip port private void instance deregister string service name string namespace string group name string ip string port response entity string response request naming base name controller path instance param new param append param service name service name append param ip ip append param port port append param namespace id namespace append param group name group name do string class http method delete assert assert true response get status code is2xx successful private void instance register string service name string namespace string group name string ip string port response entity string response request naming base name controller path instance param new param append param service name service name append param ip ip append param port port append param namespace id namespace append param group name group name do string class http method post assert assert true response get status code is2xx successful private void instance register string service name string namespace string ip string port instance register service name namespace constant default group ip port private void naming service create string service name string namespace naming service create service name namespace constant default group private void naming service create string service name string namespace string group name response entity string response request naming base name controller path service param new param append param service name service name append param protect threshold 0.3 append param namespace id namespace append param group name group name do string class http method post system out println response assert assert true response get status code is2xx successful assert assert equal ok response get body private void naming service delete string service name string namespace naming service delete service name namespace constant default group private void naming service delete string service name string namespace string group name delete service response entity string response request naming base name controller path service param new param append param service name service name append param namespace id namespace append param group name group name do string class http method delete system out println response assert assert true response get status code is2xx successful assert assert equal ok response get body private t response entity t request string path multi value map string string param class t clazz http header header new http header http entity entity new http entity t header uri component builder builder uri component builder from http url this base to string path query param param return this rest template exchange builder to uri string http method get entity clazz private t response entity t request string path multi value map string string param class t clazz http method http method http header header new http header http entity entity new http entity t header uri component builder builder uri component builder from http url this base to string path query param param return this rest template exchange builder to uri string http method entity clazz private void prepare datum response entity string response entity request naco v1 n api reg dom param new param append param dom naming base test dom append param cktype tcp append param token abc do string class if response entity get status code be error throw new runtime exception before test register domain fail response entity to string try thread sleep l catch interrupt exception e e print stack trace response entity request naco v1 n api add i p4 dom param new param append param dom naming base test dom append param ip list naming base test ip dom naming base test port dom append param token naming base test token dom do string class if response entity get status code be error throw new runtime exception before test add ip for domain fail response entity to string private void remove datum response entity string response entity request naco v1 n api remv dom param new param append param dom naming base test dom append param token abc do string class if response entity get status code be error throw new runtime exception before test remove domain fail response entity to string 
deregister instance i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class deregister instance i t case private naming service name local server port private int port before public void init throw exception naming base prepare server port if naming null time unit seconds sleep name name factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break service cluster ip throw exception test public void dreg dom test throw exception string service name random domain name system out println service name name register instance service name 127.0 0.1 test port name register instance service name 127.0 0.2 test port list instance instance name get all instance service name verify instance list instance service name instance name get all instance service name assert assert equal instance size name deregister instance service name 127.0 0.1 test port time unit seconds sleep instance name get all instance service name assert assert equal instance size assert assert equal instance get get ip 127.0 0.2 name deregister instance service name 127.0 0.2 test port time unit seconds sleep instance name get all instance service name assert assert equal instance size service cluster ip throw exception test public void dreg dom cluster test throw exception string service name random domain name system out println service name name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.2 test port c2 list instance instance instance name get all instance service name verify instance list instance service name instance name get all instance service name assert assert equal instance size name deregister instance service name 127.0 0.1 test port c1 time unit seconds sleep instance name get all instance service name assert assert equal instance size instance name get all instance service name array as list c2 assert assert equal instance size instance name get all instance service name array as list c1 service instance null throw exception test public void dreg last dom test throw exception string service name random domain name name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.2 test port c2 list instance instance instance name get all instance service name verify instance list instance service name instance name get all instance service name assert assert equal instance size name deregister instance service name 127.0 0.1 test port c1 time unit seconds sleep instance name get all instance service name assert assert equal instance size instance name get all instance service name array as list c2 assert assert equal instance size name deregister instance service name 127.0 0.2 test port c2 time unit seconds sleep instance name get all instance service name assert assert equal instance size public void verify instance list list instance instance int size string service name throw exception int i while i instance name get all instance service name if instance size size break else time unit seconds sleep i 
multi tenant instance a p i i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class multi tenant instance a p i i t case private naming service name private naming service naming1 private naming service naming2 local server port private int port autowire private test rest template rest template private url base private volatile list instance instance collection empty list before public void init throw exception naming base prepare server port string url string format http localhost d port this base new url url name naming factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break property property new property property put property key const namespace namespace property put property key const server addr 127.0 0.1 port naming1 name factory create naming service property property new property property put property key const namespace namespace property put property key const server addr 127.0 0.1 port naming2 name factory create naming service property t c description ip list instance test step expect result test public void multiple tenant list instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 22.22 22.22 name register instance service name 33.33 33.33 name register instance service name 44.44 44.44 time unit seconds sleep 5 l string url naco v1 n instance list response entity string response request url param new param append param service name service name append param namespace id namespace do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal 11.11 11.11 json get host get get ip as text response request url param new param append param service name service name do string class assert assert true response get status code is2xx successful json jackson util to obj response get body assert assert equal json get host size t c description group ip list instance test step expect result test public void multiple tenant group list instance throw exception string service name random domain name naming1 register instance service name test group 11.11 11.11 naming1 register instance service name 22.22 22.22 name register instance service name test group 33.33 33.33 name register instance service name test group 44.44 44.44 time unit seconds sleep 5 l string url naco v1 n instance list response entity string response request url param new param append param service name service name append param namespace id namespace append param group name test group do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal 11.11 11.11 json get host get get ip as text response request url param new param append param service name service name append param group name test group do string class assert assert true response get status code is2xx successful json jackson util to obj response get body assert assert equal json get host size assert assert equal 33.33 33.33 json get host get get ip as text t c description ip get instance test step expect result test public void multiple tenant get instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 22.22 22.22 name register instance service name 33.33 33.33 c1 naming register instance service name 44.44 44.44 time unit seconds sleep 5 l response entity string response request naco v1 n instance param new param append param service name service name append param ip 33.33 33.33 ip append param port append param namespace id namespace do string class assert assert equal http status not find response get status code response request naco v1 n instance list param new param append param service name service name append param cluster c1 append param healthy only true do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size assert assert equal 33.33 33.33 json get host get get ip as text t c description ip get instance test step expect result test public void multiple tenant group get instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 22.22 22.22 name register instance service name 33.33 33.33 c1 naming register instance service name 44.44 44.44 c2 time unit seconds sleep 5 l response entity string response request naco v1 n instance param new param append param service name service name append param group name test group append param ip 33.33 33.33 ip append param port append param namespace id namespace do string class assert assert equal http status not find response get status code response request naco v1 n instance list param new param append param service name service name append param cluster c2 append param healthy only true do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size assert assert equal 44.44 44.44 json get host get get ip as text t c description ip delete instance namespace ip test step expect result test public void multiple tenant delete instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 22.22 22.22 name register instance service name 33.33 33.33 name register instance service name 44.44 44.44 time unit seconds sleep 3 l ap http naco name service naming service impl naco name service naming2 naming service impl get beat reactor remove beat info constant default group constant service info spliter service name 33.33 33.33 time unit seconds sleep 3 l response entity string response request naco v1 n instance param new param append param service name service name append param ip 33.33 33.33 append param port append param namespace id namespace namespace ip do string class http method delete assert assert true response get status code is2xx successful response request naco v1 n instance list param new param append param service name service name naming do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size t c description ip group delete instance ip test step expect result test public void multiple tenant group delete instance throw exception string service name random domain name naming1 register instance service name test group 11.11 11.11 naming2 register instance service name test group 22.22 22.22 time unit seconds sleep 5 l ap http naco name service naming service impl naco name service naming2 naming service impl get beat reactor remove beat info test group constant service info spliter service name 22.22 22.22 response entity string response request naco v1 n instance param new param append param service name service name append param namespace id namespace namespace ip append param group name test group append param ip 22.22 22.22 append param port test p o r t3 dom do string class http method delete assert assert true response get status code is2xx successful response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace append param group name test group do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size t c description ip put instance test step expect result test public void multiple tenant put instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 22.22 22.22 name register instance service name 33.33 33.33 name register instance service name 44.44 44.44 time unit seconds sleep 5 l response entity string response request naco v1 n instance param new param append param service name service name append param ip 33.33 33.33 append param port do string class http method put assert assert true response get status code is2xx successful response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size namespace response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace do string class assert assert true response get status code is2xx successful json jackson util to obj response get body system out println json assert assert equal json get host size t c description group ip put instance test step expect result test public void multiple tenant group put instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name test group 22.22 22.22 time unit seconds sleep 5 l response entity string response request naco v1 n instance param new param append param service name service name append param group name test group append param ip 22.22 22.22 append param port append param namespace id namespace append param weight 8.0 do string class http method put assert assert true response get status code is2xx successful response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace append param group name test group do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size assert assert equal 8.0 json get host get get weight as text t c description group ip patch instance test step expect result test public void multiple tenant group patch instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name test group 22.22 22.22 time unit seconds sleep 5 l response entity string response request naco v1 n instance param new param append param service name service name append param group name test group append param ip 22.22 22.22 append param port append param namespace id namespace append param weight 8.0 do string class http method put assert assert true response get status code is2xx successful response request naco v1 n instance param new param append param service name service name append param group name test group append param ip 22.22 22.22 append param port append param namespace id namespace do string class http method patch assert assert true response get status code is2xx successful response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace append param group name test group do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size assert assert equal 8.0 json get host get get weight as text t c description ip update test step expect result test public void multiple tenant update instance not exsit instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 22.22 22.22 name register instance service name 33.33 33.33 name register instance service name 44.44 44.44 time unit seconds sleep 5 l response entity string response request naco v1 n instance param new param append param service name service name append param ip 33.33 33.33 append param port append param namespace id namespace do string class http method post assert assert true response get status code is2xx successful response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size namespace response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace do string class assert assert true response get status code is2xx successful json jackson util to obj response get body assert assert equal json get host size t c description group ip test step expect result test public void multiple tenant group update instance not exsit instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 22.22 22.22 time unit seconds sleep 5 l response entity string response request naco v1 n instance param new param append param service name service name append param ip 33.33 33.33 append param port append param namespace id namespace append param group name test group do string class http method post assert assert true response get status code is2xx successful response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace append param group name test group do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal 33.33 33.33 json get host get get ip as text t c description ip update test step expect result test public void multiple tenant update instance throw exception string service name random domain name naming2 register instance service name 22.22 22.22 name register instance service name 33.33 33.33 name register instance service name 44.44 44.44 time unit seconds sleep 5 l response entity string response request naco v1 n instance param new param append param service name service name append param ip 11.11 11.11 append param port append param namespace id namespace do string class http method post assert assert true response get status code is2xx successful response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal json get host size namespace response request naco v1 n instance list param new param append param service name service name naming append param namespace id namespace do string class assert assert true response get status code is2xx successful json jackson util to obj response get body assert assert equal json get host size private void verify instance list for name naming service name int size string service name throw exception int i while i list instance instance name get all instance service name if instance size size break else time unit seconds sleep i private t response entity t request string path multi value map string string param class t clazz return request path param clazz http method get private t response entity t request string path multi value map string string param class t clazz http method http method http header header new http header http entity entity new http entity t header uri component builder builder uri component builder from http url this base to string path query param param return this rest template exchange builder to uri string http method entity clazz 
multi tenant i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class multi tenant i t case private naming service name private naming service naming1 private naming service naming2 local server port private int port private volatile list instance instance collection empty list before public void init throw exception thread sleep l naming base prepare server port name naming factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break property property new property property put property key const namespace namespace property put property key const server addr 127.0 0.1 port naming1 name factory create naming service property property new property property put property key const namespace namespace property put property key const server addr 127.0 0.1 port naming2 name factory create naming service property t c description ip port test step expect result test public void multiple tenant register instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 22.22 22.22 name register instance service name 33.33 33.33 name register instance service name 44.44 44.44 time unit seconds sleep 5 l list instance instance naming1 get all instance service name assert assert equal instance size assert assert equal 11.11 11.11 instance get get ip assert assert equal instance get get port instance naming2 get all instance service name assert assert equal instance size assert assert equal 22.22 22.22 instance get get ip assert assert equal instance get get port instance name get all instance service name assert assert equal instance size t c description group test step expect result test public void multiple tenant multi group register instance throw exception string service name random domain name naming1 register instance service name test group 11.11 11.11 naming2 register instance service name test group 22.22 22.22 name register instance service name 33.33 33.33 name register instance service name 44.44 44.44 time unit seconds sleep 5 l list instance instance naming1 get all instance service name assert assert equal instance size instance naming2 get all instance service name test group assert assert equal instance size assert assert equal 22.22 22.22 instance get get ip assert assert equal instance get get port instance name get all instance service name assert assert equal instance size naming1 deregister instance service name test group 11.11 11.11 naming1 deregister instance service name test group 22.22 22.22 t c description ip port test step expect result test public void multiple tenant equal i p throw exception string service name random domain name naming1 register instance service name 11.11 11.11 naming2 register instance service name 11.11 11.11 name register instance service name 11.11 11.11 time unit seconds sleep 5 l list instance instance naming1 get all instance service name assert assert equal instance size assert assert equal 11.11 11.11 instance get get ip assert assert equal instance get get port instance naming2 get all instance service name assert assert equal instance size assert assert equal 11.11 11.11 instance get get ip assert assert equal instance get get port instance name get all instance service name assert assert equal instance size t c description ip port test step expect result test public void multiple tenant select instance throw exception string service name random domain name naming1 register instance service name test ip dom test port naming2 register instance service name 22.22 22.22 name register instance service name test ip dom test port name register instance service name 44.44 44.44 time unit seconds sleep 5 l list instance instance naming1 select instance service name true assert assert equal instance size assert assert equal test ip dom instance get get ip assert assert equal test port instance get get port instance naming2 select instance service name false assert assert equal instance size instance name select instance service name true assert assert equal instance size t c description group ip port test step expect result test public void multiple tenant group equal i p throw exception string service name random domain name naming1 register instance service name test group 11.11 11.11 naming2 register instance service name test group 11.11 11.11 name register instance service name constant default group 11.11 11.11 time unit seconds sleep 5 l list instance instance naming1 get all instance service name assert assert equal instance size instance naming2 get all instance service name test group assert assert equal instance size assert assert equal 11.11 11.11 instance get get ip assert assert equal instance get get port instance name get all instance service name assert assert equal instance size t c description group ip port group test step expect result test public void multiple tenant group get instance throw exception string service name random domain name system out println service name naming1 register instance service name test group 11.11 11.11 naming1 register instance service name test group 11.11 11.11 name register instance service name constant default group 11.11 11.11 time unit seconds sleep 5 l list instance instance naming1 get all instance service name test group assert assert equal instance size instance name get all instance service name assert assert equal instance size naming1 deregister instance service name test group 11.11 11.11 naming1 deregister instance service name test group 11.11 11.11 t c description test step expect result test public void multiple tenant get service of server throw exception string service name random domain name naming1 register instance service name 11.11 11.11 test port c1 time unit seconds sleep 5 l list view string list view naming1 get service of server naming2 register instance service name 33.33 33.33 test port c1 time unit seconds sleep 5 l list view string list view1 naming1 get service of server assert assert equal list view get count list view1 get count t c description group test step expect result test public void multiple tenant group get service of server throw exception string service name random domain name naming1 register instance service name test group 11.11 11.11 test port c1 naming1 register instance service name test group 22.22 22.22 test port c1 time unit seconds sleep 5 l list view string list view naming1 get service of server test group naming2 register instance service name 33.33 33.33 test port c1 time unit seconds sleep 5 l list view string list view1 naming1 get service of server test group assert assert equal list view get count list view1 get count assert assert not equal list view1 get count t c description test step expect result test public void multiple tenant subscribe throw exception string service name random domain name naming1 subscribe service name new event listener override public void on event event event instance name event event get instance naming1 register instance service name 11.11 11.11 test port c1 naming2 register instance service name 33.33 33.33 test port c1 while instance size time unit seconds sleep 1 l assert assert equal instance size time unit seconds sleep 2 l assert assert true verify instance list instance naming1 get all instance service name t c description group test step expect result test public void multiple tenant group subscribe throw exception string service name random domain name naming1 subscribe service name test group new event listener override public void on event event event instance name event event get instance naming1 register instance service name 11.11 11.11 test port c1 naming1 register instance service name test group 33.33 33.33 test port c1 while instance size time unit seconds sleep 1 l time unit seconds sleep 2 l assert assert equal instance size time unit seconds sleep 2 l assert assert true verify instance list instance naming1 get all instance service name test group naming1 deregister instance service name 11.11 11.11 test port c1 naming1 deregister instance service name test group 33.33 33.33 test port c1 t c description test step expect result test public void multiple tenant un subscribe throw exception string service name random domain name event listener listener new event listener override public void on event event event system out println name event event get service name instance name event event get instance naming1 subscribe service name listener naming1 register instance service name 11.11 11.11 test port c1 naming2 register instance service name 33.33 33.33 test port c1 while instance size time unit seconds sleep 1 l assert assert equal service name naming1 get subscribe service get get name assert assert equal naming2 get subscribe service size naming1 unsubscribe service name listener time unit seconds sleep 5 l assert assert equal naming1 get subscribe service size assert assert equal naming2 get subscribe service size t c description group group test step expect result test public void multiple tenant group nosubscribe un subscribe throw exception string service name random domain name event listener listener new event listener override public void on event event event system out println name event event get service name instance name event event get instance naming1 subscribe service name test group listener naming1 register instance service name 11.11 11.11 test port c1 naming1 register instance service name test group 33.33 33.33 test port c1 time unit seconds sleep 3 l assert assert equal service name naming1 get subscribe service get get name assert assert equal naming2 get subscribe service size naming1 unsubscribe service name listener group time unit seconds sleep 3 l assert assert equal naming1 get subscribe service size naming1 unsubscribe service name test group listener group time unit seconds sleep 3 l assert assert equal naming1 get subscribe service size assert assert equal naming2 get subscribe service size t c description group group test step expect result test public void multiple tenant group un subscribe throw exception string service name random domain name event listener listener new event listener override public void on event event event system out println name event event get service name instance name event event get instance naming1 subscribe service name constant default group listener naming1 subscribe service name test group listener naming1 subscribe service name test group listener naming1 register instance service name 11.11 11.11 test port c1 naming1 register instance service name test group 33.33 33.33 test port c1 while instance size time unit seconds sleep 1 l time unit seconds sleep 2 l assert assert equal service name naming1 get subscribe service get get name assert assert equal naming1 get subscribe service size naming1 unsubscribe service name listener naming1 unsubscribe service name test group listener time unit seconds sleep 3 l assert assert equal naming1 get subscribe service size assert assert equal test group naming1 get subscribe service get get group name naming1 unsubscribe service name test group listener t c description server test step expect result test public void multiple tenant server status throw exception assert assert equal test server status naming1 get server status assert assert equal test server status naming2 get server status t c description test step expect result test public void multiple tenant deregister instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 test port c1 naming1 register instance service name 22.22 22.22 test port c1 naming2 register instance service name 22.22 22.22 test port c1 list instance instance naming1 get all instance service name verify instance list for name naming1 service name assert assert equal naming1 get all instance service name size naming1 deregister instance service name 22.22 22.22 test port c1 time unit seconds sleep assert assert equal naming1 get all instance service name size assert assert equal naming2 get all instance service name size t c description group group test step expect result test public void multiple tenant group deregister instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 test port c1 naming1 register instance service name 22.22 22.22 test port c2 list instance instance naming1 get all instance service name verify instance list for name naming1 service name assert assert equal naming1 get all instance service name size naming1 deregister instance service name test group 22.22 22.22 test port c1 time unit seconds sleep assert assert equal naming1 get all instance service name size t c description group cluster name test step expect result test public void multiple tenant group cluster deregister instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 test port c1 naming1 register instance service name 22.22 22.22 test port c2 list instance instance naming1 get all instance service name verify instance list for name naming1 service name assert assert equal naming1 get all instance service name size naming1 deregister instance service name 22.22 22.22 test port time unit seconds sleep 3 l assert assert equal naming1 get all instance service name size naming1 deregister instance service name 11.11 11.11 test port c1 naming1 deregister instance service name 22.22 22.22 test port c2 t c description test step expect result test public void multiple tenant select one healthy instance throw exception string service name random domain name naming1 register instance service name 11.11 11.11 test port c1 naming1 register instance service name 22.22 22.22 test port c2 naming2 register instance service name 22.22 22.22 test port c3 list instance instance naming1 get all instance service name verify instance list for name naming1 service name assert assert equal naming1 get all instance service name size instance instance naming1 select one healthy instance service name array as list c1 assert assert equal 11.11 11.11 instance get ip naming1 deregister instance service name 11.11 11.11 test port c1 time unit seconds sleep instance naming1 select one healthy instance service name assert assert equal 22.22 22.22 instance get ip t c description group test step expect result test public void multiple tenant group select one healthy instance throw exception string service name random domain name naming1 register instance service name test group 11.11 11.11 test port c1 naming1 register instance service name test group 22.22 22.22 test port c2 naming1 register instance service name test group 33.33 33.33 test port c3 list instance instance naming1 get all instance service name test group verify instance list for name naming1 service name assert assert equal naming1 get all instance service name size defalut group instance instance naming1 select one healthy instance service name test group array as list c1 assert assert equal 11.11 11.11 instance get ip instance naming1 select one healthy instance service name test group assert assert equal 22.22 22.22 instance get ip naming1 deregister instance service name test group 11.11 11.11 test port c1 naming1 deregister instance service name test group 22.22 22.22 test port c2 naming1 deregister instance service name test group 33.33 33.33 test port c3 t c description group group test step expect result test expect illegal state exception class public void multiple tenant no group select one healthy instance throw exception string service name random domain name naming1 register instance service name test group 11.11 11.11 test port c1 naming1 register instance service name test group 22.22 22.22 test port c2 list instance instance naming1 get all instance service name test group verify instance list for name naming1 service name instance instance naming1 select one healthy instance service name array as list c1 naming1 deregister instance service name test group 11.11 11.11 test port c1 naming1 deregister instance service name test group 22.22 22.22 test port c2 private void verify instance list for name naming service name int size string service name throw exception int i while i list instance instance name get all instance service name if instance size size break else time unit seconds sleep i 
name maintain service i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class naming maintain service i t case extend base test private naming maintain service naming maintain service private naming service naming service private instance instance private string service name local server port private int port before public void init throw exception naming base prepare server port if naming maintain service null time unit seconds sleep name maintain service naming maintain factory create maintain service 127.0 0.1 port if naming service null time unit seconds sleep name service name factory create naming service 127.0 0.1 port instance new instance instance set ip 127.0 0.1 instance set port instance set weight instance set cluster name constant default cluster name map string string map new hash map string string map put net type external map put version 1.0 instance set metadata map service name random domain name test public void update instance throw naco exception map string string map new hash map string string map put net type external update map put version 2.0 naming service register instance service name instance instance set metadata map naming maintain service update instance service name instance list instance instance name service get all instance service name true assert assert equal instance size system out println instance get test public void update instance with disable throw naco exception map string string map new hash map string string map put net type external update map put version 2.0 naming service register instance service name instance instance set metadata map instance set enable false naming maintain service update instance service name instance list instance instance name service get all instance service name true assert assert equal instance size test public void create and update service throw naco exception register service service pre service new service pre service set name service name pre service set group name constant default group pre service set protect threshold 1.0 f map string string metadata new hash map string string metadata put service name this be a register metadata pre service set metadata metadata expression selector selector new expression selector selector set expression consumer label a provider label a consumer label b provider label b system out println service info pre service naming maintain service create service pre service selector service remote service naming maintain service query service service name system out println remote service info remote service assert assert equal pre service to string remote service to string update service service now service new service now service set name service name now service set group name constant default group now service set protect threshold 1.0 f metadata clear metadata put service name this be a update metadata now service set metadata metadata naming maintain service update service now service new none selector remote service naming maintain service query service service name system out println remote service info remote service assert assert equal now service to string remote service to string test public void delete service throw naco exception service pre service new service pre service set name service name system out println service info pre service naming maintain service create service pre service new none selector assert assert true naming maintain service delete service service name 
name proxy i t case run with spring runner class spring boot test class name app class property server servlet context path naco web environment spring boot test web environment random port public class name proxy i t case local server port private int port autowire private serializer serializer private final datum store datum store new datum store private naming service naming service private final string namespace id dev private final string service name biz private final string group name default group before public void init throw naco exception property property new property property put property key const namespace namespace id property put property key const server addr localhost port naming service name factory create naming service property test public void test sync datum throw naco exception interrupted exception write datum to datum store string group name name util get group name service name group name instance instance new instance instance instance new instance instance set ip 1.2 3.4 instance set port instance set ephemeral true instance set service name group name list instance instance list new array list instance instance list add instance instance set instance list instance list string key key builder build instance list key namespace id instance get service name true datum instance datum new datum datum value instance datum key key datum timestamp increment and get this data store put key datum sync datum to server map string datum datum map datum store get datum map byte content serializer serialize datum map boolean result name proxy sync datum content localhost port if result assert fail name proxy sync datum error query instance by api list com alibaba naco api name pojo instance all instance name service get all instance service name false for int i i all instance be empty i wait for async op time unit seconds sleep all instance name service get all instance service name false if all instance be empty assert fail instance be empty com alibaba naco api name pojo instance dst all instance get assert assert equal instance get ip dst get ip assert assert equal instance get port dst get port assert assert equal instance get service name dst get service name 
register instance i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class register instance i t case private naming service name private naming service naming2 local server port private int port before public void init throw exception naming base prepare server port if naming null time unit seconds sleep name name factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break test public void reg service throw naco exception interrupted exception property property new property property put property key const server addr 127.0 0.1 port property put property key const namespace t3 name naming factory create naming service property time unit seconds sleep string service name dungu test name register instance service name 127.0 0.1 c1 naming register instance service name 127.0 0.2 c2 list instance instance name get all instance service name assert assert equal instance size cluster instance throw exception test public void reg dom test throw exception string service name random domain name system out println service name name register instance service name test ip dom test port time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size assert assert true instance get get instance id contain service name assert assert equal instance get get service get name service name assert assert equal instance get get ip test ip dom assert assert equal instance get get port test port cluster instance throw exception test public void reg dom cluster test throw exception string service name random domain name system out println service name name register instance service name test ip dom test port test new cluster dom time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size assert assert true instance get get instance id contain service name assert assert equal instances2 get get service get name service name assert assert equal instance get get ip test ip dom assert assert equal instance get get port test port assert assert equal instance get get cluster get name test new cluster dom list instance instances2 name get all instance service name array as list test new cluster dom assert assert equal instances2 size assert assert true instances2 get get instance id contain service name assert assert equal instances2 get get service get name service name assert assert equal instances2 get get ip test ip dom assert assert equal instances2 get get port test port assert assert equal instances2 get get cluster get name test new cluster dom instance throw exception test public void reg dom with instance throw exception string service name random domain name instance i1 get instance service name name register instance service name i1 time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size assert assert true verify instance i1 instance get instance throw exception test public void reg dom not health throw exception string service name random domain name system out println service name name register instance service name 1.1 1.1 name register instance service name test ip dom test port time unit seconds sleep list instance instance name select instance service name false assert assert equal instance size test public void reg service with metadata throw exception string service name random domain name system out println service name instance instance new instance instance set ip 1.1 1.2 instance set port map string string metadata new hash map string string metadata put version 1.0 metadata put env prod instance set metadata metadata name register instance service name instance time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size assert assert equal 1.0 instance get get metadata get version assert assert equal prod instance get get metadatum get env test public void reg service with t t l throw exception string service name random domain name system out println service name instance instance new instance instance set ip 1.1 1.2 instance set port map string string metadata new hash map string string metadata put preserve metadata key heart beat interval metadata put preserve metadata key heart beat timeout metadata put preserve metadata key ip delete timeout instance set metadata metadata name register instance service name instance time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size name deregister instance service name instance time unit seconds sleep instance name get all instance service name assert assert equal instance size 
rest a p i i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class rest a p i i t case extend name base local server port private int port before public void set up throw exception string url string format http localhost d port this base new url url prepare datum after public void cleanup throw exception remove datum test public void metric throw exception response entity string response request naco v1 n operator metric param new param do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert true json get service count as int assert assert true json get instance count as int assert assert true json get responsible service count as int assert assert true json get responsible instance count as int t c description service name test step expect result test public void create service throw exception string service name naming base random domain name response entity string response request naming base name controller path service param new param append param service name service name append param protect threshold 0.3 do string class http method post assert assert true response get status code is2xx successful assert assert equal ok response get body naming service delete service name t c description service name test step expect result test public void get service throw exception string service name naming base random domain name response entity string response request naming base name controller path service param new param append param service name service name append param protect threshold 0.3 do string class http method post assert assert true response get status code is2xx successful assert assert equal ok response get body get service response request naming base name controller path service param new param append param service name service name append param protect threshold 0.3 do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body assert assert equal service name json get name as text naming service delete service name t c description list test step expect result test public void list service throw exception string service name naming base random domain name get service response entity string response request naming base name controller path service list param new param append param service name service name append param page no append param page size do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body int count json get count as int assert assert true count response request naming base name controller path service param new param append param service name service name append param protect threshold 0.3 do string class http method post assert assert true response get status code is2xx successful assert assert equal ok response get body response request naming base name controller path service list param new param append param service name service name append param page no append param page size do string class assert assert true response get status code is2xx successful json jackson util to obj response get body assert assert equal count json get count as int naming service delete service name t c description service name test step expect result test public void update service throw exception string service name naming base random domain name response entity string response request naming base name controller path service param new param append param service name service name append param protect threshold 0.6 do string class http method post assert assert true response get status code is2xx successful assert assert equal ok response get body update service response request naming base name controller path service param new param append param service name service name append param health check mode server append param protect threshold 0.3 do string class http method put assert assert true response get status code is2xx successful assert assert equal ok response get body get service response request naming base name controller path service param new param append param service name service name do string class assert assert true response get status code is2xx successful json node json jackson util to obj response get body system out println json assert assert equal 0.3 f json get protect threshold float value 0.0 f naming service delete service name test ignore public void test invalid namespace string service name naming base random domain name response entity string response request naming base name controller path service param new param append param service name service name append param protect threshold 0.6 append param namespace id invalid namespace do string class http method post assert assert true response get status code is4xx client error response request naming base name controller path service param new param append param service name service name append param protect threshold 0.6 append param namespace id invalid namespace do string class http method post assert assert true response get status code is4xx client error private void naming service delete string service name delete service response entity string response request naming base name controller path service param new param append param service name service name append param protect threshold 0.3 do string class http method delete assert assert true response get status code is2xx successful assert assert equal ok response get body 
select instance i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class select instance i t case private naming service name local server port private int port before public void init throw exception naming base prepare server port if naming null time unit seconds sleep name name factory create naming service 127.0 0.1 port int i while i i if up equal name get server status thread sleep l continue break instance throw exception test public void select healthy instance throw exception string service name random domain name name register instance service name 127.0 0.1 test port name register instance service name 1.1 1.1 time unit seconds sleep list instance instance name select instance service name true assert assert equal instance size instance instance not h null list instance instance get name get all instance service name for instance instance instance get if instance be healthy instance not h instance instance get remove instance not h assert assert true verify instance list instance instance get instance throw exception test public void select unhealthy instance throw exception string service name random domain name name register instance service name 1.1 1.1 test port name register instance service name 1.1 1.2 test port time unit seconds sleep list instance instance name select instance service name false time unit seconds sleep assert assert equal instance size list instance instance get name get all instance service name assert assert true verify instance list instance instance get cluster instance throw exception test public void select healthy instance cluster throw exception string service name random domain name name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.2 c2 time unit seconds sleep list instance instance name select instance service name array as list c1 c2 true time unit seconds sleep assert assert equal instance size list instance instance get name get all instance service name assert assert true verify instance list instance instance get cluster instance throw exception test public void select unhealthy instance cluster throw exception string service name random domain name name register instance service name 1.1 1.1 test port c1 name register instance service name 1.1 1.2 test port c2 time unit seconds sleep list instance instance name select instance service name array as list c1 c2 false time unit seconds sleep assert assert equal instance size list instance instance get name get all instance service name assert assert true verify instance list instance instance get test public void select instance check cluster name throw exception string service name random domain name name register instance service name 1.1 1.1 test port c1 name register instance service name 1.1 1.2 test port c2 time unit seconds sleep list instance instance get name get all instance service name assert assert equal instance get size for instance instance instance get if instance get ip equal 1.1 1.1 assert assert equal instance get cluster name c1 if instance get ip equal 2.2 2.2 assert assert equal instance get cluster name c2 instance throw exception test public void select all weighted instance throw exception string service name random domain name name register instance service name 127.0 0.1 test port name register instance service name 1.1 1.1 time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size instance name select instance service name true assert assert equal instance size instance get set weight instance name select instance service name true assert assert equal instance size instance instance not h null list instance instance get name get all instance service name for instance instance instance get if instance be healthy instance be enable instance get weight instance not h instance instance get remove instance not h assert assert true verify instance list instance instance get cluster instance throw exception test public void select all weighted instance cluster throw exception string service name random domain name name register instance service name 127.0 0.1 test port c1 name register instance service name 1.1 1.1 c2 time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size instance name select instance service name array as list c1 c2 true assert assert equal instance size instance get set weight instance name select instance service name array as list c1 c2 true assert assert equal instance size instance instance not h null list instance instance get name get all instance service name for instance instance instance get if instance be healthy instance be enable instance get weight instance not h instance instance get remove instance not h assert assert true verify instance list instance instance get enable instance throw exception test public void select all enable instance throw exception string service name random domain name name register instance service name 127.0 0.1 test port name register instance service name 1.1 1.1 time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size instance name select instance service name true assert assert equal instance size instance get set enable false instance name select instance service name true assert assert equal instance size instance instance not h null list instance instance get name get all instance service name for instance instance instance get if instance be healthy instance be enable instance get weight instance not h instance instance get remove instance not h assert assert true verify instance list instance instance get cluster enable instance throw exception test public void select all enable instance cluster throw exception string service name random domain name system out println service name name register instance service name 127.0 0.1 test port c1 name register instance service name 1.1 1.1 c2 time unit seconds sleep list instance instance name get all instance service name assert assert equal instance size instance name select instance service name array as list c1 c2 true assert assert equal instance size instance get set enable false instance name select instance service name array as list c1 c2 true time unit seconds sleep assert assert equal instance size instance instance not h null list instance instance get name get all instance service name for instance instance instance get if instance be healthy instance be enable instance get weight instance not h instance instance get remove instance not h assert assert true verify instance list instance instance get test public void get service list with selector throw naco exception interrupted exception string service name random domain name instance instance new instance instance set ip 128.0 0.1 instance set port instance set service name service name map string string metadata new hash map string string metadata put register source dubbo instance set metadata metadata name register instance service name instance name register instance service name 127.0 0.1 c1 naming register instance service name 127.0 0.2 c2 time unit seconds sleep expression selector expression selector new expression selector expression selector set expression instance label register source dubbo list view string service list name get service of server expression selector assert assert true service list get datum contain service name service name random domain name instance set service name service name metadata put register source spring instance set metadata metadata name register instance service name instance time unit seconds sleep expression selector set expression instance label register source spring service list name get service of server expression selector assert assert true service list get datum contain service name 
select one healthy instance i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class select one healthy instance i t case private naming service name local server port private int port before public void init throw exception naming base prepare server port if naming null time unit seconds sleep name name factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break instance throw exception test public void select one healthy instance throw exception string service name random domain name name register instance service name 127.0 0.1 test port name register instance service name 127.0 0.1 time unit seconds sleep instance instance name select one healthy instance service name list instance instance get name get all instance service name for instance instance1 instance get if instance1 get ip equal instance get ip instance1 get port instance get port assert assert true instance be healthy assert assert true verify instance instance1 instance return assert fail cluster instance throw exception test public void select one healthy instance cluster throw exception string service name random domain name name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.1 c1 naming register instance service name 1.1 1.1 test port c1 name register instance service name 127.0 0.1 c1 naming register instance service name 127.0 0.1 c2 time unit seconds sleep instance instance name select one healthy instance service name array as list c1 assert assert not same 1.1 1.1 instance get ip assert assert true instance get port list instance instance get name get all instance service name for instance instance1 instance get if instance1 get ip equal instance get ip instance1 get port instance get port assert assert true instance be healthy assert assert true verify instance instance1 instance return assert fail cluster instance throw exception test public void select one healthy instance cluster throw exception string service name random domain name name register instance service name 1.1 1.1 test port c1 name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.1 c1 naming register instance service name 127.0 0.1 c2 time unit seconds sleep instance instance name select one healthy instance service name array as list c1 c2 assert assert not same 1.1 1.1 instance get ip list instance instance get name get all instance service name for instance instance1 instance get if instance1 get ip equal instance get ip instance1 get port instance get port assert assert true instance be healthy assert assert true verify instance instance1 instance return assert fail 
service list test i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class service list test i t case private naming service name private volatile list instance instance collection empty list private static int listense count local server port private int port before public void init throw exception naming base prepare server port if naming null naming name factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break test public void service list throw naco exception name get service of server throw naco exception description test public void get subscribe service throw naco exception interrupted exception list view string list view name get service of server if list view null list view get count name get all instance list view get datum get list service info service info list name get subscribe service int count service info list size string service name random domain name name register instance service name 127.0 0.1 test port c1 naming subscribe service name new event listener override public void on event event event service info list name get subscribe service assert assert equal count service info list size throw naco exception description test public void get subscribe service deregister instance throw naco exception interrupt exception listense count event listener listener new event listener override public void on event event event system out println name event event get service name system out println name event event get instance listense count list service info service info list name get subscribe service int count service info list size string service name random domain name name register instance service name 127.0 0.1 test port c1 naming subscribe service name listener service info list name get subscribe service assert assert equal count service info list size name deregister instance service name 127.0 0.1 test port c1 assert assert equal count service info list size 
subscribe cluster i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class subscribe cluster i t case private naming service name local server port private int port before public void init throw exception naming base prepare server port instance clear if name null time unit seconds sleep name name factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break private volatile list instance instance collection empty list ip throw exception test public void subscribe add throw exception string service name random domain name naming subscribe service name array as list c1 new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance name register instance service name 127.0 0.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name ip throw exception test public void subscribe delete throw exception string service name random domain name name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.2 test port c1 time unit seconds sleep name subscribe service name array as list c1 new event listener int index override public void on event event event if index index return system out println name event event get service name system out println name event event get instance instance name event event get instance name deregister instance service name 127.0 0.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name ip throw exception test public void subscribe unhealthy throw exception string service name random domain name naming subscribe service name array as list c1 new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance name register instance service name 1.1 1.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name cluster ip throw exception test public void subscribe other cluster throw exception string service name random domain name naming subscribe service name array as list c2 new event listener int index override public void on event event event if index index return system out println name event event get service name system out println name event event get instance instance name event event get instance name register instance service name 1.1 1.1 test port c1 int i while instance be empty thread sleep l if i return assert fail 
subscribe i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class subscribe i t case extend rest a p i i t case private naming service name local server port private int port before public void init throw exception naming base prepare server port instance clear if name null time unit seconds sleep name name factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break private volatile list instance instance collection empty list ip throw exception test public void subscribe add throw exception string service name random domain name naming subscribe service name new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance name register instance service name 127.0 0.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name ip throw exception test public void subscribe delete throw exception string service name random domain name name register instance service name 127.0 0.1 test port c1 name register instance service name 127.0 0.2 test port c1 time unit seconds sleep name subscribe service name new event listener int index override public void on event event event if index index return system out println name event event get service name system out println name event event get instance instance name event event get instance name deregister instance service name 127.0 0.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name ip throw exception test public void subscribe unhealthy throw exception string service name random domain name naming subscribe service name new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance name register instance service name 1.1 1.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name test timeout time out public void subscribe empty throw exception string service name random domain name naming subscribe service name new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance name register instance service name 1.1 1.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name name deregister instance service name 1.1 1.1 test port c1 while instance be empty thread sleep l assert assert equal instance size assert assert equal name get all instance service name size test public void query subscriber throw exception string service name random domain name name register instance service name 1.1 1.1 test port c1 event listener listener new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance name subscribe service name listener time unit seconds sleep response entity string response request naming base name controller path service subscriber param new param append param service name service name append param page no append param page size do string class http method get assert assert true response get status code is2xx successful json node body jackson util to obj response get body assert assert equal body get subscriber size naming service naming2 name factory create naming service 127.0 0.1 port naming2 subscribe service name new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance time unit seconds sleep response request naming base name controller path service subscriber param new param append param service name service name append param page no append param page size do string class http method get assert assert true response get status code is2xx successful body jackson util to obj response get body assert assert equal body get subscriber size 
unsubscribe i t case run with spring runner class spring boot test class naco class property server servlet context path naco web environment spring boot test web environment random port public class unsubscribe i t case private naming service name local server port private int port before public void init throw exception naming base prepare server port instance collection empty list if naming null time unit seconds sleep name name factory create naming service 127.0 0.1 port while true if up equal name get server status thread sleep l continue break private volatile list instance instance collection empty list ip throw exception test public void unsubscribe throw exception string service name random domain name event listener listener new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance name subscribe service name listener name register instance service name 127.0 0.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name name unsubscribe service name listener instance collection empty list name register instance service name 127.0 0.2 test port c1 int i while instance be empty thread sleep l if i return assert fail cluster ip throw exception test public void unsubscribe cluster throw exception string service name random domain name event listener listener new event listener override public void on event event event system out println name event event get service name system out println name event event get instance instance name event event get instance name subscribe service name array as list c1 listener name register instance service name 127.0 0.1 test port c1 while instance be empty thread sleep l assert assert true verify instance list instance name get all instance service name name unsubscribe service name array as list c1 listener instance collection empty list name register instance service name 127.0 0.2 test port c1 int i while instance be empty thread sleep l if i return assert fail 
sentinel apache http client test run with spring runner class spring boot test class test application class web environment spring boot test web environment define port property server port public class sentinel apache http client test value server port private integer port test public void test sentinel ok http interceptor0 throw exception closeable http client httpclient new sentinel apache http client builder build http get http get new http get http localhost port httpclient back system out println get remote string httpclient http get cluster node cn cluster builder slot get cluster node httpclient httpclient back assert not null cn constant root remove child list cluster builder slot get cluster node map clear test public void test sentinel ok http interceptor1 throw exception sentinel apache http client config config new sentinel apache http client config config set extractor new apache http client resource extractor override public string extractor http request wrapper request string contain httpclient back string uri request get request line get uri if uri start with contain uri uri substr uri index of contain contain length id return request get method uri closeable http client httpclient new sentinel apache http client builder config build http get http get new http get http localhost port httpclient back system out println get remote string httpclient http get cluster node cn cluster builder slot get cluster node httpclient get httpclient back id assert not null cn constant root remove child list cluster builder slot get cluster node map clear private string get remote string closeable http client httpclient http get http get throw i o exception string result http context context new basic http context closeable http response response response httpclient execute http get context try http entity entity response get entity result entity util to string entity utf entity util consume entity finally response close httpclient close return result 
sentinel ok http interceptor test run with spring runner class spring boot test class test application class web environment spring boot test web environment define port property server port public class sentinel ok http interceptor test value server port private integer port test public void test sentinel ok http interceptor0 throw exception string url0 http localhost port okhttp back sentinel ok http config set prefix okhttp ok http client client new ok http client builder add interceptor new sentinel ok http interceptor build request request new request builder url url0 build system out println client new call request execute body string cluster node cn cluster builder slot get cluster node sentinel ok http config get prefix get url0 assert not null cn constant root remove child list cluster builder slot get cluster node map clear test public void test sentinel ok http interceptor1 throw exception string url0 http localhost port okhttp back sentinel ok http config set extractor new ok http resource extractor override public string extract string url request request connection connection string regex okhttp back if url contain regex url url substr url index of regex regex length id return request method url ok http client client new ok http client builder add interceptor new sentinel ok http interceptor build request request new request builder url url0 build system out println client new call request execute body string string url1 sentinel ok http config get prefix get http localhost port okhttp back id cluster node cn cluster builder slot get cluster node url1 assert not null cn constant root remove child list cluster builder slot get cluster node map clear 
sentinel web flux integration test run with spring runner class spring boot test class web flux test application class web environment web environment random port public class sentinel web flux integration test private static final string hello str hello private static final string block msg prefix block by sentinel autowire private web test client web client private void configure rule for string resource int count configure rule for resource count default private void configure rule for string resource int count string limit app flow rule rule new flow rule set count count set grade rule constant flow grade qp rule set resource resource if string util be not blank limit app rule set limit app limit app flow rule manager load rule collection singleton list rule test public void test web flux filter basic throw exception string url hello this web client get uri url accept media type text plain exchange expect status be ok expect body string class be equal to hello str cluster node cn cluster builder slot get cluster node url assert not null cn assert equal cn pass qp 0.01 test public void test customize url cleaner throw exception final string foo prefix foo string url1 foo prefix string url2 foo prefix web flux callback manager set url cleaner exchange origin url if origin url start with foo prefix return foo return origin url this web client get uri url1 exchange expect status be ok expect body string class be equal to hello this web client get uri url2 exchange expect status be ok expect body string class be equal to hello cluster node cn cluster builder slot get cluster node foo prefix assert equal cn pass qp 0.01 assert null cluster builder slot get cluster node url1 assert null cluster builder slot get cluster node url2 web flux callback manager reset url cleaner test public void test customize ignore url cleaner throw exception final string foo prefix foo string url1 foo prefix web flux callback manager set url cleaner exchange origin url if origin url start with foo prefix return return origin url this web client get uri url1 exchange expect status be ok expect body string class be equal to hello assert null cluster builder slot get cluster node url1 web flux callback manager reset url cleaner test public void test customize block request handler throw exception string url error string prefix block web flux callback manager set block handler exchange t server response ok content type media type text plain sync body prefix t get message this web client get uri url exchange expect status be ok expect body string class value string contain contain string prefix web flux callback manager reset block handler test public void test customize request origin parser throw exception string url hello string limit origin user a final string header name s user configure rule for url limit origin web flux callback manager set request origin parser exchange string origin exchange get request get header get first header name return origin null origin this web client get uri url accept media type text plain header header name user b exchange expect status be ok expect body string class be equal to hello str this will be block this web client get uri url accept media type text plain header header name limit origin exchange expect status be equal to http status too many request expect body string class value string contain contain string block msg prefix this web client get uri url accept media type text plain exchange expect status be ok expect body string class be equal to hello str web flux callback manager reset request origin parser before public void set up flow rule manager load rule new array list cluster builder slot reset cluster node after public void clean up flow rule manager load rule new array list cluster builder slot reset cluster node 
sentinel spring mvc integration test run with spring runner class spring boot test class test application class auto configure mock mvc public class sentinel spring mvc integration test private static final string hello str hello autowired private mock mvc mvc test public void test base throw exception string url hello this mvc perform get url and expect status be ok and expect content string hello str cluster node cn cluster builder slot get cluster node url assert not null cn assert equal cn pass qp 0.01 test public void test origin parser throw exception string spring mvc path variable url foo id string limit origin user a final string header name s user configure rule for spring mvc path variable url limit origin this will be pass since the caller be different user b this mvc perform get foo accept media type text plain header header name user b and expect status be ok and expect content string foo this will be block since the caller be same user a this mvc perform get foo accept media type application json header header name limit origin and expect status be ok and expect content json result wrapper block to json string this will be pass since the caller be different this mvc perform get foo accept media type application json and expect status be ok and expect content string foo flow rule manager load rule null test public void test total interceptor throw exception string url hello string total target my spring mvc total url request for int i i i this mvc perform get url and expect status be ok and expect content string hello str cluster node cn cluster builder slot get cluster node total target assert not null cn assert equal cn pass qp 0.01 test public void test runtime exception throw exception string url runtime exception configure exception rule for url null int repeat for int i i repeat i this mvc perform get url and expect status be ok and expect content string result wrapper error to json string cluster node cn cluster builder slot get cluster node url assert not null cn assert equal i cn pass qps 0.01 this will be block and response json this mvc perform get url and expect status be ok and expect content string result wrapper block to json string cluster node cn cluster builder slot get cluster node url assert not null cn assert equal repeat cn pass qp 0.01 assert equal cn block request private void configure rule for string resource int count string limit app flow rule rule new flow rule set count count set grade rule constant flow grade qp rule set resource resource if string util be not blank limit app rule set limit app limit app flow rule manager load rule collection singleton list rule private void configure exception rule for string resource int count string limit app flow rule rule new flow rule set count count set grade rule constant degrade grade exception ratio rule set resource resource if string util be not blank limit app rule set limit app limit app flow rule manager load rule collection singleton list rule after public void clean up flow rule manager load rule null cluster builder slot reset cluster node 
common filter test run with spring runner class spring boot test class test application class auto configure mock mvc public class common filter test private static final string hello str hello autowired private mock mvc mvc private void configure rule for string resource int count configure rule for resource count default private void configure rule for string resource int count string limit app flow rule rule new flow rule set count count set grade rule constant flow grade qp rule set resource resource if string util be not blank limit app rule set limit app limit app flow rule manager load rule collection singleton list rule test public void test common filter miscellaneous throw exception constant root remove child list string url hello this mvc perform get url and expect status be ok and expect content string hello str cluster node cn cluster builder slot get cluster node url assert not null cn assert equal cn pass qp 0.01 string context for node n constant root get child list if n instanceof entrance node string id entrance node n get id get name if url equal id context entrance node n get id get name assert equal context test common block and redirect block page url cn test for url cleaner test url cleaner test url exclusion test custom origin parser private void test common block and redirect block page string url cluster node cn throw exception configure rule for url the request will be block and response be default block message web servlet config set block page http status http status ok value this mvc perform get url accept media type text plain and expect status be ok and expect content string filter util default block msg assert equal cn block qp 0.01 web servlet config set block page http status http status too many request value this mvc perform get url accept media type text plain and expect status be too many request and expect content string filter util default block msg test for redirect string redirect url http some location com web servlet config set block page redirect url this mvc perform get url accept media type text plain and expect status is3xx redirection and expect header string location redirect url http referer http localhost hello flow rule manager load rule null web servlet config set block page private void test url cleaner throw exception final string foo prefix foo string url1 foo prefix string url2 foo prefix web callback manager set url cleaner new url cleaner override public string clean string origin url if origin url start with foo prefix return foo return origin url this mvc perform get url1 accept media type text plain and expect status be ok and expect content string hello this mvc perform get url2 accept media type text plain and expect status be ok and expect content string hello cluster node cn cluster builder slot get cluster node foo prefix assert equal cn pass qp 0.01 assert null cluster builder slot get cluster node url1 assert null cluster builder slot get cluster node url2 web callback manager set url cleaner new default url cleaner private void test url exclusion throw exception final string exclude prefix exclude string url exclude prefix web callback manager set url cleaner new url cleaner override public string clean string origin url if origin url start with exclude prefix return return origin url this mvc perform get url accept media type text plain and expect status be ok and expect content string exclude assert null cluster builder slot get cluster node url web callback manager set url cleaner new default url cleaner private void test custom origin parser throw exception string url hello string limit origin user a final string header name s user configure rule for url limit origin web callback manager set request origin parser new request origin parser override public string parse origin http servlet request request string origin request get header header name return origin null origin this mvc perform get url accept media type text plain header header name user b and expect status be ok and expect content string hello str this will be block this mvc perform get url accept media type text plain header header name limit origin and expect status be too many request and expect content string filter util default block msg this mvc perform get url accept media type text plain and expect status be ok and expect content string hello str web callback manager set request origin parser null flow rule manager load rule null after public void clean up flow rule manager load rule null cluster builder slot reset cluster node 
common filter context test run with spring runner class spring boot test class test context application class web environment spring boot test web environment random port auto configure mock mvc public class common filter context test private static final string hello str hello autowired private mock mvc mvc private void configure rule for string resource int count configure rule for resource count default private void configure rule for string resource int count string limit app flow rule rule new flow rule set count count set grade rule constant flow grade qp rule set resource resource if string util be not blank limit app rule set limit app limit app flow rule manager load rule collection singleton list rule test public void test common filter miscellaneous throw exception string url hello this mvc perform get url and expect status be ok and expect content string hello str cluster node cn cluster builder slot get cluster node url assert not null cn assert equal cn pass qp 0.01 string context for node n constant root get child list if n instanceof entrance node string id entrance node n get id get name if url equal id context entrance node n get id get name assert equal url context after public void clean up flow rule manager load rule null cluster builder slot reset cluster node 
common filter method test run with spring runner class spring boot test class test application class web environment spring boot test web environment random port auto configure mock mvc public class common filter method test private static final string hello str hello private static final string hello post str hello post private static final string get get private static final string post post private static final string colon autowire private mock mvc mvc private void configure rule for string resource int count configure rule for resource count default private void configure rule for string resource int count string limit app flow rule rule new flow rule set count count set grade rule constant flow grade qp rule set resource resource if string util be not blank limit app rule set limit app limit app flow rule manager load rule collection singleton list rule test public void test common filter miscellaneous throw exception string url hello this mvc perform get url and expect status be ok and expect content string hello str cluster node cn get cluster builder slot get cluster node get colon url assert not null cn get assert equal cn get pass qp 0.01 cluster node cn post cluster builder slot get cluster node post colon url assert null cn post this mvc perform post url and expect status be ok and expect content string hello post str cn post cluster builder slot get cluster node post colon url assert not null cn post assert equal cn post pass qp 0.01 test common block and redirect block page url cn get cn post private void test common block and redirect block page string url cluster node cn get cluster node cn post throw exception configure rule for get url the request will be block and response be default block message this mvc perform get url accept media type text plain and expect status be too many request and expect content string filter util default block msg assert equal cn get block qps 0.01 test for post pass this mvc perform post url and expect status be ok and expect content string hello post str assert equal cn post pass qp 0.01 flow rule manager load rule null web servlet config set block page after public void clean up flow rule manager load rule null cluster builder slot reset cluster node 
abstract time base test run with power mock runner class prepare for test time util class public abstract class abstract time base test private long current millis power mockito mock static time util class power mockito when time util current time milli then return current millis protect final void use actual time power mockito when time util current time milli then call real method protect final void set current milli long cur current millis cur power mockito when time util current time milli then return current millis protect final void sleep int t current millis t power mockito when time util current time milli then return current millis protect final void sleep second int time sec sleep time sec 
gateway api controller test run with spring runner class web mvc test gateway api controller class import fake auth service impl class in mem api definition store class app management class simple machine discovery class authorization interceptor class public class gateway api controller test private static final string test app test app private static final string test ip localhost private static final integer test port autowire private mock mvc mock mvc autowire private in mem api definition store repository mock bean private sentinel api client sentinel api client before public void before repository clear all test public void test query apis throw exception string path gateway api list json list api definition entity entity new array list mock two entity api definition entity entity new api definition entity entity set id 1 l entity set app test app entity set ip test ip entity set port test port entity set api name foo date date new date entity set gmt create date entity set gmt modify date set api predicate item entity item entity new link hash set entity set predicate item item entity api predicate item entity item entity new api predicate item entity item entity set pattern aaa item entity set match strategy url match strategy exact item entity add item entity entity add entity api definition entity entity2 new api definition entity entity2 set id 2 l entity2 set app test app entity2 set ip test ip entity2 set port test port entity2 set api name biz entity set gmt create date entity set gmt modify date set api predicate item entity item entities2 new link hash set entity2 set predicate item item entities2 api predicate item entity item entity2 new api predicate item entity item entity2 set pattern bbb item entity2 set match strategy url match strategy prefix item entities2 add item entity2 entity add entity2 completable future list api definition entity completable future mock completable future class give completable future get will return entity give sentinel api client fetch apis test app test ip test port will return completable future mock http servlet request builder request builder mock mvc request builder get path request builder param app test app request builder param ip test ip request builder param port string value of test port do controller logic mvc result mvc result mock mvc perform request builder and expect mock mvc result matcher status be ok and do mock mvc result handler print and return verify the fetch apis method have be call verify sentinel api client fetch apis test app test ip test port verify if two same entity be get result list api definition entity result j s o n object parse object mvc result get response get content as string new type reference result list api definition entity assert true result be success list api definition entity datum result get datum assert equal datum size assert equal entity datum verify the entity be add into memory repository list api definition entity entity in mem repository find all by app test app assert equal entity in mem size assert equal entity entity in mem test public void test add api throw exception string path gateway api new json add api req vo req vo new add api req vo req vo set app test app req vo set ip test ip req vo set port test port req vo set api name customize api list api predicate item vo item vo new array list api predicate item vo item vo new api predicate item vo item vo set match strategy url match strategy exact item vo set pattern product item vos add item vo req vo set predicate item item vos give sentinel api client modify apis eq test app eq test ip eq test port any will return true mock http servlet request builder request builder mock mvc request builder post path request builder content json to j s o n string req vo content type media type application json do controller logic mvc result mvc result mock mvc perform request builder and expect mock mvc result matcher status be ok and do mock mvc result handler print and return verify the modify apis method have be call verify sentinel api client modify apis eq test app eq test ip eq test port any result api definition entity result j s o n object parse object mvc result get response get content as string new type reference result api definition entity assert true result be success verify the result api definition entity entity result get datum assert not null entity assert equal test app entity get app assert equal test ip entity get ip assert equal test port entity get port assert equal customize api entity get api name assert not null entity get id assert not null entity get gmt create assert not null entity get gmt modify set api predicate item entity predicate item entity entity get predicate item assert equal predicate item entity size api predicate item entity predicate item entity predicate item entity iterator next assert equal url match strategy exact predicate item entity get match strategy int value assert equal product predicate item entity get pattern verify the entity which be add in memory repository list api definition entity entity in mem repository find all by app test app assert equal entity in mem size assert equal entity entity in mem get test public void test update api throw exception string path gateway api save json add one entity to memory repository for update api definition entity add entity new api definition entity add entity set app test app add entity set ip test ip add entity set port test port add entity set api name bbb date date new date to make the gmt modify different when do update date date util add seconds date add entity set gmt create date add entity set gmt modify date set api predicate item entity add redicate item entity new hash set add entity set predicate item add redicate item entity api predicate item entity add predicate item entity new api predicate item entity add predicate item entity set match strategy url match strategy exact add predicate item entity set pattern order add entity repository save add entity update api req vo req vo new update api req vo req vo set id add entity get id req vo set app test app list api predicate item vo item vo new array list api predicate item vo item vo new api predicate item vo item vo set match strategy url match strategy prefix item vo set pattern my order item vos add item vo req vo set predicate item item vos give sentinel api client modify apis eq test app eq test ip eq test port any will return true mock http servlet request builder request builder mock mvc request builder post path request builder content json to j s o n string req vo content type media type application json do controller logic mvc result mvc result mock mvc perform request builder and expect mock mvc result matcher status be ok and do mock mvc result handler print and return verify the modify apis method have be call verify sentinel api client modify apis eq test app eq test ip eq test port any result api definition entity result j s o n object parse object mvc result get response get content as string new type reference result api definition entity assert true result be success api definition entity entity result get datum assert not null entity assert equal bbb entity get api name assert equal date entity get gmt create to make sure gmt modify have be set and it be different from gmt create assert not null entity get gmt modify assert not equal entity get gmt create entity get gmt modify set api predicate item entity predicate item entity entity get predicate item assert equal predicate item entity size api predicate item entity predicate item entity predicate item entity iterator next assert equal url match strategy prefix predicate item entity get match strategy int value assert equal my order predicate item entity get pattern verify the entity which be update in memory repository list api definition entity entity in mem repository find all by app test app assert equal entity in mem size assert equal entity entity in mem get test public void test delete api throw exception string path gateway api delete json add one entity into memory repository for delete api definition entity add entity new api definition entity add entity set app test app add entity set ip test ip add entity set port test port add entity set api name ccc date date new date add entity set gmt create date add entity set gmt modify date set api predicate item entity add redicate item entity new hash set add entity set predicate item add redicate item entity api predicate item entity add predicate item entity new api predicate item entity add predicate item entity set match strategy url match strategy exact add predicate item entity set pattern user add add entity repository save add entity give sentinel api client modify apis eq test app eq test ip eq test port any will return true mock http servlet request builder request builder mock mvc request builder post path request builder param id string value of add entity get id do controller logic mvc result mvc result mock mvc perform request builder and expect mock mvc result matcher status be ok and do mock mvc result handler print and return verify the modify apis method have be call verify sentinel api client modify apis eq test app eq test ip eq test port any verify the result result long result j s o n object parse object mvc result get response get content as string new type reference result long assert true result be success assert equal add entity get id result get datum now no entity in memory list api definition entity entity in mem repository find all by app test app assert equal entity in mem size 
gateway flow rule controller test run with spring runner class web mvc test gateway flow rule controller class import fake auth service impl class in mem gateway flow rule store class app management class simple machine discovery class authorization interceptor class public class gateway flow rule controller test private static final string test app test app private static final string test ip localhost private static final integer test port autowire private mock mvc mock mvc autowire private in mem gateway flow rule store repository mock bean private sentinel api client sentinel api client before public void before repository clear all test public void test query flow rule throw exception string path gateway flow list json list gateway flow rule entity entity new array list mock two entity gateway flow rule entity entity new gateway flow rule entity entity set id 1 l entity set app test app entity set ip test ip entity set port test port entity set resource httpbin route entity set resource mode resource mode route id entity set grade flow grade qp entity set count 5 d entity set interval 30 l entity set interval unit gateway flow rule entity interval unit second entity set control behavior control behavior default entity set burst entity set max queue timeout ms gateway param flow item entity item entity new gateway param flow item entity entity set param item item entity item entity set parse strategy param parse strategy client ip entity add entity gateway flow rule entity entity2 new gateway flow rule entity entity2 set id 2 l entity2 set app test app entity2 set ip test ip entity2 set port test port entity2 set resource some customize api entity2 set resource mode resource mode custom api name entity2 set count 30 d entity2 set interval 2 l entity2 set interval unit gateway flow rule entity interval unit minute entity2 set control behavior control behavior default entity2 set burst entity2 set max queue timeout ms gateway param flow item entity item entity2 new gateway param flow item entity entity2 set param item item entity2 item entity2 set parse strategy param parse strategy client ip entity add entity2 completable future list gateway flow rule entity completable future mock completable future class give completable future get will return entity give sentinel api client fetch gateway flow rule test app test ip test port will return completable future mock http servlet request builder request builder mock mvc request builder get path request builder param app test app request builder param ip test ip request builder param port string value of test port do controller logic mvc result mvc result mock mvc perform request builder and expect mock mvc result matcher status be ok and do mock mvc result handler print and return verify the fetch gateway flow rule method have be call verify sentinel api client fetch gateway flow rule test app test ip test port verify if two same entity be get result list gateway flow rule entity result j s o n object parse object mvc result get response get content as string new type reference result list gateway flow rule entity assert true result be success list gateway flow rule entity datum result get datum assert equal datum size assert equal entity datum verify the entity be add into memory repository list gateway flow rule entity entity in mem repository find all by app test app assert equal entity in mem size assert equal entity entity in mem test public void test add flow rule throw exception string path gateway flow new json add flow rule req vo req vo new add flow rule req vo req vo set app test app req vo set ip test ip req vo set port test port req vo set resource mode resource mode route id req vo set resource httpbin route req vo set grade flow grade qp req vo set count 5 d req vo set interval 30 l req vo set interval unit gateway flow rule entity interval unit second req vo set control behavior control behavior default req vo set burst req vo set max queue timeout ms give sentinel api client modify gateway flow rule eq test app eq test ip eq test port any will return true mock http servlet request builder request builder mock mvc request builder post path request builder content json to j s o n string req vo content type media type application json do controller logic mvc result mvc result mock mvc perform request builder and expect mock mvc result matcher status be ok and do mock mvc result handler print and return verify the modify gateway flow rule method have be call verify sentinel api client modify gateway flow rule eq test app eq test ip eq test port any result gateway flow rule entity result j s o n object parse object mvc result get response get content as string new type reference result gateway flow rule entity assert true result be success verify the result gateway flow rule entity entity result get datum assert not null entity assert equal test app entity get app assert equal test ip entity get ip assert equal test port entity get port assert equal resource mode route id entity get resource mode int value assert equal httpbin route entity get resource assert not null entity get id assert not null entity get gmt create assert not null entity get gmt modify verify the entity which be add in memory repository list gateway flow rule entity entity in mem repository find all by app test app assert equal entity in mem size assert equal entity entity in mem get test public void test update flow rule throw exception string path gateway flow save json add one entity into memory repository for update gateway flow rule entity add entity new gateway flow rule entity add entity set id 1 l add entity set app test app add entity set ip test ip add entity set port test port add entity set resource httpbin route add entity set resource mode resource mode route id add entity set grade flow grade qp add entity set count 5 d add entity set interval 30 l add entity set interval unit gateway flow rule entity interval unit second add entity set control behavior control behavior default add entity set burst add entity set max queue timeout ms date date new date to make the gmt modify different when do update date date util add seconds date add entity set gmt create date add entity set gmt modify date gateway param flow item entity add item entity new gateway param flow item entity add entity set param item add item entity add item entity set parse strategy param parse strategy client ip repository save add entity update flow rule req vo req vo new update flow rule req vo req vo set id add entity get id req vo set app test app req vo set grade flow grade qp req vo set count 6 d req vo set interval 2 l req vo set interval unit gateway flow rule entity interval unit minute req vo set control behavior control behavior rate limiter req vo set max queue timeout ms gateway param flow item vo item vo new gateway param flow item vo req vo set param item item vo item vo set parse strategy param parse strategy url param item vo set field name pa give sentinel api client modify gateway flow rule eq test app eq test ip eq test port any will return true mock http servlet request builder request builder mock mvc request builder post path request builder content json to j s o n string req vo content type media type application json do controller logic mvc result mvc result mock mvc perform request builder and expect mock mvc result matcher status be ok and do mock mvc result handler print and return verify the modify gateway flow rule method have be call verify sentinel api client modify gateway flow rule eq test app eq test ip eq test port any result gateway flow rule entity result j s o n object parse object mvc result get response get content as string new type reference result gateway flow rule entity assert true result be success gateway flow rule entity entity result get datum assert not null entity assert equal resource mode route id entity get resource mode int value assert equal httpbin route entity get resource assert equal 6 d entity get count double value assert equal 2 l entity get interval long value assert equal gateway flow rule entity interval unit minute entity get interval unit int value assert equal control behavior rate limiter entity get control behavior int value assert equal entity get burst int value assert equal entity get max queueing timeout ms int value assert equal date entity get gmt create to make sure gmt modify have be set and it be different from gmt create assert not null entity get gmt modify assert not equal entity get gmt create entity get gmt modify verify the entity which be update in memory repository gateway param flow item entity item entity entity get param item assert equal param parse strategy url param item entity get parse strategy int value assert equal pa item entity get field name test public void test delete flow rule throw exception string path gateway flow delete json add one entity into memory repository for delete gateway flow rule entity add entity new gateway flow rule entity add entity set id 1 l add entity set app test app add entity set ip test ip add entity set port test port add entity set resource httpbin route add entity set resource mode resource mode route id add entity set grade flow grade qp add entity set count 5 d add entity set interval 30 l add entity set interval unit gateway flow rule entity interval unit second add entity set control behavior control behavior default add entity set burst add entity set max queue timeout ms date date new date date date util add seconds date add entity set gmt create date add entity set gmt modify date gateway param flow item entity add item entity new gateway param flow item entity add entity set param item add item entity add item entity set parse strategy param parse strategy client ip repository save add entity give sentinel api client modify gateway flow rule eq test app eq test ip eq test port any will return true mock http servlet request builder request builder mock mvc request builder post path request builder param id string value of add entity get id do controller logic mvc result mvc result mock mvc perform request builder and expect mock mvc result matcher status be ok and do mock mvc result handler print and return verify the modify gateway flow rule method have be call verify sentinel api client modify gateway flow rule eq test app eq test ip eq test port any verify the result result long result j s o n object parse object mvc result get response get content as string new type reference result long assert true result be success assert equal add entity get id result get datum now no entity in memory list gateway flow rule entity entity in mem repository find all by app test app assert equal entity in mem size 
eureka datum source test run with spring runner class enable eureka server spring boot test web environment spring boot test web environment define port public class eureka datum source test private static final string sentinel key sentinel rule value server port private int port value eureka instance appname private string appname value eureka instance instance id private string instance id test public void test eureka datum source throw exception string url http localhost port eureka eureka datum source list flow rule eureka datum source new eureka datum source appname instance id array as list url sentinel key new converter string list flow rule override public list flow rule convert string source return json parse object source new type reference list flow rule flow rule manager register2 property eureka datum source get property await timeout time unit seconds until new callable boolean override public boolean call throw exception return flow rule manager get rule size assert assert true flow rule manager get rule size 
sentinel rule locator test run with spring runner class spring boot test class datum source bootstrap configuration class property spring application name sentinel public class sentinel rule locator test autowire private sentinel rule locator sentinel rule source locator autowire private environment environment test public void test auto load assert assert true sentinel rule source locator null assert assert true environment null before run this test case please start the config server link config server public void test locate config client property config client property new config client property environment config client property set label master config client property set profile dev config client property set uri new string http localhost sentinel rule locator sentinel rule source locator new sentinel rule locator config client property environment sentinel rule source locator locate environment assert assert true string util be not blank sentinel rule storage retrieve rule flow rule 
abstract time base test run with power mock runner class prepare for test time util class public abstract class abstract time base test private long current millis power mockito mock static time util class power mockito when time util current time milli then return current millis protect final void use actual time power mockito when time util current time milli then call real method protect final void set current milli long cur current millis cur power mockito when time util current time milli then return current millis protect final void sleep int t current millis t power mockito when time util current time milli then return current millis protect final void sleep second int time sec sleep time sec 
client option test run with j unit4 class public class client option test test public void test get client timeout configuration configuration new configuration configuration set client option client timeout duration of seconds assert equal configuration get client option client timeout duration of seconds configuration new configuration configuration set akka option client timeout s assert equal configuration get client option client timeout duration of seconds configuration new configuration assert equal configuration get client option client timeout client option client timeout default value 
package program util pipeline test run with parameterized class public class package program util pipeline test parameterized parameter public test parameter test parameter rule public temporary folder temporary folder new temporary folder parameterize parameter public static collection test parameter parameter return array as list test parameter of datum set test program class pipeline plan pipeline get execution config test parameter of datum stream test program class pipeline stream graph pipeline get execution config this test whether configuration forwarding from a link configuration to the environment work test public void test configuration forwarding throw exception we want to test forwarding with this config ensure that the default be what we expect assert that execution environment get execution environment get config be auto type registration disabled be false package program package program package program new builder set entry point class name test parameter entry class get name build configuration config new configuration config set pipeline option auto type registration false pipeline pipeline package program util get pipeline from program package program config parallelism false suppress output execution config execution config test parameter extract execution config pipeline we want to test forwarding with this config ensure that the default be what we expect assert that execution config be auto type registration disabled be true test public void test user classloader for configuration throw exception string user serializer class name user serializer list url user url get class url user serializer class name package program package program package program new builder set user class path user url set entry point class name test parameter entry class get name build configuration config new configuration config set pipeline option kryo default serializer collection singleton list string format class s serializer s package program util pipeline test class get name user serializer class name pipeline pipeline package program util get pipeline from program package program config parallelism false suppress output execution config execution config test parameter extract execution config pipeline assert that execution config get default kryo serializer class get package program util pipeline test class get name be user serializer class name private list url get class url string class name throw i o exception u r l class loader url class loader class loader util compile and load java temporary folder new folder class name java import com esotericsoftware kryo kryo n import com esotericsoftware kryo serializer n import com esotericsoftware kryo io input n import com esotericsoftware kryo io output n public class class name extend serializer n t override n tpublic void write n t t kryo kryo n t t output output n t t object object n t n n t override n tpublic object read kryo kryo input input class type n t treturn null n t n return array as list url class loader get u be l private interface test parameter class entry class execution config extract execution config pipeline pipeline static test parameter of class entry class function pipeline execution config execution config extractor return new test parameter override public class entry class return entry class override public execution config extract execution config pipeline pipeline return execution config extractor apply pipeline test program for the datum set api public static class datum set test program public static void main string arg throw exception execution environment env execution environment get execution environment env from element hello print env execute test program for the datum stream api public static class datum stream test program public static void main string arg throw exception stream execution environment env stream execution environment get execution environment env from element hello print env execute 
bucket sink migration test run with parameterized class public class bucket sink migration test todo change this to the correspond savepoint version to be write e g link migration version v1 for 1.3 todo and remove all ignore annotation on write snapshot method to generate savepoint todo note you should generate the savepoint base on the release branch instead of the master private final migration version flink generate savepoint version null class rule public static temporary folder temp folder new temporary folder before class public static void verify o s assume assume true hdf cluster can not be start on window without extension operate system be window the bucket file prefix be the absolute path to the part file which be store within the savepoint parameterized parameter name migration savepoint bucket file prefix public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 var folder tv b 1d8fvx23dgk1 xs8db 95h0000gn t junit4273542175898623023 junit3801102997056424640 1970 - 01 part tuple2 of migration version v1 var folder tv b 1d8fvx23dgk1 xs8db 95h0000gn t junit3198043255809479705 junit8947526563966405708 1970 - 01 part tuple2 of migration version v1 tmp junit4927100426019463155 junit2465610012100182280 1970 - 01 part tuple2 of migration version v1 tmp junit3459711376354834545 junit5114611885650086135 1970 - 01 part tuple2 of migration version v1 var folder r2 tdhx810x7yxb7q9 brnp49x40000gp t junit4288325607215628863 junit8132783417241536320 1970 - 01 part tuple2 of migration version v1 var folder rc 84k970 r94nz456tb9cdlt30s1j0k94 t junit7271027454784776053 junit5108755539355247469 1970 - 01 part tuple2 of migration version v1 var folder rc 84k970 r94nz456tb9cdlt30s1j0k94 t junit587754116249874744 junit764636113243634374 1970 - 01 part tuple2 of migration version v1 var folder v3 vg2lqnvx2ng24b5rr5qg2nv80000gp t junit9081786177439346 junit9063714383293729937 1970 - 01 part tuple2 of migration version v1 var folder v3 vg2lqnvx2ng24b5rr5qg2nv80000gp t junit9111597157791840754 junit2799810910414739323 1970 - 01 part private final migration version test migrate version private final string expect bucket file prefix public bucketing sink migration test tuple2 migration version string migrate version and expect bucket file prefix this test migrate version migrate version and expect bucket file prefix f0 this expect bucket file prefix migrate version and expect bucket file prefix f1 manually run this to write binary snapshot datum remove ignore to run ignore test public void write snapshot throw exception final file out dir temp folder new folder bucket sink string sink new bucket sink string out dir get absolute path set writer new string writer string set batch size set part prefix part prefix set in progress prefix set pend prefix set valid length prefix set in progress suffix in progress suffix set pend suffix pend suffix set valid length suffix valid length suffix one input stream operator test harness string object test harness new one input stream operator test harness new stream sink sink test harness setup test harness open test harness process element new stream record test1 0 l test harness process element new stream record test2 0 l check local f out dir test harness process element new stream record test3 0 l test harness process element new stream record test4 0 l test harness process element new stream record test5 0 l check local f out dir operator subtask state snapshot test harness snapshot 0 l 0 l operator snapshot util write state handle snapshot src test resource bucket sink migration test flink flink generate savepoint version snapshot test harness close test public void test restore throw exception final file out dir temp folder new folder validate bucketing sink string sink validate bucketing sink string new validate bucketing sink string out dir get absolute path expect bucket file prefix set writer new string writer string set batch size set part prefix part prefix set in progress prefix set pend prefix set valid length prefix set in progress suffix in progress suffix set pend suffix pend suffix set valid length suffix valid length suffix set use truncate false don t use truncate because file do not exist one input stream operator test harness string object test harness new one input stream operator test harness new stream sink sink test harness setup test harness initialize state operator snapshot util get resource filename bucket sink migration test flink test migrate version snapshot test harness open assert true sink initialize call test harness process element new stream record test1 0 l test harness process element new stream record test2 0 l check local f out dir test harness close static class validate bucketing sink t extend bucketing sink t private static final long serial version u i d l public boolean initialize call false private final string expect bucket file prefix validate bucketing sink string base path string expect bucket file prefix super base path this expect bucket file prefix expect bucket file prefix the actual path in this depend on the binary checkpoint so it you update this the path here have to be update as well override public void initialize state function initialization context context throw exception operator state store state store context get operator state store we be use java serializer from the flink runtime module here this be very naughty and we shouldn t be do it because ideally nothing in the api module connector depend directly on flink runtime we be do it here because we need to maintain backwards compatibility with old state and because we will have to rework remove this code soon list state state t restore bucket state state store get list state new list state descriptor bucket state new java serializer if context be restore for state t state restore bucket state get for string bucket path state bucket state key set bucket state state state get bucket state new path bucket path string current state current file long valid length state current file valid length assert assert equal expect bucket file prefix current assert assert equal valid length list string pend file state pend file assert true pend file be empty final map long list string pend file per checkpoint state pend file per checkpoint assert assert equal pend file per checkpoint size for map entry long list string entry pend file per checkpoint entry set long checkpoint entry get key list string file entry get value assert assert equal 0 l checkpoint assert assert equal file size for int i i i assert assert equal expect bucket file prefix i file get i initialize call true super initialize state context 
deserialization schema wrapper test run with mockito j unit runner class public class deserialization schema wrapper test rule public expect exception throw expect exception none mock private deserialization schema string deserialization schema inject mock private deserialization schema wrapper string deserialization schema wrapper test public void test produce type type information string type information type information of string class when deserialization schema get produce type then return type information assert that deserialization schema wrapper get produce type be type information verify deserialization schema time get produce type test public void test end of stream string input some input when deserialization schema be end of stream any then return true assert that deserialization schema wrapper be end of stream input be true verify deserialization schema time be end of stream input test public void test deserialize throw exception string input as string some input throw expect unsupported operation exception class deserialization schema wrapper deserialize pub sub message input as string test public void test open throw exception initialization context init context mock initialization context class deserialization schema wrapper open init context verify deserialization schema verification mode factory time open eq init context private pubsub message pub sub message string message return pubsub message new builder set message id some id set datum byte string copy from message get byte build 
pub sub source test run with mockito j unit runner class public class pub sub source test mock private pub sub deserialization schema string deserialization schema mock private pub sub source acknowledge on checkpoint factory acknowledge on checkpoint factory mock private acknowledge on checkpoint string acknowledge on checkpoint mock private streaming runtime context streaming runtime context mock private metric group metric group mock private pub sub subscriber factory pub sub subscriber factory mock private credentials credentials mock private pub sub subscriber pubsub subscriber mock private flink connector rate limiter rate limiter private pub sub source string pub sub source before public void setup throw exception when pub sub subscriber factory get subscriber eq credentials then return pubsub subscriber when stream runtime context be checkpoint enable then return true when stream runtime context get metric group then return metric group when metric group add group any string class then return metric group when acknowledge on checkpoint factory create any then return acknowledge on checkpoint pub sub source new pub sub source deserialization schema pub sub subscriber factory credentials acknowledge on checkpoint factory rate limiter pub sub source set runtime context streaming runtime context test expect illegal argument exception class public void test open without checkpoint throw exception when stream runtime context be checkpoint enable then return false pub sub source open null test public void test open with checkpointing throw exception when stream runtime context be checkpoint enable then return true pub sub source open null verify pub sub subscriber factory time get subscriber eq credentials verify acknowledge on checkpoint factory time create pubsub subscriber test public void test type information from deserialization schema type information string schema type information type information of string class when deserialization schema get produce type then return schema type information type information string actual type information pub sub source get produce type assert that actual type information be schema type information verify deserialization schema time get produce type test public void test notify checkpoint complete throw exception pub sub source open null pub sub source notify checkpoint complete 45 l verify acknowledge on checkpoint time notify checkpoint complete 45 l test public void test restore state throw exception pub sub source open null list acknowledge id for checkpoint string input new array list pub sub source restore state input verify acknowledge on checkpoint time restore state ref eq input test public void test snapshot state throw exception pub sub source open null pub sub source snapshot state l l verify acknowledge on checkpoint time snapshot state l l test public void test open throw exception do answer arg deserialization schema initialization context context arg get argument assert assert that context get metric group matcher equal to metric group return null when deserialization schema open any deserialization schema initialization context class pub sub source open null verify deserialization schema time open any deserialization schema initialization context class 
h base connector i t case run with parameterized class public class h base connector i t case extend h base test base parameterize parameter public planner type planner parameterize parameter public boolean be legacy connector override protect planner type planner return planner parameterize parameter name planner legacy public static object parameter return new object new object planner type blink planner true new object planner type blink planner false new object planner type old planner true h base table source test test public void test table source full scan throw exception table environment t env create batch table env if be legacy connector h base table source hbase table new h base table source get conf test table hbase table add column f a m i l y1 f1 c o l1 integer class hbase table add column f a m i l y2 f2 c o l1 string class hbase table add column f a m i l y2 f2 c o l2 long class hbase table add column f a m i l y3 f3 c o l1 double class hbase table add column f a m i l y3 f3 c o l2 boolean class hbase table add column f a m i l y3 f3 c o l3 string class hbase table set row key row key integer class table environment internal t env register table source internal h table hbase table else t env execute sql create table h table family1 row col1 int family2 row col1 string col2 bigint family3 row col1 double col2 boolean col3 string rowkey int primary key rowkey not enforce with connector hbase 1.4 table name test table zookeeper quorum get zookeeper quorum table table t env sql query select h family1 col1 h family2 col1 h family2 col2 h family3 col1 h family3 col2 h family3 col3 from h table as h list row result collect batch result table string expect hello 1,100 1.01 false welt n hello 2,200 2.02 true welt n hello 3,300 3.03 false welt n null 400,4 true welt n hello 5,500 5.05 false welt n hello 6,600 6.06 true welt n hello 7,700 7.07 false welt n null 800,8 true welt n test base util compare result as text result expected test public void test table source projection throw exception table environment t env create batch table env if be legacy connector h base table source hbase table new h base table source get conf test table hbase table add column f a m i l y1 f1 c o l1 integer class hbase table add column f a m i l y2 f2 c o l1 string class hbase table add column f a m i l y2 f2 c o l2 long class hbase table add column f a m i l y3 f3 c o l1 double class hbase table add column f a m i l y3 f3 c o l2 boolean class hbase table add column f a m i l y3 f3 c o l3 string class hbase table set row key row key integer class table environment internal t env register table source internal h table hbase table else t env execute sql create table h table family1 row col1 int family2 row col1 string col2 bigint family3 row col1 double col2 boolean col3 string rowkey int primary key rowkey not enforce with connector hbase 1.4 table name test table zookeeper quorum get zookeeper quorum table table t env sql query select h family1 col1 h family3 col1 h family3 col2 h family3 col3 from h table as h list row result collect batch result table string expect 10,1 false welt n 20,2 true welt n 30,3 false welt n 40,4 true welt n 50,5 false welt n 60,6 true welt n 70,7 false welt n 80,8 true welt n test base util compare result as text result expected test public void test table source field order throw exception table environment t env create batch table env if be legacy connector h base table source hbase table new h base table source get conf test table shuffle order of column registration hbase table set row key row key integer class hbase table add column f a m i l y2 f2 c o l1 string class hbase table add column f a m i l y3 f3 c o l1 double class hbase table add column f a m i l y1 f1 c o l1 integer class hbase table add column f a m i l y2 f2 c o l2 long class hbase table add column f a m i l y3 f3 c o l2 boolean class hbase table add column f a m i l y3 f3 c o l3 string class table environment internal t env register table source internal h table hbase table else t env execute sql create table h table rowkey int primary key family2 row col1 string col2 bigint family3 row col1 double col2 boolean col3 string family1 row col1 int with connector hbase 1.4 table name test table zookeeper quorum get zookeeper quorum table table t env sql query select from h table as h list row result collect batch result table string expect hello 1,100 1.01 false welt 1,10 n hello 2,200 2.02 true welt 2,20 n hello 3,300 3.03 false welt 3,30 n null 400,4 true welt 4,40 n hello 5,500 5.05 false welt 5,50 n hello 6,600 6.06 true welt 6,60 n hello 7,700 7.07 false welt 7,70 n null 800,8 true welt 8,80 n test base util compare result as text result expected test public void test table source read as byte array throw exception table environment t env create batch table env if be legacy connector fetch row2 from the table till the end h base table source hbase table new h base table source get conf test table hbase table add column f a m i l y2 f2 c o l1 byte class hbase table add column f a m i l y2 f2 c o l2 byte class hbase table set row key row key integer class table environment internal t env register table source internal h table hbase table else t env execute sql create table h table family2 row col1 byte col2 byte rowkey int no primary key syntax with connector hbase 1.4 table name test table zookeeper quorum get zookeeper quorum t env register function to u t f8 new to u t f8 t env register function to long new to long table table t env sql query select to u t f8 h family2 col1 to long h family2 col2 from h table as h list row result collect batch result table string expect hello 1,100 n hello 2,200 n hello 3,300 n null n hello 5,500 n hello 6,600 n hello 7,700 n null n test base util compare result as text result expected test public void test table input format throw exception execution environment env execution environment get execution environment datum set tuple1 integer result env create input new input format for test table get conf reduce reduce function tuple1 integer v1 v2 tuple1 of v1 f0 v2 f0 list tuple1 integer result set result collect assert equal result set size assert equal int result set get f0 test public void test table sink throw exception stream execution environment exec env stream execution environment get execution environment stream table environment t env stream table environment create exec env stream setting register h base table test table1 which contain test datum string table1 d d l create h base table d d l test table false t env execute sql table1 d d l string table2 d d l create h base table d d l test table false t env execute sql table2 d d l string query insert into test table select rowkey family1 family2 family3 from test table wait to finish table env util exec insert sql and wait result t env query start a batch scan job to verify contents in h base table table environment batch env create batch table env batch env execute sql table2 d d l table table batch env sql query select h rowkey h family1 col1 h family2 col1 h family2 col2 h family3 col1 h family3 col2 h family3 col3 from test table as h list row result collect batch result table string expect 1,10 hello 1,100 1.01 false welt n 2,20 hello 2,200 2.02 true welt n 3,30 hello 3,300 3.03 false welt n 4,40 null 400,4 true welt n 5,50 hello 5,500 5.05 false welt n 6,60 hello 6,600 6.06 true welt n 7,70 hello 7,700 7.07 false welt n 8,80 null 800,8 true welt n test base util compare result as text result expected test public void test table source sink with d d l throw exception if old planner equal planner be legacy connector only test for blink planner and new connector because type timestamp date time decimal work well in new connector use blink planner but exit some precision problem in old planner or legacy connector return stream execution environment exec env stream execution environment get execution environment stream table environment t env stream table environment create exec env stream setting regiter h base table test table1 which contain test datum string table1 d d l create h base table d d l test table true t env execute sql table1 d d l register h base table which be empty string table3 d d l create h base table d d l test table true t env execute sql table3 d d l string insert statement insert into test table select rowkey family1 family2 family3 family4 from test table wait to finish table env util exec insert sql and wait result t env insert statement start a batch scan job to verify contents in h base table table environment batch env create batch table env batch env execute sql table3 d d l string query select h rowkey h family1 col1 h family2 col1 h family2 col2 h family3 col1 h family3 col2 h family3 col3 h family4 col1 h family4 col2 h family4 col3 h family4 col4 from test table as h iterator row collect t env execute sql query collect list string result list new array list collect stream map row to string sort collect collector to list list string expect new array list expect add 1,10 hello 1,100 1.01 false welt 1,2019 08 - 18 t19 00,2019 08 - 18 19:00 12345678.0001 expect add 2,20 hello 2,200 2.02 true welt 2,2019 08 - 18 t19 01,2019 08 - 18 19:01 12345678.0002 expect add 3,30 hello 3,300 3.03 false welt 3,2019 08 - 18 t19 02,2019 08 - 18 19:02 12345678.0003 expect add 4,40 null 400,4 true welt 4,2019 08 - 18 t19 03,2019 08 - 18 19:03 12345678.0004 expect add 5,50 hello 5,500 5.05 false welt 5,2019 08 - 19 t19 10,2019 08 - 19 19:10 12345678.0005 expect add 6,60 hello 6,600 6.06 true welt 6,2019 08 - 19 t19 20,2019 08 - 19 19:20 12345678.0006 expect add 7,70 hello 7,700 7.07 false welt 7,2019 08 - 19 t19 30,2019 08 - 19 19:30 12345678.0007 expect add 8,80 null 800,8 true welt 8,2019 08 - 19 t19 40,2019 08 - 19 19:40 12345678.0008 assert equal expected result test public void test h base lookup table source throw exception if old planner equal planner be legacy connector lookup table source be only support in blink planner skip for old planner type timestamp date time decimal work well in new connector skip legacy connector return stream execution environment exec env stream execution environment get execution environment stream table environment t env stream table environment create exec env stream setting t env execute sql create table test table family1 row col1 int family2 row col1 string col2 bigint family3 row col1 double col2 boolean col3 string rowkey int family4 row col1 timestamp col2 date col3 time col4 decimal primary key rowkey not enforce with connector hbase 1.4 table name test table zookeeper quorum get zookeeper quorum prepare a source table string src table name src datum stream row src d exec env from collection test datum return test type info table in t env from datum stream src d a b c proc proctime t env register table src table name in perform a temporal table join query string dim join query select a b h family1 col1 h family2 col1 h family2 col2 h family3 col1 h family3 col2 h family3 col3 h family4 col1 h family4 col2 h family4 col3 h family4 col4 from src join test table for system time as of src proc as h on src a h rowkey iterator row collect t env execute sql dim join query collect list string result list new array list collect stream map row to string sort collect collector to list list string expect new array list expect add 1,1 hello 1,100 1.01 false welt 1,2019 08 - 18 t19 00,2019 08 - 18 19:00 12345678.0001 expect add 2,2 hello 2,200 2.02 true welt 2,2019 08 - 18 t19 01,2019 08 - 18 19:01 12345678.0002 expect add 3,2 hello 3,300 3.03 false welt 3,2019 08 - 18 t19 02,2019 08 - 18 19:02 12345678.0003 expect add 3,3 hello 3,300 3.03 false welt 3,2019 08 - 18 t19 02,2019 08 - 18 19:02 12345678.0003 assert equal expected result h base lookup source test prepare a source collection private static final list row test datum new array list private static final row type info test type info new row type info new type information type int type long type string new string a b c static test datum add row of 1 l hi test datum add row of 2 l hello test datum add row of 2 l hello world test datum add row of 3 l hello world utility create a batch link table environment depend on the link planner context private table environment create batch table env if old planner equal planner execution environment env execution environment get execution environment return batch table environment create env new table config else return table environment create batch setting collect batch result depend on the link planner context private list row collect batch result table table throw exception table impl table impl table impl table if old planner equal planner batch table environment batch table env batch table environment table impl get table environment datum set row result set batch table env to datum set table row class return result set collect else table impl t table impl table table schema schema t get schema list type information type new array list for type information type info t get schema get field type convert local date time to legacy timestamp to make the output consistent with flink batch planner if type info equal type local date time type add type sql timestamp else if type info equal type local date type add type sql date else if type info equal type local time type add type sql time else type add type info collect row table sink sink new collect row table sink collect table sink row configure sink collect table sink row sink configure schema get field name type to array new type information return java scala conversion util to java batch table env util collect t get table environment table configure sink option apply job a link scalar function that map byte array to utf string public static class to u t f8 extend scalar function private static final long serial version u i d 1 l public string eval byte byte return byte to string byte a link scalar function that map byte array to long public static class to long extend scalar function private static final long serial version u i d 1 l public long eval byte byte return byte to long byte a link h base input format for test public static class input format for test table extend h base input format tuple1 integer private static final long serial version u i d 1 l public input format for test table org apache hadoop conf configuration h conf super h conf override protect scan get scanner return new scan override protect string get table name return test table override protect tuple1 integer map result to tuple result r return new tuple1 byte to int r get value byte to byte f a m i l y1 byte to byte f1 c o l1 private string create h base table d d l string table name boolean test time and decimal type string builder family4 statement new string builder if test time and decimal type family4 statement append family4 row col1 timestamp family4 statement append col2 date family4 statement append col3 time family4 statement append col4 decimal family4 statement append n if be legacy connector return create table table name n rowkey int n family1 row col1 int n family2 row col1 varchar col2 bigint n family3 row col1 double col2 boolean col3 varchar family4 statement to string with n connector type hbase n connector version 1.4 n connector table name table name n connector zookeeper quorum get zookeeper quorum n connector zookeeper znode parent hbase else return create table table name n rowkey int family1 row col1 int n family2 row col1 varchar col2 bigint n family3 row col1 double col2 boolean col3 varchar family4 statement to string with n connector hbase 1.4 n table name table name n zookeeper quorum get zookeeper quorum n zookeeper znode parent hbase 
hive table sink i t case run with flink standalone hive runner class public class hive table sink i t case hive s q l file private static hive shell hive shell private static hive catalog hive catalog private static hive conf hive conf before class public static void create catalog throw i o exception hive conf hive shell get hive conf hive catalog hive test util create hive catalog hive conf hive catalog open after class public static void close catalog if hive catalog null hive catalog close test public void test insert into non partition table throw exception string db name default string tbl name dest row type info row type info create hive dest table db name tbl name object path table path new object path db name tbl name table environment table env hive test util create table env with blink planner batch mode list row to write generate record table src table env from table source new collection table source to write row type info table env register table src src table env register catalog hive hive catalog table env util exec insert table and wait result table env sql query select from src hive default dest verify write datum to write hive shell execute query select from tbl name hive catalog drop table table path false test public void test write complex type throw exception string db name default string tbl name dest object path table path new object path db name tbl name table schema builder builder new table schema builder builder field new string a m s new datum type datum type array datum type int datum type map datum type int datum type string datum type row datum type field f1 datum type int datum type field f2 datum type string row type info row type info create hive dest table db name tbl name builder build list row to write new array list row row new row row type info get arity object array new object map integer string map new hash map integer string put a put b row struct new row struct set field struct set field c row set field array row set field map row set field struct to write add row table environment table env hive test util create table env with blink planner batch mode table src table env from table source new collection table source to write row type info table env register table complex src src table env register catalog hive hive catalog table env util exec insert table and wait result table env sql query select from complex src hive default dest list string result hive shell execute query select from tbl name assert equal result size assert equal 1,2 t a b t f1 f2 c result get hive catalog drop table table path false test public void test write nest complex type throw exception string db name default string tbl name dest object path table path new object path db name tbl name nest complex type table schema builder builder new table schema builder array of row builder field new string a new datum type datum type array datum type row datum type field f1 datum type int datum type field f2 datum type string row type info row type info create hive dest table db name tbl name builder build row row new row row type info get arity object array new object row set field array for int i i array length i row struct new row struct set field i struct set field string value of char a i array i struct list row to write new array list to write add row table environment table env hive test util create table env with blink planner batch mode table src table env from table source new collection table source to write row type info table env register table nest src src table env register catalog hive hive catalog table env util exec insert table and wait result table env sql query select from nest src hive default dest list string result hive shell execute query select from tbl name assert equal result size assert equal f1 f2 a f1 f2 b f1 f2 c result get hive catalog drop table table path false test public void test write null value throw exception table environment table env hive test util create table env with blink planner batch mode sql dialect hive table env register catalog hive catalog get name hive catalog table env use catalog hive catalog get name table env execute sql create database db1 try datum type table env execute sql create table db1 src t tinyint s smallint i int b bigint f float d double de decimal 10,5 t timestamp dt date str string ch char vch varchar bl boolean bin binary arr array int mp map int string strt struct f1 int f2 string hive test util create text table inserter hive shell db1 src add row new object null null null null null null null null null null null null null null null null null commit hive shell execute create table db1 dest like db1 src table env util exec insert sql and wait result table env insert into db1 dest select from db1 src list string result hive shell execute query select from db1 dest assert equal result size string col result get split t assert equal col length assert equal null col assert equal new hash set array as list col size finally table env execute sql drop database db1 cascade test public void test batch append table environment t env hive test util create table env with blink planner batch mode sql dialect hive t env register catalog hive catalog get name hive catalog t env use catalog hive catalog get name t env execute sql create database db1 t env use database db1 try t env execute sql create table append table i int j int table env util exec insert sql and wait result t env insert into append table select table env util exec insert sql and wait result t env insert into append table select array list row row list new array list t env execute sql select from append table collect row sort comparator compare int o int o get field assert assert equal array as list row of row of row finally t env execute sql drop database db1 cascade test timeout public void test default ser part streaming write throw exception test streaming write true false true this check success file test timeout public void test part streaming write throw exception test streaming write true false false this check success file test timeout public void test non part streaming write throw exception test streaming write false false false p test timeout public void test part streaming mr write throw exception test streaming write true true false this check success file test timeout public void test non part streaming mr write throw exception test streaming write false true false p test timeout public void test streaming append throw exception test streaming write false false false p stream execution environment env stream execution environment get execution environment env set parallelism stream table environment t env hive test util create table env with blink planner stream mode env t env register catalog hive catalog get name hive catalog t env use catalog hive catalog get name table env util exec insert sql and wait result t env insert into db1 sink table select a b 2020 - 05 assert batch db1 sink table array as list a b 2020 - 05 03,7 a b 2020 - 05 03,7 p q 2020 - 05 03,8 p q 2020 - 05 03,8 x y 2020 - 05 03,9 x y 2020 - 05 03,9 x y 2020 - 05 03,10 x y 2020 - 05 03,10 x y 2020 - 05 03,11 x y 2020 - 05 03,11 a b 2020 - 05 03,12 private void check success file string path file base path new file path d 2020 - 05 assert assert equal base path list length assert assert true new file new file base path e my success exist assert assert true new file new file base path e my success exist assert assert true new file new file base path e my success exist assert assert true new file new file base path e my success exist assert assert true new file new file base path e my success exist private void test streaming write boolean part boolean use mr boolean default ser consumer string path consumer throw exception stream execution environment env stream execution environment get execution environment env set parallelism env enable checkpoint stream table environment t env hive test util create table env with blink planner stream mode env t env register catalog hive catalog get name hive catalog t env use catalog hive catalog get name t env get config set sql dialect sql dialect hive if use mr t env get config get configuration set hive option table exec hive fallback mapr writer true else t env get config get configuration set hive option table exec hive fallback mapr writer false try t env execute sql create database db1 t env use database db1 prepare source list row datum array as list row of a b 2020 - 05 row of p q 2020 - 05 row of x y 2020 - 05 row of x y 2020 - 05 row of x y 2020 - 05 datum stream row stream env add source new finite test source datum new row type info type int type string type string type string type string t env create temporary view my table stream a b c d e ddl t env execute sql create external table sink table a int b string c string part d string e string part partition by d string e string default ser store as parquet tblproperty partition time extractor timestamp pattern key d e 00:00 sink partition commit delay key 1h sink partition commit policy kind key metastore success file sink partition commit success file name key my success table env util exec insert table and wait result t env sql query select from my table sink table assert batch db1 sink table array as list a b 2020 - 05 03,7 a b 2020 - 05 03,7 p q 2020 - 05 03,8 p q 2020 - 05 03,8 x y 2020 - 05 03,9 x y 2020 - 05 03,9 x y 2020 - 05 03,10 x y 2020 - 05 03,10 x y 2020 - 05 03,11 x y 2020 - 05 03,11 use batch table env to query list string result new array list table environment batch t env hive test util create table env with blink planner batch mode batch t env register catalog hive catalog get name hive catalog batch t env use catalog hive catalog get name batch t env execute sql select from db1 sink table collect for each remain r result add r to string result sort string compare to assert assert equal array as list a b 2020 - 05 03,7 a b 2020 - 05 03,7 p q 2020 - 05 03,8 p q 2020 - 05 03,8 x y 2020 - 05 03,9 x y 2020 - 05 03,9 x y 2020 - 05 03,10 x y 2020 - 05 03,10 x y 2020 - 05 03,11 x y 2020 - 05 03,11 result path consumer accept uri create hive catalog get hive table object path from string db1 sink table get sd get location get path finally t env execute sql drop database db1 cascade private void assert batch string table list string expect use batch table env to query list string result new array list table environment batch t env hive test util create table env with blink planner batch mode batch t env register catalog hive catalog get name hive catalog batch t env use catalog hive catalog get name batch t env execute sql select from table collect for each remain r result add r to string result sort string compare to expect sort string compare to assert assert equal expect result private row type info create hive dest table string db name string tbl name table schema table schema int num part cols throw exception catalog table catalog table create hive catalog table table schema num part col hive catalog create table new object path db name tbl name catalog table false return new row type info table schema get field type table schema get field name private row type info create hive dest table string db name string tbl name int num part cols throw exception table schema builder builder new table schema builder builder field new string i l d s new datum type datum type int datum type bigint datum type double datum type string return create hive dest table db name tbl name builder build num part col private catalog table create hive catalog table table schema table schema int num part col if num part col return new catalog table impl table schema new hash map string string create a hive table need explicit be generic false flag put catalog config be generic string value of false string part col new string num part cols system arraycopy table schema get field name table schema get field name length num part col part cols num part col return new catalog table impl table schema array as list part col new hash map string string create a hive table need explicit be generic false flag put catalog config be generic string value of false private void verify write datum list row expect list string result throw exception assert equal expect size result size set string expect set new hash set for int i i result size i expect set add expect get i to string replace all t assert equal expect set new hash set result private list row generate record int num record int arity list row re new array list num record for int i i num record i row row new row arity row set field i row set field long i row set field double value of string value of string format d d i i row set field string value of char a i re add row return re private static class collection table source extend input format table source row private final collection row datum private final row type info row type info collection table source collection row datum row type info row type info this data data this row type info row type info override public datum type get produce datum type return type conversion from legacy info to datum type row type info override public type information row get return type return row type info override public input format row get input format return new collection input format datum row type info create serializer new execution config override public table schema get table schema return new table schema builder field row type info get field name type conversion from legacy info to datum type row type info get field type build 
hive table source i t case run with flink standalone hive runner class public class hive table source i t case extend batch abstract test base hive s q l file private static hive shell hive shell private static hive catalog hive catalog private static hive conf hive conf before class public static void create catalog throw i o exception hive conf hive shell get hive conf hive catalog hive test util create hive catalog hive conf hive catalog open after class public static void close catalog if null hive catalog hive catalog close before public void setup source database and datum hive shell execute create database if not exist source db test public void test read non partitioned table throw exception final string db name source db final string tbl name test table environment t env create table env t env execute sql create table source db test a int b int c string d bigint e double hive test util create text table inserter hive shell db name tbl name add row new object a l 1.11 add row new object b l 2.22 add row new object c l 3.33 add row new object d l 4.44 commit table src t env sql query select from hive source db test list row row list new array list src execute collect assert assert equal row size assert assert equal 1,1 a 1000,1 row get to string assert assert equal 2,2 b 2000,2 row get to string assert assert equal 3,3 c 3000,3 row get to string assert assert equal 4,4 d 4000,4 row get to string test public void test read complex datum type throw exception final string db name source db final string tbl name complex test table environment t env create table env t env execute sql create table source db complex test a array int m map int string s struct f1 int f2 bigint integer array new integer map integer string map new link hash map map put a map put b object struct new object 3 l hive test util create text table inserter hive shell db name tbl name add row new object array map struct commit table src t env sql query select from hive source db complex test list row row list new array list src execute collect assert assert equal row size assert array equal array integer row get get field assert equal map row get get field assert equal row of struct struct row get get field test to read from partition table throw exception test public void test read partition table throw exception final string db name source db final string tbl name test table pt table environment t env create table env t env execute sql create table source db test table pt year string value int partition by pt int hive test util create text table inserter hive shell db name tbl name add row new object add row new object commit pt hive test util create text table inserter hive shell db name tbl name add row new object add row new object commit pt table src t env sql query select from hive source db test table pt list row row list new array list src execute collect assert equal row size object row string row stream map row to string sort to array assert array equal new string 2014,3 2014,4 2015,2 2015,5 row string test public void test partition prunning throw exception final string db name source db final string tbl name test table pt table environment t env create table env t env execute sql create table source db test table pt year string value int partition by pt int hive test util create text table inserter hive shell db name tbl name add row new object add row new object commit pt hive test util create text table inserter hive shell db name tbl name add row new object add row new object commit pt table src t env sql query select from hive source db test table pt where pt first check execution plan to ensure partition prunning work string explain src explain split n assert equal explain length string optimize logical plan explain string physical execution plan explain assert true optimize logical plan optimize logical plan contain hive table source year value pt table path source db test table pt partition prune true partition num assert true physical execution plan physical execution plan contain hive table source year value pt table path source db test table pt partition prune true partition num second check execute result list row row list new array list src execute collect assert equal row size object row string row stream map row to string sort to array assert array equal new string 2014,3 2014,4 row string test public void test partition filter throw exception table environment table env hive test util create table env with blink planner batch mode sql dialect hive test partition filter catalog catalog new test partition filter catalog hive catalog get name hive catalog get default database hive catalog get hive conf hive catalog get hive version table env register catalog catalog get name catalog table env use catalog catalog get name table env execute sql create database db1 try table env execute sql create table db1 part x int partition by p1 int p2 string hive test util create text table inserter hive shell db1 part add row new object commit p1 p2 a hive test util create text table inserter hive shell db1 part add row new object commit p1 p2 b hive test util create text table inserter hive shell db1 part add row new object commit p1 p2 c test string partition column with special character hive test util create text table inserter hive shell db1 part add row new object commit p1 p2 c table query table env sql query select x from db1 part where p1 or p2 a order by x string explain query explain split n assert false catalog fallback string optimize plan explain assert true optimize plan optimize plan contain partition prune true partition num list row result list new array list query execute collect assert equal result to string query table env sql query select x from db1 part where p1 and p2 a order by x explain query explain split n assert false catalog fallback optimize plan explain assert true optimize plan optimize plan contain partition prune true partition num result list new array list query execute collect assert equal result to string query table env sql query select x from db1 part where p1 in 1,3 order by x explain query explain split n assert false catalog fallback optimize plan explain assert true optimize plan optimize plan contain partition prune true partition num result list new array list query execute collect assert equal result to string query table env sql query select x from db1 part where p1 and p2 a or p1 and p2 b or p2 d order by x explain query explain split n assert false catalog fallback optimize plan explain assert true optimize plan optimize plan contain partition prune true partition num result list new array list query execute collect assert equal result to string query table env sql query select x from db1 part where p2 c order by x explain query explain split n assert false catalog fallback optimize plan explain assert true optimize plan optimize plan contain partition prune true partition num result list new array list query execute collect assert equal result to string query table env sql query select x from db1 part where p2 explain query explain split n assert false catalog fallback optimize plan explain assert true optimize plan optimize plan contain partition prune true partition num result list new array list query execute collect assert equal result to string finally table env execute sql drop database db1 cascade test public void test partition filter date timestamp throw exception table environment table env hive test util create table env with blink planner batch mode sql dialect hive test partition filter catalog catalog new test partition filter catalog hive catalog get name hive catalog get default database hive catalog get hive conf hive catalog get hive version table env register catalog catalog get name catalog table env use catalog catalog get name table env execute sql create database db1 try table env execute sql create table db1 part x int partition by p1 date p2 timestamp hive test util create text table inserter hive shell db1 part add row new object commit p1 2018 - 08 p2 2018 - 08 08 08 08:08 hive test util create text table inserter hive shell db1 part add row new object commit p1 2018 - 08 p2 2018 - 08 08 08 08:09 hive test util create text table inserter hive shell db1 part add row new object commit p1 2018 - 08 p2 2018 - 08 08 08 08:10 table query table env sql query select x from db1 part where p1 cast 2018 - 08 as date and p2 cast 2018 - 08 08 08 08:09 as timestamp string explain query explain split n assert true catalog fallback string optimize plan explain assert true optimize plan optimize plan contain partition prune true partition num list row result list new array list query execute collect assert equal result to string filter by timestamp partition query table env sql query select x from db1 part where timestamp 2018 - 08 08 08 08:09 p2 result list new array list query execute collect assert equal result to string finally table env execute sql drop database db1 cascade test public void test projection push down throw exception table environment table env create table env table env execute sql create table src x int y string partition by p1 bigint p2 string try hive test util create text table inserter hive shell default src add row new object a add row new object b commit p1 p2 hive test util create text table inserter hive shell default src add row new object c commit p1 p2 table table table env sql query select p1 count y from hive default src group by p1 string explain table explain split n assert equal explain length string logical plan explain string physical plan explain string expect explain hive table source x y p1 p2 table path default src partition prune false partition num null project field assert true logical plan logical plan contain expect explain assert true physical plan physical plan contain expect explain list row row list new array list table execute collect assert equal row size object row string row stream map row to string sort to array assert array equal new string 2013,2 2014,1 row string finally table env execute sql drop table src test public void test limit push down throw exception table environment table env create table env table env execute sql create table src a string try hive test util create text table inserter hive shell default src add row new object a add row new object b add row new object c add row new object d commit add this to obtain correct stats of table to avoid flink problem hive shell execute analyze table src compute statistics table table table env sql query select from hive default src limit string explain table explain split n assert equal explain length string logical plan explain string physical plan explain string expect explain hive table source a table path default src partition prune false partition nums null limit push down true limit assert true logical plan contain expect explain assert true physical plan contain expect explain list row row list new array list table execute collect assert equal row size object row string row stream map row to string sort to array assert array equal new string a row string finally table env execute sql drop table src test public void test parallelism set final string db name source db final string tbl name test parallelism table environment t env create table env t env execute sql create table source db test parallelism year string value int partition by pt int hive test util create text table inserter hive shell db name tbl name add row new object add row new object commit pt hive test util create text table inserter hive shell db name tbl name add row new object add row new object commit pt table table t env sql query select from hive source db test parallelism planner base planner planner base table environment impl t env get planner rel node rel node planner optimize table test util to rel node table exec node exec node planner translate to exec node plan to scala collection singleton list rel node get suppress warning unchecked transformation transformation exec node translate to plan planner assert assert equal transformation get parallelism test public void test parallelism on limit push down final string db name source db final string tbl name test parallelism limit pushdown table environment t env create table env t env get config get configuration set boolean hive option table exec hive infer source parallelism false t env get config get configuration set integer execution config option table exec resource default parallelism t env execute sql create table source db test parallelism limit pushdown year string value int partition by pt int hive test util create text table inserter hive shell db name tbl name add row new object add row new object commit pt hive test util create text table inserter hive shell db name tbl name add row new object add row new object commit pt table table t env sql query select from hive source db test parallelism limit pushdown limit planner base planner planner base table environment impl t env get planner rel node rel node planner optimize table test util to rel node table exec node exec node planner translate to exec node plan to scala collection singleton list rel node get suppress warning unchecked transformation transformation exec node translate to plan planner assert assert equal partition transformation one input transformation transformation get input get input get parallelism test public void test source config throw exception vector reader not available for x and we be not test orc for 2.0 x assume assume true hive version test util hive or later map string string env system getenv hive shell execute create database db1 try hive shell execute create table db1 src x int y string store as orc hive shell execute insert into db1 src value a b test source config true true test source config false false finally test base util set env env hive shell execute drop database db1 cascade test timeout public void test stream partition read throw exception final string catalog name hive final string db name source db final string tbl name stream test stream execution environment env stream execution environment get execution environment env enable checkpoint stream table environment t env hive test util create table env with blink planner stream mode env sql dialect hive t env register catalog catalog name hive catalog t env use catalog catalog name t env execute sql create table source db stream test a int b string partition by t string tblproperty stream source enable true streaming source monitor interval 1 stream source consume order partition time hive test util create text table inserter hive shell db name tbl name add row new object commit t 2020 - 05 06 00 00:00 table src t env from hive source db stream test testing append row datum sink sink new testing append row datum sink new row datum type info datum type int get logical type datum type string get logical type datum type string get logical type datum stream row datum out t env to append stream src row datum class out print add print to see streaming read out add sink sink job client job env execute async job runnable runnable for int i i i try thread sleep catch interrupt exception e throw new runtime exception e hive test util create text table inserter hive shell db name tbl name add row new object i string value of i add row new object i i copy commit t 2020 - 05 06 00 i 0:00 thread thread new thread runnable thread set daemon true thread start thread join thread sleep list string expect array as list i 0,0 2020 - 05 06 00 00:00 i 1,1 2020 - 05 06 00 10:00 i 1,1 copy 2020 - 05 06 00 10:00 i 2,2 2020 - 05 06 00 20:00 i 2,2 copy 2020 - 05 06 00 20:00 i 3,3 2020 - 05 06 00 30:00 i 3,3 copy 2020 - 05 06 00 30:00 i 4,4 2020 - 05 06 00 40:00 i 4,4 copy 2020 - 05 06 00 40:00 i 5,5 2020 - 05 06 00 50:00 i 5,5 copy 2020 - 05 06 00 50:00 list string result sink get java append result result sort string compare to assert equal expect result job cancel stream test sink clear test timeout public void test non partition streaming source with mapred reader throw exception test non partition streaming source true test mapred reader test timeout public void test non partition streaming source with vectorize reader throw exception test non partition streaming source false test vectorize reader private void test non partition streaming source boolean use mapred reader string tbl name throw exception final string catalog name hive stream execution environment env stream execution environment get execution environment stream table environment t env hive test util create table env with blink planner stream mode env sql dialect hive t env get config get configuration set boolean hive option table exec hive fallback mapred reader use mapred reader t env register catalog catalog name hive catalog t env use catalog catalog name t env execute sql create table source db tbl name a int b char store as parquet tblproperty stream source enable true streaming source monitor interval ms table src t env sql query select from hive source db tbl name testing append sink sink new testing append sink t env to append stream src row class add sink sink datum stream row datum out t env to append stream src row datum class out print add print to see streaming read final job client job client env execute async runnable runnable for int i i i hive shell execute insert into table source db tbl name value a b try thread sleep catch interrupt exception e e print stack trace break thread thread new thread runnable thread set daemon true thread start wait for write test datum to finish thread join wait up to seconds for all datum to be process for int i i i if sink get append result size break else thread sleep check the result list string actual new array list java scala conversion util to java sink get append result actual sort string compare to list string expect array as list a a a b b b expect sort string compare to assert equal expect actual cancel the job job client cancel private void test source config boolean fallback m be boolean infer parallelism throw exception hive table factory table factory spy spy hive table factory hive catalog get table factory get do answer invocation table source factory context context invocation get argument return new test config source new job conf hive catalog get hive conf context get configuration context get object identifier to object path context get table fallback m r infer parallelism when table factory spy create table source any table source factory context class hive catalog catalog spy spy hive catalog do return optional of table factory spy when catalog spy get table factory table environment table env hive test util create table env with blink planner batch mode table env get config get configuration set boolean hive option table exec hive fallback mapred reader fallback m r table env get config get configuration set boolean hive option table exec hive infer source parallelism infer parallelism table env get config get configuration set integer execution config option table exec resource default parallelism table env register catalog catalog spy get name catalog spy table env use catalog catalog spy get name list row result list new array list table env sql query select from db1 src order by x execute collect assert equal a b result to string test public void test parquet case insensitive throw exception test case insensitive parquet private void test case insensitive string format throw exception table environment t env create table env with hive catalog hive catalog string folder u be i temporary folder new folder to u be i to string flink to write sensitive field to parquet file t env execute sql string format create table parquet t i int j int with connector filesystem format s path s format folder u r i wait for job finish t env execute sql insert into parquet t select t env execute sql drop table parquet t hive to read parquet file t env get config set sql dialect sql dialect hive t env execute sql string format create external table parquet t i int j int store as s location s format folder u r i assert assert equal row of t env execute sql select from parquet t collect next private static table environment create table env table environment table env hive test util create table env with blink planner batch mode sql dialect hive table env register catalog hive hive catalog table env use catalog hive return table env a sub class of hive table source to test vector reader switch private static class test config source extend hive table source private final boolean fallback m be private final boolean infer parallelism test config source job conf job conf readable config flink conf object path table path catalog table catalog table boolean fallback m be boolean infer parallelism super job conf flink conf table path catalog table this fallback m r fallback m r this infer parallelism infer parallelism override public datum stream row datum get datum stream stream execution environment exec env datum stream source row datum datum stream datum stream source row datum super get datum stream exec env int parallelism datum stream get transformation get parallelism assert equal infer parallelism parallelism return datum stream override hive table input format get input format list hive table partition all hive partition boolean use map red reader assert equal use map red reader fallback m r return super get input format all hive partition use map red reader a sub class of hive catalog to test list partition by filter private static class test partition filter catalog extend hive catalog private boolean fallback false test partition filter catalog string catalog name string default database nullable hive conf hive conf string hive version super catalog name default database hive conf hive version true override public list catalog partition spec list partition object path table path throw table not exist exception table not partition exception catalog exception fallback true return super list partition table path 
table env hive connector i t case run with flink standalone hive runner class public class table env hive connector i t case hive s q l file private static hive shell hive shell private static hive catalog hive catalog private static hive metastore client wrapper hm client before class public static void setup hive conf hive conf hive shell get hive conf hive catalog hive test util create hive catalog hive conf hive catalog open hm client hive metastore client factory create hive conf hive shim loader get hive version test public void test default partition name throw exception table environment table env get table env with hive catalog table env execute sql create database db1 table env execute sql create table db1 src x int y int table env execute sql create table db1 part x int partition by y int hive test util create text table inserter hive shell db1 src add row new object add row new object null commit test generate partition with default name table env util exec insert sql and wait result table env insert into db1 part select from db1 src hive conf hive conf hive shell get hive conf string default part name hive conf get var hive conf conf var defaultpartitionname table hive table hm client get table db1 part path default part path new path hive table get sd get location y default part name file system f default part path get file system hive conf assert true f exist default part path table impl flink table table impl table env sql query select y x from db1 part order by x list row row list new array list flink table execute collect assert equal array to string new string 1,1 null row to string table env execute sql drop database db1 cascade test public void test get non exist function throw exception table environment table env get table env with hive catalog table env execute sql create database db1 table env execute sql create table db1 src d double s string table env execute sql create table db1 dest x bigint just make sure the query run through no need to verify result table env util exec insert sql and wait result table env insert into db1 dest select count d from db1 src table env execute sql drop database db1 cascade test public void test different format throw exception string format new string orc parquet sequencefile csv avro for string format format if format equal orc hive shim loader get hive version start with 2.0 ignore orc test for hive version 2.0 x for now due to flink continue else if format equal avro hive version test util hive or later timestamp be not support for avro table before 1.1 continue read write format format private void read write format string format throw exception table environment table env get table env with hive catalog table env execute sql create database db1 create source and dest table string suffix if format equal csv suffix row format serde org apache hadoop hive serde2 open c s v serde else suffix store as format string table schema use 2018 - 08 20 00 00:00 to avoid multi version print difference list object row1 new array list array as list a 2018 - 08 20 00 00:00 list object row2 new array list array as list b 2019 - 08 26 00 00:00 some datum type be not support for parquet table in early version http issue apache org jira browse hive if hive version test util hive or later format equal parquet table schema i int s string t timestamp dt date row1 add 2018 - 08 row2 add 2019 - 08 else table schema i int s string t timestamp table env execute sql string format create table db1 src s partition by p1 string p2 timestamp s table schema suffix table env execute sql string format create table db1 dest s partition by p1 string p2 timestamp s table schema suffix prepare source datum with hive table keyword in insert into be mandatory prior to 1.1 hive shell execute string format insert into table db1 src partition p1 first p2 2018 - 08 20 00 00:00 value s to row value row1 hive shell execute string format insert into table db1 src partition p1 second p2 2018 - 08 26 00 00:00 value s to row value row2 list string expect array as list string join t array util concat row1 stream map object to string to array string new new string first 2018 - 08 20 00 00:00 string join t array util concat row2 stream map object to string to array string new new string second 2018 - 08 26 00 00:00 verify flink query result table env sql query select from db1 src expect populate dest table with source table table env util exec insert sql and wait result table env insert into db1 dest select from db1 src verify datum on hive side verify hive query result select from db1 dest expect table env execute sql drop database db1 cascade private string to row value list object row return row stream map o string re o to string if o instanceof string re res return re collect collector join test public void test decimal throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src1 x decimal 10,2 table env execute sql create table db1 src2 x decimal 10,2 table env execute sql create table db1 dest x decimal 10,2 populate src1 from hive table keyword in insert into be mandatory prior to 1.1 hive shell execute insert into table db1 src1 value 1.0 2.12 5.123 5.456 123456789.12 populate src2 with same datum from flink table env util exec insert sql and wait result table env insert into db1 src2 value cast 1.0 as decimal 10,2 cast 2.12 as decimal 10,2 cast 5.123 as decimal 10,2 cast 5.456 as decimal 10,2 cast 123456789.12 as decimal 10,2 verify src1 and src2 contain same datum verify hive query result select from db1 src2 hive shell execute query select from db1 src1 populate dest with src1 from flink to test read decimal type from hive table env util exec insert sql and wait result table env insert into db1 dest select from db1 src1 verify hive query result select from db1 dest hive shell execute query select from db1 src1 finally table env execute sql drop database db1 cascade test public void test insert overwrite throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try non partition table env execute sql create table db1 dest x int y string hive test util create text table inserter hive shell db1 dest add row new object a add row new object b commit verify hive query result select from db1 dest array as list ta tb table env util exec insert sql and wait result table env insert overwrite db1 dest value c verify hive query result select from db1 dest collection singleton list tc static partition table env execute sql create table db1 part x int partition by y int hive test util create text table inserter hive shell db1 part add row new object commit y hive test util create text table inserter hive shell db1 part add row new object commit y table env get table env with hive catalog table env util exec insert sql and wait result table env insert overwrite db1 part partition y select verify hive query result select from db1 part array as list t1 t2 dynamic partition table env get table env with hive catalog table env util exec insert sql and wait result table env insert overwrite db1 part value 200,2 3,3 only overwrite dynamically match partition other exist partition remain intact verify hive query result select from db1 part array as list t1 t2 t3 finally table env execute sql drop database db1 cascade test public void test static partition throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src x int hive test util create text table inserter hive shell db1 src add row new object add row new object commit table env execute sql create table db1 dest x int partition by p1 string p2 double table env util exec insert sql and wait result table env insert into db1 dest partition p1 p2 1.1 select x from db1 src assert equal hive catalog list partition new object path db1 dest size verify hive query result select from db1 dest array as list t1 t1 t1 t1 finally table env execute sql drop database db1 cascade test public void test dynamic partition throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src x int y string z double hive test util create text table inserter hive shell db1 src add row new object a 1.1 add row new object a 2.2 add row new object b 3.3 commit table env execute sql create table db1 dest x int partition by p1 string p2 double table env util exec insert sql and wait result table env insert into db1 dest select from db1 src assert equal hive catalog list partition new object path db1 dest size verify hive query result select from db1 dest array as list ta t1 ta t2 tb t3 finally table env execute sql drop database db1 cascade test public void test partial dynamic partition throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src x int y string hive test util create text table inserter hive shell db1 src add row new object a add row new object b commit table env execute sql create table db1 dest x int partition by p1 double p2 string table env util exec insert sql and wait result table env insert into db1 dest partition p1 1.1 select x y from db1 src assert equal hive catalog list partition new object path db1 dest size verify hive query result select from db1 dest array as list t1 ta t1 tb finally table env execute sql drop database db1 cascade test public void test date timestamp partition column throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 part x int partition by dt date t timestamp hive test util create text table inserter hive shell db1 part add row new object add row new object commit dt 2019 - 12 t 2019 - 12 23 00 00:00 hive test util create text table inserter hive shell db1 part add row new object commit dt 2019 - 12 t 2019 - 12 25 16 23:43 list row result list new array list table env sql query select from db1 part order by x execute collect assert equal 1,2019 12 - 23 2019 - 12 23 t00 2,2019 12 - 23 2019 - 12 23 t00 3,2019 12 - 25 2019 - 12 25 t16 23:43 result to string result list new array list table env sql query select x from db1 part where dt cast 2019 - 12 as date execute collect assert equal result to string table env util exec insert sql and wait result table env insert into db1 part select cast 2019 - 12 as date cast 2019 - 12 31 12 00:00 as timestamp result list new array list table env sql query select max dt from db1 part execute collect assert equal 2019 - 12 result to string finally table env execute sql drop database db1 cascade test public void test u d t f throw exception w o https issue apache org jira browse hive hive register the app classloader as the classloader for the udtf and close the app classloader when we tear down the session this cause problem for j unit code and shutdown hook that have to run after the test finish because app classloader can no longer load new class and will crash the fork jvm thus fail the test phase therefore disable such test for older hive version string hive version hive shim loader get hive version assume assume true hive version compare to 2.0 hive version compare to 1.3 table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 simple i int a array int table env execute sql create table db1 nest a array map int string table env execute sql create function hiveudtf as org apache hadoop hive ql udf generic generic u d t f explode hive shell insert into db1 simple add row array as list commit map integer string map1 new hash map map1 put a map1 put b map integer string map2 new hash map map2 put c hive shell insert into db1 nest add row array as list map1 map2 commit list row result list new array list table env sql query select x from db1 simple lateral table hiveudtf a as t x execute collect assert equal result to string result list new array list table env sql query select x from db1 nest lateral table hiveudtf a as t x execute collect assert equal a b c result to string table env execute sql create table db1 t a array timestamp hive test util create text table inserter hive shell db1 t add row new object new object timestamp value of 2015 - 04 28 15 23:00 timestamp value of 2016 - 06 03 17 05:52 commit result list new array list table env sql query select x from db1 t lateral table hiveudtf a as t x execute collect assert equal 2015 - 04 28 t15 2016 - 06 03 t17 05:52 result to string finally table env execute sql drop database db1 cascade table env execute sql drop function hiveudtf test public void test not null constraint throw exception assume assume true hive version test util hive or later table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 tbl x int y bigint not null enable rely z string not null enable norely catalog base table catalog table hive catalog get table new object path db1 tbl table schema table schema catalog table get schema assert true by default column should be nullable table schema get field datum type get logical type be nullable assert false not null column should be reflect in table schema table schema get field datum type get logical type be nullable assert true not null norely column should be consider nullable table schema get field datum type get logical type be nullable finally table env execute sql drop database db1 cascade test public void test p k constraint throw exception while pk constraint be support since hive 2.1 the constraint can not be rely in x version so let s only test for x assume assume true hive version test util hive or later table environment table env get table env with hive catalog table env execute sql create database db1 try test rely pk constraint table env execute sql create table db1 tbl1 x tinyint y smallint z int primary key x z disable novalidate rely catalog base table catalog table hive catalog get table new object path db1 tbl1 table schema table schema catalog table get schema assert true table schema get primary key be present unique constraint pk table schema get primary key get assert equal pk get column size assert true pk get column contain all array as list x z test norely pk constraint table env execute sql create table db1 tbl2 x tinyint y smallint primary key x disable norely catalog table hive catalog get table new object path db1 tbl2 table schema catalog table get schema assert false table schema get primary key be present test table w o pk table env execute sql create table db1 tbl3 x tinyint catalog table hive catalog get table new object path db1 tbl3 table schema catalog table get schema assert false table schema get primary key be present finally table env execute sql drop database db1 cascade test public void test timestamp throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src t timestamp table env execute sql create table db1 dest t timestamp hive test util create text table inserter hive shell db1 src add row new object timestamp value of 2019 - 11 11 00 00:00 add row new object timestamp value of 2019 - 12 03 15 43:32 commit test read timestamp from hive list row result list new array list table env sql query select from db1 src execute collect assert equal result size assert equal local date time of result get get field assert equal local date time of result get get field test write timestamp to hive table env util exec insert sql and wait result table env insert into db1 dest select max t from db1 src verify hive query result select from db1 dest collection singleton list 2019 - 12 03 15 43:32 finally table env execute sql drop database db1 cascade test public void test date throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src dt date table env execute sql create table db1 dest dt date hive test util create text table inserter hive shell db1 src add row new object date value of 2019 - 12 add row new object date value of 2019 - 12 commit test read date from hive list row result list new array list table env sql query select from db1 src execute collect assert equal result size assert equal local date of result get get field assert equal local date of result get get field test write date to hive table env util exec insert sql and wait result table env insert into db1 dest select max dt from db1 src verify hive query result select from db1 dest collection singleton list 2019 - 12 finally table env execute sql drop database db1 cascade test public void test view throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src key int val string hive test util create text table inserter hive shell db1 src add row new object a add row new object aa add row new object aaa add row new object b add row new object c add row new object ccc commit table env execute sql create table db1 key key int name string hive test util create text table inserter hive shell db1 key add row new object key1 add row new object key2 add row new object key3 add row new object key4 commit hive shell execute create view db1 v1 as select key as k val as v from db1 src limit hive shell execute create view db1 v2 as select key count from db1 src group by key have count order by key hive shell execute create view db1 v3 as select k key k name count from db1 src s join db1 key k on s key k key group by k key k name order by k key list row result list new array list table env sql query select count v from db1 v1 execute collect assert equal result to string result list new array list table env sql query select from db1 v2 execute collect assert equal 1,3 3,2 result to string result list new array list table env sql query select from db1 v3 execute collect assert equal key1 key2 key3 result to string finally table env execute sql drop database db1 cascade test public void test whitespace part value throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 dest x int partition by p string statement set stmt set table env create statement set stmt set add insert sql insert into db1 dest select stmt set add insert sql insert into db1 dest select a t table result table result stmt set execute wait job finish table result get job client get get job execution result thread current thread get context class loader get assert equal p p a hive shell execute query show partition db1 dest to string finally table env execute sql drop database db1 cascade private void test compress text table boolean batch throw exception table environment table env batch get table env with hive catalog get stream table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src x string y string hive shell execute create table db1 dest like db1 src hive test util create text table inserter hive shell db1 src add row new object a b add row new object c d commit hive catalog get hive conf set bool var hive conf conf var compressresult true table env util exec insert sql and wait result table env insert into db1 dest select from db1 src list string expect array as list a tb c td verify hive query result select from db1 dest expect verify flink query result table env sql query select from db1 dest expect finally table env execute sql drop database db1 cascade test public void test batch compress text table throw exception test compress text table true test public void test stream compress text table throw exception test compress text table false test public void test regex ser de throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src x int y string row format serde org apache hadoop hive serde2 regex ser de with serdeproperty input regex d u0001 s hive test util create text table inserter hive shell db1 src add row new object a add row new object ab commit assert equal a ab list new array list table env sql query select from db1 src order by x execute collect to string finally table env execute sql drop database db1 cascade test public void test update partition s d throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 dest x int partition by p string store as rcfile table env util exec insert sql and wait result table env insert overwrite db1 dest partition p select table env execute sql alter table db1 dest set fileformat sequencefile table env util exec insert sql and wait result table env insert overwrite db1 dest partition p select assert equal 1,1 list new array list table env sql query select from db1 dest execute collect to string finally table env execute sql drop database db1 cascade test public void test parquet name mapping throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 t1 x int y int store as parquet table env util exec insert sql and wait result table env insert into table db1 t1 value 1,10 2,20 table hive table hive catalog get hive table new object path db1 t1 string location hive table get sd get location table env execute sql string format create table db1 t2 y int x int store as parquet location s location table env get config get configuration set boolean hive option table exec hive fallback mapred reader true assert equal list new array list table env sql query select x from db1 t1 execute collect to string assert equal list new array list table env sql query select x from db1 t2 execute collect to string finally table env execute sql drop database db1 cascade test public void test orc schema evol throw exception not support until 2.1 http issue apache org jira browse hive http issue apache org jira browse hive assume assume true hive version test util hive or later table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 src x smallint y int store as orc hive shell execute insert into table db1 src value 1,100 2,200 table env get config get configuration set boolean hive option table exec hive fallback mapred reader true table env execute sql alter table db1 src change x x int assert equal 1,100 2,200 list new array list table env sql query select from db1 src execute collect to string table env execute sql alter table db1 src change y y string assert equal 1,100 2,200 list new array list table env sql query select from db1 src execute collect to string finally table env execute sql drop database db1 cascade test public void test non exist partition folder throw exception table environment table env get table env with hive catalog table env execute sql create database db1 try table env execute sql create table db1 part x int partition by p int hive test util create text table inserter hive shell db1 part add row new object commit p hive test util create text table inserter hive shell db1 part add row new object commit p table env execute sql alter table db1 part add partition p remove one partition path to remove new path hive catalog get hive table new object path db1 part get sd get location p file system f to remove get file system hive shell get hive conf f delete to remove true list row result list new array list table env sql query select from db1 part execute collect assert equal 1,1 result to string finally table env execute sql drop database db1 cascade test public void test insert partition with star source throw exception table environment table env get table env with hive catalog table env execute sql create table src x int y string hive test util create text table inserter hive shell default src add row new object a commit table env execute sql create table dest x int partition by p1 int p2 string table env util exec insert sql and wait result table env insert into dest partition p1 select from src list row result list new array list table env sql query select from dest execute collect assert equal 1,1 a result to string table env execute sql drop table if exist src table env execute sql drop table if exist dest test public void test insert partition with value source table environment table env get table env with hive catalog table env execute sql create table dest x int partition by p1 int p2 string table env util exec insert sql and wait result table env insert into dest partition p1 value a list row result list new array list table env sql query select from dest execute collect assert equal 1,1 a result to string table env execute sql drop table if exist dest private table environment get table env with hive catalog table environment table env hive test util create table env with blink planner batch mode sql dialect hive table env register catalog hive catalog get name hive catalog table env use catalog hive catalog get name return table env private table environment get stream table env with hive catalog stream execution environment env stream execution environment get execution environment table environment table env hive test util create table env with blink planner stream mode env sql dialect hive table env register catalog hive catalog get name hive catalog table env use catalog hive catalog get name return table env private void verify hive query result string query list string expect list string result hive shell execute query query assert equal expect size result size assert equal new hash set expect new hash set result private void verify flink query result org apache flink table api table table list string expect throw exception list row row list new array list table execute collect list string result row stream map row int stream range row get arity map to obj row get field map o o instanceof local date time timestamp value of local date time o o map object to string collect collector join t collect collector to list assert equal expect size result size assert equal new hash set expect new hash set result 
hive catalog i t case run with flink standalone hive runner class public class hive catalog i t case hive s q l file private static hive shell hive shell rule public temporary folder temp folder new temporary folder private static hive catalog hive catalog private static hive conf hive conf private string source table name csv source private string sink table name csv sink before class public static void create catalog hive conf hive shell get hive conf hive catalog hive test util create hive catalog hive conf hive catalog open after class public static void close catalog if hive catalog null hive catalog close test public void test csv table via s q l throw exception environment setting setting environment setting new instance use blink planner in batch mode build table environment table env table environment create setting table env register catalog myhive hive catalog table env use catalog myhive string path this get class get resource csv test csv get path table env execute sql create table test2 name string age int with n connector type filesystem n connector path file path n format type csv n table t table env sql query select from myhive default test2 list row result list new array list t execute collect assert query result assert equal new hash set array as list row of row of row of new hash set result table env execute sql alter table test2 rename to newtable t table env sql query select from myhive default newtable result list new array list t execute collect assert query result assert equal new hash set array as list row of row of row of new hash set result table env execute sql drop table newtable test public void test csv table via a p i throw exception environment setting setting environment setting new instance use blink planner in batch mode build table environment table env table environment create setting table env get config add configuration new configuration set core option default parallelism table env register catalog myhive hive catalog table env use catalog myhive table schema schema table schema builder field name datum type string field age datum type int build format descriptor format new old csv field name type string field age type int catalog table source new catalog table builder new file system path this get class get resource csv test csv get path schema with format format in append mode with comment comment build path p path get temp folder new folder get absolute path test csv catalog table sink new catalog table builder new file system path p to absolute path to string schema with format format in append mode with comment comment build hive catalog create table new object path hive catalog default db source table name source false hive catalog create table new object path hive catalog default db sink table name sink false table t table env sql query string format select from myhive default s source table name list row result list new array list t execute collect result sort comparator compare string value of assert query result assert equal array as list row of row of row of result table env util exec insert sql and wait result table env string format insert into myhive default s select from myhive default s sink table name source table name assert write result file result file new file p to absolute path to string buffer reader reader new buffer reader new file reader result file string read line for int i i i read line reader read line assert equal string format d d i i read line no more line assert null reader read line table env execute sql string format drop table s source table name table env execute sql string format drop table s sink table name test public void test read write csv throw exception similar to catalog table i t case test read write csv use d d l but use hive catalog environment setting setting environment setting new instance use blink planner in streaming mode build table environment table env table environment create setting table env get config get configuration set integer table exec resource default parallelism table env register catalog myhive hive catalog table env use catalog myhive string src path this get class get resource csv test3 csv get path table env execute sql create table src price decimal currency string ts6 timestamp t as cast ts6 as timestamp watermark for t as t string format with connector type filesystem connector path file s format type csv src path string sink path new file temp folder new folder csv order sink to u be i to string table env execute sql create table sink window end timestamp max t timestamp counter bigint total price decimal string format with connector type filesystem connector path s format type csv sink path table env util exec insert sql and wait result table env insert into sink select tumble end t interval second max ts6 count max price from src group by tumble t interval second string expect 2019 - 12 12 00 00:05 0,2019 12 - 12 00:00 04.004001 3,50 n 2019 - 12 12 00 00:10 0,2019 12 - 12 00:00 06.006001 2,5 n assert equal expect file util read file utf8 new file new urus sink path test public void test batch read write csv with proctime test read write csv with proctime false test public void test stream read write csv with proctime test read write csv with proctime true private void test read write csv with proctime boolean be stream table environment table env prepare table be stream array list row row list new array list table env execute sql select from proctime src collect assert assert equal row size table env execute sql drop table proctime src test public void test table api with proctime for batch test table api with proctime false test public void test table api with proctime for streaming test table api with proctime true private void test table api with proctime boolean be stream table environment table env prepare table be stream array list row row list new array list table env from proctime src select price t l proctime execute collect assert assert equal row size table env execute sql drop table proctime src private table environment prepare table boolean be stream environment setting builder builder environment setting new instance use blink planner if be stream builder builder in stream mode else builder builder in batch mode environment setting setting builder build table environment table env table environment create setting table env get config get configuration set integer table exec resource default parallelism table env register catalog myhive hive catalog table env use catalog myhive string src path this get class get resource csv test3 csv get path table env execute sql create table proctime src price decimal currency string ts6 timestamp t as cast ts6 as timestamp watermark for t as t l proctime as proctime test in proctime string format with connector type filesystem connector path file s format type csv src path return table env test public void test table with primary key environment setting builder builder environment setting new instance use blink planner environment setting setting builder build table environment table env table environment create setting table env get config get configuration set integer table exec resource default parallelism table env register catalog catalog1 hive catalog table env use catalog catalog1 final string create table create table pk src n uuid varchar not null n price decimal n currency string n ts6 timestamp n t as cast ts6 as timestamp n watermark for t as t n constraint ct1 primary key uuid not enforce n with n connector type filesystem connector path file fake path format type csv table env execute sql create table table schema table schema table env get catalog table env get current catalog map catalog try final object path table path object path from string catalog get default database pk src return catalog get table table path get schema catch table not exist exception e return null or else null assert not null table schema assert equal table schema get primary key optional of unique constraint primary key ct1 collection singleton list uuid table env execute sql drop table pk src test public void test new table factory table environment t env table environment create environment setting new instance in batch mode build t env register catalog myhive hive catalog t env use catalog myhive t env get config get configuration set table exec resource default parallelism string path this get class get resource csv test csv get path print stream original system out system out try byte array output stream array output stream new byte array output stream system set out new print stream array output stream t env execute sql create table csv table name string age int with connector type filesystem connector path file path format type csv t env execute sql create table print table name string age int with connector print table env util exec insert sql and wait result t env insert into print table select from csv table assert query result assert equal i 1,1 n i 2,2 n i 3,3 n array output stream to string finally if system out original system out system out close system set out original system out t env execute sql drop table csv table t env execute sql drop table print table 
hive catalog use blink i t case run with flink standalone hive runner class public class hive catalog use blink i t case extend abstract test base hive s q l file private static hive shell hive shell rule public temporary folder temp folder new temporary folder private static hive catalog hive catalog private string source table name csv source private string sink table name csv sink before class public static void create catalog hive conf hive conf hive shell get hive conf hive catalog hive test util create hive catalog hive conf hive catalog open after class public static void close catalog if hive catalog null hive catalog close test public void test blink udf throw exception table schema schema table schema builder field name datum type string field age datum type int build format descriptor format new old csv field name type string field age type int catalog table source new catalog table builder new file system path this get class get resource csv test csv get path schema with format format in append mode with comment comment build hive catalog create table new object path hive catalog default db source table name source false hive catalog create function new object path hive catalog default db myudf new catalog function impl test hive simple u d f class get canonical name false hive catalog create function new object path hive catalog default db mygenericudf new catalog function impl test hive generic u d f class get canonical name false hive catalog create function new object path hive catalog default db myudtf new catalog function impl test hive u d t f class get canonical name false hive catalog create function new object path hive catalog default db myudaf new catalog function impl generic u d a f sum class get canonical name false test udf true test udf false private void test udf boolean batch throw exception stream execution environment env null table environment t env environment setting builder env builder environment setting new instance use blink planner if batch env builder in batch mode else env builder in streaming mode if batch t env table environment create env builder build else env stream execution environment get execution environment t env stream table environment create env env builder build batch test base config for mini cluster t env get config t env register catalog myhive hive catalog t env use catalog myhive string inner sql format select mygenericudf myudf name as a mygenericudf myudf age as b s from s lateral table myudtf name as t s source table name string select sql format select a s sum b myudaf b from s group by a s inner sql list string result if batch path p path get temp folder new folder get absolute path test csv table schema sink schema table schema builder field name1 type string field name2 type string field sum1 type int field sum2 type long build format descriptor sink format new old csv field name1 type string field name2 type string field sum1 type int field sum2 type long catalog table sink new catalog table builder new file system path p to absolute path to string sink schema with format sink format in append mode with comment comment build hive catalog create table new object path hive catalog default db sink table name sink false table env util exec insert sql and wait result t env format insert into s select sql sink table name assert write result string builder builder new string builder try stream path path file walk path get p to absolute path to string path filter file be regular file for each path try string content file util read file utf8 path to file if content be empty return builder append content catch i o exception e throw new runtime exception e result array stream builder to string split n filter s s be empty collect collector to list else stream table environment stream t env stream table environment t env testing retract sink sink new testing retract sink stream t env to retract stream t env sql query select sql row class map new java to scala add sink sink function sink env execute result java scala conversion util to java sink get retract result result new array list result result sort string compare to assert assert equal array as list 1,1 2,2 2,2 4,4 3,3 6,6 result test public void test timestamp u d f throw exception table environment table env hive test util create table env with blink planner batch mode sql dialect hive table env register catalog hive catalog get name hive catalog table env use catalog hive catalog get name table env execute sql string format create function myyear as s u d f year class get name table env execute sql create table src t timestamp try hive test util create text table inserter hive shell default src add row new object timestamp value of 2013 - 07 15 10 00:00 add row new object timestamp value of 2019 - 05 23 17 32:55 commit list row result list new array list table env sql query select myyear t as y from src execute collect assert assert equal result size assert assert equal result to string finally table env execute sql drop table src test public void test date u d f throw exception table environment table env hive test util create table env with blink planner batch mode sql dialect hive table env register catalog hive catalog get name hive catalog table env use catalog hive catalog get name table env execute sql string format create function mymonth as s u d f month class get name table env execute sql create table src dt date try hive test util create text table inserter hive shell default src add row new object date value of 2019 - 01 add row new object date value of 2019 - 03 commit list row result list new array list table env sql query select mymonth dt as m from src order by m execute collect assert assert equal result size assert assert equal result to string finally table env execute sql drop table src private static class java to scala implement map function tuple2 boolean row scala tuple2 boolean row override public scala tuple2 boolean row map tuple2 boolean row value throw exception return new scala tuple2 value f0 value f1 
jdbc datum type test run with parameterized class public class jdbc datum type test private static final string ddl format create table t n f0 s n with n connector type jdbc n connector url jdbc s memory test n connector table my table n parameterize parameter name index public static list test item test datum return array as list create test item derby char create test item derby varchar create test item derby boolean create test item derby tinyint create test item derby smallint create test item derby integer create test item derby bigint create test item derby float create test item derby double create test item derby decimal create test item derby date create test item derby time create test item derby timestamp create test item derby timestamp without time zone create test item derby timestamp without time zone create test item derby varbinary create test item mysql char create test item mysql varchar create test item mysql boolean create test item mysql tinyint create test item mysql smallint create test item mysql integer create test item mysql bigint create test item mysql float create test item mysql double create test item mysql decimal create test item mysql decimal create test item mysql date create test item mysql time create test item mysql timestamp create test item mysql timestamp without time zone create test item mysql varbinary create test item postgresql char create test item postgresql varchar create test item postgresql boolean create test item postgresql tinyint create test item postgresql smallint create test item postgresql integer create test item postgresql bigint create test item postgresql float create test item postgresql double create test item postgresql decimal create test item postgresql decimal create test item postgresql date create test item postgresql time create test item postgresql timestamp create test item postgresql timestamp without time zone create test item postgresql varbinary create test item postgresql array integer unsupported type throw error create test item derby binary the derby dialect doesn t support type binary create test item derby varbinary the derby dialect doesn t support type varbinary create test item derby timestamp with local time zone the derby dialect doesn t support type timestamp with local time zone create test item derby decimal the precision of field f0 be out of the decimal precision range support by derby dialect create test item mysql binary the my s q l dialect doesn t support type binary create test item mysql varbinary the my s q l dialect doesn t support type varbinary create test item mysql timestamp without time zone the precision of field f0 be out of the timestamp precision range support by my s q l dialect create test item mysql timestamp with local time zone the my s q l dialect doesn t support type timestamp with local time zone create test item postgresql binary the postgre s q l dialect doesn t support type binary create test item postgresql varbinary the postgre s q l dialect doesn t support type varbinary create test item postgresql timestamp without time zone the precision of field f0 be out of the timestamp precision range support by postgre s q l dialect create test item postgresql timestamp with local time zone the postgre s q l dialect doesn t support type timestamp with local time zone private static test item create test item object arg assert arg length test item item test item from dialet and type string args string arg if arg length item with expect error string arg return item parameterized parameter public test item test item test public void test datum type validate string sql d d l string format ddl format test item datum type expr test item dialect stream execution environment env stream execution environment get execution environment environment setting env setting environment setting new instance use blink planner in streaming mode build stream table environment t env stream table environment create env env setting t env execute sql sql d d l if test item expect error null try t env sql query select from t catch exception ex assert assert true ex get cause instanceof validation exception assert assert equal test item expect error ex get cause get message else t env sql query select from t inner class private static class test item private final string dialect private final string datum type expr nullable private string expect error private test item string dialect string datum type expr this dialect dialect this data type expr datum type expr static test item from dialet and type string dialect string datum type expr return new test item dialect datum type expr test item with expect error string expect error this expect error expect error return this override public string to string return string format dialect s data type s dialect datum type expr 
jdbc lookup table i t case run with parameterized class public class jdbc lookup table i t case extend jdbc lookup test base private final string table factory private final boolean use cache public jdbc lookup table i t case string table factory boolean use cache this use cache use cache this table factory table factory parameterize parameter name table factory use cache suppress warning unchecked rawtype public static collection object use cache return array as list new object legacy factory true legacy factory false dynamic factory true dynamic factory false test public void test lookup throw exception stream execution environment env stream execution environment get execution environment stream table environment t env stream table environment create env iterator row collect if legacy factory equal table factory collect use legacy table factory env t env else collect use dynamic table factory env t env list string result list new array list collect stream map row to string sort collect collector to list list string expect new array list expect add 1,1 c1 v1 c2 v1 expect add 1,1 c1 v1 c2 v1 expect add 1,1 c1 v2 c2 v2 expect add 1,1 c1 v2 c2 v2 expect add 2,3 null c2 expect add 2,5 c1 c2 expect add 3,8 c1 c2 collection sort expect assert equal expected result private iterator row use legacy table factory stream execution environment env stream table environment t env throw exception table t t env from datum stream env from collection array as list new tuple2 new tuple2 new tuple2 new tuple2 new tuple2 new tuple2 id1 id2 t env register table t t jdbc table source builder builder jdbc table source builder set option jdbc option builder set d b url db url set table name lookup table build set schema table schema builder field new string id1 id2 comment1 comment2 new datum type datum type int datum type string datum type string datum type string build if use cache builder set lookup option jdbc lookup option builder set cache max size set cache expire ms build t env register function jdbc lookup builder build get lookup function t get schema get field name string sql query select id1 id2 comment1 comment2 from t lateral table jdbc lookup id1 id2 as s l id1 l id2 comment1 comment2 return t env execute sql sql query collect private iterator row use dynamic table factory stream execution environment env stream table environment t env throw exception table t t env from datum stream env from collection array as list new tuple2 new tuple2 new tuple2 new tuple2 new tuple2 new tuple2 id1 id2 proctime proctime t env create temporary view t t string cache config lookup cache max row lookup cache ttl lookup max retry t env execute sql string format create table lookup id1 int id2 varchar comment1 varchar comment2 varchar with connector jdbc url db url table name lookup table s use cache cache config string sql query select source id1 source id2 l comment1 l comment2 from t as source join lookup for system time as of source proctime as l on source id1 l id1 and source id2 l id2 return t env execute sql sql query collect 
flink kafka producer migration test run with parameterized class public class flink kafka producer migration test extend kafka migration test base parameterize parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 public flink kafka producer migration test migration version test migrate version super test migrate version override protect property create property property property new property property put all standard prop property put all secure prop property put producer config client id config producer client id property put producer config transactional id config producer transaction id property put flink kafka producer key disable metric true return property override protect one input stream operator test harness integer object create test harness throw exception flink kafka producer integer kafka producer new flink kafka producer topic integer key serialization schema create property flink kafka producer semantic exactly once ignore failure after transaction timeout return new one input stream operator test harness new stream sink kafka producer int serializer instance new operator i d 
kafka serializer upgrade test run with parameterized class public class kafka serializer upgrade test extend type serializer upgrade test base object object public kafka serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification transaction state serializer migration version transaction state serializer setup class transaction state serializer verifier class test specification add new test specification context state serializer migration version context state serializer setup class context state serializer verifier class return test specification specification for transaction state serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class transaction state serializer setup implement type serializer upgrade test base pre upgrade setup flink kafka producer kafka transaction state override public type serializer flink kafka producer kafka transaction state create prior serializer return new flink kafka producer transaction state serializer override public flink kafka producer kafka transaction state create test datum suppress warning unchecked flink kafka internal producer byte byte mock mockito mock flink kafka internal producer class return new flink kafka producer kafka transaction state short mock this class be only public to work with link org apache flink api common typeutil class relocator public static final class transaction state serializer verifier implement type serializer upgrade test base upgrade verifier flink kafka producer kafka transaction state override public type serializer flink kafka producer kafka transaction state create upgrade serializer return new flink kafka producer transaction state serializer override public matcher flink kafka producer kafka transaction state test datum matcher suppress warning unchecked flink kafka internal producer byte byte mock mockito mock flink kafka internal producer class return be new flink kafka producer kafka transaction state short mock override public matcher type serializer schema compatibility flink kafka producer kafka transaction state schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for context state serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class context state serializer setup implement type serializer upgrade test base pre upgrade setup flink kafka producer kafka transaction context override public type serializer flink kafka producer kafka transaction context create prior serializer return new flink kafka producer context state serializer override public flink kafka producer kafka transaction context create test datum set string transaction id new hash set transaction id add transaction id add transaction id add return new flink kafka producer kafka transaction context transaction id this class be only public to work with link org apache flink api common typeutil class relocator public static final class context state serializer verifier implement type serializer upgrade test base upgrade verifier flink kafka producer kafka transaction context override public type serializer flink kafka producer kafka transaction context create upgrade serializer return new flink kafka producer context state serializer override public matcher flink kafka producer kafka transaction context test datum matcher set string transaction id new hash set transaction id add transaction id add transaction id add return be new flink kafka producer kafka transaction context transaction id override public matcher type serializer schema compatibility flink kafka producer kafka transaction context schema compatibility matcher migration version version return type serializer matcher be compatible as be 
kafka010 fetcher test run with power mock runner class prepare for test kafka consumer thread class public class kafka010 fetcher test test public void test commit do not block throw exception test datum final kafka topic partition test partition new kafka topic partition test final map kafka topic partition long test commit datum new hash map test commit datum put test partition 11 l to synchronize when the consumer be in its blocking method final one shot latch sync new one shot latch the mock consumer with block poll call final multi shot latch blocker latch new multi shot latch kafka consumer mock consumer mock kafka consumer class when mock consumer poll any long then answer new answer consumer record override public consumer record answer invocation on mock invocation throw interrupted exception sync trigger blocker latch await return consumer record empty do answer new answer void override public void answer invocation on mock invocation blocker latch trigger return null when mock consumer wakeup make sure the fetcher create the mock consumer when new kafka consumer class with any argument then return mock consumer create the test fetcher suppress warning unchecked source context string source context mock source context class map kafka topic partition long partition with initial offset collection singleton map new kafka topic partition test kafka topic partition state sentinel group offset kafka deserialization schema string schema new kafka deserialization schema wrapper new simple string schema final kafka010 fetcher string fetcher new kafka010 fetcher source context partition with initial offset null watermark strategy new test processing time service get class get class loader taskname with subtask schema new property 0 l new unregistered metric group new unregistered metric group false null run the fetcher final atomic reference throwable error new atomic reference final thread fetcher runner new thread fetcher runner override public void run try fetcher run fetch loop catch throwable t error set t fetcher runner start wait until the fetcher have reach the method of interest sync await trigger the offset commit final atomic reference throwable commit error new atomic reference final thread committer new thread committer runner override public void run try fetcher commit internal offset to kafka test commit datum mock kafka commit callback class catch throwable t commit error set t committer start ensure that the committer finish in time committer join assert false the committer do not finish in time committer be alive test do wait till the fetcher be do for a clean shutdown fetcher cancel fetcher runner join check that there be no error in the fetcher final throwable fetcher error error get if fetcher error null fetcher error instanceof handover close exception throw new exception exception in the fetcher fetcher error final throwable committer error commit error get if committer error null throw new exception exception in the committer committer error test public void ensure offset get commit throw exception test datum final kafka topic partition test partition1 new kafka topic partition test final kafka topic partition test partition2 new kafka topic partition another final map kafka topic partition long test commit data1 new hash map test commit data1 put test partition1 11 l test commit data1 put test partition2 18 l final map kafka topic partition long test commit data2 new hash map test commit data2 put test partition1 19 l test commit data2 put test partition2 28 l final blocking queue map topic partition offset and metadata commit store new link block queue the mock consumer with poll wakeup and commit a sync call final multi shot latch blocker latch new multi shot latch kafka consumer mock consumer mock kafka consumer class when mock consumer poll any long then answer new answer consumer record override public consumer record answer invocation on mock invocation throw interrupted exception blocker latch await return consumer record empty do answer new answer void override public void answer invocation on mock invocation blocker latch trigger return null when mock consumer wakeup do answer new answer void override public void answer invocation on mock invocation suppress warning unchecked map topic partition offset and metadata offset map topic partition offset and metadata invocation get argument offset commit callback callback offset commit callback invocation get argument commit store add offset callback on complete offset null return null when mock consumer commit async mockito map topic partition offset and metadata any any offset commit callback class make sure the fetcher create the mock consumer when new kafka consumer class with any argument then return mock consumer create the test fetcher suppress warning unchecked source context string source context mock source context class map kafka topic partition long partition with initial offset collection singleton map new kafka topic partition test kafka topic partition state sentinel group offset kafka deserialization schema string schema new kafka deserialization schema wrapper new simple string schema final kafka010 fetcher string fetcher new kafka010 fetcher source context partition with initial offset null watermark strategy new test processing time service get class get class loader taskname with subtask schema new property 0 l new unregistered metric group new unregistered metric group false null run the fetcher final atomic reference throwable error new atomic reference final thread fetcher runner new thread fetcher runner override public void run try fetcher run fetch loop catch throwable t error set t fetcher runner start trigger the first offset commit fetcher commit internal offset to kafka test commit data1 mock kafka commit callback class map topic partition offset and metadata result1 commit store take for entry topic partition offset and metadata entry result1 entry set topic partition partition entry get key if partition topic equal test assert equal partition partition assert equal 12 l entry get value offset else if partition topic equal another assert equal partition partition assert equal 18 l entry get value offset trigger the second offset commit fetcher commit internal offset to kafka test commit data2 mock kafka commit callback class map topic partition offset and metadata result2 commit store take for entry topic partition offset and metadata entry result2 entry set topic partition partition entry get key if partition topic equal test assert equal partition partition assert equal 20 l entry get value offset else if partition topic equal another assert equal partition partition assert equal 28 l entry get value offset test do wait till the fetcher be do for a clean shutdown fetcher cancel fetcher runner join check that there be no error in the fetcher final throwable catch error error get if catch error null catch error instanceof handover close exception throw new exception exception in the fetcher catch error test public void test cancellation when emit block throw exception some test datum final string topic test topic final int partition final byte payload new byte final list consumer record byte byte record array as list new consumer record topic partition payload payload new consumer record topic partition payload payload new consumer record topic partition payload payload final map topic partition list consumer record byte byte datum new hash map datum put new topic partition topic partition record final consumer record byte byte consumer record new consumer record datum the test consumer final kafka consumer mock consumer mock kafka consumer class when mock consumer poll any long then answer new answer consumer record override public consumer record answer invocation on mock invocation return consumer record when new kafka consumer class with any argument then return mock consumer build a fetcher block source context string source context new blocking source context map kafka topic partition long partition with initial offset collection singleton map new kafka topic partition topic partition kafka topic partition state sentinel group offset kafka deserialization schema string schema new kafka deserialization schema wrapper new simple string schema final kafka010 fetcher string fetcher new kafka010 fetcher source context partition with initial offset null watermark strategy new test processing time service watermark interval this get class get class loader task name schema new property 0 l new unregistered metric group new unregistered metric group false null run the fetcher final atomic reference throwable error new atomic reference final thread fetcher runner new thread fetcher runner override public void run try fetcher run fetch loop catch throwable t error set t fetcher runner start wait until the thread start to emit record to the source context source context wait till have blocker now we try to cancel the fetcher include the interruption usually do on the task thread once it have finish there must be no more thread block on the source context fetcher cancel fetcher runner interrupt fetcher runner join assert false fetcher thread do not properly finish source context be still block test utility private static final class block source context t implement source context t private final reentrant lock lock new reentrant lock private final one shot latch in block new one shot latch override public void collect t element block override public void collect with timestamp t element long timestamp block override public void emit watermark watermark mark block override public void mark as temporarily idle throw new unsupported operation exception override public object get checkpoint lock return new object override public void close void wait till have blocker throw interrupted exception in block await boolean be still block return lock be lock suppress warning infinite loop statement synchronization on local variable or method parameter private void block lock lock try in block trigger put this thread to sleep indefinitely final object o new object while true synchronize o o wait catch interrupted exception e exit cleanly simply reset the interruption flag thread current thread interrupt finally lock unlock 
kafka consumer thread test run with power mock runner class prepare for test handover class public class kafka consumer thread test test timeout public void test close without assign partition throw exception no initial assignment final consumer byte byte mock consumer create mock consumer new link hash map topic partition long collection topic partition long empty map false null null setup latch so the test wait until test thread be block on get batch blocking method final multi shot latch get batch block invoke new multi shot latch final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue kafka topic partition state object topic partition override public list kafka topic partition state object topic partition get batch blocking throw interrupted exception get batch block invoke trigger return super get batch block final test kafka consumer thread test thread new test kafka consumer thread mock consumer unassigned partition queue new handover test thread start get batch block invoke await test thread shutdown test thread join test reassignment work correctly in the case when the consumer initially have no assignment new unassigned partition already have define offset p set a timeout because the test will not finish if there be logic error with the reassignment flow suppress warning unchecked test timeout public void test reassign partition with define offset when no initial assignment throw exception final string test topic test topic new partition with define offset kafka topic partition state object topic partition new partition1 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition1 set offset 23 l kafka topic partition state object topic partition new partition2 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition2 set offset 31 l final list kafka topic partition state object topic partition new partition new array list new partition add new partition1 new partition add new partition2 setup mock kafka consumer no initial assignment final map topic partition long mock consumer assignment and position new link hash map final consumer byte byte mock consumer create mock consumer mock consumer assignment and position collection topic partition long empty map false null null setup new partition to be poll from the unassigned partition queue final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue for kafka topic partition state object topic partition new partition new partition unassigned partition queue add new partition start test final test kafka consumer thread test thread new test kafka consumer thread mock consumer unassigned partition queue new handover test thread start test thread start partition reassignment test thread wait partition reassignment complete verify that the consumer call assign with all new partition and that position be correctly advanced assert equal new partition size mock consumer assignment and position size for kafka topic partition state object topic partition new partition new partition assert true mock consumer assignment and position contain key new partition get kafka partition handle should be seek to offset in state because offset in state represent the last process record assert equal new partition get offset mock consumer assignment and position get new partition get kafka partition handle long value assert equal unassigned partition queue size test reassignment work correctly in the case when the consumer initially have no assignment new unassigned partition have undefined offset e g earliest offset sentinel value p set a timeout because the test will not finish if there be logic error with the reassignment flow suppress warning unchecked test timeout public void test reassign partition without define offset when no initial assignment throw exception final string test topic test topic new partition with undefined offset kafka topic partition state object topic partition new partition1 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition1 set offset kafka topic partition state sentinel earliest offset kafka topic partition state object topic partition new partition2 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition2 set offset kafka topic partition state sentinel earliest offset final list kafka topic partition state object topic partition new partition new array list new partition add new partition1 new partition add new partition2 setup mock kafka consumer no initial assignment final map topic partition long mock consumer assignment and position new link hash map mock retrieve value that should replace the earliest offset sentinel final map topic partition long mock retrieve position new hash map mock retrieve position put new partition1 get kafka partition handle 23 l mock retrieve position put new partition2 get kafka partition handle 32 l final consumer byte byte mock consumer create mock consumer mock consumer assignment and position mock retrieve position false null null setup new partition to be poll from the unassigned partition queue final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue for kafka topic partition state object topic partition new partition new partition unassigned partition queue add new partition start test final test kafka consumer thread test thread new test kafka consumer thread mock consumer unassigned partition queue new handover test thread start test thread start partition reassignment test thread wait partition reassignment complete the sentinel offset state should have be replace with define value accord to the retrieve value assert equal mock retrieve position get new partition1 get kafka partition handle new partition1 get offset assert equal mock retrieve position get new partition2 get kafka partition handle new partition2 get offset verify that the consumer call assign with all new partition and that position be correctly advanced assert equal new partition size mock consumer assignment and position size for kafka topic partition state object topic partition new partition new partition assert true mock consumer assignment and position contain key new partition get kafka partition handle should be seek to offset in state because offset in state represent the last process record assert equal new partition get offset mock consumer assignment and position get new partition get kafka partition handle long value assert equal unassigned partition queue size test reassignment work correctly in the case when the consumer already have some assignment new unassigned partition already have define offset p set a timeout because the test will not finish if there be logic error with the reassignment flow suppress warning unchecked test timeout public void test reassign partition with define offset throw exception final string test topic test topic old partition kafka topic partition state object topic partition old partition1 new kafka topic partition state new kafka topic partition test topic new topic partition test topic old partition1 set offset 23 l kafka topic partition state object topic partition old partition2 new kafka topic partition state new kafka topic partition test topic new topic partition test topic old partition2 set offset 32 l list kafka topic partition state object topic partition old partition new array list old partition add old partition1 old partition add old partition2 new partition with define offset kafka topic partition state object topic partition new partition new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition set offset 29 l list kafka topic partition state object topic partition total partition new array list total partition add old partition1 total partition add old partition2 total partition add new partition setup mock kafka consumer have initial assignment final map topic partition long mock consumer assignment and position new hash map for kafka topic partition state object topic partition old partition old partition mock consumer assignment and position put old partition get kafka partition handle old partition get offset final consumer byte byte mock consumer create mock consumer mock consumer assignment and position collection topic partition long empty map false null null setup new partition to be poll from the unassigned partition queue final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue unassigned partition queue add new partition start test final test kafka consumer thread test thread new test kafka consumer thread mock consumer unassigned partition queue new handover test thread start test thread start partition reassignment test thread wait partition reassignment complete verify that the consumer call assign with all new partition and that position be correctly advanced assert equal total partition size mock consumer assignment and position size old partition should be re seek to they previous position for kafka topic partition state object topic partition partition total partition assert true mock consumer assignment and position contain key partition get kafka partition handle should be seek to offset in state because offset in state represent the last process record assert equal partition get offset mock consumer assignment and position get partition get kafka partition handle long value assert equal unassigned partition queue size test reassignment work correctly in the case when the consumer already have some assignment new unassigned partition have undefined offset e g earliest offset sentinel value p set a timeout because the test will not finish if there be logic error with the reassignment flow suppress warning unchecked test timeout public void test reassign partition without define offset throw exception final string test topic test topic old partition kafka topic partition state object topic partition old partition1 new kafka topic partition state new kafka topic partition test topic new topic partition test topic old partition1 set offset 23 l kafka topic partition state object topic partition old partition2 new kafka topic partition state new kafka topic partition test topic new topic partition test topic old partition2 set offset 32 l list kafka topic partition state object topic partition old partition new array list old partition add old partition1 old partition add old partition2 new partition with undefined offset kafka topic partition state object topic partition new partition new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition set offset kafka topic partition state sentinel earliest offset list kafka topic partition state object topic partition total partition new array list total partition add old partition1 total partition add old partition2 total partition add new partition setup mock kafka consumer have initial assignment final map topic partition long mock consumer assignment and position new hash map for kafka topic partition state object topic partition old partition old partition mock consumer assignment and position put old partition get kafka partition handle old partition get offset mock retrieve value that should replace the earliest offset sentinel final map topic partition long mock retrieve position new hash map mock retrieve position put new partition get kafka partition handle 30 l final consumer byte byte mock consumer create mock consumer mock consumer assignment and position mock retrieve position false null null setup new partition to be poll from the unassigned partition queue final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue unassigned partition queue add new partition start test final test kafka consumer thread test thread new test kafka consumer thread mock consumer unassigned partition queue new handover test thread start test thread start partition reassignment test thread wait partition reassignment complete the sentinel offset state should have be replace with define value accord to the retrieve position assert equal mock retrieve position get new partition get kafka partition handle new partition get offset verify that the consumer call assign with all new partition and that position be correctly advanced assert equal total partition size mock consumer assignment and position size old partition should be re seek to they previous position for kafka topic partition state object topic partition partition total partition assert true mock consumer assignment and position contain key partition get kafka partition handle should be seek to offset in state because offset in state represent the last process record assert equal partition get offset mock consumer assignment and position get partition get kafka partition handle long value assert equal unassigned partition queue size test reassignment work correctly in the case when the consumer already have some assignment new unassigned partition already have define offset the consumer be wake up prior to the reassignment p in this case reassignment should not have occur at all and the consumer retain the original assignment p set a timeout because the test will not finish if there be logic error with the reassignment flow suppress warning unchecked test timeout public void test reassign partition with define offset when early wakeup throw exception final string test topic test topic old partition kafka topic partition state object topic partition old partition1 new kafka topic partition state new kafka topic partition test topic new topic partition test topic old partition1 set offset 23 l kafka topic partition state object topic partition old partition2 new kafka topic partition state new kafka topic partition test topic new topic partition test topic old partition2 set offset 32 l list kafka topic partition state object topic partition old partition new array list old partition add old partition1 old partition add old partition2 new partition with define offset kafka topic partition state object topic partition new partition new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition set offset 29 l setup mock kafka consumer initial assignment final map topic partition long mock consumer assignment to position new link hash map for kafka topic partition state object topic partition old partition old partition mock consumer assignment to position put old partition get kafka partition handle old partition get offset final test consumer mock consumer create mock consumer mock consumer assignment to position collection topic partition long empty map true null null setup new partition to be poll from the unassigned partition queue final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue unassigned partition queue add new partition start test final test kafka consumer thread test thread new test kafka consumer thread mock consumer unassigned partition queue new handover test thread start pause just before the reassignment so we can inject the wakeup test thread wait partition reassignment invoke test thread set offset to commit new hash map topic partition offset and metadata mock kafka commit callback class assert equal mock consumer get num wakeup call test thread start partition reassignment test thread wait partition reassignment complete the consumer s assignment should have remain untouched assert equal old partition size mock consumer assignment to position size for kafka topic partition state object topic partition old partition old partition assert true mock consumer assignment to position contain key old partition get kafka partition handle assert equal old partition get offset mock consumer assignment to position get old partition get kafka partition handle long value the new partition should have be re add to the unassigned partition queue assert equal unassigned partition queue size test reassignment work correctly in the case when the consumer have no initial assignment new unassigned partition have undefined offset the consumer be wake up prior to the reassignment p in this case reassignment should not have occur at all and the consumer retain the original assignment p set a timeout because the test will not finish if there be logic error with the reassignment flow suppress warning unchecked test timeout public void test reassign partition define offset without initial assignment when early wakeup throw exception final string test topic test topic new partition with define offset kafka topic partition state object topic partition new partition1 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition1 set offset kafka topic partition state sentinel earliest offset kafka topic partition state object topic partition new partition2 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition2 set offset kafka topic partition state sentinel earliest offset list kafka topic partition state object topic partition new partition new array list new partition add new partition1 new partition add new partition2 setup mock kafka consumer no initial assignment final map topic partition long mock consumer assignment and position new link hash map mock retrieve value that should replace the earliest offset sentinel final map topic partition long mock retrieve position new hash map mock retrieve position put new partition1 get kafka partition handle 23 l mock retrieve position put new partition2 get kafka partition handle 32 l final test consumer mock consumer create mock consumer mock consumer assignment and position mock retrieve position true null null setup new partition to be poll from the unassigned partition queue final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue for kafka topic partition state object topic partition new partition new partition unassigned partition queue add new partition start test final test kafka consumer thread test thread new test kafka consumer thread mock consumer unassigned partition queue new handover test thread start pause just before the reassignment so we can inject the wakeup test thread wait partition reassignment invoke test thread set offset to commit new hash map topic partition offset and metadata mock kafka commit callback class make sure the consumer be actually wake up assert equal mock consumer get num wakeup call test thread start partition reassignment test thread wait partition reassignment complete the consumer s assignment should have remain untouched in this case empty assert equal mock consumer assignment and position size the new partition should have be re add to the unassigned partition queue assert equal unassigned partition queue size test reassignment work correctly in the case when the consumer have no initial assignment new unassigned partition have undefined offset the consumer be wake up during the reassignment p in this case reassignment should have complete and the consumer be restore the wakeup call after the reassignment p set a timeout because the test will not finish if there be logic error with the reassignment flow suppress warning unchecked test timeout public void test reassign partition define offset without initial assignment when wakeup midway throw exception final string test topic test topic new partition with define offset kafka topic partition state object topic partition new partition1 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition1 set offset kafka topic partition state sentinel earliest offset kafka topic partition state object topic partition new partition2 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition2 set offset kafka topic partition state sentinel earliest offset list kafka topic partition state object topic partition new partition new array list new partition add new partition1 new partition add new partition2 setup mock kafka consumer no initial assignment final map topic partition long mock consumer assignment and position new link hash map mock retrieve value that should replace the earliest offset sentinel final map topic partition long mock retrieve position new hash map mock retrieve position put new partition1 get kafka partition handle 23 l mock retrieve position put new partition2 get kafka partition handle 32 l these latch be use to pause midway the reassignment process final one shot latch mid assignment latch new one shot latch final one shot latch continue assigment latch new one shot latch final test consumer mock consumer create mock consumer mock consumer assignment and position mock retrieve position false mid assignment latch continue assigment latch setup new partition to be poll from the unassigned partition queue final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue for kafka topic partition state object topic partition new partition new partition unassigned partition queue add new partition start test final test kafka consumer thread test thread new test kafka consumer thread mock consumer unassigned partition queue new handover test thread start test thread start partition reassignment wait until the reassignment have start mid assignment latch await test thread set offset to commit new hash map topic partition offset and metadata mock kafka commit callback class the wakeup in the set offset to commit call should have be buffer and not call on the consumer assert equal mock consumer get num wakeup call continue assigment latch trigger test thread wait partition reassignment complete verify that the consumer call assign with all new partition and that position be correctly advanced assert equal new partition size mock consumer assignment and position size for kafka topic partition state object topic partition new partition new partition assert true mock consumer assignment and position contain key new partition get kafka partition handle should be seek to offset in state because offset in state represent the last process record assert equal new partition get offset mock consumer assignment and position get new partition get kafka partition handle long value after the reassignment the consumer should be restore the wakeup call assert equal mock consumer get num wakeup call assert equal unassigned partition queue size test timeout public void test ratelimiting throw exception final string test topic test topic ratelimit setup mock kafka consumer with test datum final int partition final byte payload new byte final list consumer record byte byte record array as list new consumer record test topic partition payload payload new consumer record test topic partition payload payload final map topic partition list consumer record byte byte datum new hash map datum put new topic partition test topic partition record final consumer record byte byte consumer record new consumer record datum sleep for one second in each consumer poll call to return byte second final kafka consumer byte byte mock consumer mock kafka consumer class power mockito when mock consumer poll any long then answer invocation on mock consumer record when new kafka consumer class with any argument then return mock consumer new partition with define offset kafka topic partition state object topic partition new partition1 new kafka topic partition state new kafka topic partition test topic new topic partition test topic new partition1 set offset kafka topic partition state sentinel earliest offset list kafka topic partition state object topic partition new partition new array list new partition add new partition1 final closable blocking queue kafka topic partition state object topic partition unassigned partition queue new closable blocking queue for kafka topic partition state object topic partition new partition new partition unassigned partition queue add new partition ratelimiting property stream runtime context mock runtime context mock streaming runtime context class when mock runtime context get number of parallel subtask then return property property new property mock handover and logger handover mock handover power mockito mock handover class do nothing when mock handover produce any logger mock logger mock logger class metric group metric group new unregistered metric group flink connector rate limiter rate limiter new guava flink connector rate limiter rate limiter set rate 1 l rate limiter open mock runtime context test kafka consumer thread kafka consumer thread test thread new test kafka consumer thread rate limit mock logger mock handover property unassigned partition queue test 30 l false metric group metric group mock consumer rate limiter test thread start wait for seconds to ensure atleast call to consumer poll test thread join assert not null test thread get rate limiter assert equal test thread get rate limiter get rate in a period of seconds no more than call to poll should be make the expect rate be byte second and we read byte in every consumer poll call the rate limiter should thus slow down the call by seconds when the rate take effect verify mock consumer time poll any long test thread shutdown a testable link kafka consumer thread that inject multiple latch exactly before and after partition reassignment so that test be eligible to setup various condition before the reassignment happen and inspect reassignment result after it be complete private static class test kafka consumer thread extend kafka consumer thread object private final consumer byte byte mock consumer private final multi shot latch pre reassignment latch new multi shot latch private final multi shot latch start reassignment latch new multi shot latch private final multi shot latch reassignment complete latch new multi shot latch private final multi shot latch post reassignment latch new multi shot latch public test kafka consumer thread consumer byte byte mock consumer closable blocking queue kafka topic partition state object topic partition unassigned partition queue handover handover super mock logger class handover new property unassigned partition queue test kafka consumer thread false new unregistered metric group new unregistered metric group null this mock consumer mock consumer public void wait partition reassignment invoke throw interrupted exception pre reassignment latch await public void start partition reassignment start reassignment latch trigger public void wait partition reassignment complete throw interrupted exception reassignment complete latch await public void end partition reassignment post reassignment latch trigger override consumer byte byte get consumer property kafka property return mock consumer override void reassign partition list kafka topic partition state object topic partition new partition throw exception trigger block call on wait partition reassignment invoke pre reassignment latch trigger wait for start partition reassignment to be call start reassignment latch await try super reassign partition new partition finally trigger block call on wait partition reassignment complete reassignment complete latch trigger wait for end partition reassignment to be call post reassignment latch await suppress warning unchecked private static test consumer create mock consumer final map topic partition long mock consumer assignment and position final map topic partition long mock retrieve position final boolean early wakeup final one shot latch mid assignment latch final one shot latch continue assignment latch return new test consumer mock consumer assignment and position mock retrieve position early wakeup mid assignment latch continue assignment latch private static class test consumer implement consumer byte byte private final map topic partition long mock consumer assignment and position private final map topic partition long mock retrieve position private final boolean early wakeup private final one shot latch mid assignment latch private final one shot latch continue assignment latch private int num wakeup call private test consumer map topic partition long mock consumer assignment and position map topic partition long mock retrieve position boolean early wakeup one shot latch mid assignment latch one shot latch continue assignment latch this mock consumer assignment and position mock consumer assignment and position this mock retrieve position mock retrieve position this early wakeup early wakeup this mid assignment latch mid assignment latch this continue assignment latch continue assignment latch override public set topic partition assignment if mid assignment latch null mid assignment latch trigger if continue assignment latch null try continue assignment latch await catch interrupted exception e thread current thread interrupt return mock consumer assignment and position key set override public set string subscription throw new unsupported operation exception override public void subscribe collection string collection override public void subscribe collection string collection consumer rebalance listener consumer rebalance listener override public void assign collection topic partition assign partition mock consumer assignment and position clear for topic partition assign assign partition mock consumer assignment and position put assign null override public void subscribe pattern pattern consumer rebalance listener consumer rebalance listener override public void unsubscribe override public consumer record byte byte poll long l return mock consumer record class override public void commit sync override public void commit sync map topic partition offset and metadata map override public void commit async override public void commit async offset commit callback offset commit callback override public void commit async map topic partition offset and metadata map offset commit callback offset commit callback override public void seek topic partition partition long position if mock consumer assignment and position contain key partition throw new runtime exception the current mock assignment do not contain partition partition else mock consumer assignment and position put partition position override public void seek to begin collection topic partition partition for topic partition partition partition if mock consumer assignment and position contain key partition throw new runtime exception the current mock assignment do not contain partition partition else long mock retrieve position mock retrieve position get partition if mock retrieve position null throw new runtime exception mock consumer need to retrieve a position but no value be provide in the mock value for retrieval else mock consumer assignment and position put partition mock retrieve position get partition override public void seek to end collection topic partition partition for topic partition partition partition if mock consumer assignment and position contain key partition throw new runtime exception the current mock assignment do not contain partition partition else long mock retrieve position mock retrieve position get partition if mock retrieve position null throw new runtime exception mock consumer need to retrieve a position but no value be provide in the mock value for retrieval else mock consumer assignment and position put partition mock retrieve position get partition override public long position topic partition topic partition if early wakeup return mock consumer assignment and position get topic partition else throw new wakeup exception override public offset and metadata commit topic partition topic partition throw new unsupported operation exception override public map metric name extend metric metric throw new unsupported operation exception override public list partition info partition for string s throw new unsupported operation exception override public map string list partition info list topic throw new unsupported operation exception override public set topic partition pause throw new unsupported operation exception override public void pause collection topic partition collection override public void resume collection topic partition collection override public map topic partition offset and timestamp offset for time map topic partition long map throw new unsupported operation exception override public map topic partition long beginning offset collection topic partition collection throw new unsupported operation exception override public map topic partition long end offset collection topic partition collection throw new unsupported operation exception override public void close override public void close long l time unit time unit override public void wakeup num wakeup call public int get num wakeup call return num wakeup call a testable kafka consumer thread to test the ratelimiting feature use user define property the mock consumer do not mock all the method mock in link test kafka consumer thread private static class test kafka consumer thread rate limit extend kafka consumer thread consumer byte byte mock consumer public test kafka consumer thread rate limit logger log handover handover property kafka property closable block queue kafka topic partition state object topic partition unassigned partition queue string thread name long poll timeout boolean use metric metric group consumer metric group metric group subtask metric group consumer byte byte mock consumer flink connector rate limiter rate limiter super log handover kafka property unassigned partition queue thread name poll timeout use metric consumer metric group subtask metric group rate limiter this mock consumer mock consumer override public consumer byte byte get consumer property property return mock consumer 
flink kafka producer011 migration test run with parameterized class public class flink kafka producer011 migration test extend kafka migration test base parameterize parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 public flink kafka producer011 migration test migration version test migrate version super test migrate version override protect property create property property property new property property put all standard prop property put all secure prop property put producer config client id config producer client id property put producer config transactional id config producer transaction id property put flink kafka producer011 key disable metric true return property override protect one input stream operator test harness integer object create test harness throw exception flink kafka producer011 integer kafka producer new flink kafka producer011 topic integer key serialization schema create property flink kafka producer011 semantic exactly once ignore failure after transaction timeout return new one input stream operator test harness new stream sink kafka producer int serializer instance new operator i d 
kafka011 serializer upgrade test run with parameterized class public class kafka011 serializer upgrade test extend type serializer upgrade test base object object public kafka011 serializer upgrade test test specification object object test specification super test specification suppress warning unchecked parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification transaction state serializer migration version transaction state serializer setup class transaction state serializer verifier class test specification add new test specification context state serializer migration version context state serializer setup class context state serializer verifier class return test specification specification for transaction state serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class transaction state serializer setup implement type serializer upgrade test base pre upgrade setup flink kafka producer011 kafka transaction state override public type serializer flink kafka producer011 kafka transaction state create prior serializer return new flink kafka producer011 transaction state serializer override public flink kafka producer011 kafka transaction state create test datum suppress warning unchecked flink kafka producer byte byte mock mockito mock flink kafka producer class return new flink kafka producer011 kafka transaction state short mock this class be only public to work with link org apache flink api common typeutil class relocator public static final class transaction state serializer verifier implement type serializer upgrade test base upgrade verifier flink kafka producer011 kafka transaction state override public type serializer flink kafka producer011 kafka transaction state create upgrade serializer return new flink kafka producer011 transaction state serializer override public matcher flink kafka producer011 kafka transaction state test datum matcher suppress warning unchecked flink kafka producer byte byte mock mockito mock flink kafka producer class return be new flink kafka producer011 kafka transaction state short mock override public matcher type serializer schema compatibility flink kafka producer011 kafka transaction state schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for context state serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class context state serializer setup implement type serializer upgrade test base pre upgrade setup flink kafka producer011 kafka transaction context override public type serializer flink kafka producer011 kafka transaction context create prior serializer return new flink kafka producer011 context state serializer override public flink kafka producer011 kafka transaction context create test datum set string transaction id new hash set transaction id add transaction id add transaction id add return new flink kafka producer011 kafka transaction context transaction id this class be only public to work with link org apache flink api common typeutil class relocator public static final class context state serializer verifier implement type serializer upgrade test base upgrade verifier flink kafka producer011 kafka transaction context override public type serializer flink kafka producer011 kafka transaction context create upgrade serializer return new flink kafka producer011 context state serializer override public matcher flink kafka producer011 kafka transaction context test datum matcher set string transaction id new hash set transaction id add transaction id add transaction id add return be new flink kafka producer011 kafka transaction context transaction id override public matcher type serializer schema compatibility flink kafka producer011 kafka transaction context schema compatibility matcher migration version version return type serializer matcher be compatible as be 
flink kafka consumer base migration test run with parameterized class public class flink kafka consumer base migration test todo change this to the correspond savepoint version to be write e g link migration version v1 for 1.3 todo and remove all ignore annotation on write snapshot method to generate savepoint todo note you should generate the savepoint base on the release branch instead of the master private final migration version flink generate savepoint version null private static final hash map kafka topic partition long partition state new hash map static partition state put new kafka topic partition abc l partition state put new kafka topic partition def l private static final list string topic new array list partition state key set stream map p p get topic distinct collect collector to list private final migration version test migrate version parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 public flink kafka consumer base migration test migration version test migrate version this test migrate version test migrate version manually run this to write binary snapshot datum ignore test public void write snapshot throw exception write snapshot src test resource kafka consumer migration test flink flink generate savepoint version snapshot partition state final hash map kafka topic partition long empty state new hash map write snapshot src test resource kafka consumer migration test flink flink generate savepoint version empty state snapshot empty state private void write snapshot string path hash map kafka topic partition long state throw exception final one shot latch latch new one shot latch final abstract fetcher string fetcher mock abstract fetcher class do answer new answer void override public void answer invocation on mock invocation throw throwable latch trigger return null when fetcher run fetch loop when fetcher snapshot current state then return state final list kafka topic partition partition new array list partition state key set final dummy flink kafka consumer string consumer function new dummy flink kafka consumer fetcher topic partition flink kafka consumer base partition discovery disabled stream source string dummy flink kafka consumer string consumer operator new stream source consumer function final abstract stream operator test harness string test harness new abstract stream operator test harness consumer operator test harness set time characteristic time characteristic processing time test harness setup test harness open final throwable error new throwable run the source asynchronously thread runner new thread override public void run try consumer function run new dummy source context override public void collect string element catch throwable t t print stack trace error t runner start if latch be trigger latch await final operator subtask state snapshot synchronize test harness get checkpoint lock snapshot test harness snapshot 0 l 0 l operator snapshot util write state handle snapshot path consumer operator close runner join test restore from a legacy empty state when no partition could be find for topic test public void test restore from empty state no partition throw exception final dummy flink kafka consumer string consumer function new dummy flink kafka consumer collection singleton list dummy topic collection kafka topic partition empty list flink kafka consumer base partition discovery disabled stream source string dummy flink kafka consumer string consumer operator new stream source consumer function final abstract stream operator test harness string test harness new abstract stream operator test harness consumer operator test harness set time characteristic time characteristic processing time test harness setup restore state from binary snapshot file test harness initialize state operator snapshot util get resource filename kafka consumer migration test flink test migrate version empty state snapshot test harness open assert that no partition be find and be empty assert true consumer function get subscribe partition to start offset null assert true consumer function get subscribe partition to start offset be empty assert that no state be restore assert true consumer function get restore state be empty consumer operator close consumer operator cancel test restore from a empty state take use a previous flink version when some partition could be find for topic test public void test restore from empty state with partition throw exception final list kafka topic partition partition new array list partition state key set final dummy flink kafka consumer string consumer function new dummy flink kafka consumer topic partition flink kafka consumer base partition discovery disabled stream source string dummy flink kafka consumer string consumer operator new stream source consumer function final abstract stream operator test harness string test harness new abstract stream operator test harness consumer operator test harness set time characteristic time characteristic processing time test harness setup restore state from binary snapshot file test harness initialize state operator snapshot util get resource filename kafka consumer migration test flink test migrate version empty state snapshot test harness open the expect state in kafka consumer migration test flink1 x snapshot empty state all new partition after the snapshot be consider as partition that be create while the consumer wasn t run and should start from the earliest offset final hash map kafka topic partition long expect subscribe partition with start offset new hash map for kafka topic partition partition partition state key set expect subscribe partition with start offset put partition kafka topic partition state sentinel earliest offset assert that there be partition and be identical to expect list assert true consumer function get subscribe partition to start offset null assert true consumer function get subscribe partition to start offset be empty assert equal expect subscribe partition with start offset consumer function get subscribe partition to start offset the new partition should have be consider as restore state assert true consumer function get restore state null assert true consumer function get subscribe partition to start offset be empty for map entry kafka topic partition long expect entry expect subscribe partition with start offset entry set assert equal expect entry get value consumer function get restore state get expect entry get key consumer operator close consumer operator cancel test restore from a non empty state take use a previous flink version when some partition could be find for topic test public void test restore throw exception final list kafka topic partition partition new array list partition state key set final dummy flink kafka consumer string consumer function new dummy flink kafka consumer topic partition flink kafka consumer base partition discovery disabled stream source string dummy flink kafka consumer string consumer operator new stream source consumer function final abstract stream operator test harness string test harness new abstract stream operator test harness consumer operator test harness set time characteristic time characteristic processing time test harness setup restore state from binary snapshot file test harness initialize state operator snapshot util get resource filename kafka consumer migration test flink test migrate version snapshot test harness open assert that there be partition and be identical to expect list assert true consumer function get subscribe partition to start offset null assert true consumer function get subscribe partition to start offset be empty on restore subscribe partition to start offset should be identical to the restore state assert equal partition state consumer function get subscribe partition to start offset assert that state be correctly restore from legacy checkpoint assert true consumer function get restore state null assert equal partition state consumer function get restore state consumer operator close consumer operator cancel private static class dummy flink kafka consumer t extend flink kafka consumer base t private static final long serial version u i d 1 l private final list kafka topic partition partition private final abstract fetcher t fetcher suppress warning unchecked dummy flink kafka consumer abstract fetcher t fetcher list string topic list kafka topic partition partition long discovery interval super topic null kafka deserialization schema t mock kafka deserialization schema class discovery interval false this fetcher fetcher this partition partition dummy flink kafka consumer list string topic list kafka topic partition partition long discovery interval this mock abstract fetcher class topic partition discovery interval override protect abstract fetcher t create fetcher source context t source context map kafka topic partition long this subtask partition with start offset serialize value watermark strategy t watermark strategy streaming runtime context runtime context offset commit mode offset commit mode metric group consumer metric group boolean use metric throw exception return fetcher override protect abstract partition discoverer create partition discoverer kafka topic descriptor topic descriptor int index of this subtask int num parallel subtask abstract partition discoverer mock partition discoverer mock abstract partition discoverer class try when mock partition discoverer discover partition then return partition catch exception e ignore when mock partition discoverer set and check discover partition any kafka topic partition class then return true return mock partition discoverer override protect boolean get be auto commit enable return false override protect map kafka topic partition long fetch offset with timestamp collection kafka topic partition partition long timestamp throw new unsupported operation exception private abstract static class dummy source context implement source function source context string private final object lock new object override public void collect with timestamp string element long timestamp override public void emit watermark watermark mark override public object get checkpoint lock return lock override public void close override public void mark as temporarily idle 
abstract fetcher watermark test suppress warning serial run with enclose class public class abstract fetcher watermark test test with watermark generator that have a periodic nature run with parameterized class public static class periodic watermark suite parameterized parameter public static collection watermark strategy long get param return array as list new assigner with periodic watermark adapter strategy new periodic test extractor watermark strategy for generator ctx new periodic test watermark generator with timestamp assigner event previous timestamp event parameterize parameter public watermark strategy long test wm strategy test public void test periodic watermark throw exception final string test topic test topic name map kafka topic partition long original partition new hash map original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset test source context long source context new test source context test processing time service processing time service new test processing time service test fetcher long fetcher new test fetcher source context original partition new serialized value test wm strategy processing time service final kafka topic partition state long object part1 fetcher subscribe partition state get final kafka topic partition state long object part2 fetcher subscribe partition state get final kafka topic partition state long object part3 fetcher subscribe partition state get element generate a watermark if the timestamp be a multiple of three element for partition emit record fetcher 1 l part1 1 l emit record fetcher 1 l part1 1 l emit record fetcher 2 l part1 2 l emit record fetcher 3 l part1 3 l assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp element for partition emit record fetcher 12 l part2 1 l assert equal 12 l source context get latest element get value long value assert equal 12 l source context get latest element get timestamp element for partition emit record fetcher l part3 1 l emit record fetcher l part3 2 l assert equal l source context get latest element get value long value assert equal l source context get latest element get timestamp processing time service set current time now we should have a watermark this block until the periodic thread emit the watermark assert equal 3 l source context get latest watermark get timestamp advance partition emit record fetcher l part3 3 l emit record fetcher l part3 4 l emit record fetcher l part3 5 l assert equal l source context get latest element get value long value assert equal l source context get latest element get timestamp advance partition beyond partition this bump the watermark emit record fetcher 30 l part1 4 l assert equal 30 l source context get latest element get value long value assert equal 30 l source context get latest element get timestamp processing time service set current time this block until the periodic thread emit the watermark assert equal 12 l source context get latest watermark get timestamp advance partition again this bump the watermark emit record fetcher 13 l part2 2 l emit record fetcher 14 l part2 3 l emit record fetcher 15 l part2 3 l processing time service set current time this block until the periodic thread emit the watermark long watermark t source context get latest watermark get timestamp assert true watermark t 13 l watermark t 15 l test public void test skip corrupted record with periodic watermark throw exception final string test topic test topic name map kafka topic partition long original partition new hash map original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset test source context long source context new test source context test processing time service processing time provider new test processing time service test fetcher long fetcher new test fetcher source context original partition new serialized value test wm strategy processing time provider final kafka topic partition state long object partition state holder fetcher subscribe partition state get element generate a watermark if the timestamp be a multiple of three emit record fetcher 1 l partition state holder 1 l emit record fetcher 2 l partition state holder 2 l emit record fetcher 3 l partition state holder 3 l assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp assert equal 3 l partition state holder get offset advance timer for watermark emit processing time provider set current time 10 l assert true source context have watermark assert equal 3 l source context get latest watermark get timestamp emit no record fetcher emit record with timestamp empty queue partition state holder 4 l long min value no element should have be collect assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp the offset in state still should have advance assert equal 4 l partition state holder get offset no watermark should be collect processing time provider set current time 20 l assert false source context have watermark test public void test periodic watermark with no subscribe partition should yield no watermark throw exception final string test topic test topic name map kafka topic partition long original partition new hash map test source context long source context new test source context test processing time service processing time provider new test processing time service test fetcher long fetcher new test fetcher source context original partition new serialized value test wm strategy processing time provider processing time provider set current time no partition when the periodic watermark emitter fire no watermark should be emit assert false source context have watermark counter test that when the fetcher do actually have partition when the periodic watermark emitter fire again a watermark really be emit fetcher add discover partition collection singleton list new kafka topic partition test topic emit record fetcher l fetcher subscribe partition state get 3 l processing time provider set current time assert equal source context get latest watermark get timestamp test with watermark generator that have a punctuated nature public static class punctuate watermark suite test public void test skip corrupted record with punctuate watermark throw exception final string test topic test topic name map kafka topic partition long original partition new hash map original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset test source context long source context new test source context test processing time service processing time provider new test processing time service assigner with punctuate watermark adapter strategy long test wm strategy new assigner with punctuate watermark adapter strategy new punctuated test extractor test fetcher long fetcher new test fetcher source context original partition new serialized value test wm strategy processing time provider final kafka topic partition state long object partition state holder fetcher subscribe partition state get element generate a watermark if the timestamp be a multiple of three emit record fetcher 1 l partition state holder 1 l emit record fetcher 2 l partition state holder 2 l emit record fetcher 3 l partition state holder 3 l assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp assert true source context have watermark assert equal 3 l source context get latest watermark get timestamp assert equal 3 l partition state holder get offset emit no record fetcher emit record with timestamp empty queue partition state holder 4 l 1 l no element or watermark should have be collect assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp assert false source context have watermark the offset in state still should have advance assert equal 4 l partition state holder get offset test public void test punctuate watermark throw exception final string test topic test topic name map kafka topic partition long original partition new hash map original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset test source context long source context new test source context test processing time service processing time provider new test processing time service assigner with punctuate watermark adapter strategy long test wm strategy new assigner with punctuate watermark adapter strategy new punctuated test extractor test fetcher long fetcher new test fetcher source context original partition new serialized value test wm strategy processing time provider final kafka topic partition state long object part1 fetcher subscribe partition state get final kafka topic partition state long object part2 fetcher subscribe partition state get final kafka topic partition state long object part3 fetcher subscribe partition state get element generate a watermark if the timestamp be a multiple of three element for partition emit record fetcher array as list 1 l 2 l part1 1 l emit record fetcher 2 l part1 2 l emit record fetcher array as list 2 l 3 l part1 3 l assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp assert false source context have watermark element for partition emit record fetcher 12 l part2 1 l assert equal 12 l source context get latest element get value long value assert equal 12 l source context get latest element get timestamp assert false source context have watermark element for partition emit record fetcher l part3 1 l emit record fetcher l part3 2 l assert equal l source context get latest element get value long value assert equal l source context get latest element get timestamp now we should have a watermark assert true source context have watermark assert equal 3 l source context get latest watermark get timestamp advance partition emit record fetcher l part3 3 l emit record fetcher l part3 4 l emit record fetcher l part3 5 l assert equal l source context get latest element get value long value assert equal l source context get latest element get timestamp advance partition beyond partition this bump the watermark emit record fetcher 30 l part1 4 l assert equal 30 l source context get latest element get value long value assert equal 30 l source context get latest element get timestamp assert true source context have watermark assert equal 12 l source context get latest watermark get timestamp advance partition again this bump the watermark emit record fetcher 13 l part2 2 l assert false source context have watermark emit record fetcher 14 l part2 3 l assert false source context have watermark emit record fetcher 15 l part2 3 l assert true source context have watermark assert equal 15 l source context get latest watermark get timestamp private static final class test fetcher t extend abstract fetcher t object test fetcher source context t source context map kafka topic partition long assign partition with start offset serialize value watermark strategy t watermark strategy processing time service processing time provider long auto watermark interval throw exception super source context assign partition with start offset watermark strategy processing time provider auto watermark interval test fetcher class get class loader new unregistered metric group false public void run fetch loop throw new unsupported operation exception override public void cancel throw new unsupported operation exception override protect void do commit internal offset to kafka map kafka topic partition long offset nonnull kafka commit callback commit callback throw new unsupported operation exception override protect object create kafka partition handle kafka topic partition partition return new object private static t kph void emit record abstract fetcher t kph fetcher t record kafka topic partition state t kph partition state long offset array deque t record queue new array deque record queue add record fetcher emit record with timestamp record queue partition state offset long min value private static t kph void emit record abstract fetcher t kph fetcher list t record kafka topic partition state t kph partition state long offset array deque t record queue new array deque record fetcher emit record with timestamp record queue partition state offset long min value private static t queue t empty queue return new array deque suppress warning deprecation private static class periodic test extractor implement assigner with periodic watermark long private volatile long max timestamp long min value override public long extract timestamp long element long previous element timestamp max timestamp math max max timestamp element return element nullable override public watermark get current watermark return new watermark max timestamp suppress warning deprecation private static class punctuate test extractor implement assigner with punctuate watermark long override public long extract timestamp long element long previous element timestamp return element nullable override public watermark check and get next watermark long last element long extract timestamp return extract timestamp new watermark extract timestamp null private static class periodic test watermark generator implement watermark generator long private volatile long max timestamp long min value override public void on event long event long event timestamp watermark output output max timestamp math max max timestamp event override public void on periodic emit watermark output output output emit watermark new org apache flink api common eventtime watermark max timestamp 
abstract fetcher watermark test run with parameterized class public static class periodic watermark suite parameterized parameter public static collection watermark strategy long get param return array as list new assigner with periodic watermark adapter strategy new periodic test extractor watermark strategy for generator ctx new periodic test watermark generator with timestamp assigner event previous timestamp event parameterize parameter public watermark strategy long test wm strategy test public void test periodic watermark throw exception final string test topic test topic name map kafka topic partition long original partition new hash map original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset test source context long source context new test source context test processing time service processing time service new test processing time service test fetcher long fetcher new test fetcher source context original partition new serialized value test wm strategy processing time service final kafka topic partition state long object part1 fetcher subscribe partition state get final kafka topic partition state long object part2 fetcher subscribe partition state get final kafka topic partition state long object part3 fetcher subscribe partition state get element generate a watermark if the timestamp be a multiple of three element for partition emit record fetcher 1 l part1 1 l emit record fetcher 1 l part1 1 l emit record fetcher 2 l part1 2 l emit record fetcher 3 l part1 3 l assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp element for partition emit record fetcher 12 l part2 1 l assert equal 12 l source context get latest element get value long value assert equal 12 l source context get latest element get timestamp element for partition emit record fetcher l part3 1 l emit record fetcher l part3 2 l assert equal l source context get latest element get value long value assert equal l source context get latest element get timestamp processing time service set current time now we should have a watermark this block until the periodic thread emit the watermark assert equal 3 l source context get latest watermark get timestamp advance partition emit record fetcher l part3 3 l emit record fetcher l part3 4 l emit record fetcher l part3 5 l assert equal l source context get latest element get value long value assert equal l source context get latest element get timestamp advance partition beyond partition this bump the watermark emit record fetcher 30 l part1 4 l assert equal 30 l source context get latest element get value long value assert equal 30 l source context get latest element get timestamp processing time service set current time this block until the periodic thread emit the watermark assert equal 12 l source context get latest watermark get timestamp advance partition again this bump the watermark emit record fetcher 13 l part2 2 l emit record fetcher 14 l part2 3 l emit record fetcher 15 l part2 3 l processing time service set current time this block until the periodic thread emit the watermark long watermark t source context get latest watermark get timestamp assert true watermark t 13 l watermark t 15 l test public void test skip corrupted record with periodic watermark throw exception final string test topic test topic name map kafka topic partition long original partition new hash map original partition put new kafka topic partition test topic kafka topic partition state sentinel latest offset test source context long source context new test source context test processing time service processing time provider new test processing time service test fetcher long fetcher new test fetcher source context original partition new serialized value test wm strategy processing time provider final kafka topic partition state long object partition state holder fetcher subscribe partition state get element generate a watermark if the timestamp be a multiple of three emit record fetcher 1 l partition state holder 1 l emit record fetcher 2 l partition state holder 2 l emit record fetcher 3 l partition state holder 3 l assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp assert equal 3 l partition state holder get offset advance timer for watermark emit processing time provider set current time 10 l assert true source context have watermark assert equal 3 l source context get latest watermark get timestamp emit no record fetcher emit record with timestamp empty queue partition state holder 4 l long min value no element should have be collect assert equal 3 l source context get latest element get value long value assert equal 3 l source context get latest element get timestamp the offset in state still should have advance assert equal 4 l partition state holder get offset no watermark should be collect processing time provider set current time 20 l assert false source context have watermark test public void test periodic watermark with no subscribe partition should yield no watermark throw exception final string test topic test topic name map kafka topic partition long original partition new hash map test source context long source context new test source context test processing time service processing time provider new test processing time service test fetcher long fetcher new test fetcher source context original partition new serialized value test wm strategy processing time provider processing time provider set current time no partition when the periodic watermark emitter fire no watermark should be emit assert false source context have watermark counter test that when the fetcher do actually have partition when the periodic watermark emitter fire again a watermark really be emit fetcher add discover partition collection singleton list new kafka topic partition test topic emit record fetcher l fetcher subscribe partition state get 3 l processing time provider set current time assert equal source context get latest watermark get timestamp 
abstract partition discoverer test run with parameterized class public class abstract partition discoverer test private static final string test topic test topic private static final string test topic pattern test topic 0 - 9 private final kafka topic descriptor topic descriptor public abstract partition discoverer test kafka topic descriptor topic descriptor this topic descriptor topic descriptor parameterized parameter name kafka topic descriptor suppress warning unchecked public static collection kafka topic descriptor time characteristic return array as list new kafka topic descriptor new kafka topic descriptor collection singleton list test topic null new kafka topic descriptor new kafka topic descriptor null pattern compile test topic pattern test public void test partition equal consumer fix partition throw exception list kafka topic partition mock get all partition for topic return array as list new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic int num subtask mock get all partition for topic return size get the start index the assertion below will fail if the assignment logic do not meet correct contract int num consumer kafka topic partition assigner assign mock get all partition for topic return get num subtask for int subtask index subtask index mock get all partition for topic return size subtask index test partition discoverer partition discoverer new test partition discoverer topic descriptor subtask index mock get all partition for topic return size test partition discoverer create mock get all topic sequence from fix return collection singleton list test topic test partition discoverer create mock get all partition from topic sequence from fix return mock get all partition for topic return partition discoverer open list kafka topic partition initial discovery partition discoverer discover partition assert equal initial discovery size assert true contain mock get all partition for topic return initial discovery get get partition assert equal get expect subtask index initial discovery get num consumer num subtask subtask index subsequent discovery should not find anything list kafka topic partition second discovery partition discoverer discover partition list kafka topic partition third discovery partition discoverer discover partition assert equal second discovery size assert equal third discovery size test public void test multiple partition per consumer fix partition try final int partition i d final list kafka topic partition mock get all partition for topic return new array list final set kafka topic partition all partition new hash set for int p partition i d kafka topic partition part new kafka topic partition test topic p mock get all partition for topic return add part all partition add part final int num consumer final int min partition per consumer mock get all partition for topic return size num consumer final int max partition per consumer mock get all partition for topic return size num consumer get the start index the assertion below will fail if the assignment logic do not meet correct contract int start index kafka topic partition assigner assign mock get all partition for topic return get num consumer for int subtask index subtask index num consumer subtask index test partition discoverer partition discoverer new test partition discoverer topic descriptor subtask index num consumer test partition discoverer create mock get all topic sequence from fix return collection singleton list test topic test partition discoverer create mock get all partition from topic sequence from fix return mock get all partition for topic return partition discoverer open list kafka topic partition initial discovery partition discoverer discover partition assert true initial discovery size min partition per consumer assert true initial discovery size max partition per consumer for kafka topic partition p initial discovery check that the element be actually contain assert true all partition remove p assert equal get expect subtask index p start index num consumer subtask index subsequent discovery should not find anything list kafka topic partition second discovery partition discoverer discover partition list kafka topic partition third discovery partition discoverer discover partition assert equal second discovery size assert equal third discovery size all partition must have be assign assert true all partition be empty catch exception e e print stack trace fail e get message test public void test partition fewer than consumer fix partition try list kafka topic partition mock get all partition for topic return array as list new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic final set kafka topic partition all partition new hash set all partition add all mock get all partition for topic return final int num consumer mock get all partition for topic return size get the start index the assertion below will fail if the assignment logic do not meet correct contract int start index kafka topic partition assigner assign mock get all partition for topic return get num consumer for int subtask index subtask index num consumer subtask index test partition discoverer partition discoverer new test partition discoverer topic descriptor subtask index num consumer test partition discoverer create mock get all topic sequence from fix return collection singleton list test topic test partition discoverer create mock get all partition from topic sequence from fix return mock get all partition for topic return partition discoverer open list kafka topic partition initial discovery partition discoverer discover partition assert true initial discovery size for kafka topic partition p initial discovery check that the element be actually contain assert true all partition remove p assert equal get expect subtask index p start index num consumer subtask index subsequent discovery should not find anything list kafka topic partition second discovery partition discoverer discover partition list kafka topic partition third discovery partition discoverer discover partition assert equal second discovery size assert equal third discovery size all partition must have be assign assert true all partition be empty catch exception e e print stack trace fail e get message test public void test grow partition try final int new partition i d list kafka topic partition all partition new array list for int p new partition i d kafka topic partition part new kafka topic partition test topic p all partition add part first discovery return a initial subset of the partition second return all partition list list kafka topic partition mock get all partition for topic return sequence array as list new array list all partition sub list all partition final set kafka topic partition all new partition new hash set all partition final set kafka topic partition all initial partition new hash set mock get all partition for topic return sequence get final int num consumer final int min initial partition per consumer mock get all partition for topic return sequence get size num consumer final int max initial partition per consumer mock get all partition for topic return sequence get size num consumer final int min new partition per consumer all partition size num consumer final int max new partition per consumer all partition size num consumer get the start index the assertion below will fail if the assignment logic do not meet correct contract int start index kafka topic partition assigner assign all partition get num consumer test partition discoverer partition discoverer subtask0 new test partition discoverer topic descriptor num consumer test partition discoverer create mock get all topic sequence from fix return collection singleton list test topic deep clone mock get all partition for topic return sequence partition discoverer subtask0 open test partition discoverer partition discoverer subtask1 new test partition discoverer topic descriptor num consumer test partition discoverer create mock get all topic sequence from fix return collection singleton list test topic deep clone mock get all partition for topic return sequence partition discoverer subtask1 open test partition discoverer partition discoverer subtask2 new test partition discoverer topic descriptor num consumer test partition discoverer create mock get all topic sequence from fix return collection singleton list test topic deep clone mock get all partition for topic return sequence partition discoverer subtask2 open list kafka topic partition initial discovery subtask0 partition discoverer subtask0 discover partition list kafka topic partition initial discovery subtask1 partition discoverer subtask1 discover partition list kafka topic partition initial discovery subtask2 partition discoverer subtask2 discover partition assert true initial discovery subtask0 size min initial partition per consumer assert true initial discovery subtask0 size max initial partition per consumer assert true initial discovery subtask1 size min initial partition per consumer assert true initial discovery subtask1 size max initial partition per consumer assert true initial discovery subtask2 size min initial partition per consumer assert true initial discovery subtask2 size max initial partition per consumer for kafka topic partition p initial discovery subtask0 check that the element be actually contain assert true all initial partition remove p assert equal get expect subtask index p start index num consumer for kafka topic partition p initial discovery subtask1 check that the element be actually contain assert true all initial partition remove p assert equal get expect subtask index p start index num consumer for kafka topic partition p initial discovery subtask2 check that the element be actually contain assert true all initial partition remove p assert equal get expect subtask index p start index num consumer all partition must have be assign assert true all initial partition be empty now execute discover again should find the extra new partition list kafka topic partition second discovery subtask0 partition discoverer subtask0 discover partition list kafka topic partition second discovery subtask1 partition discoverer subtask1 discover partition list kafka topic partition second discovery subtask2 partition discoverer subtask2 discover partition new discover partition must not have be discover before assert true collection disjoint second discovery subtask0 initial discovery subtask0 assert true collection disjoint second discovery subtask1 initial discovery subtask1 assert true collection disjoint second discovery subtask2 initial discovery subtask2 assert true second discovery subtask0 size initial discovery subtask0 size min new partition per consumer assert true second discovery subtask0 size initial discovery subtask0 size max new partition per consumer assert true second discovery subtask1 size initial discovery subtask1 size min new partition per consumer assert true second discovery subtask1 size initial discovery subtask1 size max new partition per consumer assert true second discovery subtask2 size initial discovery subtask2 size min new partition per consumer assert true second discovery subtask2 size initial discovery subtask2 size max new partition per consumer check that the two discovery combine form all partition for kafka topic partition p initial discovery subtask0 assert true all new partition remove p assert equal get expect subtask index p start index num consumer for kafka topic partition p initial discovery subtask1 assert true all new partition remove p assert equal get expect subtask index p start index num consumer for kafka topic partition p initial discovery subtask2 assert true all new partition remove p assert equal get expect subtask index p start index num consumer for kafka topic partition p second discovery subtask0 assert true all new partition remove p assert equal get expect subtask index p start index num consumer for kafka topic partition p second discovery subtask1 assert true all new partition remove p assert equal get expect subtask index p start index num consumer for kafka topic partition p second discovery subtask2 assert true all new partition remove p assert equal get expect subtask index p start index num consumer all partition must have be assign assert true all new partition be empty catch exception e e print stack trace fail e get message test public void test deterministic assignment with different fetch partition ordering throw exception int num subtask list kafka topic partition mock get all partition for topic return array as list new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic2 new kafka topic partition test topic2 list kafka topic partition mock get all partition for topic return out of order array as list new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic2 new kafka topic partition test topic new kafka topic partition test topic2 new kafka topic partition test topic for int subtask index subtask index num subtask subtask index test partition discoverer partition discoverer new test partition discoverer topic descriptor subtask index num subtask test partition discoverer create mock get all topic sequence from fix return array as list test topic test topic2 test partition discoverer create mock get all partition from topic sequence from fix return mock get all partition for topic return partition discoverer open test partition discoverer partition discoverer out of order new test partition discoverer topic descriptor subtask index num subtask test partition discoverer create mock get all topic sequence from fix return array as list test topic test topic2 test partition discoverer create mock get all partition from topic sequence from fix return mock get all partition for topic return out of order partition discoverer out of order open list kafka topic partition discover partition partition discoverer discover partition list kafka topic partition discover partition out of order partition discoverer out of order discover partition the subscribe partition should be identical regardless of the input partition order collection sort discover partition new kafka topic partition comparator collection sort discover partition out of order new kafka topic partition comparator assert equal discover partition discover partition out of order test public void test non contiguous partition id discovery throw exception list kafka topic partition mock get all partition for topic return1 array as list new kafka topic partition test topic new kafka topic partition test topic list kafka topic partition mock get all partition for topic return2 array as list new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic new kafka topic partition test topic test partition discoverer partition discoverer new test partition discoverer topic descriptor test partition discoverer create mock get all topic sequence from fix return collection singleton list test topic first metadata fetch have missing partition that appear only in the second fetch need to create new modifiable list for each fetch since internally iterable remove be use array as list new array list mock get all partition for topic return1 new array list mock get all partition for topic return2 partition discoverer open list kafka topic partition discover partitions1 partition discoverer discover partition assert equal discover partitions1 size assert true discover partitions1 contain new kafka topic partition test topic assert true discover partitions1 contain new kafka topic partition test topic list kafka topic partition discover partitions2 partition discoverer discover partition assert equal discover partitions2 size assert true discover partitions2 contain new kafka topic partition test topic assert true discover partitions2 contain new kafka topic partition test topic assert true discover partitions2 contain new kafka topic partition test topic private boolean contain list kafka topic partition partition int partition for kafka topic partition ktp partition if ktp get partition partition return true return false private list list kafka topic partition deep clone list list kafka topic partition to clone list list kafka topic partition clone new array list to clone size for list kafka topic partition partition to clone to clone list kafka topic partition clone partition new array list partition to clone size clone partition add all partition to clone clone add clone partition return clone utility method that determine the expect subtask index a partition should be assign to depend on the start index and use the partition id as the offset from that start index in clockwise direction p the expectation be base on the distribution contract of link kafka topic partition assigner assign kafka topic partition int private static int get expect subtask index kafka topic partition partition int start index int num subtask return start index partition get partition num subtask 
kafka topic descriptor test run with parameterized class public class kafka topic descriptor test parameterized parameter public static collection object datum return array as list new object topic1 null array as list topic1 topic2 topic3 true topic1 null array as list topic2 topic3 false topic1 pattern compile topic 0 - 9 null true topicx pattern compile topic 0 - 9 null false private string topic private pattern topic pattern private list string fix topic boolean expect public kafka topic descriptor test string topic pattern topic pattern list string fix topic boolean expect this topic topic this topic pattern topic pattern this fix topic fix topic this expect expected test public void test be match topic kafka topic descriptor topic descriptor new kafka topic descriptor fix topic topic pattern assert assert equal expect topic descriptor be match topic topic 
kafka table test base run with parameterized class public abstract class kafka table test base extend kafka test base with flink private static final string json format json private static final string avro format avro private static final string csv format csv parameterized parameter public boolean be legacy connector parameterize parameter public string format parameterize parameter name legacy format public static object parameter return new object cover all format for new and old connector new object false json format new object false avro format new object false csv format new object true json format new object true avro format new object true csv format protect stream execution environment env protect stream table environment t env before public void setup env stream execution environment get execution environment t env stream table environment create env environment setting new instance watermark be only support in blink planner use blink planner in streaming mode build env get config set restart strategy restart strategy no restart we have to use single parallelism because we will count the message in sink to terminate the job env set parallelism public abstract string factory identifier use for legacy planner public abstract string kafka version test public void test kafka source sink throw exception we always use a different topic name for each parameterize topic in order to make sure the topic can be create final string topic tstopic format be legacy connector create test topic topic produce a event time stream into kafka string group id standard prop get property group id string bootstrap standard prop get property bootstrap server final string create table if be legacy connector create table string format create table kafka n compute price as price 1.0 n price decimal n currency string n log date date n log time time n log t timestamp n t as log t interval second n watermark for t as t n with n connector s n topic s n property bootstrap server s n property group id s n scan startup mode earliest offset n s n factory identifier topic bootstrap group id format option else create table string format create table kafka n compute price as price 1.0 n price decimal n currency string n log date date n log time time n log t timestamp n t as log t interval second n watermark for t as t n with n connector type kafka n connector version s n connector topic s n connector property bootstrap server s n connector property group id s n connector startup mode earliest offset n update mode append n s n kafka version topic bootstrap group id format option t env execute sql create table string initial value insert into kafka n select cast price as decimal currency cast d as date cast t as time cast t as timestamp n from value 2.02 euro 2019 - 12 00:00 2019 - 12 12 00 00:01 n 1.11 we dollar 2019 - 12 00:00 2019 - 12 12 00 00:02 n yen 2019 - 12 00:00 2019 - 12 12 00 00:03 n 3.1 euro 2019 - 12 00:00 2019 - 12 12 00 00:04 n 5.33 we dollar 2019 - 12 00:00 2019 - 12 12 00 00:05 n dummy 2019 - 12 00:00 2019 - 12 12 00 00:10 n as order price currency d t t table env util exec insert sql and wait result t env initial value consume stream from kafka string query select n cast tumble end t interval second as varchar n cast max log date as varchar n cast max log time as varchar n cast max t as varchar n count n cast max price as decimal n from kafka n group by tumble t interval second datum stream row datum result t env to append stream t env sql query query row datum class testing sink function sink new testing sink function result add sink sink set parallelism try env execute job catch throwable e we have to use a specific exception to indicate the job be finish because the register kafka source be infinite if be cause by job finish e re throw throw e list string expect array as list i 2019 - 12 12 00 00:05 000,2019 12 - 12 00:00 03,2019 12 - 12 00:00 04.004 3,50 i 2019 - 12 12 00 00:10 000,2019 12 - 12 00:00 05,2019 12 - 12 00:00 06.006 2,5 assert equal expect testing sink function row cleanup delete test topic topic private string format option if be legacy connector return string format format s format else string format type string format format type s format if format equal avro format legacy connector require to specify avro schema string avro schema type record name row field name price type type byte logical type decimal precision scale name currency type string null name log date type type int logical type date name log time type type int logical type time millis name log t type type long logical type timestamp millis return format type string format format avro schema s avro schema else return format type private static final class testing sink function implement sink function row datum private static final long serial version u i d l private static list string row new array list private final int expect size private testing sink function int expect size this expect size expect size row clear override public void invoke row datum value context context throw exception row add value to string if row size expect size job finish throw new success exception protect static boolean be cause by job finish throwable e if e instanceof success exception return true else if e get cause null return be cause by job finish e get cause else return false 
flink kinesis consumer migration test run with parameterized class public class flink kinesis consumer migration test todo change this to the correspond savepoint version to be write e g link migration version v1 for 1.3 todo and remove all ignore annotation on the write snapshot method to generate savepoint todo note you should generate the savepoint base on the release branch instead of the master private final migration version flink generate savepoint version null private static final string test stream name fake stream1 private static final sequence number test sequence number new sequence number private static final string test shard id kinesis shard id generator generate from shard order private static final hash map stream shard metadata sequence number test state new hash map static stream shard metadata shard metadata new stream shard metadata shard metadata set stream name test stream name shard metadata set shard id test shard id test state put shard metadata test sequence number private final migration version test migrate version parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 public flink kinesis consumer migration test migration version test migrate version this test migrate version test migrate version manually run this to write binary snapshot datum ignore test public void write snapshot throw exception write snapshot src test resource kinesis consumer migration test flink flink generate savepoint version snapshot test state write empty state snapshot write snapshot src test resource kinesis consumer migration test flink flink generate savepoint version empty snapshot new hash map test public void test restore with empty state throw exception final list stream shard handle initial discovery shard new array list test state size for stream shard metadata shard metadata test state key set shard shard new shard shard set shard id shard metadata get shard id sequence number range sequence number range new sequence number range sequence number range with start sequence number shard set sequence number range sequence number range initial discovery shard add new stream shard handle shard metadata get stream name shard final test fetcher string fetcher new test fetcher collection singleton list test stream name new test source context new test runtime context true test util get standard property new kinesis deserialization schema wrapper new simple string schema null initial discovery shard final dummy flink kinesis consumer string consumer function new dummy flink kinesis consumer fetcher new kinesis deserialization schema wrapper new simple string schema stream source string dummy flink kinesis consumer string consumer operator new stream source consumer function final abstract stream operator test harness string test harness new abstract stream operator test harness consumer operator test harness setup test harness initialize state operator snapshot util get resource filename kinesis consumer migration test flink test migrate version empty snapshot test harness open consumer function run new test source context assert that no state be restore assert true consumer function get restore state be empty although the restore state be empty the fetcher should still have be register the initial discover shard furthermore the discover shard should be consider a newly create shard while the job wasn t run and therefore should be consume from the earliest sequence number kinesis stream shard state restore shard state fetcher get subscribe shard state get assert equal test stream name restore shard state get stream shard handle get stream name assert equal test shard id restore shard state get stream shard handle get shard get shard id assert false restore shard state get stream shard handle be closed assert equal sentinel sequence number sentinel earliest sequence num get restore shard state get last process sequence num consumer operator close consumer operator cancel test public void test restore throw exception final list stream shard handle initial discovery shard new array list test state size for stream shard metadata shard metadata test state key set shard shard new shard shard set shard id shard metadata get shard id sequence number range sequence number range new sequence number range sequence number range with start sequence number shard set sequence number range sequence number range initial discovery shard add new stream shard handle shard metadata get stream name shard final test fetcher string fetcher new test fetcher collection singleton list test stream name new test source context new test runtime context true test util get standard property new kinesis deserialization schema wrapper new simple string schema null initial discovery shard final dummy flink kinesis consumer string consumer function new dummy flink kinesis consumer fetcher new kinesis deserialization schema wrapper new simple string schema stream source string dummy flink kinesis consumer string consumer operator new stream source consumer function final abstract stream operator test harness string test harness new abstract stream operator test harness consumer operator test harness setup test harness initialize state operator snapshot util get resource filename kinesis consumer migration test flink test migrate version snapshot test harness open consumer function run new test source context assert that state be correctly restore assert not equal null consumer function get restore state assert equal consumer function get restore state size assert equal test state remove equivalence wrapper consumer function get restore state assert equal fetcher get subscribe shard state size assert equal test sequence number fetcher get subscribe shard state get get last process sequence num kinesis stream shard state restore shard state fetcher get subscribe shard state get assert equal test stream name restore shard state get stream shard handle get stream name assert equal test shard id restore shard state get stream shard handle get shard get shard id assert false restore shard state get stream shard handle be closed assert equal test sequence number restore shard state get last process sequence num consumer operator close consumer operator cancel test public void test restore with reshard stream throw exception final list stream shard handle initial discovery shard new array list test state size for stream shard metadata shard metadata test state key set setup the closed shard shard close shard new shard close shard set shard id shard metadata get shard id sequence number range close sequence number range new sequence number range close sequence number range with start sequence number close sequence number range with end sequence number this represent a closed shard close shard set sequence number range close sequence number range initial discovery shard add new stream shard handle shard metadata get stream name close shard setup the new shard shard new split shard1 new shard new split shard1 set shard id kinesis shard id generator generate from shard order sequence number range new sequence number range1 new sequence number range new sequence number range1 with start sequence number new split shard1 set sequence number range new sequence number range1 new split shard1 set parent shard id test shard id shard new split shard2 new shard new split shard2 set shard id kinesis shard id generator generate from shard order sequence number range new sequence number range2 new sequence number range new sequence number range2 with start sequence number new split shard2 set sequence number range new sequence number range2 new split shard2 set parent shard id test shard id initial discovery shard add new stream shard handle shard metadata get stream name new split shard1 initial discovery shard add new stream shard handle shard metadata get stream name new split shard2 final test fetcher string fetcher new test fetcher collection singleton list test stream name new test source context new test runtime context true test util get standard property new kinesis deserialization schema wrapper new simple string schema null initial discovery shard final dummy flink kinesis consumer string consumer function new dummy flink kinesis consumer fetcher new kinesis deserialization schema wrapper new simple string schema stream source string dummy flink kinesis consumer string consumer operator new stream source consumer function final abstract stream operator test harness string test harness new abstract stream operator test harness consumer operator test harness setup test harness initialize state operator snapshot util get resource filename kinesis consumer migration test flink test migrate version snapshot test harness open consumer function run new test source context assert that state be correctly restore assert not equal null consumer function get restore state assert equal consumer function get restore state size assert equal test state remove equivalence wrapper consumer function get restore state assert that the fetcher be register with all shard include new shard assert equal fetcher get subscribe shard state size kinesis stream shard state restore closed shard state fetcher get subscribe shard state get assert equal test stream name restore closed shard state get stream shard handle get stream name assert equal test shard id restore closed shard state get stream shard handle get shard get shard id assert true restore closed shard state get stream shard handle be closed assert equal test sequence number restore closed shard state get last process sequence num kinesis stream shard state restore new split shard1 fetcher get subscribe shard state get assert equal test stream name restore new split shard1 get stream shard handle get stream name assert equal kinesis shard id generator generate from shard order restore new split shard1 get stream shard handle get shard get shard id assert false restore new split shard1 get stream shard handle be close new shard should be consume from the beginning assert equal sentinel sequence number sentinel earliest sequence num get restore new split shard1 get last process sequence num kinesis stream shard state restore new split shard2 fetcher get subscribe shard state get assert equal test stream name restore new split shard2 get stream shard handle get stream name assert equal kinesis shard id generator generate from shard order restore new split shard2 get stream shard handle get shard get shard id assert false restore new split shard2 get stream shard handle be close new shard should be consume from the beginning assert equal sentinel sequence number sentinel earliest sequence num get restore new split shard2 get last process sequence num consumer operator close consumer operator cancel suppress warning unchecked private void write snapshot string path hash map stream shard metadata sequence number state throw exception final list stream shard handle initial discovery shard new array list state size for stream shard metadata shard metadata state key set shard shard new shard shard set shard id shard metadata get shard id sequence number range sequence number range new sequence number range sequence number range with start sequence number shard set sequence number range sequence number range initial discovery shard add new stream shard handle shard metadata get stream name shard final test fetcher string fetcher new test fetcher collection singleton list test stream name new test source context new test runtime context true test util get standard property new kinesis deserialization schema wrapper new simple string schema state initial discovery shard final dummy flink kinesis consumer string consumer new dummy flink kinesis consumer fetcher new kinesis deserialization schema wrapper new simple string schema stream source string dummy flink kinesis consumer string consumer operator new stream source consumer final abstract stream operator test harness string test harness new abstract stream operator test harness consumer operator test harness set time characteristic time characteristic processing time test harness setup test harness open final atomic reference throwable error new atomic reference run the source asynchronously thread runner new thread override public void run try consumer run new test source context catch throwable t t print stack trace error set t runner start fetcher wait until run final operator subtask state snapshot synchronize test harness get checkpoint lock snapshot test harness snapshot 0 l 0 l operator snapshot util write state handle snapshot path consumer operator close runner join private static class dummy flink kinesis consumer t extend flink kinesis consumer t private static final long serial version u i d l private kinesis datum fetcher t mock fetcher private static property dummy config test util get standard property dummy flink kinesis consumer kinesis datum fetcher t mock fetcher kinesis deserialization schema t schema super test stream name schema dummy config this mock fetcher mock fetcher override protect kinesis datum fetcher t create fetcher list string stream source context t source context runtime context runtime context property config prop kinesis deserialization schema t deserializer return mock fetcher private static class test fetcher t extend kinesis datum fetcher t final one shot latch run latch new one shot latch final hash map stream shard metadata sequence number test state snapshot final list stream shard handle test initial discovery shard public test fetcher list string stream source function source context t source context runtime context runtime context property config prop kinesis deserialization schema t deserialization schema hash map stream shard metadata sequence number test state snapshot list stream shard handle test initial discovery shard super stream source context runtime context config prop deserialization schema default shard assigner null null this test state snapshot test state snapshot this test initial discovery shard test initial discovery shard override public void run fetcher throw exception run latch trigger override public hash map stream shard metadata sequence number snapshot state return test state snapshot public void wait until run throw interrupted exception run latch await override public list stream shard handle discover new shard to subscribe throw interrupted exception return test initial discovery shard override public void await termination throw interrupted exception do nothing private static map stream shard metadata sequence number remove equivalence wrapper map stream shard metadata equivalence wrapper sequence number equivalence wrap map map stream shard metadata sequence number unwrapped new hash map for map entry stream shard metadata equivalence wrapper sequence number wrap equivalence wrap map entry set unwrapped put wrap get key get shard metadata wrap get value return unwrap 
flink kinesis consumer test run with power mock runner class prepare for test flink kinesis consumer class kinesis config util class public class flink kinesis consumer test extend test logger test relate to state initialization test public void test use restore state for snapshot if fetcher not initialize throw exception property config test util get standard property list tuple2 stream shard metadata sequence number global union state new array list global union state add tuple2 of kinesis datum fetcher convert to stream shard metadata new stream shard handle fake stream new shard with shard id kinesis shard id generator generate from shard order new sequence number global union state add tuple2 of kinesis datum fetcher convert to stream shard metadata new stream shard handle fake stream new shard with shard id kinesis shard id generator generate from shard order new sequence number global union state add tuple2 of kinesis datum fetcher convert to stream shard metadata new stream shard handle fake stream new shard with shard id kinesis shard id generator generate from shard order new sequence number global union state add tuple2 of kinesis datum fetcher convert to stream shard metadata new stream shard handle fake stream new shard with shard id kinesis shard id generator generate from shard order new sequence number testing list state tuple2 stream shard metadata sequence number list state new testing list state for tuple2 stream shard metadata sequence number state global union state list state add state flink kinesis consumer string consumer new flink kinesis consumer fake stream new simple string schema config runtime context context mock runtime context class when context get index of this subtask then return when context get number of parallel subtask then return consumer set runtime context context operator state store operator state store mock operator state store class when operator state store get union list state matcher any list state descriptor class then return list state state initialization context initialization context mock state initialization context class when initialization context get operator state store then return operator state store when initialization context be restore then return true consumer initialize state initialization context only open not run consumer open new configuration arbitrary checkpoint id and timestamp consumer snapshot state new state snapshot context synchronous impl assert true list state be clear call the checkpointed list state should contain only the shard that it should subscribe to assert equal global union state size list state get list size assert true list state get list contain global union state get assert true list state get list contain global union state get test public void test list state change after snapshot state throw exception setup config initial state and expect state snapshot property config test util get standard property array list tuple2 stream shard metadata sequence number initial state new array list initial state add tuple2 of kinesis datum fetcher convert to stream shard metadata new stream shard handle fake stream1 new shard with shard id kinesis shard id generator generate from shard order new sequence number array list tuple2 stream shard metadata sequence number expect state snapshot new array list expect state snapshot add tuple2 of kinesis datum fetcher convert to stream shard metadata new stream shard handle fake stream1 new shard with shard id kinesis shard id generator generate from shard order new sequence number expect state snapshot add tuple2 of kinesis datum fetcher convert to stream shard metadata new stream shard handle fake stream1 new shard with shard id kinesis shard id generator generate from shard order new sequence number expect state snapshot add tuple2 of kinesis datum fetcher convert to stream shard metadata new stream shard handle fake stream1 new shard with shard id kinesis shard id generator generate from shard order new sequence number mock operator state backend and initial state for initialize state testing list state tuple2 stream shard metadata sequence number list state new testing list state for tuple2 stream shard metadata sequence number state initial state list state add state operator state store operator state store mock operator state store class when operator state store get union list state matcher any list state descriptor class then return list state state initialization context initialization context mock state initialization context class when initialization context get operator state store then return operator state store when initialization context be restore then return true mock a run fetcher and its state for snapshot hash map stream shard metadata sequence number state snapshot new hash map for tuple2 stream shard metadata sequence number tuple expect state snapshot state snapshot put tuple f0 tuple f1 kinesis datum fetcher mock fetcher mock kinesis datum fetcher class when mock fetcher snapshot state then return state snapshot create a consumer and test the snapshot state flink kinesis consumer string consumer new flink kinesis consumer fake stream new simple string schema config flink kinesis consumer mock consumer spy consumer runtime context context mock runtime context class when context get index of this subtask then return mock consumer set runtime context context mock consumer initialize state initialization context mock consumer open new configuration whitebox set internal state mock consumer fetcher mock fetcher mock consumer as run mock consumer snapshot state mock function snapshot context class assert equal true list state clear call assert equal list state get list size for tuple2 stream shard metadata sequence number state initial state for tuple2 stream shard metadata sequence number current state list state get list assert not equal state current state for tuple2 stream shard metadata sequence number state expect state snapshot boolean have one be same false for tuple2 stream shard metadata sequence number current state list state get list have one be same have one be same state equal current state assert equal true have one be same test relate to fetcher initialization test suppress warning unchecked public void test fetcher should not be restore from failure if not restore from checkpoint throw exception kinesis datum fetcher mock fetcher mock kinesis datum fetcher assume the give config be correct power mockito mock static kinesis config util class power mockito do nothing when kinesis config util class testable flink kinesis consumer consumer new testable flink kinesis consumer fake stream new property consumer open new configuration consumer run mockito mock source function source context class test suppress warning unchecked public void test fetcher should be correctly seed if restore from checkpoint throw exception setup initial state hash map stream shard handle sequence number fake restore state get fake restore store all mock operator state backend and initial state for initialize state testing list state tuple2 stream shard metadata sequence number list state new testing list state for map entry stream shard handle sequence number state fake restore state entry set list state add tuple2 of kinesis datum fetcher convert to stream shard metadata state get key state get value operator state store operator state store mock operator state store class when operator state store get union list state matcher any list state descriptor class then return list state state initialization context initialization context mock state initialization context class when initialization context get operator state store then return operator state store when initialization context be restore then return true mock fetcher kinesis datum fetcher mock fetcher mock kinesis datum fetcher list stream shard handle shard new array list shard add all fake restore state key set when mock fetcher discover new shard to subscribe then return shard assume the give config be correct power mockito mock static kinesis config util class power mockito do nothing when kinesis config util class start to test fetcher s initial state seed testable flink kinesis consumer consumer new testable flink kinesis consumer fake stream new property consumer initialize state initialization context consumer open new configuration consumer run mockito mock source function source context class for map entry stream shard handle sequence number restore shard fake restore state entry set mockito verify mock fetcher register new subscribe shard state new kinesis stream shard state kinesis datum fetcher convert to stream shard metadata restore shard get key restore shard get key restore shard get value test suppress warning unchecked public void test fetcher should be correctly seed only its own state throw exception setup initial state hash map stream shard handle sequence number fake restore state get fake restore store fake stream1 hash map stream shard handle sequence number fake restore state for other get fake restore store fake stream2 mock operator state backend and initial state for initialize state testing list state tuple2 stream shard metadata sequence number list state new testing list state for map entry stream shard handle sequence number state fake restore state entry set list state add tuple2 of kinesis datum fetcher convert to stream shard metadata state get key state get value for map entry stream shard handle sequence number state fake restore state for other entry set list state add tuple2 of kinesis datum fetcher convert to stream shard metadata state get key state get value operator state store operator state store mock operator state store class when operator state store get union list state matcher any list state descriptor class then return list state state initialization context initialization context mock state initialization context class when initialization context get operator state store then return operator state store when initialization context be restore then return true mock fetcher kinesis datum fetcher mock fetcher mock kinesis datum fetcher list stream shard handle shard new array list shard add all fake restore state key set when mock fetcher discover new shard to subscribe then return shard assume the give config be correct power mockito mock static kinesis config util class power mockito do nothing when kinesis config util class start to test fetcher s initial state seed testable flink kinesis consumer consumer new testable flink kinesis consumer fake stream new property consumer initialize state initialization context consumer open new configuration consumer run mockito mock source function source context class for map entry stream shard handle sequence number restore shard fake restore state for other entry set should never get restore state not belong to itself mockito verify mock fetcher never register new subscribe shard state new kinesis stream shard state kinesis datum fetcher convert to stream shard metadata restore shard get key restore shard get key restore shard get value for map entry stream shard handle sequence number restore shard fake restore state entry set should get restore state belong to itself mockito verify mock fetcher register new subscribe shard state new kinesis stream shard state kinesis datum fetcher convert to stream shard metadata restore shard get key restore shard get key restore shard get value this test that the consumer correctly pick up shard that be not discover on the previous run case under test if the original parallelism be and state be consumer subtask stream1 shard1 sequential number xxx consumer subtask stream1 shard2 sequential number yyy after discover new shard to subscribe if there be two shard shard3 shard4 create consumer subtask late for discover new shard to subscribe stream1 shard1 sequential number xxx consumer subtask stream1 shard2 sequential number yyy stream1 shard4 sequential number zzz if snapshot state occur and parallelism be change to union state will be stream1 shard1 sequential number xxx stream1 shard2 sequential number yyy stream1 shard4 sequential number zzz fetcher should be seed with stream1 shard1 sequential number xxx stream1 shard2 sequential number yyy stream1 share3 sentinel sequence number sentinel earliest sequence num stream1 shard4 sequential number zzz test suppress warning unchecked public void test fetcher should be correctly seed with new discover kinesis stream shard throw exception setup initial state hash map stream shard handle sequence number fake restore state get fake restore store all mock operator state backend and initial state for initialize state testing list state tuple2 stream shard metadata sequence number list state new testing list state for map entry stream shard handle sequence number state fake restore state entry set list state add tuple2 of kinesis datum fetcher convert to stream shard metadata state get key state get value operator state store operator state store mock operator state store class when operator state store get union list state matcher any list state descriptor class then return list state state initialization context initialization context mock state initialization context class when initialization context get operator state store then return operator state store when initialization context be restore then return true mock fetcher kinesis datum fetcher mock fetcher mock kinesis datum fetcher list stream shard handle shard new array list shard add all fake restore state key set shard add new stream shard handle fake stream2 new shard with shard id kinesis shard id generator generate from shard order when mock fetcher discover new shard to subscribe then return shard assume the give config be correct power mockito mock static kinesis config util class power mockito do nothing when kinesis config util class start to test fetcher s initial state seed testable flink kinesis consumer consumer new testable flink kinesis consumer fake stream new property consumer initialize state initialization context consumer open new configuration consumer run mockito mock source function source context class fake restore state put new stream shard handle fake stream2 new shard with shard id kinesis shard id generator generate from shard order sentinel sequence number sentinel earliest sequence num get for map entry stream shard handle sequence number restore shard fake restore state entry set mockito verify mock fetcher register new subscribe shard state new kinesis stream shard state kinesis datum fetcher convert to stream shard metadata restore shard get key restore shard get key restore shard get value test public void test legacy kinesis stream shard to stream shard metadata conversion string stream name fake stream1 string shard id shard string parent shard id shard string adjacent parent shard id shard string start hash key key string end hash key key string start sequence number seq string end sequence number seq stream shard metadata stream shard metadata new stream shard metadata stream shard metadata set stream name stream name stream shard metadata set shard id shard id stream shard metadata set parent shard id parent shard id stream shard metadata set adjacent parent shard id adjacent parent shard id stream shard metadata set start hash key start hash key stream shard metadata set end hash key end hash key stream shard metadata set start sequence number start sequence number stream shard metadata set end sequence number end sequence number shard shard new shard with shard id shard id with parent shard id parent shard id with adjacent parent shard id adjacent parent shard id with hash key range new hash key range with start hash key start hash key with end hash key end hash key with sequence number range new sequence number range with start sequence number start sequence number with end sequence number end sequence number kinesis stream shard kinesis stream shard new kinesis stream shard stream name shard assert equal stream shard metadata kinesis stream shard convert to stream shard metadata kinesis stream shard test public void test stream shard metadata serialize use pojo serializer type information stream shard metadata type information type information of stream shard metadata class assert true type information create serializer new execution config instanceof pojo serializer flink ensure that a state change in the stream shard metadata other than link stream shard metadata get shard id or link stream shard metadata get stream name do not result in the shard not be able to be restore this handle the corner case where the store shard metadata be open no ending sequence number but after the job restore the shard have be close end number set due to re sharding and we can no longer rely on link stream shard metadata equal object to find back the sequence number in the collection of restore shard metadata p p therefore we will rely on synchronize the snapshot s state with the kinesis shard before attempt to find back the sequence number to restore test public void test find sequence number to restore from if the shard have be close since the state be store throw exception setup initial state hash map stream shard handle sequence number fake restore state get fake restore store all mock operator state backend and initial state for initialize state testing list state tuple2 stream shard metadata sequence number list state new testing list state for map entry stream shard handle sequence number state fake restore state entry set list state add tuple2 of kinesis datum fetcher convert to stream shard metadata state get key state get value operator state store operator state store mock operator state store class when operator state store get union list state matcher any list state descriptor class then return list state state initialization context initialization context mock state initialization context class when initialization context get operator state store then return operator state store when initialization context be restore then return true mock fetcher kinesis datum fetcher mock fetcher mock kinesis datum fetcher list stream shard handle shard new array list create a fake stream shard handle base on the first entry in the restore state final stream shard handle original stream shard handle fake restore state key set iterator next final stream shard handle close stream shard handle new stream shard handle original stream shard handle get stream name original stream shard handle get shard close the shard handle by set a end sequence number final sequence number range sequence number range new sequence number range sequence number range set end sequence number close stream shard handle get shard set sequence number range sequence number range shard add closed stream shard handle when mock fetcher discover new shard to subscribe then return shard assume the give config be correct power mockito mock static kinesis config util class power mockito do nothing when kinesis config util class start to test fetcher s initial state seed testable flink kinesis consumer consumer new testable flink kinesis consumer fake stream new property consumer initialize state initialization context consumer open new configuration consumer run mockito mock source function source context class mockito verify mock fetcher register new subscribe shard state new kinesis stream shard state kinesis datum fetcher convert to stream shard metadata close stream shard handle close stream shard handle fake restore state get closed stream shard handle private static final class testing list state t implement list state t private final list t list new array list private boolean clear call false override public void clear list clear clear call true override public iterable t get throw exception return list override public void add t value throw exception list add value public list t get list return list public boolean be clear call return clear call override public void update list t value throw exception list clear add all value override public void add all list t value throw exception if value null list add all value private hash map stream shard handle sequence number get fake restore store string stream name hash map stream shard handle sequence number fake restore state new hash map if stream name equal fake stream1 stream name equal all fake restore state put new stream shard handle fake stream1 new shard with shard id kinesis shard id generator generate from shard order new sequence number uuid random u u i d to string fake restore state put new stream shard handle fake stream1 new shard with shard id kinesis shard id generator generate from shard order new sequence number uuid random u u i d to string fake restore state put new stream shard handle fake stream1 new shard with shard id kinesis shard id generator generate from shard order new sequence number uuid random u u i d to string if stream name equal fake stream2 stream name equal all fake restore state put new stream shard handle fake stream2 new shard with shard id kinesis shard id generator generate from shard order new sequence number uuid random u u i d to string fake restore state put new stream shard handle fake stream2 new shard with shard id kinesis shard id generator generate from shard order new sequence number uuid random u u i d to string return fake restore state private static kinesis datum fetcher mock kinesis datum fetcher throw exception kinesis datum fetcher mock fetcher mockito mock kinesis datum fetcher class java lang reflect constructor kinesis datum fetcher ctor java lang reflect constructor kinesis datum fetcher kinesis datum fetcher class get constructor class other param type new class ctor get parameter type length system arraycopy ctor get parameter type other param type ctor get parameter type length supplier object argument supplier object other param args new object other param type length for int i i other param type length i other param arg i mockito nullable other param type i return other param arg power mockito when new ctor with argument mockito any ctor get parameter type argument supplier get then return mock fetcher return mock fetcher test public void test periodic watermark throw exception string stream name fake stream name time max out of orderness time millisecond long auto watermark interval hash map string string subscribe stream to last discover shard id new hash map subscribe stream to last discover shard id put stream name null kinesis deserialization schema string deserialization schema new kinesis deserialization schema wrapper new simple string schema property prop new property prop set property consumer config constant aws region we east prop set property consumer config constant shard getrecord interval milli long to string 10 l block queue string shard1 new link blocking queue block queue string shard2 new link blocking queue map string list block queue string stream to queue map new hash map stream to queue map put stream name list new array list shard1 shard2 override create fetcher to mock kinesis flink kinesis consumer string source func new flink kinesis consumer string stream name deserialization schema prop override protect kinesis datum fetcher string create fetcher list string stream source context string source context runtime context runtime context property config prop kinesis deserialization schema string deserialization schema kinesis datum fetcher string fetcher new kinesis datum fetcher string stream source context source context get checkpoint lock runtime context config prop deserialization schema get shard assigner get periodic watermark assigner null new atomic reference new array list subscribe stream to last discover shard id prop fake kinesis behaviour factory block queue get record stream to queue map return fetcher source func set shard assigner stream shard handle i shard id return integer parse int stream shard handle get shard get shard id substr shard id length source func set periodic watermark assigner new test timestamp extractor max out of orderness there be currently no test harness specifically for source so we overlay the source thread here abstract stream operator test harness object test harness new abstract stream operator test harness object new stream source source func test harness set time characteristic time characteristic event time test harness get execution config set auto watermark interval auto watermark interval test harness initialize empty state test harness open concurrent link queue watermark watermark new concurrent link queue suppress warning unchecked source function source context string source context new collect source context test harness get checkpoint lock test harness get output override public void emit watermark watermark mark watermark add mark override public void mark as temporarily idle new thread try source func run source context catch interrupt exception e expect on cancel catch exception e throw new runtime exception e start shard1 put shard1 put shard2 put int record count int watermark count await record count test harness get output record count trigger watermark emit test harness set processing time test harness get processing time auto watermark interval watermark count advance watermark shard1 put record count await record count test harness get output record count trigger watermark emit test harness set processing time test harness get processing time auto watermark interval watermark count source func cancel test harness close assert equal record count record count test harness get output size assert equal watermark count watermark count watermark size assert that watermark org hamcrest matcher contain new watermark new watermark test public void test source synchronization throw exception final string stream name fake stream name final time max out of orderness time millisecond final long auto watermark interval final long watermark sync interval auto watermark interval test watermark tracker watermark set hash map string string subscribe stream to last discover shard id new hash map subscribe stream to last discover shard id put stream name null final kinesis deserialization schema string deserialization schema new kinesis deserialization schema wrapper new open checking string schema property prop new property prop set property consumer config constant aws region we east prop set property consumer config constant shard getrecord interval milli long to string 10 l prop set property consumer config constant watermark sync milli long to string watermark sync interval prop set property consumer config constant watermark lookahead milli long to string block queue string shard1 new link blocking queue map string list block queue string stream to queue map new hash map stream to queue map put stream name collection singleton list shard1 override create fetcher to mock kinesis flink kinesis consumer string source func new flink kinesis consumer string stream name deserialization schema prop override protect kinesis datum fetcher string create fetcher list string stream source function source context string source context runtime context runtime context property config prop kinesis deserialization schema string deserialization schema kinesis datum fetcher string fetcher new kinesis datum fetcher string stream source context source context get checkpoint lock runtime context config prop deserialization schema get shard assigner get periodic watermark assigner get watermark tracker new atomic reference new array list subscribe stream to last discover shard id prop fake kinesis behaviour factory block queue get record stream to queue map override protect void emit watermark necessary in this test to ensure that watermark state be update before the watermark timer callback be trigger synchronize source context get checkpoint lock super emit watermark return fetcher source func set shard assigner stream shard handle i shard id return integer parse int stream shard handle get shard get shard id substr shard id length source func set periodic watermark assigner new test timestamp extractor max out of orderness source func set watermark tracker new test watermark tracker there be currently no test harness specifically for source so we overlay the source thread here abstract stream operator test harness object test harness new abstract stream operator test harness object new stream source source func test harness set time characteristic time characteristic event time test harness get execution config set auto watermark interval auto watermark interval test harness initialize empty state test harness open final concurrent link queue object result test harness get output final atomic boolean throw on collect new atomic boolean suppress warning unchecked source function source context string source context new collect source context test harness get checkpoint lock result override public void mark as temporarily idle override public void collect serializable element if throw on collect get throw new runtime exception expect super collect element override public void emit watermark watermark mark result add mark final atomic reference exception source thread error new atomic reference new thread try source func run source context catch interrupt exception e expect on cancel catch exception e source thread error set e start array list object expect result new array list final long record1 shard1 put long to string record1 expect result add long to string record1 await record count result expect result size at this point we know the fetcher be initialize final kinesis datum fetcher fetcher org powermock reflect whitebox get internal state source func fetcher trigger watermark emit test harness set processing time test harness get processing time auto watermark interval expect result add new watermark verify watermark await record count result expect result size assert that result org hamcrest matcher contain expect result to array assert equal test watermark tracker watermark get trigger sync test harness set processing time test harness get processing time test watermark tracker assert global watermark final long record2 record1 watermark sync interval shard1 put long to string record2 wait for the record to be buffer in the emitter final record emitter emitter org powermock reflect whitebox get internal state fetcher record emitter record emitter record queue emitter queue emitter get queue deadline deadline deadline from now duration of seconds while deadline have time leave emitter queue get size thread sleep assert equal first record receive emitter queue get size advance the watermark since the new record be past global watermark threshold it win t be emit and the watermark do not advance test harness set processing time test harness get processing time auto watermark interval assert that result org hamcrest matcher contain expect result to array assert equal l long org powermock reflect whitebox get internal state fetcher next watermark test watermark tracker assert global watermark trigger global watermark sync test harness set processing time test harness get processing time expect result add long to string record2 await record count result expect result size assert that result org hamcrest matcher contain expect result to array test watermark tracker assert global watermark trigger watermark update and emit test harness set processing time test harness get processing time auto watermark interval expect result add new watermark assert that result org hamcrest matcher contain expect result to array verify exception propagation assert assert null source thread error get throw on collect set true shard1 put long to string record2 deadline deadline from now duration of seconds while deadline have time leave source thread error get null thread sleep assert assert not null source thread error get assert assert not null expect source thread error get get message source func cancel test harness close private void await record count concurrent link queue extend object queue int count throw exception deadline deadline deadline from now duration of seconds while deadline have time leave queue size count thread sleep private static class open checking string schema extend simple string schema private boolean open false override public void open deserialization schema initialization context context throw exception assert that context get metric group not null value metric group class this open true override public string deserialize byte message if open throw new assertion error deserialization schema be not open before deserialization return super deserialize message private static class test timestamp extractor extend bound out of orderness timestamp extractor string private static final long serial version u i d 1 l public test timestamp extractor time max allow lateness super max allow lateness override public long extract timestamp string element return long parse long element private static class test watermark tracker extend watermark tracker private static final atomic long watermark new atomic long override public long get update timeout count return override public long update watermark long local watermark watermark set local watermark return local watermark static void assert global watermark long expect assert assert equal expect watermark get 
a w s util test run with power mock runner class prepare for test a w s util class public class a w s util test rule private final expect exception exception expect exception none test public void test default credentials provider property test config new property a w s credentials provider credentials provider a w s util get credentials provider test config assert true credentials provider instanceof default a w s credentials provider chain test public void test get credentials provider property test config new property test config set property a w s config constant aws credentials provider web identity token a w s credentials provider credentials provider a w s util get credentials provider test config assert true credentials provider instanceof web identity token credentials provider test public void test invalid credentials provider exception expect illegal argument exception class property test config new property test config set property a w s config constant aws credentials provider invalid provider a w s util get credentials provider test config test public void test valid region assert true a w s util be valid region we east test public void test invalid region assert false a w s util be valid region ur east 
kinesis config util test run with power mock runner class prepare for test kinesis config util class public class kinesis config util test rule private expected exception exception expect exception none get validate producer configuration test test public void test unparsable long for producer configuration exception expect illegal argument exception class exception expect message error try to set field rate limit with the value unparsable long property test config new property test config set property a w s config constant aws region we east test config set property rate limit unparsable long kinesis config util get validate producer configuration test config test public void test rate limit in producer configuration property test config new property test config set property a w s config constant aws region we east kinesis producer configuration kpc kinesis config util get validate producer configuration test config assert equal kpc get rate limit test config set property kinesis config util rate limit kpc kinesis config util get validate producer configuration test config assert equal kpc get rate limit test public void test threading model in producer configuration property test config new property test config set property a w s config constant aws region we east kinesis producer configuration kpc kinesis config util get validate producer configuration test config assert equal kinesis producer configuration threading model pool kpc get thread model test config set property kinesis config util threading model per request kpc kinesis config util get validate producer configuration test config assert equal kinesis producer configuration threading model per request kpc get thread model test public void test thread pool size in producer configuration property test config new property test config set property a w s config constant aws region we east kinesis producer configuration kpc kinesis config util get validate producer configuration test config assert equal kpc get thread pool size test config set property kinesis config util thread pool size kpc kinesis config util get validate producer configuration test config assert equal kpc get thread pool size test public void test replace deprecate key property test config new property test config set property a w s config constant aws region we east these deprecate key should be replace test config set property producer config constant aggregation max count test config set property producer config constant collection max count property replace config kinesis config util replace deprecate producer key test config assert equal replace config get property kinesis config util aggregation max count assert equal replace config get property kinesis config util collection max count test public void test correctly set region in producer configuration string region we east property test config new property test config set property a w s config constant aws region region kinesis producer configuration kpc kinesis config util get validate producer configuration test config assert equal incorrect region region kpc get region test public void test miss aws region in producer config string expect message string format for flink kinesis producer aws region s must be set in the config a w s config constant aws region exception expect illegal argument exception class exception expect message expect message property test config new property test config set property a w s config constant aw access key id access key test config set property a w s config constant aw secret access key secret key kinesis config util get validate producer configuration test config validate aws configuration test test public void test unrecognizable aws region in config exception expect illegal argument exception class exception expect message invalid aws region property test config new property test config set property a w s config constant aws region wrong region id test config set property a w s config constant aw access key id access key id test config set property a w s config constant aw secret access key secret key kinesis config util validate aws configuration test config test public void test credential provider type set to basic but no credential set in config exception expect illegal argument exception class exception expect message please set value for aws access key id a w s config constant aw access key id and secret key a w s config constant aw secret access key when use the basic aws credential provider type property test config new property test config set property a w s config constant aws region we east test config set property a w s config constant aws credentials provider basic kinesis config util validate aws configuration test config test public void test unrecognizable credential provider type in config exception expect illegal argument exception class exception expect message invalid aws credential provider type property test config test util get standard property test config set property a w s config constant aws credentials provider wrong provider type kinesis config util validate aws configuration test config validate consumer configuration test test public void test no aws region or endpoint in consumer config string expect message string format for flink kinesis consumer aws region s and or aws endpoint s must be set in the config a w s config constant aws region a w s config constant aw endpoint exception expect illegal argument exception class exception expect message expect message property test config new property test config set property a w s config constant aw access key id access key test config set property a w s config constant aw secret access key secret key kinesis config util validate consumer configuration test config test public void test aws region and endpoint in consumer config property test config new property test config set property a w s config constant aws region we east test config set property a w s config constant aws endpoint fake test config set property a w s config constant aw access key id access key test config set property a w s config constant aw secret access key secret key kinesis config util validate consumer configuration test config test public void test aws region in consumer config property test config new property test config set property a w s config constant aws region we east test config set property a w s config constant aw access key id access key test config set property a w s config constant aw secret access key secret key kinesis config util validate consumer configuration test config test public void test endpoint in consumer config property test config new property test config set property a w s config constant aws endpoint fake test config set property a w s config constant aw access key id access key test config set property a w s config constant aw secret access key secret key kinesis config util validate consumer configuration test config test public void test unrecognizable stream init position type in config exception expect illegal argument exception class exception expect message invalid initial position in stream property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position wrong init position kinesis config util validate consumer configuration test config test public void test stream init position type set to at timestamp but no init timestamp set in config exception expect illegal argument exception class exception expect message please set value for initial timestamp consumer config constant stream initial timestamp when use at timestamp initial position property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position at timestamp kinesis config util validate consumer configuration test config test public void test unparsable date for initial timestamp in config exception expect illegal argument exception class exception expect message invalid value give for initial timestamp for at timestamp initial position in stream property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position at timestamp test config set property consumer config constant stream initial timestamp unparsable date kinesis config util validate consumer configuration test config test public void test illegal value for initial timestamp in config exception expect illegal argument exception class exception expect message invalid value give for initial timestamp for at timestamp initial position in stream property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position at timestamp test config set property consumer config constant stream initial timestamp 1.0 kinesis config util validate consumer configuration test config test public void test date string for validate option date property string timestamp 2016 - 04 04 t19 58:46 480 - 00 property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position at timestamp test config set property consumer config constant stream initial timestamp timestamp try kinesis config util validate consumer configuration test config catch exception e e print stack trace fail test public void test unix timestamp for validate option date property string unix timestamp 1459799926.480 property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position at timestamp test config set property consumer config constant stream initial timestamp unix timestamp try kinesis config util validate consumer configuration test config catch exception e e print stack trace fail test public void test invalid pattern for initial timestamp in config exception expect illegal argument exception class exception expect message invalid value give for initial timestamp for at timestamp initial position in stream property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position at timestamp test config set property consumer config constant stream initial timestamp 2016 - 03 test config set property consumer config constant stream timestamp date format invalid pattern kinesis config util validate consumer configuration test config test public void test unparsable date for user define date format for initial timestamp in config exception expect illegal argument exception class exception expect message invalid value give for initial timestamp for at timestamp initial position in stream property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position at timestamp test config set property consumer config constant stream initial timestamp still unparsable test config set property consumer config constant stream timestamp date format yyyy mm dd kinesis config util validate consumer configuration test config test public void test date string for user define date format for validate option date property string unix timestamp 2016 - 04 string pattern yyyy mm dd property test config test util get standard property test config set property consumer config constant aws credentials provider basic test config set property consumer config constant stream initial position at timestamp test config set property consumer config constant stream initial timestamp unix timestamp test config set property consumer config constant stream timestamp date format pattern kinesis config util validate consumer configuration test config test public void test unparsable long for list shard backoff base milli in config exception expect illegal argument exception class exception expect message invalid value give for list shard operation base backoff millisecond property test config test util get standard property test config set property consumer config constant list shard backoff base unparsable long kinesis config util validate consumer configuration test config test public void test unparsable long for list shard backoff max millis in config exception expect illegal argument exception class exception expect message invalid value give for list shard operation max backoff millisecond property test config test util get standard property test config set property consumer config constant list shard backoff max unparsable long kinesis config util validate consumer configuration test config test public void test unparsable double for list shard backoff exponential constant in config exception expect illegal argument exception class exception expect message invalid value give for list shard operation backoff exponential constant property test config test util get standard property test config set property consumer config constant list shard backoff exponential constant unparsable double kinesis config util validate consumer configuration test config test public void test unparsable int for get record retry in config exception expect illegal argument exception class exception expect message invalid value give for maximum retry attempt for get record shard operation property test config test util get standard property test config set property consumer config constant shard getrecord retry unparsable int kinesis config util validate consumer configuration test config test public void test unparsable int for get record max count in config exception expect illegal argument exception class exception expect message invalid value give for maximum record per get record shard operation property test config test util get standard property test config set property consumer config constant shard getrecord max unparsable int kinesis config util validate consumer configuration test config test public void test unparsable long for get record backoff base milli in config exception expect illegal argument exception class exception expect message invalid value give for get record operation base backoff millisecond property test config test util get standard property test config set property consumer config constant shard getrecord backoff base unparsable long kinesis config util validate consumer configuration test config test public void test unparsable long for get record backoff max millis in config exception expect illegal argument exception class exception expect message invalid value give for get record operation max backoff millisecond property test config test util get standard property test config set property consumer config constant shard getrecord backoff max unparsable long kinesis config util validate consumer configuration test config test public void test unparsable double for get record backoff exponential constant in config exception expect illegal argument exception class exception expect message invalid value give for get record operation backoff exponential constant property test config test util get standard property test config set property consumer config constant shard getrecord backoff exponential constant unparsable double kinesis config util validate consumer configuration test config test public void test unparsable long for get record interval millis in config exception expect illegal argument exception class exception expect message invalid value give for get record sleep interval in millisecond property test config test util get standard property test config set property consumer config constant shard getrecord interval millis unparsable long kinesis config util validate consumer configuration test config test public void test unparsable int for get shard iterator retry in config exception expect illegal argument exception class exception expect message invalid value give for maximum retry attempt for get shard iterator shard operation property test config test util get standard property test config set property consumer config constant shard getiterator retry unparsable int kinesis config util validate consumer configuration test config test public void test unparsable long for get shard iterator backoff base millis in config exception expect illegal argument exception class exception expect message invalid value give for get shard iterator operation base backoff millisecond property test config test util get standard property test config set property consumer config constant shard getiterator backoff base unparsable long kinesis config util validate consumer configuration test config test public void test unparsable long for get shard iterator backoff max millis in config exception expect illegal argument exception class exception expect message invalid value give for get shard iterator operation max backoff millisecond property test config test util get standard property test config set property consumer config constant shard getiterator backoff max unparsable long kinesis config util validate consumer configuration test config test public void test unparsable double for get shard iterator backoff exponential constant in config exception expect illegal argument exception class exception expect message invalid value give for get shard iterator operation backoff exponential constant property test config test util get standard property test config set property consumer config constant shard getiterator backoff exponential constant unparsable double kinesis config util validate consumer configuration test config test public void test unparsable long for shard discovery interval millis in config exception expect illegal argument exception class exception expect message invalid value give for shard discovery sleep interval in millisecond property test config test util get standard property test config set property consumer config constant shard discovery interval millis unparsable long kinesis config util validate consumer configuration test config 
r m q source test run with power mock runner class public class r m q source test private r m q source string source private configuration config new configuration private thread source thread private volatile long message id private boolean generate correlation id private volatile exception exception get a mock context for initialize the source s state via link org apache flink streaming api checkpoint checkpoint function initialize state throw exception function initialization context get mock context throw exception operator state store mock store mockito mock operator state store class function initialization context mock context mockito mock function initialization context class mockito when mock context get operator state store then return mock store mockito when mock store get list state any list state descriptor class then return null return mock context before public void before test throw exception function initialization context mock context get mock context source new r m q test source source initialize state mock context source open config message id generate correlation id true source thread new thread new runnable override public void run try source run new dummy source context catch exception e exception e after public void after test throw exception source cancel source thread join test public void throw exception if connection factory return null throw exception r m q connection config connection config mockito mock r m q connection config class connection factory connection factory mockito mock connection factory class connection connection mockito mock connection class mockito when connection config get connection factory then return connection factory mockito when connection factory new connection then return connection mockito when connection create channel then return null r m q source string rmq source new r m q source connection config queue dummy true new string deserialization scheme try rmq source open new configuration catch runtime exception ex assert equal none of rabbit m q channel be available ex get message test public void test open call declare queue in standard mode throw exception function initialization context mock context get mock context r m q connection config connection config mockito mock r m q connection config class connection factory connection factory mockito mock connection factory class connection connection mockito mock connection class channel channel mockito mock channel class mockito when connection config get connection factory then return connection factory mockito when connection factory new connection then return connection mockito when connection create channel then return channel r m q source string rmq source new r m q mock runtime test source connection config rmq source initialize state mock context rmq source open new configuration mockito verify channel queue declare r m q test source queue name true false false null test public void test checkpointing throw exception source auto ack false stream source string r m q source string src new stream source source abstract stream operator test harness string test harness new abstract stream operator test harness src test harness open source thread start thread sleep final random random new random system current time millis int num snapshot long previous snapshot id long last snapshot id long total number of ack for int i i num snapshot i long snapshot id random next long operator subtask state datum synchronize dummy source context lock datum test harness snapshot snapshot id system current time millis previous snapshot id last snapshot id last snapshot id message id let some time pass thread sleep check if the correct number of message have be snapshott final long num id last snapshot id previous snapshot id r m q test source source copy new r m q test source stream source string r m q test source src copy new stream source source copy abstract stream operator test harness string test harness copy new abstract stream operator test harness src copy test harness copy setup test harness copy initialize state datum test harness copy open array deque tuple2 long set string deque source copy get restore state set string message id deque get last f1 assert equal num id message id size if message id size assert true message id contain long to string last snapshot id check if the message be be acknowledge and the transaction commit synchronize dummy source context lock source notify checkpoint complete snapshot id total number of ack num id mockito verify source channel mockito time int total number of ack basic ack mockito any long mockito eq false mockito verify source channel mockito time num snapshot tx commit check whether recur id be process again they shouldn t be test public void test duplicate id throw exception source auto ack false source thread start while message id wait until message have be process thread sleep long old message id synchronize dummy source context lock old message id message id message id while message id process again thread sleep synchronize dummy source context lock assert equal math max message id old message id dummy source context num element collect the source should not acknowledge id in auto commit mode or check for previously acknowledge id test public void test checkpointing disabled throw exception source auto ack true source thread start while dummy source context num element collect wait until message have be process thread sleep see add id in r m q test source add id for the assert test error reporting in case of invalid correlation id test public void test correlation id not set throw interrupted exception generate correlation id false source auto ack false source thread start source thread join assert not null exception assert true exception instanceof null pointer exception test whether constructor param be pass correctly test public void test constructor param throw exception verify construction param be m q connection config builder builder new r m q connection config builder builder set host host test set port set user name user test set password pass test set virtual host constructor test class test obj new constructor test class builder build queue test false new string deserialization scheme try test obj open new configuration catch exception e connection fail but check if arg have be pass correctly assert equal host test test obj get factory get host assert equal test obj get factory get port assert equal user test test obj get factory get username assert equal pass test test obj get factory get password test public void test open throw exception mock deserialization schema string deserialization schema new mock deserialization schema r m q source string consumer new r m q test source deserialization schema abstract stream operator test harness string test harness new abstract stream operator test harness new stream source consumer test harness open assert that open method be not call deserialization schema be open call be true test public void test override connection throw exception final connection mock connection mockito mock connection class channel channel mockito mock channel class mockito when mock connection create channel then return channel r m q mock runtime test source source new r m q mock runtime test source override protect connection setup connection throw exception return mock connection function initialization context mock context get mock context source initialize state mock context source open new configuration mockito verify mock connection mockito time create channel private static class constructor test class extend r m q source string private connection factory factory public constructor test class r m q connection config rmq connection config string queue name boolean use correlation id deserialization schema string deserialization schema throw exception super rmq connection config queue name use correlation id deserialization schema r m q connection config builder builder new r m q connection config builder builder set host host test set port set user name user test set password pass test set virtual host factory mockito spy builder build get connection factory try mockito do throw new runtime exception when factory new connection catch i o exception e fail fail to stub connection method override protect connection factory setup connection factory return factory public connection factory get factory return factory private static class string deserialization scheme implement deserialization schema string override public string deserialize byte message throw i o exception try wait a bit to not cause too much cpu load thread sleep catch interrupt exception e e print stack trace return new string message config constant default charset override public boolean be end of stream string next element return false override public type information string get produce type return type extractor get for class string class a base class of link r m q test source for test function that rely on the link runtime context private static class r m q mock runtime test source extend r m q source string static final string queue name queue dummy static final r m q connection config connection config new r m q connection config builder set host host test set port set user name user test set password pass test set virtual host build protect runtime context runtime context mockito mock streaming runtime context class public r m q mock runtime test source r m q connection config connection config deserialization schema string deserialization schema super connection config queue name true deserialization schema public r m q mock runtime test source deserialization schema string deserialization schema this connection config deserialization schema public r m q mock runtime test source r m q connection config connection config this connection config new string deserialization scheme public r m q mock runtime test source this new string deserialization scheme override public runtime context get runtime context return runtime context private class r m q test source extend r m q mock runtime test source private array deque tuple2 long set string restore state public r m q test source super public r m q test source deserialization schema string deserialization schema super deserialization schema override public void initialize state function initialization context context throw exception super initialize state context this restore state this pend checkpoint public array deque tuple2 long set string get restore state return this restore state override public void open configuration config throw exception super open config consumer mockito mock queueing consumer class mock for delivery final queueing consumer delivery delivery mock mockito mock queueing consumer delivery class mockito when delivery mock get body then return test get byte config constant default charset try mockito when consumer next delivery then return delivery mock catch interrupt exception e fail couldn t setup up delivery mock mock for envelope envelope envelope mockito mock envelope class mockito when delivery mock get envelope then return envelope mockito when envelope get delivery tag then answer new answer long override public long answer invocation on mock invocation throw throwable return message id mock for property amqp basic property prop mockito mock amqp basic property class mockito when delivery mock get property then return prop mockito when prop get correlation id then answer new answer string override public string answer invocation on mock invocation throw throwable return generate correlation id message id null override protect connection factory setup connection factory connection factory connection factory mockito mock connection factory class connection connection mockito mock connection class try mockito when connection factory new connection then return connection mockito when connection create channel then return mockito mock channel class catch i o exception timeout exception e fail test environment couldn t be create return connection factory override public void set runtime context runtime context t this runtime context t override protect boolean add id string uid assert equal false auto ack return super add id uid private static class dummy source context implement source function source context string private static final object lock new object private static long num element collect public dummy source context num element collect override public void collect string element num element collect override public void collect with timestamp java lang string element long timestamp override public void emit watermark watermark mark throw new unsupported operation exception override public void mark as temporarily idle throw new unsupported operation exception override public object get checkpoint lock return lock override public void close 
writable serializer upgrade test run with parameterized class public class writable serializer upgrade test extend type serializer upgrade test base writable name writable name public writable serializer upgrade test test specification writable name writable name test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification writeable serializer migration version writable serializer setup class writable serializer verifier class return test specification a dummy class that be use in this test public static final class writable name implement writable public static final long serial version u i d 1 l private string name public string get name return name public void set name string name this name name override public void write datum output out throw i o exception out write u t f name override public void read field datum input in throw i o exception name in read u t f override public boolean equal object obj if obj this return true if obj instanceof writable name return false writable name other writable name obj return object equal name other name specification for writeable serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class writable serializer setup implement type serializer upgrade test base pre upgrade setup writable name override public type serializer writable name create prior serializer return new writable serializer writable name class override public writable name create test datum writable name writable new writable name writable set name flink return writable this class be only public to work with link org apache flink api common typeutil class relocator public static final class writable serializer verifier implement type serializer upgrade test base upgrade verifier writable name override public type serializer writable name create upgrade serializer return new writable serializer writable name class override public matcher writable name test datum matcher writable name writable new writable name writable set name flink return be writable override public matcher type serializer schema compatibility writable name schema compatibility matcher migration version version return type serializer matcher be compatible as be 
hadoop i o format i t case run with parameterized class public class hadoop i o format i t case extend java program test base private static final int num program private final int cur prog id private string result path private string expect result private string sequence file in path private string sequence file in path null public hadoop i o format i t case int cur prog id this cur prog id cur prog id before public void check operating system flink see http wiki apache org hadoop window problem assume assume true this test can t run successfully on window operate system be window override protect void pre submit throw exception result path new string get temp dir path result0 get temp dir path result1 file sequence file create and register temp file seq file sequence file in path sequence file to u be i to string create a sequence file org apache hadoop conf configuration conf new org apache hadoop conf configuration file system f file system get uri create sequence file get absolute path conf path path new path sequence file get absolute path long text key value pair int kv count long writable key new long writable text value new text sequence file writer writer null try writer sequence file create writer f conf path key get class value get class for int i i kv count i if i write key a bit more often for int a a a key set i value set i somestr writer append key value key set i value set i somestr writer append key value finally i o util close stream writer long text key value pair file sequence file null create and register temp file seq file null key sequence file in path null sequence file null to u be i to string path new path sequence file in path null long writable value1 new long writable sequence file writer writer1 null try writer1 sequence file create writer f conf path null writable class value1 get class for int i i kv count i value1 set i writer1 append null writable get value1 finally i o util close stream writer1 override protect void test program throw exception expect result hadoop i o format program run program cur prog id result path sequence file in path sequence file in path null override protect void post submit throw exception for int i i result path length i compare result by line in memory expect result i result path i parameter public static collection object get configuration collection object program id new array list num program for int i i num program i program id add new object i return program id private static class hadoop i o format program public static string run program int prog id string result path string sequence file in path string sequence file in path null throw exception switch prog id case test sequence file include a key access final execution environment env execution environment get execution environment sequence file input format long writable text sfif new sequence file input format long writable text job conf hdconf new job conf sequence file input format add input path hdconf new path sequence file in path hadoop input format long writable text hif new hadoop input format long writable text sfif long writable class text class hdconf datum set tuple2 long writable text d env create input hif datum set tuple2 long text sume d map new map function tuple2 long writable text tuple2 long text override public tuple2 long text map tuple2 long writable text value throw exception return new tuple2 long text value f0 get value f1 sum sume write as text result path datum set string re ds distinct map new map function tuple2 long writable text string override public string map tuple2 long writable text value throw exception return value f1 value f0 get re write as text result path env execute return expect result return new string 21,3 somestring somestring n somestring n somestring n somestring n case final execution environment env execution environment get execution environment sequence file input format null writable long writable sfif new sequence file input format null writable long writable job conf hdconf new job conf sequence file input format add input path hdconf new path sequence file in path null hadoop input format null writable long writable hif new hadoop input format null writable long writable sfif null writable class long writable class hdconf datum set tuple2 null writable long writable d env create input hif datum set tuple2 void long re d map new map function tuple2 null writable long writable tuple2 void long override public tuple2 void long map tuple2 null writable long writable value throw exception return new tuple2 void long null value f1 get datum set tuple2 void long res1 re group by sum res1 write as text result path re write as text result path env execute return expect result return new string null n null n null n null null n null n null n null default throw new illegal argument exception invalid program id 
hadoop map function i t case run with parameterized class public class hadoop map function i t case extend multiple program test base public hadoop map function i t case test execution mode mode super mode rule public temporary folder temp folder new temporary folder test public void test non pass mapper throw exception final execution environment env execution environment get execution environment datum set tuple2 int writable text d hadoop test datum get k v pair datum set env datum set tuple2 int writable text non pass flat map d d flat map new hadoop map function int writable text int writable text new non pass mapper string result path temp folder new file to u be i to string non pass flat map d write as text result path file system write mode overwrite env execute compare result by line in memory n result path test public void test datum duplicate mapper throw exception final execution environment env execution environment get execution environment datum set tuple2 int writable text d hadoop test datum get k v pair datum set env datum set tuple2 int writable text duplicate flat map d d flat map new hadoop map function int writable text int writable text new duplicate mapper string result path temp folder new file to u be i to string duplicate flat map d write as text result path file system write mode overwrite env execute string expect hi n hi n hello n hello n hello world n hello world n hello world how be you n hello world how be you n i be fine n i be fine n luke skywalker n luke skywalker n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n compare result by line in memory expect result path test public void test configurable mapper throw exception final execution environment env execution environment get execution environment job conf conf new job conf conf set my filter prefix hello datum set tuple2 int writable text d hadoop test datum get k v pair datum set env datum set tuple2 int writable text hello d flat map new hadoop map function int writable text int writable text new configurable mapper conf string result path temp folder new file to u be i to string hello write as text result path file system write mode overwrite env execute string expect hello n hello world n hello world how be you n compare result by line in memory expect result path link mapper that only forwards record contain banana public static class non pass mapper implement mapper int writable text int writable text override public void map final int writable k final text v final output collector int writable text out final reporter r throw i o exception if v to string contain banana out collect k v override public void configure final job conf arg0 override public void close throw i o exception link mapper that duplicate record public static class duplicate mapper implement mapper int writable text int writable text override public void map final int writable k final text v final output collector int writable text out final reporter r throw i o exception out collect k v out collect k new text v to string to upper case override public void configure final job conf arg0 override public void close throw i o exception link mapper that filter record base on a prefix public static class configurable mapper implement mapper int writable text int writable text private string filter prefix override public void map int writable k text v output collector int writable text out reporter r throw i o exception if v to string start with filter prefix out collect k v override public void configure job conf c filter prefix c get my filter prefix override public void close throw i o exception 
hadoop reduce combine function i t case run with parameterized class public class hadoop reduce combine function i t case extend multiple program test base public hadoop reduce combine function i t case test execution mode mode super mode rule public temporary folder temp folder new temporary folder test public void test standard count with combiner throw exception final execution environment env execution environment get execution environment datum set tuple2 int writable int writable d hadoop test datum get k v pair datum set env map new mapper1 datum set tuple2 int writable int writable count d group by reduce group new hadoop reduce combine function int writable int writable int writable int writable new sum reducer new sum reducer string result path temp folder new file to u be i to string count write as text result path env execute string expect 0,5 n 1,6 n 2,6 n 3,4 n compare result by line in memory expect result path test public void test ungrouped hadoop reducer throw exception final execution environment env execution environment get execution environment datum set tuple2 int writable int writable d hadoop test datum get k v pair datum set env map new mapper2 datum set tuple2 int writable int writable sum d reduce group new hadoop reduce combine function int writable int writable int writable int writable new sum reducer new sum reducer string result path temp folder new file to u be i to string sum write as text result path env execute string expect 0,231 n compare result by line in memory expect result path test public void test combiner throw exception org junit assume assume that mode new be equal test execution mode test execution mode cluster final execution environment env execution environment get execution environment datum set tuple2 int writable int writable d hadoop test datum get k v pair datum set env map new mapper3 datum set tuple2 int writable int writable count d group by reduce group new hadoop reduce combine function int writable int writable int writable int writable new sum reducer new key change reducer string result path temp folder new file to u be i to string count write as text result path env execute string expect 0,5 n 1,6 n 2,5 n 3,5 n compare result by line in memory expect result path test public void test configuration via job conf throw exception final execution environment env execution environment get execution environment job conf conf new job conf conf set my cnt prefix hello datum set tuple2 int writable text d hadoop test datum get k v pair datum set env map new mapper4 datum set tuple2 int writable int writable hello d group by reduce group new hadoop reduce function int writable text int writable int writable new configurable cnt reducer conf string result path temp folder new file to u be i to string hello write as text result path env execute return expect result string expect 0,0 n 1,0 n 2,1 n 3,1 n 4,1 n compare result by line in memory expect result path a link reducer to sum count public static class sum reducer implement reducer int writable int writable int writable int writable override public void reduce int writable k iterator int writable v output collector int writable int writable out reporter r throw i o exception int sum while v have next sum v next get out collect k new int writable sum override public void configure job conf arg0 override public void close throw i o exception a link reducer to sum count that modify the key public static class key change reducer implement reducer int writable int writable int writable int writable override public void reduce int writable k iterator int writable v output collector int writable int writable out reporter r throw i o exception while v have next out collect new int writable k get v next override public void configure job conf arg0 override public void close throw i o exception a link reducer to sum count for a specific prefix public static class configurable cnt reducer implement reducer int writable text int writable int writable private string count prefix override public void reduce int writable k iterator text vs output collector int writable int writable out reporter r throw i o exception int comment cnt while vs have next string v vs next to string if v start with this count prefix comment cnt out collect k new int writable comment cnt override public void configure final job conf c this count prefix c get my cnt prefix override public void close throw i o exception test mapper public static class mapper1 implement map function tuple2 int writable text tuple2 int writable int writable private static final long serial version u i d 1 l tuple2 int writable int writable out t new tuple2 int writable int writable override public tuple2 int writable int writable map tuple2 int writable text v throw exception out t f0 new int writable v f0 get out t f1 new int writable return out t test mapper public static class mapper2 implement map function tuple2 int writable text tuple2 int writable int writable private static final long serial version u i d 1 l tuple2 int writable int writable out t new tuple2 int writable int writable override public tuple2 int writable int writable map tuple2 int writable text v throw exception out t f0 new int writable out t f1 v f0 return out t test mapper public static class mapper3 implement map function tuple2 int writable text tuple2 int writable int writable private static final long serial version u i d 1 l tuple2 int writable int writable out t new tuple2 int writable int writable override public tuple2 int writable int writable map tuple2 int writable text v throw exception out t f0 v f0 out t f1 new int writable return out t test mapper public static class mapper4 implement map function tuple2 int writable text tuple2 int writable text private static final long serial version u i d 1 l override public tuple2 int writable text map tuple2 int writable text v throw exception v f0 new int writable v f0 get return v 
hadoop reduce function i t case run with parameterized class public class hadoop reduce function i t case extend multiple program test base public hadoop reduce function i t case test execution mode mode super mode rule public temporary folder temp folder new temporary folder test public void test standard grouping throw exception final execution environment env execution environment get execution environment datum set tuple2 int writable text d hadoop test datum get k v pair datum set env map new mapper1 datum set tuple2 int writable int writable comment cnt d group by reduce group new hadoop reduce function int writable text int writable int writable new comment cnt reducer string result path temp folder new file to u be i to string comment cnt write as text result path env execute string expect 0,0 n 1,3 n 2,5 n 3,5 n 4,2 n compare result by line in memory expect result path test public void test ungrouped hadoop reducer throw exception final execution environment env execution environment get execution environment datum set tuple2 int writable text d hadoop test datum get k v pair datum set env datum set tuple2 int writable int writable comment cnt d reduce group new hadoop reduce function int writable text int writable int writable new all comment cnt reducer string result path temp folder new file to u be i to string comment cnt write as text result path env execute string expect 42,15 n compare result by line in memory expect result path test public void test configuration via job conf throw exception final execution environment env execution environment get execution environment job conf conf new job conf conf set my cnt prefix hello datum set tuple2 int writable text d hadoop test datum get k v pair datum set env map new mapper2 datum set tuple2 int writable int writable hello cnt d group by reduce group new hadoop reduce function int writable text int writable int writable new configurable cnt reducer conf string result path temp folder new file to u be i to string hello cnt write as text result path env execute string expect 0,0 n 1,0 n 2,1 n 3,1 n 4,1 n compare result by line in memory expect result path a link reducer to sum count public static class comment cnt reducer implement reducer int writable text int writable int writable override public void reduce int writable k iterator text vs output collector int writable int writable out reporter r throw i o exception int comment cnt while vs have next string v vs next to string if v start with comment comment cnt out collect k new int writable comment cnt override public void configure final job conf arg0 override public void close throw i o exception a link reducer to sum count public static class all comment cnt reducer implement reducer int writable text int writable int writable override public void reduce int writable k iterator text vs output collector int writable int writable out reporter r throw i o exception int comment cnt while vs have next string v vs next to string if v start with comment comment cnt out collect new int writable new int writable comment cnt override public void configure final job conf arg0 override public void close throw i o exception a link reducer to sum count for a specific prefix public static class configurable cnt reducer implement reducer int writable text int writable int writable private string count prefix override public void reduce int writable k iterator text vs output collector int writable int writable out reporter r throw i o exception int comment cnt while vs have next string v vs next to string if v start with this count prefix comment cnt out collect k new int writable comment cnt override public void configure final job conf c this count prefix c get my cnt prefix override public void close throw i o exception test mapper public static class mapper1 implement map function tuple2 int writable text tuple2 int writable text private static final long serial version u i d 1 l override public tuple2 int writable text map tuple2 int writable text v throw exception v f0 new int writable v f0 get return v test mapper public static class mapper2 implement map function tuple2 int writable text tuple2 int writable text private static final long serial version u i d 1 l override public tuple2 int writable text map tuple2 int writable text v throw exception v f0 new int writable v f0 get return v 
execution config from configuration test run with parameterized class public class execution config from configuration test parameterized parameter name public static collection test spec spec return array as list test spec test value false when set from file pipeline auto generate uid false via setter boolean setter execution config enable auto generate u i d execution config disable auto generate u i d getter via execution config have auto generate u i d enable non default value false test spec test value false when set from file pipeline auto type registration false via setter boolean setter e throw new illegal argument exception can not enable auto type registration execution config disable auto type registration getter via e e be auto type registration disabled non default value false test spec test value l when set from file pipeline auto watermark interval min via setter execution config set auto watermark interval getter via execution config get auto watermark interval non default value l test spec test value execution config closure cleaner level top level when set from file pipeline closure cleaner level top level via setter execution config set closure cleaner level getter via execution config get closure cleaner level non default value execution config closure cleaner level none test spec test value true when set from file pipeline force avro true via setter boolean setter execution config enable force avro execution config disable force avro getter via execution config be force avro enable non default value true test spec test value false when set from file pipeline force kryo false via setter boolean setter execution config enable force kryo execution config disable force kryo getter via execution config be force kryo enable non default value false test spec test value false when set from file pipeline generic type false via setter boolean setter execution config enable generic type execution config disable generic type getter via exec config exec config have generic type disabled non default value false test spec test value get test global job parameter when set from file pipeline global job parameter key1 value1 key2 value2 via setter execution config set global job parameter getter via execution config get global job parameter non default value get other test global job parameter test spec test value when set from file pipeline max parallelism via setter execution config set max parallelism getter via execution config get max parallelism non default value test spec test value true when set from file pipeline object reuse true via setter boolean setter execution config enable object reuse execution config disable object reuse getter via execution config be object reuse enable non default value true test spec test value true when set from file execution checkpoint snapshot compression true via setter execution config set use snapshot compression getter via execution config be use snapshot compression non default value true test spec test value when set from file parallelism default via setter execution config set parallelism getter via execution config get parallelism non default value test spec test value l when set from file task cancellation interval via setter execution config set task cancellation interval getter via execution config get task cancellation interval non default value 21 l test spec test value l when set from file task cancellation timeout via setter execution config set task cancellation timeout getter via execution config get task cancellation timeout non default value 21 l test spec test value l when set from file metric latency interval via setter execution config set latency tracking interval getter via execution config get latency tracking interval non default value 21 l parameterized parameter public test spec spec test public void test loading from configuration execution config config from setter new execution config execution config config from file new execution config configuration configuration new configuration configuration set string spec key spec value config from file configure configuration execution config test class get class loader spec set value config from setter spec assert equal config from file config from setter test public void test not override if not set execution config execution config new execution config spec set non default value execution config configuration configuration new configuration execution config configure configuration execution config test class get class loader spec assert equal non default execution config private static execution config global job parameter get test global job parameter configuration global job parameter new configuration global job parameter set string key1 value1 global job parameter set string key2 value2 return global job parameter private static execution config global job parameter get other test global job parameter configuration global job parameter new configuration global job parameter set string key1 value1 global job parameter set string key2 value2 global job parameter set string key3 value3 return global job parameter private static class test spec t private string key private string value private final t object value private t non default value private bi consumer execution config t setter private function execution config t getter private test spec t value this object value value public static t test spec t test value t value return new test spec value public test spec t when set from file string key string value this key key this value value return this public test spec t via setter bi consumer execution config t setter this setter setter return this public test spec t getter via function execution config t getter this getter getter return this public test spec t non default value t non default value this non default value non default value return this public void set value execution config config setter accept config object value public void set non default value execution config config setter accept config non default value public void assert equal execution config config from file execution config config from setter assert that getter apply config from file equal to getter apply config from setter public void assert equal non default execution config config from file assert that getter apply config from file equal to non default value override public string to string return key key private static bi consumer execution config boolean boolean setter consumer execution config enable consumer execution config disable return exec config value if value enable accept exec config else disable accept exec config 
default filter test run with parameterized class public class default filter test parameter public static collection object datum return array as list new object file txt false file txt true dir file txt true dir file txt false file txt true dir file txt true dir file txt false check filtering hadoop s unfinished file file path filter hadoop copying true dir file path filter hadoop copying true file path filter hadoop copying file txt false private final boolean should filter private final string file path public default filter test string file path boolean should filter this file path file path this should filter should filter test public void test file path filter default filter file path filter create default filter path path new path file path assert equal string format file s file path should filter default filter filter path path 
expression key test suppress warning unused run with power mock runner class public class expression key test test public void test basic type type information long long type basic type info long type info expression key long ek new expression key long type assert assert array equal new int ek compute logical key position test expect invalid program exception class public void test generic non key type fail generic type can not be use as key type information generic non key type generic type new generic type info generic non key type class new expression key generic type test public void test key generic type type information generic key type generic type new generic type info generic key type class expression key generic key type ek new expression key generic type assert assert array equal new int ek compute logical key position test public void test tuple range check throw illegal access exception illegal argument exception invocation target exception test private static final int range check field int field int max allow field method range check field method whitebox get method key class range check field int class int class valid index range check field method invoke null new int corner case test range check field method invoke null new int throwable ex null try throw illegal argument range check field method invoke null new int catch throwable iae ex ia assert assert not null ex test public void test standard tuple key tuple type info tuple7 string string string string string string string type info new tuple type info basic type info string type info basic type info string type info basic type info string type info basic type info string type info basic type info string type info basic type info string type info basic type info string type info expression key tuple7 string string string string string string string ek for int i i i int int new int i for int j j i j int j j int in ints array copy of int int length copy just to make sure that the code be not cheat by change the int ek new expression key in int type info assert assert array equal int ek compute logical key position assert assert equal int length ek compute logical key position length array util reverse int in ints array copy of int int length ek new expression key in int type info assert assert array equal int ek compute logical key position assert assert equal int length ek compute logical key position length test public void test invalid tuple throw throwable tuple type info tuple3 string tuple3 string string string string type info new tuple type info basic type info string type info new tuple type info tuple3 string string string basic type info string type info basic type info string type info basic type info string type info basic type info string type info string test new string new string f0 f1 nest into unnested new string f11 new string f new string f0 f33 new string f1 f33 for string test test throwable e null try new expression key test type info catch throwable t e t assert assert not null e test expect invalid program exception class public void test tuple non key field select field be not a key type type information tuple3 string long generic non key type ti new tuple type info basic type info string type info basic type info long type info type extractor get for class generic non key type class new expression key ti test public void test tuple key expansion tuple type info tuple3 string tuple3 string string string string type info new tuple type info basic type info string type info new tuple type info tuple3 string string string basic type info string type info basic type info string type info basic type info string type info basic type info string type info expression key tuple3 string tuple3 string string string string fpk new expression key type info assert assert array equal new int fpk compute logical key position fpk new expression key type info assert assert array equal new int 1,2 fpk compute logical key position fpk new expression key type info assert assert array equal new int fpk compute logical key position fpk new expression key new int 0,1 type info assert assert array equal new int 0,1 2,3 fpk compute logical key position fpk new expression key null type info true empty case assert assert array equal new int 0,1 2,3 fpk compute logical key position fpk new expression key type info assert assert array equal new int 0,1 2,3 fpk compute logical key position scala style select all fpk new expression key type info assert assert array equal new int 0,1 2,3 fpk compute logical key position this be a bug fpk new expression key f2 type info assert assert array equal new int fpk compute logical key position fpk new expression key new string f0 f1 f0 f1 f1 f1 f2 f2 type info assert assert array equal new int 0,1 2,3 fpk compute logical key position fpk new expression key new string f0 f1 f0 f1 f1 f2 type info assert assert array equal new int 0,1 2,4 fpk compute logical key position fpk new expression key new string f2 f0 type info assert assert array equal new int 4,0 fpk compute logical key position tuple type info tuple3 string tuple3 tuple3 string string string string string string complex type info new tuple type info basic type info string type info new tuple type info tuple3 tuple3 string string string string string new tuple type info tuple3 string string string basic type info string type info basic type info string type info basic type info string type info basic type info string type info basic type info string type info basic type info string type info expression key tuple3 string tuple3 tuple3 string string string string string string complex fpk new expression key complex type info assert assert array equal new int complex fpk compute logical key position complex fpk new expression key new int 0,1 complex type info assert assert array equal new int 0,1 2,3 4,5 complex fpk compute logical key position complex fpk new expression key complex type info assert assert array equal new int 0,1 2,3 4,5 complex fpk compute logical key position scala style select all complex fpk new expression key complex type info assert assert array equal new int 0,1 2,3 4,5 complex fpk compute logical key position complex fpk new expression key f1 f0 complex type info assert assert array equal new int 1,2 complex fpk compute logical key position complex fpk new expression key f1 f0 complex type info assert assert array equal new int 1,2 complex fpk compute logical key position complex fpk new expression key f2 complex type info assert assert array equal new int complex fpk compute logical key position test public void test pojo key type information pojo with multiple pojos ti type extractor get for class pojo with multiple pojo class expression key pojo with multiple pojo ek ek new expression key ti assert assert array equal new int 0,1 2,3 ek compute logical key position ek new expression key p1 ti assert assert array equal new int 1,2 ek compute logical key position ek new expression key p2 ti assert assert array equal new int 3,4 ek compute logical key position ek new expression key p1 ti assert assert array equal new int 1,2 ek compute logical key position ek new expression key p2 ti assert assert array equal new int 3,4 ek compute logical key position ek new expression key i0 ti assert assert array equal new int ek compute logical key position test public void test tuple with nest pojo type information tuple3 integer pojo1 pojo with multiple pojos ti new tuple type info basic type info int type info type extractor get for class pojo1 class type extractor get for class pojo with multiple pojo class expression key tuple3 integer pojo1 pojo with multiple pojo ek ek new expression key ti assert assert array equal new int ek compute logical key position ek new expression key ti assert assert array equal new int 1,2 ek compute logical key position ek new expression key ti assert assert array equal new int 3,4 5,6 ek compute logical key position ek new expression key new int ti true assert assert array equal new int 0,1 2,3 4,5 6,7 ek compute logical key position ek new expression key ti assert assert array equal new int 0,1 2,3 4,5 6,7 ek compute logical key position ek new expression key f2 p1 ti assert assert array equal new int 4,5 ek compute logical key position test public void test original type type information tuple3 integer pojo1 pojo with multiple pojos ti new tuple type info basic type info int type info type extractor get for class pojo1 class type extractor get for class pojo with multiple pojo class expression key tuple3 integer pojo1 pojo with multiple pojo ek ek new expression key ti assert assert array equal new type information basic type info int type info ek get original key field type ek new expression key ti assert assert array equal new type information type extractor get for class pojo1 class ek get original key field type ek new expression key ti assert assert array equal new type information type extractor get for class pojo with multiple pojo class ek get original key field type ek new expression key new int ti true assert assert array equal new type information basic type info int type info type extractor get for class pojo1 class type extractor get for class pojo with multiple pojo class ek get original key field type ek new expression key ti assert assert array equal new type information ti ek get original key field type ek new expression key f1 ti assert assert array equal new type information type extractor get for class pojo1 class ek get original key field type ek new expression key f1 ti assert assert array equal new type information type extractor get for class pojo1 class ek get original key field type ek new expression key f2 ti assert assert array equal new type information type extractor get for class pojo with multiple pojo class ek get original key field type ek new expression key f2 p2 ti assert assert array equal new type information type extractor get for class pojo2 class ek get original key field type ek new expression key f2 p2 ti assert assert array equal new type information type extractor get for class pojo2 class ek get original key field type ek new expression key f2 p2 ti assert assert array equal new type information type extractor get for class pojo2 class ek get original key field type test expect invalid program exception class public void test non key pojo field select field be not a key type type information pojo with non key field ti type extractor get for class pojo with non key field class new expression key b ti test public void test invalid pojo throw throwable type information complex nest class ti type extractor get for class complex nest class class string test new string new string nonexistent new string date abc nest into unnested for string test test throwable e null try new expression key test ti catch throwable t e t assert assert not null e test public void test be compatible1 throw key incompatible key exception type information pojo1 t1 type extractor get for class pojo1 class expression key pojo1 ek1 new expression key a t1 expression key pojo1 ek2 new expression key b t1 assert assert true ek1 be compatible ek2 assert assert true ek2 be compatible ek1 test public void test be compatible2 throw key incompatible key exception type information pojo1 t1 type extractor get for class pojo1 class type information tuple2 string long t2 new tuple type info basic type info string type info basic type info long type info expression key pojo1 ek1 new expression key a t1 expression key tuple2 string long ek2 new expression key t2 assert assert true ek1 be compatible ek2 assert assert true ek2 be compatible ek1 test public void test be compatible3 throw key incompatible key exception type information string t1 basic type info string type info type information tuple2 string long t2 new tuple type info basic type info string type info basic type info long type info expression key string ek1 new expression key t1 expression key tuple2 string long ek2 new expression key t2 assert assert true ek1 be compatible ek2 assert assert true ek2 be compatible ek1 test public void test be compatible4 throw key incompatible key exception type information pojo with multiple pojo t1 type extractor get for class pojo with multiple pojo class type information tuple3 string long integer t2 new tuple type info basic type info string type info basic type info long type info basic type info int type info expression key pojo with multiple pojo ek1 new expression key new string p1 i0 t1 expression key tuple3 string long integer ek2 new expression key new int t2 assert assert true ek1 be compatible ek2 assert assert true ek2 be compatible ek1 test public void test be compatible5 throw key incompatible key exception type information pojo with multiple pojo t1 type extractor get for class pojo with multiple pojo class type information tuple2 string string t2 new tuple type info basic type info string type info basic type info string type info expression key pojo with multiple pojo ek1 new expression key new string p1 b p2 a2 t1 expression key tuple2 string string ek2 new expression key t2 assert assert true ek1 be compatible ek2 assert assert true ek2 be compatible ek1 test expect key incompatible key exception class public void test be compatible6 throw key incompatible key exception type information pojo1 t1 type extractor get for class pojo1 class type information tuple2 string long t2 new tuple type info basic type info string type info basic type info long type info expression key pojo1 ek1 new expression key a t1 expression key tuple2 string long ek2 new expression key t2 ek1 be compatible ek2 test expect key incompatible key exception class public void test be compatible7 throw key incompatible key exception type information pojo1 t1 type extractor get for class pojo1 class type information tuple2 string long t2 new tuple type info basic type info string type info basic type info long type info expression key pojo1 ek1 new expression key new string a b t1 expression key tuple2 string long ek2 new expression key t2 ek1 be compatible ek2 test public void test be compatible8 throw key incompatible key exception type information string t1 basic type info string type info type information pojo2 t2 type extractor get for class pojo2 class expression key string ek1 new expression key t1 key pojo2 ek2 new key selector function key new key selector1 t2 basic type info string type info assert assert true ek1 be compatible ek2 test public void test be compatible9 throw key incompatible key exception type information tuple3 string long integer t1 new tuple type info basic type info string type info basic type info long type info basic type info int type info type information pojo with multiple pojo t2 type extractor get for class pojo with multiple pojo class expression key tuple3 string long integer ek1 new expression key new int 2,0 t1 key pojo with multiple pojo ek2 new key selector function key new key selector3 t2 new tuple type info tuple2 integer string basic type info int type info basic type info string type info assert assert true ek1 be compatible ek2 public static class pojo1 public string a public string b public static class pojo2 public string a2 public string b2 public static class pojo with multiple pojo public pojo1 p1 public pojo2 p2 public integer i0 public static class pojo with non key field public string a public generic non key type b public static class generic non key type private string a private string b public static class generic key type implement comparable generic non key type private string a private string b override public int compare to generic non key type o return 
primitive array serializer upgrade test run with parameterized class public class primitive array serializer upgrade test extend type serializer upgrade test base object object public primitive array serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification boolean primitive array serializer migration version primitive array serializer upgrade test specification primitive boolean array setup class primitive array serializer upgrade test specification primitive boolean array verifier class test specification add new test specification byte primitive array serializer migration version primitive array serializer upgrade test specification primitive byte array setup class primitive array serializer upgrade test specification primitive byte array verifier class test specification add new test specification char primitive array serializer migration version primitive array serializer upgrade test specification primitive char array setup class primitive array serializer upgrade test specification primitive char array verifier class test specification add new test specification double primitive array serializer migration version primitive array serializer upgrade test specification primitive double array setup class primitive array serializer upgrade test specification primitive double array verifier class test specification add new test specification float primitive array serializer migration version primitive array serializer upgrade test specification primitive float array setup class primitive array serializer upgrade test specification primitive float array verifier class test specification add new test specification int primitive array serializer migration version primitive array serializer upgrade test specification primitive int array setup class primitive array serializer upgrade test specification primitive int array verifier class test specification add new test specification long primitive array serializer migration version primitive array serializer upgrade test specification primitive long array setup class primitive array serializer upgrade test specification primitive long array verifier class test specification add new test specification short primitive array serializer migration version primitive array serializer upgrade test specification primitive short array setup class primitive array serializer upgrade test specification primitive short array verifier class test specification add new test specification string array serializer migration version primitive array serializer upgrade test specification primitive string array setup class primitive array serializer upgrade test specification primitive string array verifier class return test specification 
basic type serializer upgrade test run with parameterized class public class basic type serializer upgrade test extend type serializer upgrade test base object object public basic type serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification big dec serializer migration version basic type serializer upgrade test specification big dec serializer setup class basic type serializer upgrade test specification big dec serializer verifier class test specification add new test specification big int serializer migration version basic type serializer upgrade test specification big int serializer setup class basic type serializer upgrade test specification big int serializer verifier class test specification add new test specification boolean serializer migration version basic type serializer upgrade test specification boolean serializer setup class basic type serializer upgrade test specification boolean serializer verifier class test specification add new test specification boolean value serializer migration version basic type serializer upgrade test specification boolean value serializer setup class basic type serializer upgrade test specification boolean value serializer verifier class test specification add new test specification byte serializer migration version basic type serializer upgrade test specification byte serializer setup class basic type serializer upgrade test specification byte serializer verifier class test specification add new test specification byte value serializer migration version basic type serializer upgrade test specification byte value serializer setup class basic type serializer upgrade test specification byte value serializer verifier class test specification add new test specification char serializer migration version basic type serializer upgrade test specification char serializer setup class basic type serializer upgrade test specification char serializer verifier class test specification add new test specification char value serializer migration version basic type serializer upgrade test specification char value serializer setup class basic type serializer upgrade test specification char value serializer verifier class test specification add new test specification date serializer migration version basic type serializer upgrade test specification date serializer setup class basic type serializer upgrade test specification date serializer verifier class test specification add new test specification double serializer migration version basic type serializer upgrade test specification double serializer setup class basic type serializer upgrade test specification double serializer verifier class test specification add new test specification double value serializer migration version basic type serializer upgrade test specification double value serializer setup class basic type serializer upgrade test specification double value serializer verifier class test specification add new test specification float serializer migration version basic type serializer upgrade test specification float serializer setup class basic type serializer upgrade test specification float serializer verifier class test specification add new test specification float value serializer migration version basic type serializer upgrade test specification float value serializer setup class basic type serializer upgrade test specification float value serializer verifier class test specification add new test specification int serializer migration version basic type serializer upgrade test specification int serializer setup class basic type serializer upgrade test specification int serializer verifier class test specification add new test specification int value serializer migration version basic type serializer upgrade test specification int value serializer setup class basic type serializer upgrade test specification int value serializer verifier class test specification add new test specification long serializer migration version basic type serializer upgrade test specification long serializer setup class basic type serializer upgrade test specification long serializer verifier class test specification add new test specification long value serializer migration version basic type serializer upgrade test specification long value serializer setup class basic type serializer upgrade test specification long value serializer verifier class test specification add new test specification null value serializer migration version basic type serializer upgrade test specification null value serializer setup class basic type serializer upgrade test specification null value serializer verifier class test specification add new test specification short serializer migration version basic type serializer upgrade test specification short serializer setup class basic type serializer upgrade test specification short serializer verifier class test specification add new test specification short value serializer migration version basic type serializer upgrade test specification short value serializer setup class basic type serializer upgrade test specification short value serializer verifier class test specification add new test specification sql date serializer migration version basic type serializer upgrade test specification sql date serializer setup class basic type serializer upgrade test specification sql date serializer verifier class test specification add new test specification sql time serializer migration version basic type serializer upgrade test specification sql time serializer setup class basic type serializer upgrade test specification sql time serializer verifier class test specification add new test specification sql timestamp serializer migration version basic type serializer upgrade test specification sql timestamp serializer setup class basic type serializer upgrade test specification sql timestamp serializer verifier class test specification add new test specification string serializer migration version basic type serializer upgrade test specification string serializer setup class basic type serializer upgrade test specification string serializer verifier class test specification add new test specification string value serializer migration version basic type serializer upgrade test specification string value serializer setup class basic type serializer upgrade test specification string value serializer verifier class return test specification 
enum serializer upgrade test run with parameterized class public class enum serializer upgrade test extend type serializer upgrade test base test enum test enum private static final string spec name enum serializer public enum serializer upgrade test test specification test enum test enum enum serializer super enum serializer parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version enum serializer setup class enum serializer verifier class test specification add new test specification spec name reconfig migration version enum serializer reconfig setup class enum serializer reconfig verifier class return test specification private static matcher extend type serializer test enum enum serializer with final test enum expect enum value return new type safe matcher enum serializer test enum override protect boolean match safely enum serializer test enum reconfigure serialize return array equal reconfigured serialized get value expect enum value override public void describe to description description description append text enum serializer with value append value list expect enum value specification for enum serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class enum serializer setup implement type serializer upgrade test base pre upgrade setup test enum suppress warning unchecked override public type serializer test enum create prior serializer return new enum serializer test enum class override public test enum create test datum return emma this class be only public to work with link org apache flink api common typeutil class relocator public static final class enum serializer verifier implement type serializer upgrade test base upgrade verifier test enum suppress warning unchecked override public type serializer test enum create upgrade serializer return new enum serializer test enum class override public matcher test enum test datum matcher return be emma override public matcher type serializer schema compatibility test enum schema compatibility matcher migration version version return type serializer matcher be compatible as be this class be only public to work with link org apache flink api common typeutil class relocator public static final class enum serializer reconfig setup implement type serializer upgrade test base pre upgrade setup enum serializer reconfig setup enum before class relocator relocate class test enum serializer reconfig public enum enum before foo bar peter nathaniel emma paula suppress warning unchecked override public type serializer enum before create prior serializer return new enum serializer enum before class override public enum before create test datum return enum before emma this class be only public to work with link org apache flink api common typeutil class relocator public static final class enum serializer reconfig verifier implement type serializer upgrade test base upgrade verifier enum serializer reconfig verifier enum after class relocator relocate class test enum serializer reconfig public enum enum after foo bar peter paula nathaniel emma suppress warning unchecked override public type serializer enum after create upgrade serializer return new enum serializer enum after class override public matcher enum after test datum matcher return be enum after emma override public matcher type serializer schema compatibility enum after schema compatibility matcher migration version version return type serializer matcher be compatible with reconfigure serializer 
list serializer upgrade test run with parameterized class public class list serializer upgrade test extend type serializer upgrade test base list string list string private static final string spec name list serializer public list serializer upgrade test test specification list string list string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version list serializer setup class list serializer verifier class return test specification specification for list serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class list serializer setup implement type serializer upgrade test base pre upgrade setup list string override public type serializer list string create prior serializer return new list serializer string serializer instance override public list string create test datum list string datum new array list datum add apache datum add flink return datum this class be only public to work with link org apache flink api common typeutil class relocator public static final class list serializer verifier implement type serializer upgrade test base upgrade verifier list string override public type serializer list string create upgrade serializer return new list serializer string serializer instance override public matcher list string test datum matcher list string datum new array list datum add apache datum add flink return be datum override public matcher type serializer schema compatibility list string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
map serializer upgrade test run with parameterized class public class map serializer upgrade test extend type serializer upgrade test base map integer string map integer string private static final string spec name map serializer public map serializer upgrade test test specification map integer string map integer string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version map serializer setup class map serializer verifier class return test specification specification for map serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class map serializer setup implement type serializer upgrade test base pre upgrade setup map integer string override public type serializer map integer string create prior serializer return new map serializer int serializer instance string serializer instance override public map integer string create test datum map integer string datum new hash map for int i i i datum put i string value of i return datum this class be only public to work with link org apache flink api common typeutil class relocator public static final class map serializer verifier implement type serializer upgrade test base upgrade verifier map integer string override public type serializer map integer string create upgrade serializer return new map serializer int serializer instance string serializer instance override public matcher map integer string test datum matcher map integer string datum new hash map for int i i i datum put i string value of i return be datum override public matcher type serializer schema compatibility map integer string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
composite type serializer upgrade test run with parameterized class public class composite type serializer upgrade test extend type serializer upgrade test base object object public composite type serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification either serializer migration version either serializer setup class either serializer verifier class test specification add new test specification generic array serializer migration version generic array serializer setup class generic array serializer verifier class return test specification specification for either serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class either serializer setup implement type serializer upgrade test base pre upgrade setup either string integer override public type serializer either string integer create prior serializer return new either serializer string serializer instance int serializer instance override public either string integer create test datum return new either left apache flink this class be only public to work with link org apache flink api common typeutil class relocator public static final class either serializer verifier implement type serializer upgrade test base upgrade verifier either string integer override public type serializer either string integer create upgrade serializer return new either serializer string serializer instance int serializer instance override public matcher either string integer test datum matcher return be new either left apache flink override public matcher type serializer schema compatibility either string integer schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for generic array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class generic array serializer setup implement type serializer upgrade test base pre upgrade setup string override public type serializer string create prior serializer return new generic array serializer string class string serializer instance override public string create test datum string datum apache flink return datum this class be only public to work with link org apache flink api common typeutil class relocator public static final class generic array serializer verifier implement type serializer upgrade test base upgrade verifier string override public type serializer string create upgrade serializer return new generic array serializer string class string serializer instance override public matcher string test datum matcher string datum apache flink return be datum override public matcher type serializer schema compatibility string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
copyable serializer upgrade test run with parameterized class public class copyable serializer upgrade test extend type serializer upgrade test base simple copyable simple copyable public copyable serializer upgrade test test specification simple copyable simple copyable test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification copyable value serializer migration version copyable serializer setup class copyable serializer verifier class return test specification a simple copyable value for migration test suppress warning weaker access public static final class simple copyable implement copyable value simple copyable public static final long serial version u i d private long value public simple copyable public simple copyable long value this value value override public int get binary length return override public void copy to simple copyable target target value this value override public simple copyable copy return new simple copyable value override public void copy datum input view source datum output view target throw i o exception target write long source read long override public void write datum output view out throw i o exception out write long value override public void read datum input view in throw i o exception value in read long override public boolean equal object obj if this obj return true if obj instanceof simple copyable return false simple copyable other simple copyable obj return value other value specification for copyable value serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class copyable serializer setup implement type serializer upgrade test base pre upgrade setup simple copyable override public type serializer simple copyable create prior serializer return new copyable value serializer simple copyable class override public simple copyable create test datum return new simple copyable this class be only public to work with link org apache flink api common typeutil class relocator public static final class copyable serializer verifier implement type serializer upgrade test base upgrade verifier simple copyable override public type serializer simple copyable create upgrade serializer return new copyable value serializer simple copyable class override public matcher simple copyable test datum matcher return be new simple copyable override public matcher type serializer schema compatibility simple copyable schema compatibility matcher migration version version return type serializer matcher be compatible as be test public void test f simple copyable a new simple copyable assert assert that a be new simple copyable 
kryo serializer upgrade test suppress warning weaker access run with parameterized class public class kryo serializer upgrade test extend type serializer upgrade test base object object public kryo serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification kryo type serializer empty config migration version kryo type serializer empty config setup class kryo type serializer empty config verifier class test specification add new test specification kryo type serializer unrelated config after restore migration version kryo type serializer empty config setup class kryo type serializer with unrelated config verifier class test specification add new test specification kryo type serializer change registration order migration version kryo type serializer change registration order setup class kryo type serializer change registration order verifier class test specification add new test specification kryo custom type serializer change registration order migration version kryo custom type serializer change registration order setup class kryo custom type serializer change registration order verifier class return test specification specification for kryo type serializer empty config public static final class kryo type serializer empty config setup implement type serializer upgrade test base pre upgrade setup animal override public type serializer animal create prior serializer return new kryo serializer animal class new execution config override public animal create test datum return new dog hasso public static final class kryo type serializer empty config verifier implement type serializer upgrade test base upgrade verifier animal override public type serializer animal create upgrade serializer return new kryo serializer animal class new execution config override public matcher animal test datum matcher return be new dog hasso override public matcher type serializer schema compatibility animal schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for kryo type serializer empty config then some config public static final class kryo type serializer with unrelated config verifier implement type serializer upgrade test base upgrade verifier animal override public type serializer animal create upgrade serializer execution config execution config new execution config execution config register kryo type dummy class one class execution config register type with kryo serializer dummy class two class default serializer string serializer class return new kryo serializer animal class execution config override public matcher animal test datum matcher return be new dog hasso override public matcher type serializer schema compatibility animal schema compatibility matcher migration version version return have same compatibility as compatible with reconfigure serializer new kryo serializer animal class new execution config specification for kryo type serializer change registration order public static final class kryo type serializer change registration order setup implement type serializer upgrade test base pre upgrade setup animal override public type serializer animal create prior serializer execution config execution config new execution config execution config register kryo type dog class execution config register kryo type cat class execution config register kryo type parrot class return new kryo serializer animal class execution config override public animal create test datum return new dog hasso public static final class kryo type serializer change registration order verifier implement type serializer upgrade test base upgrade verifier animal override public type serializer animal create upgrade serializer execution config execution config new execution config execution config register kryo type dummy class one class execution config register kryo type dog class execution config register kryo type dummy class two class execution config register kryo type cat class execution config register kryo type parrot class return new kryo serializer animal class execution config override public matcher animal test datum matcher return be new dog hasso override public matcher type serializer schema compatibility animal schema compatibility matcher migration version version return have same compatibility as compatible with reconfigure serializer new kryo serializer animal class new execution config specification for kryo custom type serializer change registration order public static final class kryo custom type serializer change registration order setup implement type serializer upgrade test base pre upgrade setup animal override public type serializer animal create prior serializer execution config execution config new execution config execution config register type with kryo serializer dog class kryo pojo for migration test dog kryo serializer class execution config register kryo type cat class execution config register type with kryo serializer parrot class kryo pojo for migration test parrot kryo serializer class return new kryo serializer animal class execution config override public animal create test datum return new dog hasso public static final class kryo custom type serializer change registration order verifier implement type serializer upgrade test base upgrade verifier animal override public type serializer animal create upgrade serializer execution config execution config new execution config execution config register kryo type dummy class one class execution config register type with kryo serializer dog class kryo pojo for migration test dog v2 kryo serializer class execution config register kryo type dummy class two class execution config register kryo type cat class execution config register type with kryo serializer parrot class kryo pojo for migration test parrot kryo serializer class return new kryo serializer animal class execution config override public matcher animal test datum matcher return be new dog hasso override public matcher type serializer schema compatibility animal schema compatibility matcher migration version version return have same compatibility as compatible with reconfigure serializer new kryo serializer animal class new execution config dummy class to be register in the test public static final class dummy class one dummy class to be register in the test public static final class dummy class two 
nullable serializer test run with parameterized class public class nullable serializer test extend serializer test base integer private static final type serializer integer original serializer int serializer instance parameterize parameter name public static list boolean whether to pad null value return array as list true false parameterized parameter public boolean pad null value private type serializer integer nullable serializer before public void init nullable serializer nullable serializer wrap if null be not support original serializer pad null value override protect type serializer integer create serializer return nullable serializer wrap if null be not support original serializer pad null value override protect int get length return pad null value override protect class integer get type class return integer class override protect integer get test datum return new integer null test public void test wrapping not need assert equal nullable serializer wrap if null be not support string serializer instance pad null value string serializer instance test public void test wrapping need assert true nullable serializer instanceof nullable serializer assert equal nullable serializer wrap if null be not support nullable serializer pad null value nullable serializer 
nullable serializer upgrade test run with parameterized class public class nullable serializer upgrade test extend type serializer upgrade test base long long public nullable serializer upgrade test test specification long long test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification nullable padded serializer migration version nullable padded serializer setup class nullable padded serializer verifier class test specification add new test specification nullable not padded serializer migration version nullable not padded serializer setup class nullable not padded serializer verifier class return test specification specification for nullable padded serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class nullable padded serializer setup implement type serializer upgrade test base pre upgrade setup long override public type serializer long create prior serializer return nullable serializer wrap long serializer instance true override public long create test datum return null this class be only public to work with link org apache flink api common typeutil class relocator public static final class nullable padded serializer verifier implement type serializer upgrade test base upgrade verifier long override public type serializer long create upgrade serializer return nullable serializer wrap long serializer instance true override public matcher long test datum matcher return be long null override public matcher type serializer schema compatibility long schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for nullable not padded serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class nullable not padded serializer setup implement type serializer upgrade test base pre upgrade setup long override public type serializer long create prior serializer return nullable serializer wrap long serializer instance false override public long create test datum return null this class be only public to work with link org apache flink api common typeutil class relocator public static final class nullable not padded serializer verifier implement type serializer upgrade test base upgrade verifier long override public type serializer long create upgrade serializer return nullable serializer wrap long serializer instance false override public matcher long test datum matcher return be long null override public matcher type serializer schema compatibility long schema compatibility matcher migration version version return type serializer matcher be compatible as be 
pojo serializer upgrade test run with parameterized class public class pojo serializer upgrade test extend type serializer upgrade test base object object public pojo serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for pojo serializer we also test against 1.7 1.8 and 1.9 because we have snapshot for this which go beyond what we have for the usual subclass of type serializer upgrade test base we don t have snapshot datum for 1.10 but the pojo serializer have not be change in quite a while anyways list migration version test version new array list test version add migration version v1 test version add migration version v1 test version add migration version v1 test version add all array as list migration version for migration version migration version test version test specification add new test specification pojo serializer identical schema migration version pojo serializer upgrade test specification identical pojo schema setup class pojo serializer upgrade test specification identical pojo schema verifier class test specification add new test specification pojo serializer with modify schema migration version pojo serializer upgrade test specification modify pojo schema setup class pojo serializer upgrade test specification modify pojo schema verifier class test specification add new test specification pojo serializer with different field type migration version pojo serializer upgrade test specification different field type pojo schema setup class pojo serializer upgrade test specification different field type pojo schema verifier class test specification add new test specification pojo serializer with modify schema in register subclass migration version pojo serializer upgrade test specification modify register pojo subclass schema setup class pojo serializer upgrade test specification modify register pojo subclass schema verifier class test specification add new test specification pojo serializer with different field type in register subclass migration version pojo serializer upgrade test specification different field type pojo subclass schema setup class pojo serializer upgrade test specification different field type pojo subclass schema verifier class test specification add new test specification pojo serializer with non register subclass migration version pojo serializer upgrade test specification non register pojo subclass setup class pojo serializer upgrade test specification non register pojo subclass verifier class test specification add new test specification pojo serializer with different subclass registration order migration version pojo serializer upgrade test specification different pojo subclass registration order setup class pojo serializer upgrade test specification different pojo subclass registration order verifier class test specification add new test specification pojo serializer with miss register subclass migration version pojo serializer upgrade test specification miss register pojo subclass setup class pojo serializer upgrade test specification miss register pojo subclass verifier class test specification add new test specification pojo serializer with new register subclass migration version pojo serializer upgrade test specification new registered pojo subclass setup class pojo serializer upgrade test specification new registered pojo subclass verifier class test specification add new test specification pojo serializer with new and missing registered subclass migration version pojo serializer upgrade test specification new and missing register pojo subclass setup class pojo serializer upgrade test specification new and missing register pojo subclass verifier class return test specification 
row serializer upgrade test run with parameterized class public class row serializer upgrade test extend type serializer upgrade test base row row public row serializer upgrade test test specification row row test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for row serializer we also test against 1.10 and newer because we have snapshot for this which go beyond what we have for the usual subclass of type serializer upgrade test base list migration version test version new array list test version add migration version v1 test version add all array as list migration version for migration version migration version test version test specification add new test specification row serializer migration version row serializer setup class row serializer verifier class return test specification public static type serializer row create row serializer in older branch this write in old format without row kind in newer branch 1.11 this write in new format with row kind final row type info row type info new row type info basic type info string type info basic type info long type info basic type info string type info basic type info string type info return row type info create serializer new execution config specification for row serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class row serializer setup implement type serializer upgrade test base pre upgrade setup row override public type serializer row create prior serializer return create row serializer override public row create test datum row row new row row set field null row set field 42 l row set field my string row set field null return row this class be only public to work with link org apache flink api common typeutil class relocator public static final class row serializer verifier implement type serializer upgrade test base upgrade verifier row override public type serializer row create upgrade serializer return create row serializer override public matcher row test datum matcher row row new row row kind insert row set field null row set field 42 l row set field my string row set field null return be row override public matcher type serializer schema compatibility row schema compatibility matcher migration version version if version be newer version than migration version v1 return type serializer matcher be compatible as be return type serializer matcher be compatible after migration 
tuple serializer upgrade test run with parameterized class public class tuple serializer upgrade test extend type serializer upgrade test base tuple3 string string integer tuple3 string string integer public tuple serializer upgrade test test specification tuple3 string string integer tuple3 string string integer test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification tuple serializer migration version tuple serializer setup class tuple serializer verifier class return test specification specification for tuple serializer public static final class tuple serializer setup implement type serializer upgrade test base pre upgrade setup tuple3 string string integer suppress warning unchecked rawtype override public type serializer tuple3 string string integer create prior serializer return new tuple serializer tuple3 class new type serializer string serializer instance string serializer instance int serializer instance override public tuple3 string string integer create test datum return new tuple3 hello gordon ciao public static final class tuple serializer verifier implement type serializer upgrade test base upgrade verifier tuple3 string string integer suppress warning unchecked rawtype override public type serializer tuple3 string string integer create upgrade serializer return new tuple serializer tuple3 class new type serializer string serializer instance string serializer instance int serializer instance override public matcher tuple3 string string integer test datum matcher return be new tuple3 hello gordon ciao override public matcher type serializer schema compatibility tuple3 string string integer schema compatibility matcher migration version version return type serializer matcher be compatible as be 
value serializer upgrade test run with parameterized class public class value serializer upgrade test extend type serializer upgrade test base value serializer upgrade test name value value serializer upgrade test name value public value serializer upgrade test test specification name value name value test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification value serializer migration version value serializer setup class value serializer verifier class return test specification public static final class value serializer setup implement type serializer upgrade test base pre upgrade setup name value override public type serializer name value create prior serializer return new value serializer name value class override public name value create test datum name value value new name value value set name klion26 return value public static final class value serializer verifier implement type serializer upgrade test base upgrade verifier name value override public type serializer name value create upgrade serializer return new value serializer name value class override public matcher name value test datum matcher name value value new name value value set name klion26 return be value override public matcher type serializer schema compatibility name value schema compatibility matcher migration version version return type serializer matcher be compatible as be a dummy class use for this test public static final class name value implement value public static final long serial version u i d l private string name public string get name return name public void set name string name this name name override public void write datum output view out throw i o exception out write u t f name override public void read datum input view in throw i o exception name in read u t f override public boolean equal object obj if obj this return true if obj instanceof name value return false name value other name value obj return object equal this name other name 
configuration conversion test run with parameterized class public class configuration conversion test private static final byte empty byte new byte private static final long too long integer max value 10 l private static final double too long double double max value private configuration pc before public void init pc new configuration pc set integer int pc set long long pc set long too long too long pc set float float 2.1456775 f pc set double double math pi pc set double negative double 1.0 pc set double zero 0.0 pc set double too long double too long double pc set string string pc set string non convertible string bcdefg pc set boolean boolean true rule public expect exception throw expect exception none parameterize parameter public static collection test spec get spec return array as list from integer test spec when access conf conf get integer int expect test spec when access conf conf get long int expect 5 l test spec when access conf conf get float int expect 5f test spec when access conf conf get double int expect 5.0 test spec when access conf conf get boolean int true expect exception unrecognized option for boolean expect either true or false case insensitive test spec when access conf conf get string int expect test spec when access conf conf get byte int empty byte expect exception configuration can not evaluate value as a byte value test spec when access conf conf get class int configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang integer as a class name from long test spec when access conf conf get integer long expect test spec when access conf conf get long long expect 15 l test spec when access conf conf get float long expect 15f test spec when access conf conf get double long expect 15.0 test spec when access conf conf get boolean long true expect exception unrecognized option for boolean expect either true or false case insensitive test spec when access conf conf get string long expect test spec when access conf conf get byte long empty byte expect exception configuration can not evaluate value as a byte value test spec when access conf conf get class long configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang long as a class name from too long test spec when access conf conf get integer too long expect exception configuration value overflow underflow the integer type test spec when access conf conf get long too long expect too long test spec when access conf conf get float too long expect float too long test spec when access conf conf get double too long expect double too long test spec when access conf conf get boolean too long true expect exception unrecognized option for boolean expect either true or false case insensitive test spec when access conf conf get string too long expect string value of too long test spec when access conf conf get byte too long empty byte expect exception configuration can not evaluate value as a byte value test spec when access conf conf get class too long configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang long as a class name from float test spec when access conf conf get integer float expect exception for input string 2.1456776 number format exception class test spec when access conf conf get long float expect exception for input string 2.1456776 number format exception class test spec when access conf conf get float float expect 2.1456775 f test spec when access conf conf get double float expect close to 2.1456775 0.0000001 test spec when access conf conf get boolean float true expect exception unrecognized option for boolean 2.1456776 expect either true or false case insensitive test spec when access conf conf get string float expect start with 2.145677 test spec when access conf conf get byte float empty byte expect exception configuration can not evaluate value 2.1456776 as a byte value test spec when access conf conf get class float configuration conversion test class configuration conversion test class get class loader expect exception onfiguration can not evaluate object of class class java lang float as a class name from double test spec when access conf conf get integer double expect exception for input string 3.141592653589793 number format exception class test spec when access conf conf get long double expect exception for input string 3.141592653589793 number format exception class test spec when access conf conf get float double expect new be close to 3.141592 f 0.000001 f test spec when access conf conf get double double expect math pi test spec when access conf conf get boolean double true expect exception unrecognized option for boolean 3.141592653589793 expect either true or false case insensitive test spec when access conf conf get string double expect start with 3.1415926535 test spec when access conf conf get byte double empty byte expect exception configuration can not evaluate value 3.141592653589793 as a byte value test spec when access conf conf get class double configuration conversion test class configuration conversion test class get class loader expect exception onfiguration can not evaluate object of class class java lang double as a class name from negative double test spec when access conf conf get integer negative double expect exception for input string 1.0 number format exception class test spec when access conf conf get long negative double expect exception for input string 1.0 number format exception class test spec when access conf conf get float negative double expect new be close to 1f 0.000001 f test spec when access conf conf get double negative double expect 1 d test spec when access conf conf get boolean negative double true expect exception unrecognized option for boolean 1.0 expect either true or false case insensitive test spec when access conf conf get string negative double expect start with test spec when access conf conf get byte negative double empty byte expect exception configuration can not evaluate value 1.0 as a byte value test spec when access conf conf get class negative double configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang double as a class name from zero test spec when access conf conf get integer zero expect exception for input string 0.0 number format exception class test spec when access conf conf get long zero expect exception for input string 0.0 number format exception class test spec when access conf conf get float zero expect new be close to 0f 0.000001 f test spec when access conf conf get double zero expect 0 d test spec when access conf conf get boolean zero true expect exception unrecognized option for boolean 0.0 expect either true or false case insensitive test spec when access conf conf get string zero expect start with test spec when access conf conf get byte zero empty byte expect exception configuration can not evaluate value 0.0 as a byte value test spec when access conf conf get class zero configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang double as a class name from too long double test spec when access conf conf get integer too long double expect exception for input string 1.7976931348623157 e308 number format exception class test spec when access conf conf get long too long double expect exception for input string 1.7976931348623157 e308 number format exception class test spec when access conf conf get float too long double expect exception configuration value 1.7976931348623157 e308 overflow underflow the float type test spec when access conf conf get double too long double expect too long double test spec when access conf conf get boolean too long double true expect exception unrecognized option for boolean 1.7976931348623157 e308 expect either true or false case insensitive test spec when access conf conf get string too long double expect string value of too long double test spec when access conf conf get byte too long double empty byte expect exception configuration can not evaluate value 1.7976931348623157 e308 as a byte value test spec when access conf conf get class too long double configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang double as a class name from string test spec when access conf conf get integer string expect test spec when access conf conf get long string expect 42 l test spec when access conf conf get float string expect 42f test spec when access conf conf get double string expect 42.0 test spec when access conf conf get boolean string true expect exception unrecognized option for boolean expect either true or false case insensitive test spec when access conf conf get string string expect test spec when access conf conf get byte string empty byte expect exception configuration can not evaluate value as a byte value test spec when access conf conf get class string configuration conversion test class configuration conversion test class get class loader expect exception class not find exception class from non convertible string test spec when access conf conf get integer non convertible string expect exception for input string bcdefg number format exception class test spec when access conf conf get long non convertible string expect exception for input string bcdefg number format exception class test spec when access conf conf get float non convertible string expect exception for input string bcdefg number format exception class test spec when access conf conf get double non convertible string expect exception for input string bcdefg number format exception class test spec when access conf conf get boolean non convertible string true expect exception unrecognized option for boolean bcdefg expect either true or false case insensitive test spec when access conf conf get string non convertible string expect bcdefg test spec when access conf conf get byte non convertible string empty byte expect exception configuration can not evaluate value bcdefg as a byte value test spec when access conf conf get class non convertible string configuration conversion test class configuration conversion test class get class loader expect exception bcdefg class not find exception class from boolean test spec when access conf conf get integer boolean expect exception for input string true test spec when access conf conf get long boolean expect exception for input string true test spec when access conf conf get float boolean expect exception for input string true test spec when access conf conf get double boolean expect exception for input string true test spec when access conf conf get boolean boolean false expect true test spec when access conf conf get string boolean expect true test spec when access conf conf get byte boolean empty byte expect exception configuration can not evaluate value true as a byte value test spec when access conf conf get class boolean configuration conversion test class configuration conversion test class get class loader expect exception configuration can not evaluate object of class class java lang boolean as a class name parameterized parameter public test spec test spec test public void test conversion throw exception test spec get expect exception if present exception throw expect test spec get exception class throw expect message exception workaround for type erasure test spec assert configuration pc private static class be close to extend type safe matcher float private final float delta private final float value public be close to float value float error this delta error this value value public boolean match safely float item return this actual delta item 0.0 d public void describe mismatch safely float item description mismatch description mismatch description append value item append text differ by append value this actual delta item public void describe to description description description append text a numeric value within append value this delta append text of append value this value private double actual delta float item return math abs item this value this delta private static class test spec t private final configuration accessor t configuration accessor private matcher t matcher nullable private string expect exception null nullable private class extend exception exception class functional interface private interface configuration accessor t t access configuration configuration throw exception private test spec configuration accessor t configuration accessor this configuration accessor configuration accessor public static t test spec t when access configuration accessor t configuration accessor return new test spec t configuration accessor public test spec t expect matcher t expect this matcher expect return this public test spec t expect t expect this matcher equal to expect return this public test spec t expect exception string message this expect exception message this exception class illegal argument exception class return this public test spec t expect exception string message class extend exception exception class this expect exception message this exception class exception class return this public optional string get expect exception return optional of nullable expect exception nullable public class extend exception get exception class return exception class void assert configuration configuration conf throw exception assert that configuration accessor access conf matcher 
configuration parse invalid format test run with parameterized class public class configuration parse invalid format test extend test logger parameterize parameter name option invalid string public static object get spec return new object new object config option key int int type default value abc new object config option key long long type default value 1 l abc new object config option key float float type default value 1 f abc new object config option key double double type default value 1 d abc new object config option key boolean boolean type default value true abc new object config option key memory memory type default value memory size parse 1k b abc new object config option key duration duration type default value duration of seconds abc new object config option key enum enum type test enum class default value test enum e n u m1 abc new object config option key map map type default value collection empty map abc new object config option key list int int type as list default value a b c new object config option key list string string type as list default value a a b c parameterize parameter public config option option parameterize parameter value public string invalid string rule public expect exception throw expect exception none test public void test invalid string parse with get optional configuration configuration new configuration configuration set string option key invalid string throw expect illegal argument exception class throw expect message string format could not parse value s for key s invalid string option key configuration get optional option test public void test invalid string parse with get configuration configuration new configuration configuration set string option key invalid string throw expect illegal argument exception class throw expect message string format could not parse value s for key s invalid string option key configuration get option private enum test enum e n u m1 e n u m2 
memory size pretty print test run with parameterized class public class memory size pretty print test extend test logger parameterize parameter public static object parameter return new object new object new memory size memory unit kilo byte get multiplier byte new object new memory size byte new object new memory size kb new object new memory size memory unit giga byte get multiplier string format d s memory unit giga byte get multiplier byte new object new memory size byte parameterize parameter public memory size memory size parameterize parameter public string expect string test public void test format assert that memory size to string be expect string 
readable writable configuration test run with parameterized class public class readable writable configuration test parameterized parameter name public static collection test spec get spec return array as list new test spec config option key int int type default value value equal check default override new test spec config option key long long type default value 1 l value equal l check default override 5 l new test spec config option key float float type default value 0.01 f value equal 0.003 f 0.003 check default override 1.23 f new test spec config option key double double type default value 0.01 d value equal 0.003 d 0.003 check default override 1.23 d new test spec config option key boolean boolean type default value false value equal true true check default override true new test spec config option key list int int type as list default value value equal array as list 1 ; 2 3 ; 4 check default override array as list new test spec config option key list string string type as list default value a b c value equal array as list a b c a b c check default override collection singleton list c new test spec config option key interval duration type default value duration of hour value equal duration of minute min check default override duration of seconds new test spec config option key memory memory type default value new memory size value equal new memory size 1g check default override new memory size new test spec config option key property map type default value as map collection singleton list tuple2 of prop1 value1 value equal as map array as list tuple2 of key1 value1 tuple2 of key2 value2 key1 value1 key2 value2 check default override collection empty map new test spec config option key list property map type as list default value as map collection singleton list tuple2 of prop1 value1 value equal array as list as map array as list tuple2 of key1 value1 tuple2 of key2 value2 as map array as list tuple2 of key3 value3 key1 value1 key2 value2 key3 value3 check default override collection empty list private static map string string as map list tuple2 string string entry return entry stream collect collector to map t t f0 t t f1 parameterized parameter public test spec test spec test public void test get optional from object configuration configuration new configuration test spec set value configuration optional optional configuration get optional test spec get option assert that optional get equal to test spec get value test public void test get optional from string config option option test spec get option configuration configuration new configuration configuration set string option key test spec get string value optional optional configuration get optional option assert that optional get equal to test spec get value test public void test get default value configuration configuration new configuration config option option test spec get option object value configuration get option assert that value equal to option default value test suppress warning unchecked public void test get optional default value override readable config configuration new configuration config option option test spec get option object value optional object configuration get optional option or else test spec get default value override assert that value equal to test spec get default value override private static class test spec t private final config option t option private t value private string string value private t default value override private test spec config option t option this option option public test spec t value equal t object value string string value this value object value this string value string value return this public test spec t check default override t default value override precondition check argument object equal default value override option default value default value override should be different from the config option default this default value override default value override return this public config option t get option return option public t get value return value public string get string value return string value public t get default value override return default value override workaround to set the value in the configuration we can not set in the test itself as the type of the type spec be erase because it use for parameterize the test suite public void set value configuration configuration configuration set option value override public string to string return test spec option option value value string value string value default value override default value override 
structured option splitter escape test run with parameterized class public class structured option splitter escape test parameterized parameter name public static collection test spec get encode spec return array as list test spec encode a b c d expect a b c d test spec encode a bcd expect a bcd test spec encode a b c d expect a b c d test spec encode ab c d expect ab c d test spec encode ab d b expect ab d b test spec encode a b c d expect a b c d test spec encode a bcd expect a bcd test spec encode ab c d expect ab c d test spec encode ab d b expect ab d b test spec encode a b c d expect a b c d test spec encode a b c d expect a b c d parameterize parameter public test spec test spec test public void test escape with single quote string encode structured option splitter escape with single quote test spec get string test spec get escape char assert assert equal test spec get encode string encode private static class test spec private final string string private final string escape char private string encode string private test spec string string string escape char this string string this escape char escape char public static test spec encode string string string escape char return new test spec string escape char public test spec expect string string this encode string string return this public string get string return string public string get encode string return encode string public string get escape char return escape char 
structured option splitter test run with parameterized class public class structured option splitter test rule public expect exception throw expect exception none parameterize parameter name public static collection test spec get spec return array as list use single quote for quote test spec split a b c expect a b c test spec split a b c expect a b c test spec split a b c expect a b c test spec split ab d b c expect ab d b c test spec split a bd b c expect exception could not split string illegal quote at position test spec split ab d b c expect exception could not split string illegal quote at position test spec split a expect exception could not split string quote be not closed properly test spec split c expect exception could not split string quote be not closed properly use double quote for quote test spec split a b c expect a b c test spec split a b c expect a b c test spec split a b c expect a b c test spec split ab d b c expect ab d b c test spec split a bd b c expect exception could not split string illegal quote at position test spec split ab d b c expect exception could not split string illegal quote at position test spec split a expect exception could not split string quote be not closed properly test spec split c expect exception could not split string quote be not closed properly mix different quote test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c test spec split ab d b c expect ab d b c use different delimiter test spec split a b c expect a b c test spec split a b c expect a b c whitespace handle test spec split a b c expect a b c test spec split a b c expect a b c test spec split a b c a expect a b c a test spec split a b c expect a b c parameterize parameter public test spec test spec test public void test parse test spec get expect exception if present exception throw expect illegal argument exception class throw expect message exception list string split structured option splitter split escape test spec get string test spec get delimiter assert that split equal to test spec get expect split private static class test spec private final string string private final char delimiter nullable private string expect exception null private list string expect split null private test spec string string char delimiter this string string this delimiter delimiter public static test spec split string string char delimiter return new test spec string delimiter public test spec expect string split this expect split array as list split return this public test spec expect exception string message this expect exception message return this public string get string return string public char get delimiter return delimiter public optional string get expect exception return optional of nullable expect exception public list string get expect split return expect splits override public string to string return string format str s del s expect s string delimiter get expect exception map e string format exception s e or else get expect split stream collect collector join 
init output path test run with power mock runner class prepare for test local file system class public class init output path test rule public final temporary folder temp dir new temporary folder this test validate that this test case make sense that the error can be produce in the absence of synchronization if the thread make progress in a certain way here enforce by latch test public void test error occur un synchronize throw exception deactivate the lock to produce the original un synchronize state field lock file system class get declare field output directory init lock lock set accessible true lock set null new no op lock try in the original un synchronize state we can force the race to occur by use the proper latch order to control the process of the concurrent thread run test true fail should fail with a exception catch file not find exception e expect finally reset the proper value lock set null new reentrant lock true test public void test proper synchronize throw exception in the synchronize variant we can not use the await latch because not both thread can make process interleave due to the synchronization the test use sleep rather than latch to produce the same interleaving while that be not guarantee to produce the pathological interleave it help to provoke it very often together with validate that this order be in fact pathological see test error occur un synchronize this give a rather confident guard run test false private void run test final boolean use await throw exception final file temp file temp dir new file final path path1 new path temp file get absolute path final path path2 new path temp file get absolute path final one shot latch delete await latch1 new one shot latch final one shot latch delete await latch2 new one shot latch final one shot latch mkdir await latch1 new one shot latch final one shot latch mkdir await latch2 new one shot latch final one shot latch delete trigger latch1 new one shot latch final one shot latch deletetrigger latch2 new one shot latch final one shot latch mkdir trigger latch1 new one shot latch final one shot latch mkdir trigger latch2 new one shot latch final one shot latch create await latch new one shot latch final one shot latch create trigger latch new one shot latch this new local datum output stream be in the end call by the async thread when new local datum output stream class with any argument then answer new answer local datum output stream override public local datum output stream answer invocation on mock invocation throw throwable create await latch trigger create trigger latch await final file file file invocation get argument return new local datum output stream file final local file system fs1 new synced file system delete await latch1 mkdir await latch1 delete trigger latch1 mkdir trigger latch1 final local file system fs2 new synced file system delete await latch2 mkdir await latch2 deletetrigger latch2 mkdir trigger latch2 start the concurrent file creator file creator thread1 new file creator fs1 path1 file creator thread2 new file creator fs2 path2 thread1 start thread2 start wait until they both decide to delete the directory if use await delete await latch1 await delete await latch2 await else thread sleep now send off to delete the directory it will pass the mkdir fast and wait to create the file mkdir trigger latch1 trigger delete trigger latch1 trigger if use await create await latch await else this need a bit more sleep time because here mockito be work thread sleep now send off to delete the directory it wait at mkdir deletetrigger latch2 trigger if use await mkdir await latch2 await else thread sleep let try to create the file and see if it succeed create trigger latch trigger if use await thread1 sync else thread sleep now let finish up mkdir trigger latch2 trigger thread1 sync thread2 sync private static class file creator extend check thread private final file system f private final path path file creator file system f path path this f fs this path path override public void go throw exception fs init out path local f s path get parent write mode overwrite true try f s datum output stream out f create path write mode overwrite out write private static class synce file system extend local file system private final one shot latch delete trigger latch private final one shot latch mkdir trigger latch private final one shot latch delete await latch private final one shot latch mkdir await latch synce file system one shot latch delete trigger latch one shot latch mkdir trigger latch one shot latch delete await latch one shot latch mkdir await latch this delete trigger latch delete trigger latch this mkdir trigger latch mkdir trigger latch this delete await latch delete await latch this mkdir await latch mkdir await latch override public boolean delete path f boolean recursive throw i o exception delete trigger latch trigger try delete await latch await catch interrupted exception e thread current thread interrupt throw new i o exception interrupt return super delete f recursive override public boolean mkdir path f throw i o exception mkdir trigger latch trigger try mkdir await latch await catch interrupted exception e thread current thread interrupt throw new i o exception interrupt return super mkdir f suppress warning serial private static final class no op lock extend reentrant lock override public void lock override public void lock interruptibly override public void unlock 
heap memory segment test run with parameterized class public class heap memory segment test extend memory segment test base public heap memory segment test int page size super page size override memory segment create segment int size return new heap memory segment new byte size override memory segment create segment int size object owner return new heap memory segment new byte size owner test public void test heap segment specifics final byte buffer new byte heap memory segment seg new heap memory segment buffer assert false seg be free assert false seg be off heap assert equal buffer length seg size assert true buffer seg get array byte buffer buf1 seg wrap byte buffer buf2 seg wrap assert true buf1 buf2 assert equal buf1 position assert equal buf1 limit assert equal buf2 position assert equal buf2 limit test public void test get array after free final byte buffer new byte heap memory segment seg new heap memory segment buffer seg free assert null seg get array 
hybrid off heap direct memory segment test run with parameterized class public class hybrid off heap direct memory segment test extend hybrid off heap memory segment test public hybrid off heap direct memory segment test int page size super page size override memory segment create segment int size return memory segment factory allocate unpool off heap memory size override memory segment create segment int size object owner return memory segment factory allocate unpool off heap memory size owner 
hybrid off heap unsafe memory segment test run with parameterized class public class hybrid off heap unsafe memory segment test extend hybrid off heap memory segment test public hybrid off heap unsafe memory segment test int page size super page size override memory segment create segment int size return memory segment factory allocate off heap unsafe memory size override memory segment create segment int size object owner return memory segment factory allocate off heap unsafe memory size owner 
hybrid on heap memory segment test run with parameterized class public class hybrid on heap memory segment test extend memory segment test base public hybrid on heap memory segment test int page size super page size override memory segment create segment int size return memory segment factory allocate unpool segment size override memory segment create segment int size object owner return memory segment factory allocate unpool segment size owner test public void test hybrid heap segment specifics final byte buffer new byte hybrid memory segment seg new hybrid memory segment buffer null assert false seg be free assert false seg be off heap assert equal buffer length seg size assert true buffer seg get array try noinspection result of method call ignore seg get off heap buffer fail should throw a exception catch illegal state exception e expect byte buffer buf1 seg wrap byte buffer buf2 seg wrap assert true buf1 buf2 assert equal buf1 position assert equal buf1 limit assert equal buf2 position assert equal buf2 limit test public void test read only byte buffer put final byte buffer new byte hybrid memory segment seg new hybrid memory segment buffer null string content hello world byte buffer bb byte buffer allocate bb put content get byte bb rewind int offset int num byte byte buffer read only buf bb as read only buffer assert false read only buf be direct assert false read only buf have array seg put offset read only buf num byte verify the area before the write region for int i i offset i assert equal buffer i verify the region that be write assert equal hello new string buffer offset num byte verify the area after the write region for int i offset num byte i buffer length i assert equal buffer i 
time util pretty print test run with parameterized class public class time util pretty print test extend test logger parameterize parameter public static object parameter return new object new object duration of minute plus seconds s new object duration of nano n new object duration of seconds min new object duration of millis ms new object duration of hour plus seconds s new object duration of seconds m new object duration of millis min parameterized parameter public duration duration parameterize parameter public string expect string test public void test format assert that time util format with highest unit duration be expect string 
s q l client kafka i t case run with parameterized class category value travi group1 class fail on java11 class public class s q l client kafka i t case extend test logger private static final logger log logger factory get logger s q l client kafka i t case class private static final string kafka e2 e sql kafka e2e sql parameterized parameter name index kafka version kafka sql version public static collection object datum return array as list new object 0.10 2.2 0.10 kafka 0.10 kafka 0.10 jar 0.11 0.2 0.11 kafka 0.11 kafka 0.11 jar 2.4 universal kafka kafka jar private static configuration get configuration we have to enable checkpoint to trigger flush for filesystem sink final configuration flink config new configuration flink config set string execution checkpoint interval 5 return flink config rule public final flink resource flink new local standalone flink resource factory create flink resource setup builder add configuration get configuration build rule public final kafka resource kafka rule public final temporary folder tmp new temporary folder private final string kafka version private final string kafka s q l version private final string kafka identifier private path result class rule public static final download cache download cache download cache get private static final path sql avro jar test util get resource avro jar private static final path sql tool box jar test util get resource sql toolbox jar private final list path apache avro jar new array list private final path sql connector kafka jar public s q l client kafka i t case string kafka version string kafka s q l version string kafka identifier string kafka s q l jar pattern this kafka kafka resource get kafka version this kafka version kafka version this kafka s q l version kafka s q l version this kafka identifier kafka identifier this sql connector kafka jar test util get resource kafka s q l jar pattern before public void before throw exception download cache before path tmp path tmp get root to path log info the current temporary path tmp path this result tmp path resolve result apache avro jar add download cache get or download http repo1 maven org maven2 org apache avro avro 1.8 avro 1.8 jar tmp path apache avro jar add download cache get or download http repo1 maven org maven2 org codehaus jackson jackson core asl 1.9 jackson core asl 1.9 jar tmp path apache avro jar add download cache get or download http repo1 maven org maven2 org codehaus jackson jackson mapper asl 1.9 jackson mapper asl 1.9 jar tmp path test public void test kafka throw exception try cluster controller cluster controller flink start cluster create topic and send message string test json topic test json kafka version uuid random u u i d to string string test avro topic test avro kafka version uuid random u u i d to string kafka create topic test json topic string message new string rowtime 2018 - 03 12 08 00:00 user alice event type warn message this be a warning rowtime 2018 - 03 12 08 10:00 user alice event type warn message this be a warning rowtime 2018 - 03 12 09 00:00 user bob event type warn message this be another warning rowtime 2018 - 03 12 09 10:00 user alice event type info message this be a info rowtime 2018 - 03 12 09 20:00 user steve event type info message this be another info rowtime 2018 - 03 12 09 30:00 user steve event type info message this be another info rowtime 2018 - 03 12 09 30:00 user null event type warn message this be a bad message because the user be miss rowtime 2018 - 03 12 10 40:00 user bob event type error message this be a error kafka send message test json topic message create topic test avro kafka create topic test avro topic initialize the sql statement from kafka e2e sql file map string string var map new hash map var map put kafka identifier this kafka identifier var map put topic json name test json topic var map put topic avro name test avro topic var map put result this result to absolute path to string var map put kafka bootstrap server string util join kafka get bootstrap server address to array list string sql line initialize sql line var map execute sql statement in kafka e2e sql file execute sql statement cluster controller sql line wait until all the result flush to the csv file log info verify the csv result check csv result file log info the kafka sql client test run successfully this kafka s q l version private void execute sql statement cluster controller cluster controller list string sql line throw i o exception log info execute kafka end to end sql statement kafka s q l version cluster controller submit s q l job new s q l job submission s q l job submission builder sql line add jar sql avro jar add jar apache avro jar add jar sql connector kafka jar add jar sql tool box jar build private list string initialize sql line map string string var throw i o exception url url s q l client kafka i t case class get class loader get resource kafka e2 e sql if url null throw new file not find exception kafka e2 e sql list string line file read all line new file url get file to path list string result new array list for string line line for map entry string string var var entry set line line replace var get key var get value result add line return result private void check csv result file throw exception boolean success false final deadline deadline deadline from now duration of seconds while deadline have time leave if file exist result list string line read csv result file result if line size success true assert that line to array new string array contain in any order 2018 - 03 12 08 00:00 alice this be a warning success constant folding 2018 - 03 12 09 00:00 bob this be another warning success constant folding 2018 - 03 12 09 00:00 steve this be another info success constant folding 2018 - 03 12 09 00:00 alice this be a info success constant folding break else log info the target csv do not contain enough record current record leave time s result line size deadline time leave get seconds else log info the target csv do not exist now result thread sleep assert assert true do not get expect result before timeout success private static list string read csv result file path path throw i o exception file file path path to file list all the non hide file file csv file file path list file dir name name start with list string result new array list if csv file null for file file csv file result add all file read all line file to path return result 
stream kafka i t case run with parameterized class category value travi group1 class pre commit class fail on java11 class public class streaming kafka i t case extend test logger private static final logger log logger factory get logger streaming kafka i t case class parameterize parameter name index kafka version public static collection object datum return array as list new object flink streaming kafka010 test 0.10 2.2 flink streaming kafka011 test 0.11 0.2 flink streaming kafka test 2.4 private final path kafka example jar private final string kafka version rule public final kafka resource kafka rule public final flink resource flink flink resource get flink resource setup builder add configuration get configuration build private static configuration get configuration modify configuration to have enough slot final configuration flink config new configuration flink config set integer task manager option num task slot return flink config public streaming kafka i t case final string kafka example jar pattern final string kafka version this kafka example jar test util get resource kafka example jar pattern this kafka kafka resource get kafka version this kafka version kafka version test public void test kafka throw exception try final cluster controller cluster controller flink start cluster final string input topic test input kafka version uuid random u u i d to string final string output topic test output kafka version uuid random u u i d to string create the require topic kafka create topic input topic kafka create topic output topic run the flink job detach mode cluster controller submit job new job submission job submission builder kafka example jar set detached true add argument input topic input topic add argument output topic output topic add argument prefix prefix add argument bootstrap server kafka get bootstrap server address stream map address address get host string address get port collect collector join add argument group id myconsumer add argument auto offset reset earliest add argument transaction timeout ms add argument flink partition discovery interval milli build log info send message to kafka topic input topic send some datum to kafka kafka send keyed message input topic t key telephant 5,45218 key tsquirrel 12,46213 key tbee 3,51348 key tsquirrel 22,52444 key tbee 10,53412 key telephant 9,54867 log info verify message from kafka topic output topic final list string message kafka read message kafka e2e driver output topic final list string elephant filter message message elephant final list string squirrel filter message message squirrel final list string bee filter message message bee check all key assert assert equal array as list elephant 5,45218 elephant 14,54867 elephant assert assert equal array as list squirrel 12,46213 squirrel 34,52444 squirrel assert assert equal array as list bee 3,51348 bee 13,53412 bee now we add a new partition to the topic log info repartition kafka topic input topic kafka set num partition input topic assert assert equal fail add a partition to input topic kafka get num partition input topic send some more message to kafka log info send more message to kafka topic input topic kafka send keyed message input topic t key telephant 13,64213 key tgiraffe 9,65555 key tbee 5,65647 key tsquirrel 18,66413 verify that we assumption that the new partition actually have write message be correct assert assert not equal the newly create partition do not have any new message and therefore partition discovery can not be verify 0 l kafka get partition offset input topic log info verify message from kafka topic output topic final list string message kafka read message kafka e2e driver output topic final list string elephant filter message message elephant final list string squirrel filter message message squirrel final list string bee filter message message bee final list string giraffe filter message message giraffe assert assert equal string format message from kafka s s kafka version message array as list elephant 27,64213 elephant assert assert equal string format message from kafka s s kafka version message array as list squirrel 52,66413 squirrel assert assert equal string format message from kafka s s kafka version message array as list bee 18,65647 bee assert assert equal string format message from kafka s s kafka version message array as list giraffe 9,65555 giraffe private static list string filter message final list string message final string keyword return message stream filter msg msg contain keyword collect collector to list 
prometheus reporter end to end i t case category travi group1 class run with parameterized class public class prometheus reporter end to end i t case extend test logger private static final logger log logger factory get logger prometheus reporter end to end i t case class private static final object mapper object mapper new object mapper private static final string prometheus version 2.4 private static final string prometheus file name private static final string prometheus jar prefix flink metric prometheus static final string base prometheus prometheus version final string os final string platform switch operate system get current operating system case mac os os darwin break case window os window break default os linux break switch processor architecture get processor architecture case x86 platform break case a m d64 platform amd64 break case a r mv7 platform armv7 break case a a r c h64 platform arm64 break default platform unknown break prometheus file name base os platform private static final pattern log reporter port pattern pattern compile start prometheus reporter http server on port 0 - 9 before class public static void check o s assume assume false this test do not run on window operate system be window parameterized parameter name index public static collection test param test parameter return array as list test param from jar in lib builder builder move jar prometheus jar prefix jar location plugin jar location lib reflection test param from jar in lib builder builder move jar prometheus jar prefix jar location plugin jar location lib factory test param from jar in plugin builder reflection test param from jar in plugin builder factory test param from jar in lib and plugin builder builder copy jar prometheus jar prefix jar location plugin jar location lib reflection test param from jar in lib and plugin builder builder copy jar prometheus jar prefix jar location plugin jar location lib factory rule public final flink resource dist public prometheus reporter end to end i t case test param param final flink resource setup flink resource setup builder builder flink resource setup builder param get builder setup accept builder builder add configuration get flink config param get instantiation type dist new local standalone flink resource factory create builder build rule public final temporary folder tmp new temporary folder rule public final download cache download cache download cache get private static configuration get flink config test param instantiation type instantiation type final configuration config new configuration switch instantiation type case factory config set string config constant metric reporter prefix prom config constant metric reporter factory class suffix prometheus reporter factory class get name break case reflection config set string config constant metric reporter prefix prom config constant metric reporter class suffix prometheus reporter class get canonical name config set string config constant metric reporter prefix prom port 9000 - 9100 return config test public void test reporter throw exception final path tmp prometheus dir tmp new folder to path resolve prometheus final path prometheus bin dir tmp prometheus dir resolve prometheus file name final path prometheus config prometheus bin dir resolve prometheus yml final path prometheus binary prometheus bin dir resolve prometheus file create directory tmp prometheus dir final path prometheus archive download cache get or download http github com prometheus prometheus release download v prometheus version prometheus file name tar gz tmp prometheus dir log info unpack prometheus run block command line wrapper tar prometheus archive extract zipped target dir tmp prometheus dir build log info set prometheus scrape interval run block command line wrapper sed s scrape interval 1 1 s prometheus config in place build try cluster controller ignore dist start cluster final list integer port dist search all log log reporter port pattern matcher matcher group map integer value of collect collector to list final string scrape target port stream map port localhost port collect collector join log info set prometheus scrape target to scrape target run block command line wrapper sed s target scrape target prometheus config in place build log info start prometheus server try auto closable process prometheus run non block prometheus binary to absolute path to string config file prometheus config to absolute path storage tsdb path prometheus bin dir resolve datum to absolute path final ok http client client new ok http client check metric availability client flink jobmanager num register task manager check metric availability client flink taskmanager status network total memory segment private static void check metric availability final ok http client client final string metric throw interrupted exception final request job manager request new request builder get url http localhost api v1 query query metric build exception report exception null for int x x x try response response client new call job manager request execute if response be successful final string json response body string sample response status success datum result type vector result metric name flink jobmanager num register task manager host localhost instance localhost job prometheus value 1540548500.107 object mapper read tree json get datum get result get get value get as int if we reach this point some value for the give metric be report to prometheus return else log info retrieve metric fail retry response code response message thread sleep catch exception e report exception exception util first or suppress e report exception thread sleep throw new assertion error could not retrieve metric metric from prometheus report exception static class test param private final string jar location description private final consumer flink resource setup flink resource setup builder builder setup private final instantiation type instantiation type private test param string jar location description consumer flink resource setup flink resource setup builder builder setup instantiation type instantiation type this jar location description jar location description this builder setup builder setup this instantiation type instantiation type public static test param from string jar location desription consumer flink resource setup flink resource setup builder builder setup instantiation type instantiation type return new test param jar location desription builder setup instantiation type public consumer flink resource setup flink resource setup builder get builder setup return builder setup public instantiation type get instantiation type return instantiation type override public string to string return jar location description instantiate via instantiation type name to lower case public enum instantiation type reflection factory 
azure file system behavior i t case run with parameterized class public class azure file system behavior i t case extend file system behavior test suite parameterize parameter public string scheme private static final string container system getenv artifact azure container private static final string account system getenv artifact azure storage account private static final string access key system getenv artifact azure access key private static final string resource group system getenv artifact azure resource group private static final string subscription id system getenv artifact azure subscription id private static final string token credentials file system getenv artifact azure token credentials file private static final string test datum dir test uuid random u u i d azure blob storage default to http only storage account we check if http support have be enable on a best effort basis and test http if so parameterized parameter name scheme public static list string parameter throw i o exception boolean http only be https traffic only return http only array as list wasbs array as list wasb wasb private static boolean be https traffic only throw i o exception if string util be null or whitespace only resource group string util be null or whitespace only token credentials file default to http only as some field be miss return true assume assume true azure storage account not configure skip test string util be null or whitespace only account azure token credentials credentials application token credentials from file new file token credentials file azure azure string util be null or whitespace only subscription id azure authenticate credentials with default subscription azure authenticate credentials with subscription subscription id return azure storage account get by resource group resource group account inner enable http traffic only before class public static void check credentials and setup throw i o exception check whether credentials and container detail exist assume assume true azure container not configure skip test string util be null or whitespace only container assume assume true azure access key not configure skip test string util be null or whitespace only access key initialize configuration with valid credentials final configuration conf new configuration f azure account key youraccount blob core window net access key conf set string f azure account key account blob core window net access key file system initialize conf after class public static void clear f config throw i o exception file system initialize new configuration override public file system get file system throw exception return get base path get file system override public path get base path wasb s yourcontainer youraccount blob core window net test datum dir string uri string scheme container account blob core window net test datum dir return new path uri string test public void test simple file write and read throw exception final long deadline system nano time 000 l sec final string test line hello upload final path path new path get base path test txt final file system f path get file system try try f s datum output stream out f create path file system write mode overwrite output stream writer writer new output stream writer out standard charset utf writer write test line just in case wait for the path to exist check path eventual existence f path true deadline try f s datum input stream in f open path input stream reader ir new input stream reader in standard charset utf buffer reader reader new buffer reader ir string line reader read line assert equal test line line finally f delete path false now file must be go check path eventual existence f path false deadline test public void test directory listing throw exception final long deadline system nano time 000 l sec final path directory new path get base path testdir final file system f directory get file system directory must not yet exist assert false f exist directory try create directory assert true f mkdir directory check path eventual existence f directory true deadline directory empty assert equal f list status directory length create some file final int num file for int i i num file i path file new path directory file i try f s datum output stream out f create file file system write mode overwrite output stream writer writer new output stream writer out standard charset utf writer write hello i n just in case wait for the file to exist should then also be reflect in the directory s file list below check path eventual existence f file true deadline file status file f list status directory assert not null file assert equal file length for file status status file assert false status be dir now that there be file the directory must exist assert true f exist directory finally clean up f delete directory true now directory must be go check path eventual existence f directory false deadline override public file system kind get file system kind return file system kind object store 
azure f s factory test run with parameterized class public class azure f s factory test extend test logger parameterize parameter public string scheme parameterize parameter name scheme public static list string parameter return array as list wasb wasbs rule public final expect exception exception expect exception none private abstract azure f s factory get factory string scheme return scheme equal wasb new azure f s factory new secure azure f s factory test public void test null f u be i throw exception uri uri null abstract azure f s factory factory get factory scheme exception expect null pointer exception class exception expect message pass file system uri object should not be null factory create uri missing credentials test public void test create f with authority miss cred throw exception string uri string string format s yourcontainer youraccount blob core window net test dir scheme final uri uri uri create uri string exception expect azure exception class abstract azure f s factory factory get factory scheme configuration config new configuration config set integer f azure io retry max retry factory configure config factory create uri test public void test create f with missing authority throw exception string uri string string format s my path scheme final uri uri uri create uri string exception expect illegal argument exception class exception expect message can not initialize wasb file system uri authority not recognize abstract azure f s factory factory get factory scheme factory configure new configuration factory create uri 
presto s3 file system i t case run with parameterized class public class presto s3 file system i t case extend abstract hadoop file system i t test parameterized parameter public string scheme parameterize parameter name scheme public static list string parameter return array as list s3 s3p private static final string test datum dir test uuid random u u i d before class public static void setup throw i o exception s3 test credentials assume credentials available initialize configuration with valid credentials final configuration conf new configuration conf set string s3 access key s3 test credentials get s3 access key conf set string s3 secret key s3 test credentials get s3 secret key file system initialize conf base path new path s3 test credentials get test bucket uri test datum dir fs base path get file system consistency tolerance n s 000 l seconds check for uniqueness of the test directory directory must not yet exist assert false f exist base path test public void test config key forward throw exception final path path base path access without credentials should fail configuration conf new configuration fail fast and do not fall back to try e c2 credentials conf set string s3 use instance credentials false file system initialize conf try path get file system exist path fail should fail with a exception catch i o exception ignore standard presto style credential key configuration conf new configuration conf set string s3 use instance credentials false conf set string presto s3 access key s3 test credentials get s3 access key conf set string presto s3 secret key s3 test credentials get s3 secret key file system initialize conf path get file system exist path shorten presto style credential key configuration conf new configuration conf set string s3 use instance credentials false conf set string s3 access key s3 test credentials get s3 access key conf set string s3 secret key s3 test credentials get s3 secret key file system initialize conf path get file system exist path shorten hadoop style credential key configuration conf new configuration conf set string s3 use instance credentials false conf set string s3 access key s3 test credentials get s3 access key conf set string s3 secret key s3 test credentials get s3 secret key file system initialize conf path get file system exist path shorten hadoop style credential key with presto prefix configuration conf new configuration conf set string s3 use instance credentials false conf set string presto s3 access key s3 test credentials get s3 access key conf set string presto s3 secret key s3 test credentials get s3 secret key file system initialize conf path get file system exist path re set configuration file system initialize new configuration override protect void check empty directory path path throw i o exception interrupt exception seem the presto file system do not assume existence of empty directory in s3 do nothing as before 
avro filesystem i t case run with parameterized class public class avro filesystem i t case extend batch file system i t case base private final boolean configure parameterized parameter name public static collection boolean parameter return array as list false true public avro filesystem i t case boolean configure this configure configure override public string format property list string ret new array list ret add format avro if configure ret add avro codec snappy return ret to array new string 
avro serializer upgrade test run with parameterized class public class avro serializer upgrade test extend type serializer upgrade test base object object public avro serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification generic avro serializer migration version generic avro serializer setup class generic avro serializer verifier class test specification add new test specification specific avro serializer migration version specific avro serializer setup class specific avro serializer verifier class return test specification specification for generic avro serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class generic avro serializer setup implement type serializer upgrade test base pre upgrade setup generic record override public type serializer generic record create prior serializer return new avro serializer generic record class address get class schema override public generic record create test datum generic datum record record new generic datum record address get class schema record put num record put street baker street record put city london record put state london record put zip n w1 6 x e return record this class be only public to work with link org apache flink api common typeutil class relocator public static final class generic avro serializer verifier implement type serializer upgrade test base upgrade verifier generic record suppress warning unchecked rawtype override public type serializer generic record create upgrade serializer return new avro serializer generic record class address get class schema override public matcher generic record test datum matcher generic datum record record new generic datum record address get class schema record put num record put street baker street record put city london record put state london record put zip n w1 6 x e return be record override public matcher type serializer schema compatibility generic record schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for specific avro serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class specific avro serializer setup implement type serializer upgrade test base pre upgrade setup address override public type serializer address create prior serializer suppress warning unchecked rawtype avro serializer address avro serializer new avro serializer address class return avro serializer override public address create test datum address addr new address addr set num addr set street baker street addr set city london addr set state london addr set zip n w1 6 x e return addr this class be only public to work with link org apache flink api common typeutil class relocator public static final class specific avro serializer verifier implement type serializer upgrade test base upgrade verifier address override public type serializer address create upgrade serializer suppress warning unchecked rawtype avro serializer address avro serializer new avro serializer address class return avro serializer override public matcher address test datum matcher address addr new address addr set num addr set street baker street addr set city london addr set state london addr set zip n w1 6 x e return be addr override public matcher type serializer schema compatibility address schema compatibility matcher migration version version return type serializer matcher be compatible as be 
avro type extraction test run with parameterized class public class avro type extraction test extend multiple program test base public avro type extraction test test execution mode mode super mode private file in file private string result path private string expect rule public temporary folder temp folder new temporary folder before public void before throw exception result path temp folder new file to u be i to string in file temp folder new file avro record input format test write test file in file after public void after throw exception compare result by line in memory expect result path test public void test simple avro read throw exception final execution environment env execution environment get execution environment path in new path in file get absolute file to u be i avro input format user user new avro input format in user class datum set user user d s env create input user map value value user d s write as text result path env execute simple avro read job expect name alyssa favorite number favorite color null type long test null type double test 123.45 type null test null type bool test true type array string element element type array boolean true false type nullable array null type enum green type map key key type fix null type union null type nest num street baker street city london state london zip n w1 6 x e type byte byte u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 type date 2014 - 03 type time millis 12:12 12.000 type time micros type timestamp millis 2014 - 03 01 t12 12:12 z type timestamp micros type decimal byte byte u0007 type decimal fix n name charlie favorite number null favorite color blue type long test type double test 1.337 type null test null type bool test false type array string type array boolean type nullable array null type enum red type map type fix null type union null type nest num street baker street city london state london zip n w1 6 x e type byte byte u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 type date 2014 - 03 type time millis 12:12 12.000 type time micros type timestamp millis 2014 - 03 01 t12 12:12 z type timestamp micros type decimal byte byte u0007 type decimal fix n test public void test serialize with avro throw exception final execution environment env execution environment get execution environment env get config enable force avro path in new path in file get absolute file to u be i avro input format user user new avro input format in user class datum set user user d s env create input user map map function user user value map char sequence long ab new hash map ab put hehe 12 l value set type map ab return value user d s write as text result path env execute simple avro read job expect name alyssa favorite number favorite color null type long test null type double test 123.45 type null test null type bool test true type array string element element type array boolean true false type nullable array null type enum green type map hehe type fix null type union null type nest num street baker street city london state london zip n w1 6 x e type byte byte u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 type date 2014 - 03 type time millis 12:12 12.000 type time micros type timestamp millis 2014 - 03 01 t12 12:12 z type timestamp micros type decimal byte byte u0007 type decimal fix n name charlie favorite number null favorite color blue type long test type double test 1.337 type null test null type bool test false type array string type array boolean type nullable array null type enum red type map hehe type fix null type union null type nest num street baker street city london state london zip n w1 6 x e type byte byte u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 u0000 type date 2014 - 03 type time millis 12:12 12.000 type time micros type timestamp millis 2014 - 03 01 t12 12:12 z type timestamp micros type decimal byte byte u0007 type decimal fix n test public void test key selection throw exception final execution environment env execution environment get execution environment env get config enable object reuse path in new path in file get absolute file to u be i avro input format user user new avro input format in user class datum set user user d s env create input user datum set tuple2 string integer re user d s group by name reduce group group reduce function user tuple2 string integer value out for user u value out collect new tuple2 u get name to string return type tuple type string type int re write as text result path env execute avro key selection expect alyssa n charlie n test public void test with avro generic ser throw exception final execution environment env execution environment get execution environment env get config enable force avro path in new path in file get absolute file to u be i avro input format user user new avro input format in user class datum set user user d s env create input user datum set tuple2 string integer re user d s group by key selector user string value string value of value get name reduce group group reduce function user tuple2 string integer value out for user u value out collect new tuple2 u get name to string return type tuple type string type int re write as text result path env execute avro key selection expect charlie n alyssa n test public void test with kryo generic ser throw exception final execution environment env execution environment get execution environment env get config enable force kryo path in new path in file get absolute file to u be i avro input format user user new avro input format in user class datum set user user d s env create input user datum set tuple2 string integer re user d s group by key selector user string value string value of value get name reduce group group reduce function user tuple2 string integer value out for user u value out collect new tuple2 u get name to string return type tuple type string type int re write as text result path env execute avro key selection expect charlie n alyssa n test some know field for grouping on test public void test all field throw exception for string field name array as list name type enum type double test test field field name private void test field final string field name throw exception before final execution environment env execution environment get execution environment path in new path in file get absolute file to u be i avro input format user user new avro input format in user class datum set user user d s env create input user datum set object re user d s group by field name reduce group group reduce function user object value out for user u value out collect u get field name return object class re write as text result path env execute simple avro read job test if automatic registration of the type work execution config ec env get config assert assert true ec get register kryo type contain fixed16 class switch field name case name expect alyssa n charlie break case type enum expect green n r e d n break case type double test expect 123.45 n1 n break default assert fail unknown field break after 
avro type i t case run with parameterized class public class avro type i t case extend table program cluster test base private static final user user user new builder set name charlie set favorite color blue set favorite number null set type bool test false set type double test 1.337 d set type null test null set type long test l set type array string new array list set type array boolean new array list set type nullable array null set type enum color red set type map new hash map set type fix null set type union null set type nest address new builder set num set street bakerstreet set city berlin set state berlin set zip build set type byte byte buffer allocate set type date local date parse 2014 - 03 set type time millis local time parse 12:12 set type time micros set type timestamp millis date time parse 2014 - 03 01 t12 12:12 z set type timestamp micros l set type decimal byte byte buffer wrap big decimal value of unscaled value to byte array set type decimal fix new fixed2 big decimal value of unscaled value to byte array build private static final user user user new builder set name whatever set favorite number null set favorite color black set type long test 42 l set type double test 0.0 set type null test null set type bool test true set type array string collection singleton list hello set type array boolean collection singleton list true set type enum color green set type map new hash map set type fix new fixed16 set type union null set type nest null set type date local date parse 2014 - 03 set type byte byte buffer allocate set type time millis local time parse 12:12 set type time micros set type timestamp millis date time parse 2014 - 03 01 t12 12:12 z set type timestamp micros l set type decimal byte byte buffer wrap big decimal value of unscaled value to byte array set type decimal fix new fixed2 big decimal value of unscaled value to byte array build private static final user user user new builder set name terminator set favorite number null set favorite color yellow set type long test 1 l set type double test 0.0 set type null test null set type bool test false set type array string collection singleton list world set type array boolean collection singleton list false set type enum color green set type map new hash map set type fix new fixed16 set type union null set type nest null set type byte byte buffer allocate set type date local date parse 2014 - 03 set type time millis local time parse 12:12 set type time micros set type timestamp millis date time parse 2014 - 03 01 t12 12:12 z set type timestamp micros l set type decimal byte byte buffer wrap big decimal value of unscaled value to byte array set type decimal fix new fixed2 big decimal value of unscaled value to byte array build public avro type i t case test execution mode execution mode table config mode table config mode super execution mode table config mode test public void test avro to row throw exception execution environment env execution environment get execution environment env get config register type with kryo serializer local date class avro kryo serializer util joda local date serializer class env get config register type with kryo serializer local time class avro kryo serializer util joda local time serializer class batch table environment t env batch table environment create env config table t t env from datum set test datum env table result t select list row result t env to datum set result row class collect string expect black null whatever true hello true java nio heap byte buffer pos lim cap 2014 - 03 java nio heap byte buffer po lim cap 0.0 green null null null 12:12 12.000 123456,2014 03 - 01 t12 12:12 z null n blue null charlie false java nio heap byte buffer pos lim cap 2014 - 03 java nio heap byte buffer pos lim cap 1.337 red null num street bakerstreet city berlin state berlin zip null null 123456,12 12:12 000,123456 2014 - 03 01 t12 12:12 z null n yellow null terminator false world false java nio heap byte buffer pos lim cap 2014 - 03 java nio heap byte buffer po lim cap 0.0 green null null null 12:12 12.000 123456,2014 03 - 01 t12 12:12 z null test base util compare result as text result expected test public void test avro string access throw exception execution environment env execution environment get execution environment batch table environment t env batch table environment create env config table t t env from datum set test datum env table result t select name list utf8 result t env to datum set result type generic utf8 class collect string expect charlie n terminator n whatever test base util compare result as text result expected test public void test avro object access throw exception execution environment env execution environment get execution environment batch table environment t env batch table environment create env config table t t env from datum set test datum env table result t filter type nest be not null select type nest flatten as city num state street zip list address result t env to datum set result type pojo address class collect string expect user get type nest to string test base util compare result as text result expected test public void test avro to avro throw exception execution environment env execution environment get execution environment batch table environment t env batch table environment create env config table t t env from datum set test datum env table result t select list user result t env to datum set result type pojo user class collect list user expect array as list user user user assert equal expect result private datum set user test datum execution environment env list user datum new array list datum add user datum add user datum add user return env from collection datum 
csv filesystem batch i t case run with enclose class public class csv filesystem batch i t case general it case for csv row datum filesystem in batch mode public static class general csv filesystem batch i t case extend batch file system i t case base override public string format property list string ret new array list ret add format csv ret add csv field delimiter ret add csv quote character return ret to array new string enrich it case that include test parse error and test escape char for csv row datum filesystem in batch mode public static class enrich csv filesystem batch i t case extend batch file system i t case base override public string format property list string ret new array list ret add format csv ret add csv ignore parse error true ret add csv escape character t return ret to array new string test public void test parse error throw exception string path new uri result path get path new file path mkdir file file new file path test file file create new file file util write file utf8 file x5 5,1 n x5 5,2 2,2 n x5 5,1 check select from non partition table array as list row of x5 5,1 row of x5 5,1 test public void test escape char throw exception string path new uri result path get path new file path mkdir file file new file path test file file create new file file util write file utf8 file x5 t n5 1,1 n x5 t5 2,2 check select from non partition table array as list row of x5 5,1 row of x5 5,2 
abstract file committer test run with parameterized class public abstract class abstract file committer test extend abstract test base private static final list string contents new array list array as list first line second line third line private boolean override private configuration configuration private path base path parameterized parameter name override public static collection boolean parameter return array as list true false public abstract file committer test boolean override throw i o exception this override override this configuration get configuration this base path get base path after public void cleanup throw i o exception cleanup configuration base path protect abstract configuration get configuration protect abstract hadoop file committer create new committer configuration configuration path target file path throw i o exception protect abstract hadoop file committer create pend committer configuration configuration path target file path path temp file path throw i o exception protect abstract path get base path throw i o exception protect abstract void cleanup configuration configuration path base path throw i o exception test public void test commit one file throw i o exception path target file path new path base path part 0 - 0 txt hadoop file committer committer create new committer configuration target file path write file committer get temp file path configuration committer pre commit verify file not exist configuration base path part 0 - 0 txt committer commit verify folder after all commit configuration base path part 0 - 0 txt test public void test commit re write file after fail over throw i o exception path target file path new path base path part 0 - 0 txt hadoop file committer committer create new committer configuration target file path write file committer get temp file path configuration path first temp file path committer get temp file path simulate restart the process and be write the file committer create new committer configuration target file path write file committer get temp file path configuration committer pre commit verify file not exist configuration base path part 0 - 0 txt committer commit verify folder after all commit configuration base path part 0 - 0 txt first temp file path get name test public void test commit pre commit file after fail over throw i o exception path target file path new path base path part 0 - 0 txt hadoop file committer committer create new committer configuration target file path write file committer get temp file path configuration committer pre commit verify file not exist configuration base path part 0 - 0 txt simulate restart the process and continue commit the file committer create pend committer configuration target file path committer get temp file path committer commit verify folder after all commit configuration base path part 0 - 0 txt test public void test repeat commit after fail over throw i o exception path target file path new path base path part 0 - 0 txt hadoop file committer committer create new committer configuration target file path write file committer get temp file path configuration committer pre commit verify file not exist configuration base path part 0 - 0 txt committer commit verify folder after all commit configuration base path part 0 - 0 txt simulate restart the process and continue commit the file committer create pend committer configuration target file path committer get temp file path committer commit after recovery verify folder after all commit configuration base path part 0 - 0 txt test public void test commit multiple file one by one throw i o exception path target file path1 new path base path part 0 - 0 txt path target file path2 new path base path part 1 - 1 txt hadoop file committer committer1 create new committer configuration target file path1 hadoop file committer committer2 create new committer configuration target file path2 write file committer1 get temp file path configuration write file committer2 get temp file path configuration committer1 pre commit committer1 commit verify committed file configuration base path part 0 - 0 txt verify file not exist configuration base path part 1 - 1 txt committer2 pre commit committer2 commit verify folder after all commit configuration base path part 0 - 0 txt part 1 - 1 txt test public void test commit multiple file mix throw i o exception path target file path1 new path base path part 0 - 0 txt path target file path2 new path base path part 1 - 1 txt hadoop file committer committer1 create new committer configuration target file path1 hadoop file committer committer2 create new committer configuration target file path2 write file committer1 get temp file path configuration write file committer2 get temp file path configuration committer1 pre commit committer2 pre commit verify file not exist configuration base path part 0 - 0 txt verify file not exist configuration base path part 1 - 1 txt committer1 commit verify committed file configuration base path part 0 - 0 txt verify file not exist configuration base path part 1 - 1 txt committer2 commit verify folder after all commit configuration base path part 0 - 0 txt part 1 - 1 txt private void write file path path configuration configuration throw i o exception file system file system file system get path to uri configuration try f s datum output stream f datum output stream file system create path override print writer print writer new print writer f datum output stream for string line contents print writer println line private void verify file not exist configuration configuration path base path string target file name throw i o exception file system file system file system get base path to uri configuration for string target file name target file name assert false pre commit file should not exist target file name file system exist new path base path target file name private void verify committed file configuration configuration path base path string target file name throw i o exception file system file system file system get base path to uri configuration for string target file name target file name path target file path new path base path target file name assert true committed file should exist target file name file system exist target file path list string write read file file system target file path assert equal unexpected file content for file target file path contents write private void verify folder after all commit configuration configuration path base path string expect file name throw i o exception list string expect name array as list expect file name collection sort expect name file system file system file system get base path to uri configuration file status file file system list status base path list string file name new array list for file status file file file name add file get path get name collection sort file name assert equal remain file be file name expect name file name for file status file file if file get path get name start with list string write read file file system file get path assert equal unexpected file content for file file get path contents write private list string read file file system file system path part file throw i o exception try f s datum input stream datum input stream file system open part file list string line new array list buffer reader reader new buffer reader new input stream reader datum input stream string line null while line reader read line null line add line return line 
orc file system i t case run with parameterized class public class orc file system i t case extend batch file system i t case base private final boolean configure parameterized parameter name public static collection boolean parameter return array as list false true public orc file system i t case boolean configure this configure configure override public string format property list string ret new array list ret add format orc if configure ret add orc compress snappy return ret to array new string override public void test non partition super test non partition test configure success file directory new file uri create result path get path file file directory list file dir name name start with name start with assert assert not null file path path new path uri create file get absolute path try reader reader orc file create reader path orc file reader option new configuration if configure assert assert equal snappy reader get compression kind to string else assert assert equal zlib reader get compression kind to string catch i o exception e throw new runtime exception e 
parquet file system i t case run with parameterized class public class parquet file system i t case extend batch file system i t case base private final boolean configure parameterized parameter name public static collection boolean parameter return array as list false true public parquet file system i t case boolean configure this configure configure override public string format property list string ret new array list ret add format parquet if configure ret add parquet utc timezone true ret add parquet compression gzip return ret to array new string override public void test non partition super test non partition test configure success file directory new file uri create result path get path file file directory list file dir name name start with name start with assert assert not null file path path new path uri create file get absolute path try parquet metadata footer read footer new configuration path range long max value if configure assert assert equal gzip footer get block get get column get get codec to string else assert assert equal uncompressed footer get block get get column get get codec to string catch i o exception e throw new runtime exception e 
parquet columnar row split reader test run with parameterized class public class parquet columnar row split reader test private static final int field number private static final local date time base time local date time now private static final message type parquet schema new message type top type primitive primitive type primitive type name binary type repetition optional name f0 type primitive primitive type primitive type name boolean type repetition optional name f1 type primitive primitive type primitive type name i n t32 type repetition optional name f2 type primitive primitive type primitive type name i n t32 type repetition optional name f3 type primitive primitive type primitive type name i n t32 type repetition optional name f4 type primitive primitive type primitive type name i n t64 type repetition optional name f5 type primitive primitive type primitive type name float type repetition optional name f6 type primitive primitive type primitive type name double type repetition optional name f7 type primitive primitive type primitive type name i n t96 type repetition optional name f8 type primitive primitive type primitive type name i n t32 type repetition optional precision as original type decimal name f9 type primitive primitive type primitive type name i n t64 type repetition optional precision as original type decimal name f10 type primitive primitive type primitive type name binary type repetition optional precision as original type decimal name f11 type primitive primitive type primitive type name fix len byte array type repetition optional length precision as original type decimal name f12 type primitive primitive type primitive type name fix len byte array type repetition optional length precision as original type decimal name f13 type primitive primitive type primitive type name fix len byte array type repetition optional length precision as original type decimal name f14 class rule public static final temporary folder temporary folder new temporary folder private final int row group size parameterize parameter name row group size public static collection integer parameter return array as list public parquet columnar row split reader test int row group size this row group size row group size test public void test normal type read with splits throw i o exception prepare parquet file int number list row record new array list number list integer value new array list number random random new random for int i i number i integer v random next int number if v value add null record add new row field number else value add v record add new row v test normal type number record value private void test normal type int number list row record list integer value throw i o exception path test path create temp parquet file temporary folder new folder parquet schema record row group size test reading and splitting long file len test path get file system get file status test path get len int len1 read split and check test path file len value int len2 read split and check len1 test path file len file len value int len3 read split and check len1 len2 test path file len long max value value assert equal number len1 len2 len3 test seek assert equal number number read split and check number number test path file len value private int read split and check int start long seek to row path test path long split start long split length list integer value throw i o exception logical type field type new logical type new var char type var char type max length new boolean type new tiny int type new small int type new int type new big int type new float type new double type new timestamp type new decimal type new decimal type new decimal type new decimal type new decimal type new decimal type parquet columnar row split reader reader new parquet columnar row split reader false true new configuration field type new string f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 vectorize column batch new new org apache hadoop f path test path get path split start split length reader seek to row seek to row int i start while reader reach end columnar row datum row reader next record integer v value get i if v null assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at assert true row be null at else assert equal v row get string to string assert equal v row get boolean assert equal v byte value row get byte assert equal v short value row get short assert equal v int value row get int assert equal v long value row get long assert equal v float value row get float assert equal v double value row get double assert equal to date time v row get timestamp to local date time assert equal big decimal value of v row get decimal to big decimal assert equal big decimal value of v row get decimal to big decimal assert equal big decimal value of v row get decimal to big decimal assert equal big decimal value of v row get decimal to big decimal assert equal big decimal value of v row get decimal to big decimal assert equal big decimal value of v row get decimal to big decimal i reader close return i start private row new row integer v return row of v v v v v v long value v float value v double value to date time v big decimal value of v big decimal value of v big decimal value of v big decimal value of v big decimal value of v big decimal value of v private local date time to date time integer v v v v v return base time plus nanos v plus seconds v test public void test dictionary throw i o exception prepare parquet file int number list row record new array list number list integer value new array list number random random new random int int value new int test large value in dictionary for int i i int value length i int value i random next int for int i i number i integer v int value random next int if v value add null record add new row field number else value add v record add new row v test normal type number record value test public void test partial dictionary throw i o exception prepare parquet file int number list row record new array list number list integer value new array list number random random new random int int value new int test large value in dictionary for int i i int value length i int value i random next int for int i i number i integer v i int value random next int i if v value add null record add new row field number else value add v record add new row v test normal type number record value test public void test continuous repetition throw i o exception prepare parquet file int number list row record new array list number list integer value new array list number random random new random for int i i i integer v random next int for int j j j if v value add null record add new row field number else value add v record add new row v test normal type number record value test public void test large value throw i o exception prepare parquet file int number list row record new array list number list integer value new array list number random random new random for int i i number i integer v random next int if v value add null record add new row field number else value add v record add new row v test normal type number record value test public void test project throw i o exception prepare parquet file int number list row record new array list number for int i i number i integer v i record add new row v path test path create temp parquet file temporary folder new folder parquet schema record row group size test reader logical type field type new logical type new double type new tiny int type new int type parquet columnar row split reader reader new parquet columnar row split reader false true new configuration field type new string f7 f2 f4 vectorize column batch new new org apache hadoop f path test path get path long max value int i while reader reach end columnar row datum row reader next record assert equal i row get double assert equal byte i row get byte assert equal i row get int i reader close test public void test partition value throw i o exception prepare parquet file int number list row record new array list number for int i i number i integer v i record add new row v path test path create temp parquet file temporary folder new folder parquet schema record row group size test reader map string object part spec new hash map part spec put f15 true part spec put f16 date value of 2020 - 11 part spec put f17 local date time of part spec put f18 6.6 part spec put f19 byte part spec put f20 short part spec put f21 part spec put f22 12 l part spec put f23 13f part spec put f24 new big decimal part spec put f25 new big decimal part spec put f26 new big decimal part spec put f27 f27 inner test partition value test path part spec false for string k new array list part spec key set part spec put k null inner test partition value test path part spec true private void inner test partition value path test path map string object part spec boolean null part value throw i o exception logical type field type new logical type new var char type var char type max length new boolean type new tiny int type new small int type new int type new big int type new float type new double type new timestamp type new decimal type new decimal type new decimal type new decimal type new decimal type new decimal type new boolean type new date type new timestamp type new double type new tiny int type new small int type new int type new big int type new float type new decimal type new decimal type new decimal type new var char type var char type max length parquet columnar row split reader reader parquet split reader util gen part columnar row reader false true new configuration int stream range map to obj i f i to array string new array stream field type map type conversion from logical to datum type to array datum type new part spec new int row group size new path test path get path long max value int i while reader reach end columnar row datum row reader next record common value assert equal i row get double assert equal byte i row get byte assert equal i row get int partition value if null part value for int j j j assert true row be null at j else assert true row get boolean assert equal row get byte assert equal row get short assert equal row get int assert equal row get long assert equal row get float assert equal 6.6 row get double assert equal sql date time util date to internal date value of 2020 - 11 row get int assert equal local date time of row get timestamp to local date time assert equal decimal datum from big decimal new big decimal row get decimal assert equal decimal datum from big decimal new big decimal row get decimal assert equal decimal datum from big decimal new big decimal row get decimal assert equal f27 row get string to string i reader close 
continuous file processing migration test run with parameterized class public class continuous file processing migration test private static final int line per file private static final long interval parameterize parameter name migration savepoint mod time public static collection tuple2 migration version long parameter return array as list tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l tuple2 of migration version v1 l todo change this to the correspond savepoint version to be write e g link migration version v1 for 1.3 todo and remove all ignore annotation on write snapshot method to generate savepoint todo note you should generate the savepoint base on the release branch instead of the master private final migration version flink generate savepoint version null private final migration version test migrate version private final long expect mod time public continuous file processing migration test tuple2 migration version long migration version and mod time this test migrate version migration version and mod time f0 this expect mod time migration version and mod time f1 class rule public static temporary folder temp folder new temporary folder before class public static void verify o s assume assume true hdf cluster can not be start on window without extension operate system be window manually run this to write binary snapshot datum remove ignore to run ignore test public void write reader snapshot throw exception file test folder temp folder new folder timestamp file input split split1 new timestamped file input split new path test test1 null timestamped file input split split2 new timestamped file input split new path test test2 null timestamped file input split split3 new timestamped file input split new path test test2 null timestamped file input split split4 new timestamped file input split new path test test3 null this always block to ensure that the reader doesn t to any actual processing so that we keep the state for the four splits final one shot latch block latch new one shot latch block file input format format new blocking file input format block latch new path test folder get absolute path one input stream operator test harness timestamp file input split file input split test harness create harness format test harness set time characteristic time characteristic event time test harness open create some state in the reader test harness process element new stream record split1 test harness process element new stream record split2 test harness process element new stream record split3 test harness process element new stream record split4 take a snapshot of the operator s state this will be use to initialize another reader and compare the result of the two operator final operator subtask state snapshot synchronize test harness get checkpoint lock snapshot test harness snapshot 0 l 0 l operator snapshot util write state handle snapshot src test resource reader migration test flink flink generate savepoint version snapshot test public void test reader restore throw exception file test folder temp folder new folder final one shot latch latch new one shot latch block file input format format new blocking file input format latch new path test folder get absolute path type information file input split type info type extractor get input format type format one input stream operator test harness timestamp file input split file input split test harness create harness format test harness set time characteristic time characteristic event time test harness setup test harness initialize state operator snapshot util get resource filename reader migration test flink test migrate version snapshot test harness open latch trigger and wait for the operator to close gracefully synchronize test harness get checkpoint lock test harness close timestamped file input split split1 new timestamped file input split new path test test1 null timestamped file input split split2 new timestamped file input split new path test test2 null timestamped file input split split3 new timestamped file input split new path test test2 null timestamped file input split split4 new timestamped file input split new path test test3 null compare if the result contain what they should contain and also if they be the same as they should assert assert true test harness get output contain new stream record split1 assert assert true test harness get output contain new stream record split2 assert assert true test harness get output contain new stream record split3 assert assert true test harness get output contain new stream record split4 manually run this to write binary snapshot datum remove ignore to run ignore test public void write monitor source snapshot throw exception file test folder temp folder new folder long file mod time long min value for int i i i tuple2 file string file create file and fill with datum test folder file i this be test line file mod time file f0 last modify text input format format new text input format new path test folder get absolute path final continuous file monitoring function string monitoring function new continuous file monitoring function format file processing mode process continuously interval stream source timestamped file input split continuous file monitoring function string src new stream source monitoring function final abstract stream operator test harness timestamp file input split test harness new abstract stream operator test harness src test harness open final throwable error new throwable final one shot latch latch new one shot latch run the source asynchronously thread runner new thread override public void run try monitor function run new dummy source context override public void collect timestamped file input split element latch trigger override public void mark as temporarily idle catch throwable t t print stack trace error t runner start if latch be trigger latch await final operator subtask state snapshot synchronize test harness get checkpoint lock snapshot test harness snapshot 0 l 0 l operator snapshot util write state handle snapshot src test resource monitor function migration test file mod time flink flink generate savepoint version snapshot monitoring function cancel runner join test harness close test public void test monitoring source restore throw exception file test folder temp folder new folder text input format format new text input format new path test folder get absolute path final continuous file monitoring function string monitoring function new continuous file monitoring function format file processing mode process continuously interval stream source timestamped file input split continuous file monitoring function string src new stream source monitoring function final abstract stream operator test harness timestamp file input split test harness new abstract stream operator test harness src test harness setup test harness initialize state operator snapshot util get resource filename monitoring function migration test expect mod time flink test migrate version snapshot test harness open assert assert equal long expect mod time monitor function get global modification time private static class block file input format extend file input format file input split private static final long serial version u i d l private final one shot latch latch private file input split split private boolean reach end block file input format one shot latch latch path file path super file path this latch latch this reach end false override public void open file input split file split throw i o exception this split file split this reach end false override public boolean reach end throw i o exception if latch be trigger try latch await catch interrupted exception e e print stack trace return reach end override public file input split next record file input split reuse throw i o exception this reach end true return split override public void close private abstract static class dummy source context implement source function source context timestamp file input split private final object lock new object override public void collect with timestamp timestamp file input split element long timestamp override public void emit watermark watermark mark override public object get checkpoint lock return lock override public void close create a file with pre determine string format of the form code file idx sample line line no private tuple2 file string create file and fill with datum file base string file name int file idx string sample line throw i o exception file file new file base file name file idx assert assert false file exist file tmp new file base file name file idx file output stream stream new file output stream tmp string builder str new string builder for int i i line per file i string line file idx sample line i n str append line stream write line get byte stream close file util move file tmp file assert assert true no result file present file exist return new tuple2 file str to string private file input split create split from timestamped split timestamp file input split split check not null split return new file input split split get split number split get path split get start split get length split get hostname private one input stream operator test harness timestamp file input split file input split create harness block file input format format throw exception execution config config new execution config return new one input stream operator test harness new continuous file reader operator factory format type extractor get input format type format config type extractor get for class timestamp file input split class create serializer config 
serialize format test run with parameterized class public class serialize format test extend sequential format test base record private block info info public serialize format test int number of record long block size int parallelism super number of record block size parallelism before public void setup info create input format create block info override protect binary input format record create input format configuration configuration new configuration final serialize input format record input format new serialize input format record input format set file path this temp file to u be i to string input format set block size this block size input format configure configuration return input format override protect binary output format record create output format string path configuration configuration throw i o exception final serialized output format record output format new serialized output format record output format set output file path new path path output format set write mode file system write mode overwrite configuration configuration null new configuration configuration output format configure configuration output format open return output format override protect int get info size return info get info size override protect record get record int index return new record new int value index new string value string value of index override protect record create instance return new record override protect void write record record record datum output view output view throw i o exception record write output view override protect void check equal record expect record actual assert assert equal expect get num field actual get num field assert assert equal expect get field int value class actual get field int value class assert assert equal expect get field string value class actual get field string value class 
type serializer format test run with parameterized class public class type serializer format test extend sequential format test base tuple2 integer string type information tuple2 integer string result type type extractor get for object get record private type serializer tuple2 integer string serializer private block info block public type serializer format test int number of tuple long block size int parallelism super number of tuple block size parallelism result type type extractor get for object get record serializer result type create serializer new execution config before public void setup block create input format create block info override protect binary input format tuple2 integer string create input format configuration configuration new configuration final type serializer input format tuple2 integer string input format new type serializer input format tuple2 integer string result type input format set file path this temp file to u be i to string input format set block size this block size input format configure configuration return input format override protect binary output format tuple2 integer string create output format string path configuration configuration throw i o exception type serializer output format tuple2 integer string output format new type serializer output format tuple2 integer string output format set serializer serializer output format set output file path new path path output format set write mode file system write mode overwrite configuration configuration null new configuration configuration output format configure configuration output format open return output format override protect int get info size return block get info size override protect tuple2 integer string get record int index return new tuple2 integer string index string value of index override protect tuple2 integer string create instance return new tuple2 integer string override protect void write record tuple2 integer string record datum output view output view throw i o exception serializer serialize record output view override protect void check equal tuple2 integer string expect tuple2 integer string actual assert assert equal expect f0 actual f0 assert assert equal expect f1 actual f1 
lockable type serializer upgrade test run with parameterized class public class lockable type serializer upgrade test extend type serializer upgrade test base lockable string lockable string private static final string spec name lockable type serializer public lockable type serializer upgrade test test specification lockable string lockable string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version lockable type serializer setup class lockable type serializer verifier class return test specification specification for lockabletype serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class lockable type serializer setup implement type serializer upgrade test base pre upgrade setup lockable string override public type serializer lockable string create prior serializer return new lockable lockable type serializer string serializer instance override public lockable string create test datum return new lockable flink this class be only public to work with link org apache flink api common typeutil class relocator public static final class lockable type serializer verifier implement type serializer upgrade test base upgrade verifier lockable string override public type serializer lockable string create upgrade serializer return new lockable lockable type serializer string serializer instance override public matcher lockable string test datum matcher return be new lockable flink override public matcher type serializer schema compatibility lockable string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
n f a serializer upgrade test run with parameterized class public class n f a serializer upgrade test extend type serializer upgrade test base object object public n f a serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification event id serializer migration version event id serializer setup class event id serializer verifier class test specification add new test specification node id serializer migration version node id serializer setup class node id serializer verifier class test specification add new test specification dewey number serializer migration version dewey number serializer setup class dewey number serializer verifier class test specification add new test specification share buffer edge serializer migration version share buffer edge serializer setup class share buffer edge serializer verifier class test specification add new test specification share buffer node serializer migration version share buffer node serializer setup class share buffer node serializer verifier class test specification add new test specification nfa state serializer migration version n f a state serializer setup class n f a state serializer verifier class return test specification specification for event id serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class event id serializer setup implement type serializer upgrade test base pre upgrade setup event id override public type serializer event id create prior serializer return event id event id serializer instance override public event id create test datum return new event id 42 l this class be only public to work with link org apache flink api common typeutil class relocator public static final class event id serializer verifier implement type serializer upgrade test base upgrade verifier event id override public type serializer event id create upgrade serializer return event id event id serializer instance override public matcher event id test datum matcher return be new event id 42 l override public matcher type serializer schema compatibility event id schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for node id serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class node id serializer setup implement type serializer upgrade test base pre upgrade setup node id override public type serializer node id create prior serializer return new node id node id serializer override public node id create test datum return new node id new event id 42 l ciao this class be only public to work with link org apache flink api common typeutil class relocator public static final class node id serializer verifier implement type serializer upgrade test base upgrade verifier node id override public type serializer node id create upgrade serializer return new node id node id serializer override public matcher node id test datum matcher return be new node id new event id 42 l ciao override public matcher type serializer schema compatibility node id schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for dewey number serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class dewey number serializer setup implement type serializer upgrade test base pre upgrade setup dewey number override public type serializer dewey number create prior serializer return dewey number dewey number serializer instance override public dewey number create test datum return new dewey number this class be only public to work with link org apache flink api common typeutil class relocator public static final class dewey number serializer verifier implement type serializer upgrade test base upgrade verifier dewey number override public type serializer dewey number create upgrade serializer return dewey number dewey number serializer instance override public matcher dewey number test datum matcher return be new dewey number override public matcher type serializer schema compatibility dewey number schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for share buffer edge serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class share buffer edge serializer setup implement type serializer upgrade test base pre upgrade setup share buffer edge override public type serializer share buffer edge create prior serializer return new share buffer edge share buffer edge serializer override public share buffer edge create test datum return new share buffer edge new node id new event id 42 l page new dewey number this class be only public to work with link org apache flink api common typeutil class relocator public static final class share buffer edge serializer verifier implement type serializer upgrade test base upgrade verifier share buffer edge override public type serializer share buffer edge create upgrade serializer return new share buffer edge share buffer edge serializer override public matcher share buffer edge test datum matcher return be new share buffer edge new node id new event id 42 l page new dewey number override public matcher type serializer schema compatibility share buffer edge schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for share buffer node serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class share buffer node serializer setup implement type serializer upgrade test base pre upgrade setup share buffer node override public type serializer share buffer node create prior serializer return new share buffer node share buffer node serializer override public share buffer node create test datum share buffer node result new share buffer node result add edge new share buffer edge new node id new event id 42 l page new dewey number return result this class be only public to work with link org apache flink api common typeutil class relocator public static final class share buffer node serializer verifier implement type serializer upgrade test base upgrade verifier share buffer node override public type serializer share buffer node create upgrade serializer return new share buffer node share buffer node serializer override public matcher share buffer node test datum matcher share buffer node result new share buffer node result add edge new share buffer edge new node id new event id 42 l page new dewey number return be result override public matcher type serializer schema compatibility share buffer node schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for nfa state serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class n f a state serializer setup implement type serializer upgrade test base pre upgrade setup n f a state override public type serializer n f a state create prior serializer return new n f a state serializer override public n f a state create test datum return new n f a state collection empty list this class be only public to work with link org apache flink api common typeutil class relocator public static final class n f a state serializer verifier implement type serializer upgrade test base upgrade verifier n f a state override public type serializer n f a state create upgrade serializer return new n f a state serializer override public matcher n f a state test datum matcher return be new n f a state collection empty list override public matcher type serializer schema compatibility n f a state schema compatibility matcher migration version version return type serializer matcher be compatible as be 
c e p migration test run with parameterized class public class c e p migration test todo change this to the correspond savepoint version to be write e g link migration version v1 for 1.3 todo and remove all ignore annotation on write snapshot method to generate savepoint todo note you should generate the savepoint base on the release branch instead of the master private final migration version flink generate savepoint version null private final migration version migrate version parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 public c e p migration test migration version migrate version this migrate version migrate version manually run this to write binary snapshot datum ignore test public void write after branch pattern snapshot throw exception key selector event integer key selector new key selector event integer private static final long serial version u i d l override public integer get key event value throw exception return value get id final event start event new event start 1.0 final sub event middle event1 new sub event foo1 1.0 10.0 final sub event middle event2 new sub event foo2 2.0 10.0 one input stream operator test harness event map string list event harness new keyed one input stream operator test harness get key cep opearator false new n f a factory key selector basic type info int type info try harness setup harness open harness process element new stream record event start event harness process element new stream record event new event foobar 1.0 harness process element new stream record event new sub event barfoo 1.0 5.0 harness process element new stream record event middle event1 harness process element new stream record event middle event2 harness process watermark new watermark do snapshot and save to file operator subtask state snapshot harness snapshot 0 l 0 l operator snapshot util write state handle snapshot src test resource cep migration after branch flink flink generate savepoint version snapshot finally harness close test public void test restore after branch pattern throw exception key selector event integer key selector new key selector event integer private static final long serial version u i d l override public integer get key event value throw exception return value get id final event start event new event start 1.0 final sub event middle event1 new sub event foo1 1.0 10.0 final sub event middle event2 new sub event foo2 2.0 10.0 final event end event new event end 1.0 one input stream operator test harness event map string list event harness new keyed one input stream operator test harness get key cep opearator false new n f a factory key selector basic type info int type info try harness setup harness initialize state operator snapshot util get resource filename cep migration after branch flink migrate version snapshot harness open harness process element new stream record new event start 1.0 harness process element new stream record end event harness process watermark new watermark concurrent link queue object result harness get output watermark and result assert equal result size object result object1 result poll assert true result object1 instanceof stream record stream record result record1 stream record result object1 assert true result record1 get value instanceof map object result object2 result poll assert true result object2 instanceof stream record stream record result record2 stream record result object2 assert true result record2 get value instanceof map suppress warning unchecked map string list event pattern map1 map string list event result record1 get value assert equal start event pattern map1 get start get assert equal middle event1 pattern map1 get middle get assert equal end event pattern map1 get end get suppress warning unchecked map string list event pattern map2 map string list event result record2 get value assert equal start event pattern map2 get start get assert equal middle event2 pattern map2 get middle get assert equal end event pattern map2 get end get and now go for a checkpoint with the new serializer final event start event1 new event start 2.0 final sub event middle event3 new sub event foo 1.0 11.0 final event end event1 new event end 2.0 harness process element new stream record event start event1 harness process element new stream record event middle event3 simulate snapshot restore with some element in internal sorting queue operator subtask state snapshot harness snapshot 1 l 1 l harness close harness new keyed one input stream operator test harness get key cep opearator false new n f a factory key selector basic type info int type info harness setup harness initialize state snapshot harness open harness process element new stream record end event1 harness process watermark new watermark result harness get output watermark and the result assert equal result size object result object3 result poll assert true result object3 instanceof stream record stream record result record3 stream record result object3 assert true result record3 get value instanceof map suppress warning unchecked map string list event pattern map3 map string list event result record3 get value assert equal start event1 pattern map3 get start get assert equal middle event3 pattern map3 get middle get assert equal end event1 pattern map3 get end get finally harness close manually run this to write binary snapshot datum ignore test public void write start new pattern after migration snapshot throw exception key selector event integer key selector new key selector event integer private static final long serial version u i d l override public integer get key event value throw exception return value get id final event start event1 new event start 1.0 final sub event middle event1 new sub event foo1 1.0 10.0 one input stream operator test harness event map string list event harness new keyed one input stream operator test harness get key cep opearator false new n f a factory key selector basic type info int type info try harness setup harness open harness process element new stream record event start event1 harness process element new stream record event new event foobar 1.0 harness process element new stream record event new sub event barfoo 1.0 5.0 harness process element new stream record event middle event1 harness process watermark new watermark do snapshot and save to file operator subtask state snapshot harness snapshot 0 l 0 l operator snapshot util write state handle snapshot src test resource cep migration start new pattern flink flink generate savepoint version snapshot finally harness close test public void test restore start new pattern after migration throw exception key selector event integer key selector new key selector event integer private static final long serial version u i d l override public integer get key event value throw exception return value get id final event start event1 new event start 1.0 final sub event middle event1 new sub event foo1 1.0 10.0 final event start event2 new event start 5.0 final sub event middle event2 new sub event foo2 2.0 10.0 final event end event new event end 1.0 one input stream operator test harness event map string list event harness new keyed one input stream operator test harness get key cep opearator false new n f a factory key selector basic type info int type info try harness setup harness initialize state operator snapshot util get resource filename cep migration start new pattern flink migrate version snapshot harness open harness process element new stream record start event2 harness process element new stream record event middle event2 harness process element new stream record end event harness process watermark new watermark concurrent link queue object result harness get output watermark and result assert equal result size object result object1 result poll assert true result object1 instanceof stream record stream record result record1 stream record result object1 assert true result record1 get value instanceof map object result object2 result poll assert true result object2 instanceof stream record stream record result record2 stream record result object2 assert true result record2 get value instanceof map object result object3 result poll assert true result object3 instanceof stream record stream record result record3 stream record result object3 assert true result record3 get value instanceof map suppress warning unchecked map string list event pattern map1 map string list event result record1 get value assert equal start event1 pattern map1 get start get assert equal middle event1 pattern map1 get middle get assert equal end event pattern map1 get end get suppress warning unchecked map string list event pattern map2 map string list event result record2 get value assert equal start event1 pattern map2 get start get assert equal middle event2 pattern map2 get middle get assert equal end event pattern map2 get end get suppress warning unchecked map string list event pattern map3 map string list event result record3 get value assert equal start event2 pattern map3 get start get assert equal middle event2 pattern map3 get middle get assert equal end event pattern map3 get end get and now go for a checkpoint with the new serializer final event start event3 new event start 2.0 final sub event middle event3 new sub event foo 1.0 11.0 final event end event1 new event end 2.0 harness process element new stream record event start event3 harness process element new stream record event middle event3 simulate snapshot restore with some element in internal sorting queue operator subtask state snapshot harness snapshot 1 l 1 l harness close harness new keyed one input stream operator test harness get key cep opearator false new n f a factory key selector basic type info int type info harness setup harness initialize state snapshot harness open harness process element new stream record end event1 harness process watermark new watermark result harness get output watermark and the result assert equal result size object result object4 result poll assert true result object4 instanceof stream record stream record result record4 stream record result object4 assert true result record4 get value instanceof map suppress warning unchecked map string list event pattern map4 map string list event result record4 get value assert equal start event3 pattern map4 get start get assert equal middle event3 pattern map4 get middle get assert equal end event1 pattern map4 get end get finally harness close manually run this to write binary snapshot datum ignore test public void write single pattern after migration snapshot throw exception key selector event integer key selector new key selector event integer private static final long serial version u i d l override public integer get key event value throw exception return value get id final event start event1 new event start 1.0 one input stream operator test harness event map string list event harness new keyed one input stream operator test harness get key cep opearator false new single pattern n f a factory key selector basic type info int type info try harness setup harness open harness process watermark new watermark do snapshot and save to file operator subtask state snapshot harness snapshot 0 l 0 l operator snapshot util write state handle snapshot src test resource cep migration single pattern afterwards flink flink generate savepoint version snapshot finally harness close test public void test single pattern after migration throw exception key selector event integer key selector new key selector event integer private static final long serial version u i d l override public integer get key event value throw exception return value get id final event start event1 new event start 1.0 one input stream operator test harness event map string list event harness new keyed one input stream operator test harness get key cep opearator false new single pattern n f a factory key selector basic type info int type info try harness setup harness initialize state operator snapshot util get resource filename cep migration single pattern afterwards flink migrate version snapshot harness open harness process element new stream record start event1 harness process watermark new watermark concurrent link queue object result harness get output watermark and the result assert equal result size object result object result poll assert true result object instanceof stream record stream record result record stream record result object assert true result record get value instanceof map suppress warning unchecked map string list event pattern map map string list event result record get value assert equal start event1 pattern map get start get finally harness close manually run this to write binary snapshot datum ignore test public void write and or subtyp condition pattern after migration snapshot throw exception key selector event integer key selector new key selector event integer private static final long serial version u i d l override public integer get key event value throw exception return value get id final event start event1 new sub event start 1.0 6.0 one input stream operator test harness event map string list event harness new keyed one input stream operator test harness get key cep opearator false new n f a complex condition factory key selector basic type info int type info try harness setup harness open harness process element new stream record start event1 harness process watermark new watermark do snapshot and save to file operator subtask state snapshot harness snapshot 0 l 0 l operator snapshot util write state handle snapshot src test resource cep migration condition flink flink generate savepoint version snapshot finally harness close test public void test and or subtype condition after migration throw exception key selector event integer key selector new key selector event integer private static final long serial version u i d l override public integer get key event value throw exception return value get id final event start event1 new sub event start 1.0 6.0 one input stream operator test harness event map string list event harness new keyed one input stream operator test harness get key cep opearator false new n f a complex condition factory key selector basic type info int type info try harness setup harness initialize state operator snapshot util get resource filename cep migration condition flink migrate version snapshot harness open final event end event new sub event end 1.0 2.0 harness process element new stream record end event harness process watermark new watermark concurrent link queue object result harness get output watermark and the result assert equal result size object result object result poll assert true result object instanceof stream record stream record result record stream record result object assert true result record get value instanceof map suppress warning unchecked map string list event pattern map map string list event result record get value assert equal start event1 pattern map get start get assert equal end event pattern map get start get finally harness close private static class single pattern n f a factory implement n f a compiler n f a factory event private static final long serial version u i d l private final boolean handle timeout private single pattern n f a factory this false private single pattern n f a factory boolean handle timeout this handle timeout handle timeout override public nfa event create n f a pattern event pattern pattern event begin start where new start filter within time millisecond 10 l return n f a compiler compile factory pattern handle timeout create n f a private static class n f a complex condition factory implement n f a compiler n f a factory event private static final long serial version u i d l private final boolean handle timeout private n f a complex condition factory this false private n f a complex condition factory boolean handle timeout this handle timeout handle timeout override public nfa event create n f a pattern event pattern pattern event begin start subtype sub event class where new middle filter or new sub event end filter time within time millisecond 10 l return n f a compiler compile factory pattern handle timeout create n f a private static class n f a factory implement n f a compiler n f a factory event private static final long serial version u i d l private final boolean handle timeout private n f a factory this false private n f a factory boolean handle timeout this handle timeout handle timeout override public nfa event create n f a pattern event pattern pattern event begin start where new start filter follow by any middle subtype sub event class where new middle filter follow by any end where new end filter add a window timeout to test whether timestamp of element in the priority queue in cep operator be correctly checkpoint restore within time millisecond 10 l return n f a compiler compile factory pattern handle timeout create n f a private static class start filter extend simple condition event private static final long serial version u i d l override public boolean filter event value throw exception return value get name equal start private static class middle filter extend simple condition sub event private static final long serial version u i d l override public boolean filter sub event value throw exception return value get volume 5.0 private static class end filter extend simple condition event private static final long serial version u i d l override public boolean filter event value throw exception return value get name equal end private static class sub event end filter extend simple condition sub event private static final long serial version u i d l override public boolean filter sub event value throw exception return value get name equal end 
gather sum apply configuration i t case run with parameterized class public class gather sum apply configuration i t case extend multiple program test base public gather sum apply configuration i t case test execution mode mode super mode private string expect result test public void test run with configuration throw exception test graph s run gather sum apply iteration when configuration parameter be provide final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new assign one mapper create the configuration object g s a configuration parameter new g s a configuration parameter add broadcast set for gather function gather bcast set env from element parameter add broadcast set for sum function sum bcast set env from element parameter add broadcast set for apply function apply bcast set env from element parameter register aggregator superstep aggregator new long sum aggregator parameter set opt num vertex true graph long long long re graph run gather sum apply iteration new gather new sum new apply parameter datum set vertex long long datum re get vertex list vertex long long result datum collect expected result 1,11 n 2,11 n 3,11 n 4,11 n 5,11 compare result as tuple result expect result test public void test iteration configuration throw exception test name parallelism and solution set unmanaged parameter final execution environment env execution environment get execution environment gather sum apply iteration long long long long iteration gather sum apply iteration with edge test graph util get long long edge datum env new dummy gather new dummy sum new dummy apply g s a configuration parameter new g s a configuration parameter set name gelly iteration parameter set parallelism parameter set solution set unmanaged memory true iteration configure parameter assert assert equal gelly iteration iteration get iteration configuration get name assert assert equal iteration get iteration configuration get parallelism assert assert equal true iteration get iteration configuration be solution set unmanaged memory datum set vertex long long datum test graph util get long long vertex datum env run operation iteration list vertex long long result datum collect expected result 1,11 n 2,12 n 3,13 n 4,14 n 5,15 compare result as tuple result expect result test public void test iteration default direction throw exception test that if no direction parameter be give the iteration work as before i e it gather information from the in edge and neighbor and the information be calculate for a out edge default direction parameter be out for the gather sum apply iteration when datum be gather from the in edge the gather sum and apply function set the set of vertex which have path to a vertex as the value of that vertex final execution environment env execution environment get execution environment list edge long long edge test graph util get long long edge edge remove graph long hash set long long graph graph from collection test graph util get long long vertex edge env map vertex new gather sum apply configuration i t case initialise hash set mapper datum set vertex long hash set long result vertex graph run gather sum apply iteration new get reachable vertex new find all reachable vertex new update reachable vertex get vertex list vertex long hash set long result result vertex collect expected result n n n n n compare result as tuple result expect result test public void test iteration direction i n throw exception test that if the direction parameter in be give the iteration work as expect i e it gather information from the out edge and neighbor and the information be calculate for a in edge when datum be gather from the out edge the gather sum and apply function set the set of vertex which have path from a vertex as the value of that vertex final execution environment env execution environment get execution environment g s a configuration parameter new g s a configuration parameter set direction edge direction in list edge long long edge test graph util get long long edge edge remove graph long hash set long long graph graph from collection test graph util get long long vertex edge env map vertex new gather sum apply configuration i t case initialise hash set mapper datum set vertex long hash set long result vertex graph run gather sum apply iteration new get reachable vertex new find all reachable vertex new update reachable vertex parameter get vertex list vertex long hash set long result result vertex collect expected result n n n n n compare result as tuple result expect result test public void test iteration direction a l l throw exception test that if the direction parameter out be give the iteration work as expect i e it gather information from both in and out edge and neighbor when datum be gather from the all edge the gather sum and apply function set the set of vertex which be connect to a vertex through some path as value of that vertex final execution environment env execution environment get execution environment g s a configuration parameter new g s a configuration parameter set direction edge direction all list edge long long edge test graph util get long long edge edge remove graph long hash set long long graph graph from collection test graph util get long long vertex edge env map vertex new gather sum apply configuration i t case initialise hash set mapper datum set vertex long hash set long result vertex graph run gather sum apply iteration new get reachable vertex new find all reachable vertex new update reachable vertex parameter get vertex list vertex long hash set long result result vertex collect expected result n n n n n compare result as tuple result expected result suppress warning serial private static final class gather extend gather function long long long override public void pre superstep test bcast variable suppress warning unchecked list integer bcast set list integer list get broadcast set gather bcast set assert assert equal bcast set get int value assert assert equal bcast set get int value assert assert equal bcast set get int value test aggregator if get superstep number long aggr value long value get previous iteration aggregate superstep aggregator get value assert assert equal aggr value test number of vertex assert assert equal get number of vertex public long gather neighbor long long neighbor return neighbor get neighbor value suppress warning serial private static final class sum extend sum function long long long long sum aggregator aggregator new long sum aggregator override public void pre superstep test bcast variable suppress warning unchecked list integer bcast set list integer list get broadcast set sum bcast set assert assert equal bcast set get int value assert assert equal bcast set get int value assert assert equal bcast set get int value test aggregator aggregator get iteration aggregator superstep aggregator test number of vertex assert assert equal get number of vertex public long sum long new value long current value long superstep get superstep number aggregator aggregate superstep return 0 l suppress warning serial private static final class apply extend apply function long long long long sum aggregator aggregator new long sum aggregator override public void pre superstep test bcast variable suppress warning unchecked list integer bcast set list integer list get broadcast set apply bcast set assert assert equal bcast set get int value assert assert equal bcast set get int value assert assert equal bcast set get int value test aggregator aggregator get iteration aggregator superstep aggregator test number of vertex assert assert equal get number of vertex public void apply long sum value long orig value long superstep get superstep number aggregator aggregate superstep set result orig value suppress warning serial private static final class dummy gather extend gather function long long long override public void pre superstep test number of vertex when the num vertex option be not set be return assert assert equal get number of vertex public long gather neighbor long long neighbor return neighbor get neighbor value suppress warning serial private static final class dummy sum extend sum function long long long public long sum long new value long current value return 0 l suppress warning serial private static final class dummy apply extend apply function long long long public void apply long sum value long orig value set result orig value suppress warning serial private static final class assign one mapper implement map function vertex long long long public long map vertex long long value return 1 l suppress warning serial private static final class initialise hash set mapper implement map function vertex long long hash set long override public hash set long map vertex long long value throw exception hash set long h new hash set h add value get id return h suppress warning serial private static final class get reachable vertex extend gather function hash set long long hash set long override public hash set long gather neighbor hash set long long neighbor return neighbor get neighbor value suppress warning serial private static final class find all reachable vertex extend sum function hash set long long hash set long override public hash set long sum hash set long new set hash set long current set for long l new set current set add l return current set suppress warning serial private static final class update reachable vertex extend apply function long hash set long hash set long override public void apply hash set long new value hash set long current value new value add all current value if new value size current value size set result new value 
degree i t case run with parameterized class public class degree i t case extend multiple program test base public degree i t case test execution mode mode super mode private string expect result test public void test out degree throw exception test out degree final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long value datum graph out degree list tuple2 long long value result datum collect expected result 1,2 n 2,1 n 3,2 n 4,1 n 5,1 n compare result as tuple result expect result test public void test out degree with no out edge throw exception test out degree no outgoing edge final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum with zero degree env env datum set tuple2 long long value datum graph out degree list tuple2 long long value result datum collect expected result 1,3 n 2,1 n 3,1 n 4,1 n 5,0 n compare result as tuple result expect result test public void test in degree throw exception test in degree final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long value datum graph in degree list tuple2 long long value result datum collect expected result 1,1 n 2,1 n 3,2 n 4,1 n 5,2 n compare result as tuple result expect result test public void test in degree with no in edge throw exception test in degree no ingoing edge final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum with zero degree env env datum set tuple2 long long value datum graph in degree list tuple2 long long value result datum collect expected result 1,0 n 2,1 n 3,1 n 4,1 n 5,3 n compare result as tuple result expect result test public void test get degree throw exception test get degree final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long value datum graph get degree list tuple2 long long value result datum collect expected result 1,3 n 2,2 n 3,4 n 4,2 n 5,3 n compare result as tuple result expect result test public void test get degree with disconnected datum throw exception test get degree with disconnected datum final execution environment env execution environment get execution environment graph long null value long graph graph from datum set test graph util get disconnected long long edge datum env env datum set tuple2 long long value datum graph out degree list tuple2 long long value result datum collect expected result 1,2 n 2,1 n 3,0 n 4,1 n 5,0 n compare result as tuple result expect result 
from collection i t case run with parameterized class public class from collection i t case extend multiple program test base public from collection i t case test execution mode mode super mode private string expect result test public void test from collection vertex edge throw exception test from collection vertex edge final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test from collection edge no initial value throw exception test from collection edge with no initial value for the vertex final execution environment env execution environment get execution environment graph long null value long graph graph from collection test graph util get long long edge env datum set vertex long null value datum graph get vertex list vertex long null value result datum collect expected result null n null n null n null n null n compare result as tuple result expect result test public void test from collection edge with initial value throw exception test from collection edge with vertex initialise by a function that take the id and double it final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long edge new init vertex mapper env datum set vertex long long datum graph get vertex list vertex long long result datum collect expected result 1,2 n 2,4 n 3,6 n 4,8 n 5,10 n compare result as tuple result expected result suppress warning serial private static final class init vertex mapper implement map function long long public long map long vertex id return vertex id 
graph creation i t case run with parameterized class public class graph creation i t case extend multiple program test base public graph creation i t case test execution mode mode super mode private string expect result test public void test create without vertex value throw exception test create with edge dataset and no vertex value final execution environment env execution environment get execution environment graph long null value long graph graph from datum set test graph util get long long edge datum env env datum set vertex long null value datum graph get vertex list vertex long null value result datum collect expected result null n null n null n null n null n compare result as tuple result expect result test public void test create with mapper throw exception test create with edge dataset and a mapper that assign the id as value final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long edge datum env new assign id as value mapper env datum set vertex long long datum graph get vertex list vertex long long result datum collect expected result 1,1 n 2,2 n 3,3 n 4,4 n 5,5 n compare result as tuple result expect result test public void test create with custom vertex value throw exception test create with edge dataset and a mapper that assign a parametrized custom vertex value final execution environment env execution environment get execution environment graph long dummy custom parameterize type double long graph graph from datum set test graph util get long long edge datum env new assign custom vertex value mapper env datum set vertex long dummy custom parameterize type double datum graph get vertex list vertex long dummy custom parameterize type double result datum collect expected result 2.0 n 4.0 n 6.0 n 8.0 n 10.0 n compare result as tuple result expect result test public void test validate throw exception test validate final execution environment env execution environment get execution environment datum set vertex long long vertex test graph util get long long vertex datum env datum set edge long long edge test graph util get long long edge datum env graph long long long graph graph from datum set vertex edge env boolean valid graph validate new invalid vertex id validator env from element result write as text result path string re valid to string env from element valid list string result new link list result add re expect result true compare result as text result expect result test public void test validate with invalid id throw exception test validate invalid vertex id final execution environment env execution environment get execution environment datum set vertex long long vertex test graph util get long long invalid vertex datum env datum set edge long long edge test graph util get long long edge datum env graph long long long graph graph from datum set vertex edge env boolean valid graph validate new invalid vertex id validator string re valid to string env from element valid list string result new link list result add re expect result false n compare result as text result expect result test public void test from tuple2 throw exception test graph creation with from tuple2 datum set final execution environment env execution environment get execution environment datum set tuple2 long long edge test graph util get long long tuple2 datum env graph long null value null value graph graph from tuple2 datum set edge env list vertex long null value result graph get vertex collect expected result null n null n null n null n null n null n null n null n null n null n compare result as tuple result expect result test public void test from tuple2 with mapper throw exception test graph creation with from tuple2 datum set with vertex initializer final execution environment env execution environment get execution environment datum set tuple2 long long edge test graph util get long long tuple2 datum env graph long string null value graph graph from tuple2 datum set edge new boo mapper env list vertex long string result graph get vertex collect expected result boo n boo n boo n boo n boo n boo n boo n boo n boo n boo n compare result as tuple result expected result suppress warning serial private static final class assign id as value mapper implement map function long long public long map long vertex id return vertex id suppress warning serial private static final class assign custom vertex value mapper implement map function long dummy custom parameterize type double dummy custom parameterize type double dummy value new dummy custom parameterize type public dummy custom parameterize type double map long vertex id dummy value set int field vertex id int value dummy value set t field vertex id 2.0 return dummy value suppress warning serial private static final class boo mapper implement map function long string public string map long value return boo 
graph creation with csv i t case run with parameterized class public class graph creation with csv i t case extend multiple program test base public graph creation with csv i t case test execution mode mode super mode private string expect result test public void test create with csv file throw exception test with two csv file one with vertex datum and one with edge datum final execution environment env execution environment get execution environment final string file content 1,1 n 2,2 n 3,3 n final file input split split create temp file file content final string file content2 1,2 ot n 3,2 tt n 3,1 to n final file input split split2 create temp file file content2 graph long long string graph graph from csv reader split get path to string split2 get path to string env type long class long class string class list triplet long long string result graph get triplet collect expected result 1,2 1,2 ot n 3,2 3,2 tt n 3,1 3,1 to n compare result as tuple result expect result test public void test csv with null edge throw exception test from csv reader with edge and vertex path and nullvalue for edge final execution environment env execution environment get execution environment final string vertex file content one n two n three n final string edge file content 1,2 n 3,2 n 3,1 n final file input split split create temp file vertex file content final file input split edge split create temp file edge file content graph long string null value graph graph from csv reader split get path to string edge split get path to string env vertex type long class string class list triplet long string null value result graph get triplet collect expected result 1,2 one two null n 3,2 three two null n 3,1 three one null n compare result as tuple result expect result test public void test csv with constant value mapper throw exception test from csv reader with edge path and a mapper that assign a double constant as value final execution environment env execution environment get execution environment final string file content 1,2 ot n 3,2 tt n 3,1 to n final file input split split create temp file file content graph long double string graph graph from csv reader split get path to string new assign double value mapper env type long class double class string class list triplet long double string result graph get triplet collect graph get triplet write as csv result path expect result 1,2 0.1 0.1 ot n 3,1 0.1 0.1 to n 3,2 0.1 0.1 tt n compare result as tuple result expect result test public void test create with only edge csv file throw exception test with one csv file one with edge datum also test the configuration method ignore fist line edge final execution environment env execution environment get execution environment final string file content2 header n1 ot n 3,2 tt n 3,1 to n final file input split split2 create temp file file content2 graph long null value string graph graph from csv reader split2 get path to string env ignore first line edge ignore comment vertex hi edge type long class string class list triplet long null value string result graph get triplet collect expected result 1,2 null null ot n 3,2 null null tt n 3,1 null null to n compare result as tuple result expect result test public void test create csv file delimiter configuration throw exception test with a edge and vertex csv file test the configuration method field delimiter edge and field delimiter vertex also test the configuration method line delimiter edge and line delimiter vertex final execution environment env execution environment get execution environment final string file content header n1 n 2 ; 2 n 3 ; 3 n final file input split split create temp file file content final string file content2 header 1:2 ot 3:2 tt 3:1 to final file input split split2 create temp file file content2 graph long long string graph graph from csv reader split get path to string split2 get path to string env ignore first line edge ignore first line vertex field delimiter edge field delimiter vertex line delimiter edge type long class long class string class list triplet long long string result graph get triplet collect expected result 1,2 1,2 ot n 3,2 3,2 tt n 3,1 3,1 to n compare result as tuple result expected result suppress warning serial private static final class assign double value mapper implement map function long double public double map long value return 0.1 d private file input split create temp file string content throw i o exception file temp file file create temp file test contents tmp temp file delete on exit output stream writer wrt new output stream writer new file output stream temp file charset for name utf wrt write content wrt close return new file input split new path temp file to u be i to string temp file length new string localhost 
graph creation with mapper i t case run with parameterized class public class graph creation with mapper i t case extend multiple program test base public graph creation with mapper i t case test execution mode mode super mode private string expect result test public void test with double value mapper throw exception test create with edge dataset and a mapper that assign a double constant as value final execution environment env execution environment get execution environment graph long double long graph graph from datum set test graph util get long long edge datum env new assign double value mapper env datum set vertex long double datum graph get vertex list vertex long double result datum collect expected result 1,0 n 2,0 n 3,0 n 4,0 n 5,0 n compare result as tuple result expect result test public void test with tuple2 value mapper throw exception test create with edge dataset and a mapper that assign a tuple2 as value final execution environment env execution environment get execution environment graph long tuple2 long long long graph graph from datum set test graph util get long long edge datum env new assign tuple2 value mapper env datum set vertex long tuple2 long long datum graph get vertex list vertex long tuple2 long long result datum collect expected result 2,42 n 4,42 n 6,42 n 8,42 n 10,42 n compare result as tuple result expect result test public void test with constant value mapper throw exception test create with edge dataset with string key type and a mapper that assign a double constant as value final execution environment env execution environment get execution environment graph string double long graph graph from datum set test graph util get string long edge datum env new assign double constant mapper env datum set vertex string double datum graph get vertex list vertex string double result datum collect expected result 1,0 n 2,0 n 3,0 n 4,0 n 5,0 n compare result as tuple result expect result test public void test with d custom value mapper throw exception test create with edge dataset and a mapper that assign a custom vertex value final execution environment env execution environment get execution environment graph long dummy custom type long graph graph from datum set test graph util get long long edge datum env new assign custom value mapper env datum set vertex long dummy custom type datum graph get vertex list vertex long dummy custom type result datum collect expected result f n f n f n f n f n compare result as tuple result expected result suppress warning serial private static final class assign double value mapper implement map function long double public double map long value return 0.1 d suppress warning serial private static final class assign tuple2 value mapper implement map function long tuple2 long long public tuple2 long long map long vertex id return new tuple2 vertex id 42 l suppress warning serial private static final class assign double constant mapper implement map function string double public double map string value return 0.1 d suppress warning serial private static final class assign custom value mapper implement map function long dummy custom type public dummy custom type map long vertex id return new dummy custom type vertex id int value false 
graph mutation i t case run with parameterized class public class graph mutation i t case extend multiple program test base public graph mutation i t case test execution mode mode super mode private string expect result test public void test add vertex throw exception test add vertex simple case final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph graph add vertex new vertex 6 l 6 l datum set vertex long long datum graph get vertex list vertex long long result datum collect expected result 1,1 n 2,2 n 3,3 n 4,4 n 5,5 n 6,6 n compare result as tuple result expect result test public void test add vertex throw exception test add vertex simple case final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list vertex long long vertice new array list the first vertex have a duplicate id from a vertex in the graph and should not be add to the new graph vertex add new vertex 5 l 0 l vertex add new vertex 6 l 6 l vertex add new vertex 7 l 7 l graph graph add vertex vertex datum set vertex long long datum graph get vertex list vertex long long result datum collect expected result 1,1 n 2,2 n 3,3 n 4,4 n 5,5 n 6,6 n 7,7 n compare result as tuple result expect result test public void test add vertex exist throw exception test add vertex add a exist vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph graph add vertex new vertex 1 l 1 l datum set vertex long long datum graph get vertex list vertex long long result datum collect expected result 1,1 n 2,2 n 3,3 n 4,4 n 5,5 n compare result as tuple result expect result test public void test add vertex both exist throw exception test add vertex add two exist vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list vertex long long vertice new array list vertex add new vertex 1 l 1 l vertex add new vertex 3 l 3 l graph graph add vertex vertex datum set vertex long long datum graph get vertex list vertex long long result datum collect expected result 1,1 n 2,2 n 3,3 n 4,4 n 5,5 n compare result as tuple result expect result test public void test add vertex one exist throw exception test add vertex add a exist vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list vertex long long vertice new array list vertex add new vertex 1 l 1 l vertex add new vertex 6 l 6 l graph graph add vertex vertex datum set vertex long long datum graph get vertex list vertex long long result datum collect expected result 1,1 n 2,2 n 3,3 n 4,4 n 5,5 n 6,6 n compare result as tuple result expect result test public void test remove vertex throw exception test remove vertex simple case final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph graph remove vertex new vertex 5 l 5 l datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n compare result as tuple result expect result test public void test remove vertex throw exception test remove vertex simple case final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list vertex long long vertice to be remove new array list vertex to be remove add new vertex 1 l 1 l vertex to be remove add new vertex 2 l 2 l graph graph remove vertex vertex to be remove datum set edge long long datum graph get edge list edge long long result datum collect expected result 3,4 n 3,5 n 4,5 n compare result as tuple result expect result test public void test remove invalid vertex throw exception test remove vertex remove a invalid vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph graph remove vertex new vertex 6 l 6 l datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test remove one valid one invalid vertex throw exception test remove vertex remove one invalid vertex and a valid one final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list vertex long long vertice to be remove new array list vertex to be remove add new vertex 1 l 1 l vertex to be remove add new vertex 7 l 7 l graph graph remove vertex vertex to be remove datum set edge long long datum graph get edge list edge long long result datum collect expected result 2,3 n 3,4 n 3,5 n 4,5 n compare result as tuple result expect result test public void test remove both invalid vertex throw exception test remove vertex remove two invalid vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list vertex long long vertice to be remove new array list vertex to be remove add new vertex 6 l 6 l vertex to be remove add new vertex 7 l 7 l graph graph remove vertex vertex to be remove datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test remove both invalid vertex vertex result throw exception test remove vertex remove two invalid vertex and verify the datum set of vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list vertex long long vertice to be remove new array list vertex to be remove add new vertex 6 l 6 l vertex to be remove add new vertex 7 l 7 l graph graph remove vertex vertex to be remove datum set vertex long long datum graph get vertex list vertex long long result datum collect expected result 1,1 n 2,2 n 3,3 n 4,4 n 5,5 n compare result as tuple result expect result test public void test add edge throw exception test add edge simple case final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph graph add edge new vertex 6 l 6 l new vertex 1 l 1 l 61 l datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n 6,1 n compare result as tuple result expect result test public void test add edge throw exception test add edge simple case final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list edge long long edge to be add new array list edge to be add add new edge 2 l 4 l 24 l edge to be add add new edge 4 l 1 l 41 l graph graph add edge edge to be add datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 2,4 n 3,4 n 3,5 n 4,1 n 4,5 n 5,1 n compare result as tuple result expect result test public void test add edge invalid vertex throw exception test add edge the source and target vertex do not exist in the graph final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list edge long long edge to be add new array list edge to be add add new edge 6 l 1 l 61 l edge to be add add new edge 7 l 1 l 71 l graph graph add edge edge to be add datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test add exist edge throw exception test add edge add already exist edge final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph graph add edge new vertex 1 l 1 l new vertex 2 l 2 l 12 l datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test remove edge throw exception test remove edge simple case final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env duplicate edge should be preserve in output graph graph add edge new vertex 1 l 1 l new vertex 2 l 2 l 12 l graph graph remove edge new edge 5 l 1 l 51 l datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n compare result as tuple result expect result test public void test remove edge throw exception test remove edge simple case final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list edge long long edge to be remove new array list edge to be remove add new edge 5 l 1 l 51 l edge to be remove add new edge 2 l 3 l 23 l duplicate edge should be preserve in output graph graph add edge new vertex 1 l 1 l new vertex 2 l 2 l 12 l graph graph remove edge edge to be remove datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,2 n 1,3 n 3,4 n 3,5 n 4,5 n compare result as tuple result expect result test public void test remove same edge twice throw exception test remove edge try to remove the same edge twice final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list edge long long edge to be remove new array list edge to be remove add new edge 5 l 1 l 51 l edge to be remove add new edge 5 l 1 l 51 l graph graph remove edge edge to be remove datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n compare result as tuple result expect result test public void test remove invalid edge throw exception test remove edge invalid edge final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph graph remove edge new edge 6 l 1 l 61 l datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test remove one valid one invalid edge throw exception test remove edge one edge be valid the other be invalid final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list edge long long edge to be remove new array list edge to be remove add new edge 1 l 1 l 51 l edge to be remove add new edge 6 l 1 l 61 l graph graph remove edge edge to be remove datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result 
graph operation i t case run with parameterized class public class graph operation i t case extend multiple program test base public graph operation i t case test execution mode mode super mode private string expect result test public void test undirected throw exception test get undirected final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long long datum graph get undirected get edge list edge long long result datum collect expected result 1,2 n 2,1 n 1,3 n 3,1 n 2,3 n 3,2 n 3,4 n 4,3 n 3,5 n 5,3 n 4,5 n 5,4 n 5,1 n 1,5 n compare result as tuple result expect result test public void test reverse throw exception test reverse final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long long datum graph reverse get edge list edge long long result datum collect expected result 2,1 n 3,1 n 3,2 n 4,3 n 5,3 n 5,4 n 1,5 n compare result as tuple result expected result suppress warning serial test public void test sub graph throw exception test subgraph final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long long datum graph subgraph new filter function vertex long long public boolean filter vertex long long vertex throw exception return vertex get value new filter function edge long long public boolean filter edge long long edge throw exception return edge get value get edge list edge long long result datum collect expected result 3,5 n 4,5 n compare result as tuple result expected result suppress warning serial test public void test filter vertex throw exception test filter on vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long long datum graph filter on vertex new filter function vertex long long public boolean filter vertex long long vertex throw exception return vertex get value get edge list edge long long result datum collect expected result 3,4 n 3,5 n 4,5 n compare result as tuple result expected result suppress warning serial test public void test filter edge throw exception test filter on edge final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long long datum graph filter on edge new filter function edge long long public boolean filter edge long long edge throw exception return edge get value get edge list edge long long result datum collect expected result 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test number of vertex throw exception test number of vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set long datum env from element graph number of vertex list long result datum collect expected result compare result as text result expect result test public void test number of edge throw exception test number of edge final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set long datum env from element graph number of edge list long result datum collect expected result compare result as text result expect result test public void test vertex id throw exception test get vertex id final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set long datum graph get vertex id list long result datum collect expected result n2 n3 n4 n5 n compare result as text result expect result test public void test edge id throw exception test get edge id final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long datum graph get edge id list tuple2 long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test union throw exception test union final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env list vertex long long vertice new array list list edge long long edge new array list vertex add new vertex 6 l 6 l edge add new edge 6 l 1 l 61 l graph graph union graph from collection vertex edge env datum set edge long long datum graph get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n 6,1 n compare result as tuple result expect result test public void test difference throw exception test difference method by check the output for get edge on the resultant graph final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long graph2 graph from datum set test graph util get long long vertex datum difference env test graph util get long long edge datum difference env env graph graph difference graph2 list edge long long result graph get edge collect expected result 4,5 n compare result as tuple result expect result test public void test difference vertex throw exception test difference method by check the output for get vertex on the resultant graph final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long graph2 graph from datum set test graph util get long long vertex datum difference env test graph util get long long edge datum difference env env graph graph difference graph2 list vertex long long result graph get vertex collect expected result 2,2 n 4,4 n 5,5 n compare result as tuple result expect result test public void test difference2 throw exception test difference such that no common vertex be there final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set vertex long long vertex env from element new vertex 6 l 6 l graph long long long graph2 graph from datum set vertex test graph util get long long edge datum difference2 env env graph graph difference graph2 list edge long long result graph get edge collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public final void test intersect throw exception final execution environment env execution environment get execution environment suppress warning unchecked list edge long long edges1 new array list edges1 add new edge 1 l 3 l 12 l edges1 add new edge 1 l 3 l 13 l need to be in the output edges1 add new edge 1 l 3 l 14 l suppress warning unchecked list edge long long edges2 new array list edges2 add new edge 1 l 3 l 13 l graph long null value long graph1 graph from collection edges1 env graph long null value long graph2 graph from collection edges2 env graph long null value long intersect graph1 intersect graph2 true list vertex long null value vertice new array list list edge long long edge new array list intersect get vertices output new local collection output format vertex intersect get edge output new local collection output format edge env execute string expect vertex null n null n string expect edge 1,3 n compare result as tuple vertex expect vertex compare result as tuple edge expect edge test public final void test intersect with pair throw exception final execution environment env execution environment get execution environment suppress warning unchecked list edge long long edges1 new array list edges1 add new edge 1 l 3 l 12 l edges1 add new edge 1 l 3 l 13 l edges1 add new edge 1 l 3 l 13 l output edges1 add new edge 1 l 3 l 13 l output edges1 add new edge 1 l 3 l 14 l output suppress warning unchecked list edge long long edges2 new array list edges2 add new edge 1 l 3 l 13 l output edges2 add new edge 1 l 3 l 13 l output edges2 add new edge 1 l 3 l 14 l output graph long null value long graph1 graph from collection edges1 env graph long null value long graph2 graph from collection edges2 env graph long null value long intersect graph1 intersect graph2 false list vertex long null value vertice new array list list edge long long edge new array list intersect get vertices output new local collection output format vertex intersect get edge output new local collection output format edge env execute string expect vertex null n null n string expect edge 1,3 n 1,3 n 1,3 n 1,3 n 1,3 n 1,3 compare result as tuple vertex expect vertex compare result as tuple edge expect edge test public void test triplet throw exception test get triplet final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set triplet long long long datum graph get triplet list triplet long long long result datum collect expected result 1,2 1,2 n 1,3 1,3 n 2,3 2,3 n 3,4 3,4 n 3,5 3,5 n 4,5 4,5 n 5,1 5,1 n compare result as tuple result expect result 
join with edge i t case run with parameterized class public class join with edge i t case extend multiple program test base public join with edge i t case test execution mode mode super mode private string expect result test public void test with edge input dataset throw exception test join with edge with the input datum set parameter identical to the edge datum set final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge graph get edge map new edge to tuple3 map new add value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with less element throw exception test join with edge with the input datum set pass as a parameter contain less element than the edge datum set but of the same type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge graph get edge first map new edge to tuple3 map new add value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with less element different type throw exception test join with edge with the input datum set pass as a parameter contain less element than the edge datum set and of a different type boolean final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge graph get edge first map new boolean edge value mapper new double if true mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with no common key throw exception test join with edge with the input datum set contain different key than the edge datum set the iterator become empty final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge test graph util get long long long tuple3 datum env new double value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with custom type throw exception test join with edge with a data set contain custom parametrise type input value final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge test graph util get long long custom tuple3 datum env new custom value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with edge on source throw exception test join with edge on source with the input datum set parameter identical to the edge datum set final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on source graph get edge map new project source and value mapper new add value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test on source with less element throw exception test join with edge on source with the input datum set pass as a parameter contain less element than the edge datum set but of the same type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on source graph get edge first map new project source and value mapper new add value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test on source with different type throw exception test join with edge on source with the input datum set pass as a parameter contain less element than the edge datum set and of a different type boolean final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on source graph get edge first map new project source with true mapper new double if true mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test on source with no common key throw exception test join with edge on source with the input datum set contain different key than the edge datum set the iterator become empty final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on source test graph util get long long tuple2 source datum env new double value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test on source with custom throw exception test join with edge on source with a data set contain custom parametrise type input value final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on source test graph util get long custom tuple2 source datum env new custom value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with edge on target throw exception test join with edge on target with the input datum set parameter identical to the edge datum set final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on target graph get edge map new project target and value mapper new add value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with on target with less element throw exception test join with edge on target with the input datum set pass as a parameter contain less element than the edge datum set but of the same type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on target graph get edge first map new project target and value mapper new add value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test on target with different type throw exception test join with edge on target with the input datum set pass as a parameter contain less element than the edge datum set and of a different type boolean final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on target graph get edge first map new project target with true mapper new double if true mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test on target with no common key throw exception test join with edge on target with the input datum set contain different key than the edge datum set the iterator become empty final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on target test graph util get long long tuple2 target datum env new double value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test on target with custom throw exception test join with edge on target with a data set contain custom parametrise type input value final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with edge on target test graph util get long custom tuple2 target datum env new custom value mapper datum set edge long long datum re get edge list edge long long result datum collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expected result suppress warning serial private static final class add value mapper implement edge join function long long public long edge join long edge value long input value throw exception return edge value input value suppress warning serial private static final class boolean edge value mapper implement map function edge long long tuple3 long long boolean public tuple3 long long boolean map edge long long edge throw exception return new tuple3 edge get source edge get target true suppress warning serial private static final class double if true mapper implement edge join function long boolean public long edge join long edge value boolean input value if input value return edge value else return edge value suppress warning serial private static final class double value mapper implement edge join function long long public long edge join long edge value long input value return input value suppress warning serial private static final class custom value mapper implement edge join function long dummy custom parameterize type float public long edge join long edge value dummy custom parameterize type float input value return long input value get int field suppress warning serial private static final class project source and value mapper implement map function edge long long tuple2 long long public tuple2 long long map edge long long edge throw exception return new tuple2 edge get source edge get value suppress warning serial private static final class project source with true mapper implement map function edge long long tuple2 long boolean public tuple2 long boolean map edge long long edge throw exception return new tuple2 edge get source true suppress warning serial private static final class project target and value mapper implement map function edge long long tuple2 long long public tuple2 long long map edge long long edge throw exception return new tuple2 edge get target edge get value suppress warning serial private static final class project target with true mapper implement map function edge long long tuple2 long boolean public tuple2 long boolean map edge long long edge throw exception return new tuple2 edge get target true 
join with vertex i t case run with parameterized class public class join with vertex i t case extend multiple program test base public join with vertex i t case test execution mode mode super mode private string expect result test public void test join with vertex set throw exception test join with vertex with the input datum set parameter identical to the vertex datum set final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with vertex graph get vertex map new vertex to tuple2 map new add value mapper datum set vertex long long datum re get vertex list vertex long long result datum collect expected result 1,2 n 2,4 n 3,6 n 4,8 n 5,10 n compare result as tuple result expect result test public void test with less element throw exception test join with vertex with the input datum set pass as a parameter contain less element than the vertex datum set but of the same type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with vertex graph get vertex first map new vertex to tuple2 map new add value mapper datum set vertex long long datum re get vertex list vertex long long result datum collect expected result 1,2 n 2,4 n 3,6 n 4,4 n 5,5 n compare result as tuple result expect result test public void test with different type throw exception test join with vertex with the input datum set pass as a parameter contain less element than the vertex datum set and of a different type boolean final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with vertex graph get vertex first map new project id with true new double if true mapper datum set vertex long long datum re get vertex list vertex long long result datum collect expected result 1,2 n 2,4 n 3,6 n 4,4 n 5,5 n compare result as tuple result expect result test public void test with different key throw exception test join with vertex with a input datum set contain different key than the vertex datum set the iterator become empty final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with vertex test graph util get long long tuple2 datum env new project second mapper datum set vertex long long datum re get vertex list vertex long long result datum collect expected result 1,10 n 2,20 n 3,30 n 4,40 n 5,5 n compare result as tuple result expect result test public void test with custom type throw exception test join with vertex with a data set contain custom parametrise type input value final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env graph long long long re graph join with vertex test graph util get long custom tuple2 datum env new custom value mapper datum set vertex long long datum re get vertex list vertex long long result datum collect expected result 1,10 n 2,20 n 3,30 n 4,40 n 5,5 n compare result as tuple result expected result suppress warning serial private static final class add value mapper implement vertex join function long long public long vertex join long vertex value long input value return vertex value input value suppress warning serial private static final class project id with true implement map function vertex long long tuple2 long boolean public tuple2 long boolean map vertex long long vertex throw exception return new tuple2 vertex get id true suppress warning serial private static final class double if true mapper implement vertex join function long boolean public long vertex join long vertex value boolean input value if input value return vertex value else return vertex value suppress warning serial private static final class project second mapper implement vertex join function long long public long vertex join long vertex value long input value return input value suppress warning serial private static final class custom value mapper implement vertex join function long dummy custom parameterize type float public long vertex join long vertex value dummy custom parameterize type float input value return long input value get int field 
map edge i t case run with parameterized class public class map edge i t case extend multiple program test base public map edge i t case test execution mode mode super mode private string expect result test public void test with same value throw exception test map edge keep the same value type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long long map edge graph map edge new add one mapper get edge list edge long long result map edge collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with string value throw exception test map edge and change the value type to string final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long string map edge graph map edge new to string mapper get edge list edge long string result map edge collect expected result 1,2 string n 1,3 string n 2,3 string n 3,4 string n 3,5 string n 4,5 string n 5,1 string n compare result as tuple result expect result test public void test with tuple1 type throw exception test map edge and change the value type to a tuple1 final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long tuple1 long map edge graph map edge new to tuple1 mapper get edge list edge long tuple1 long result map edge collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 n compare result as tuple result expect result test public void test with custom type throw exception test map edge and change the value type to a custom type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long dummy custom type map edge graph map edge new to custom type mapper get edge list edge long dummy custom type result map edge collect expected result 1,2 t n 1,3 t n 2,3 t n 3,4 t n 3,5 t n 4,5 t n 5,1 t n compare result as tuple result expect result test public void test with parametrized custom type throw exception test map edge and change the value type to a parameterized custom type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set edge long dummy custom parameterize type double map edge graph map edge new to custom parametrize type mapper get edge list edge long dummy custom parameterize type double result map edge collect expected result 1,2 12.0 n 1,3 13.0 n 2,3 23.0 n 3,4 34.0 n 3,5 35.0 n 4,5 45.0 n 5,1 51.0 n compare result as tuple result expected result suppress warning serial private static final class add one mapper implement map function edge long long long public long map edge long long edge throw exception return edge get value suppress warning serial private static final class to string mapper implement map function edge long long string public string map edge long long edge throw exception return string format string d edge get value suppress warning serial private static final class to tuple1 mapper implement map function edge long long tuple1 long public tuple1 long map edge long long edge throw exception tuple1 long tuple value new tuple1 tuple value set field edge get value return tuple value suppress warning serial private static final class to custom type mapper implement map function edge long long dummy custom type public dummy custom type map edge long long edge throw exception dummy custom type dummy value new dummy custom type dummy value set int field edge get value int value return dummy value suppress warning serial private static final class to custom parametrize type mapper implement map function edge long long dummy custom parameterize type double public dummy custom parameterize type double map edge long long edge throw exception dummy custom parameterize type double dummy value new dummy custom parameterize type dummy value set int field edge get value int value dummy value set t field new double edge get value return dummy value 
map vertice i t case run with parameterized class public class map vertice i t case extend multiple program test base public map vertice i t case test execution mode mode super mode private string expect result test public void test with same value throw exception test map vertex keep the same value type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set vertex long long map vertex graph map vertex new add one mapper get vertex list vertex long long result map vertex collect expected result 1,2 n 2,3 n 3,4 n 4,5 n 5,6 n compare result as tuple result expect result test public void test with string value throw exception test map vertex and change the value type to string final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set vertex long string map vertex graph map vertex new to string mapper get vertex list vertex long string result map vertex collect expected result one n two n three n four n five n compare result as tuple result expect result test public void test withtuple1 value throw exception test map vertex and change the value type to a tuple1 final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set vertex long tuple1 long map vertex graph map vertex new to tuple1 mapper get vertex list vertex long tuple1 long result map vertex collect expected result n n n n n compare result as tuple result expect result test public void test with custom type throw exception test map vertex and change the value type to a custom type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set vertex long dummy custom type map vertex graph map vertex new to custom type mapper get vertex list vertex long dummy custom type result map vertex collect expected result t n t n t n t n t n compare result as tuple result expect result test public void test with custom parametrize type throw exception test map vertex and change the value type to a parameterized custom type final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set vertex long dummy custom parameterize type double map vertex graph map vertex new to custom parametrize type mapper get vertex list vertex long dummy custom parameterize type double result map vertex collect expected result 1.0 n 2.0 n 3.0 n 4.0 n 5.0 n compare result as tuple result expected result suppress warning serial private static final class add one mapper implement map function vertex long long long public long map vertex long long value throw exception return value get value suppress warning serial private static final class to string mapper implement map function vertex long long string public string map vertex long long vertex throw exception string string value if vertex get value string value one else if vertex get value string value two else if vertex get value string value three else if vertex get value string value four else if vertex get value string value five else string value return string value suppress warning serial private static final class to tuple1 mapper implement map function vertex long long tuple1 long public tuple1 long map vertex long long vertex throw exception tuple1 long tuple value new tuple1 tuple value set field vertex get value return tuple value suppress warning serial private static final class to custom type mapper implement map function vertex long long dummy custom type public dummy custom type map vertex long long vertex throw exception dummy custom type dummy value new dummy custom type dummy value set int field vertex get value int value return dummy value suppress warning serial private static final class to custom parametrize type mapper implement map function vertex long long dummy custom parameterize type double public dummy custom parameterize type double map vertex long long vertex throw exception dummy custom parameterize type double dummy value new dummy custom parameterize type dummy value set int field vertex get value int value dummy value set t field new double vertex get value return dummy value 
reduce on edge method i t case run with parameterized class public class reduce on edge method i t case extend multiple program test base public reduce on edge method i t case test execution mode mode super mode private string expect result test public void test lowest weight out neighbor throw exception get the lowest weight out neighbor for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertice with lowest out neighbor graph group reduce on edge new select min weight neighbor edge direction out list tuple2 long long result vertex with lowest out neighbor collect expected result 1,2 n 2,3 n 3,4 n 4,5 n 5,1 n compare result as tuple result expect result test public void test lowest weight in neighbor throw exception get the lowest weight in neighbor for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertice with lowest out neighbor graph group reduce on edge new select min weight in neighbor edge direction in list tuple2 long long result vertex with lowest out neighbor collect expected result 1,5 n 2,1 n 3,1 n 4,3 n 5,3 n compare result as tuple result expect result test public void test all out neighbor throw exception get the all the out neighbor for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with all out neighbor graph group reduce on edge new select out neighbor edge direction out list tuple2 long long result vertex with all out neighbor collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 n 5,1 compare result as tuple result expect result test public void test all out neighbor no value throw exception get the all the out neighbor for each vertex except for the vertex with id final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with all out neighbor graph group reduce on edge new select out neighbor exclude five edge direction out list tuple2 long long result vertex with all out neighbor collect expected result 1,2 n 1,3 n 2,3 n 3,4 n 3,5 n 4,5 compare result as tuple result expect result test public void test all out neighbor with value greater than two throw exception get the all the out neighbor for each vertex that have a value greater than two final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with all out neighbor graph group reduce on edge new select out neighbor value greater than two edge direction out list tuple2 long long result vertex with all out neighbor collect expected result 3,4 n 3,5 n 4,5 n 5,1 compare result as tuple result expect result test public void test all in neighbor throw exception get the all the in neighbor for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertice with all in neighbor graph group reduce on edge new select in neighbor edge direction in list tuple2 long long result vertex with all in neighbor collect expected result 1,5 n 2,1 n 3,1 n 3,2 n 4,3 n 5,3 n 5,4 compare result as tuple result expect result test public void test all in neighbor no value throw exception get the all the in neighbor for each vertex except for the vertex with id final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertice with all in neighbor graph group reduce on edge new select in neighbor except five edge direction in list tuple2 long long result vertex with all in neighbor collect expected result 1,5 n 2,1 n 3,1 n 3,2 n 4,3 compare result as tuple result expect result test public void test all in neighbor with value greater than two throw exception get the all the in neighbor for each vertex that have a value greater than two final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertice with all in neighbor graph group reduce on edge new select in neighbor value greater than two edge direction in list tuple2 long long result vertex with all in neighbor collect expected result 3,1 n 3,2 n 4,3 n 5,3 n 5,4 compare result as tuple result expect result test public void test all neighbor throw exception get the all the neighbor for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with all neighbor graph group reduce on edge new select neighbor edge direction all list tuple2 long long result vertex with all neighbor collect expected result 1,2 n 1,3 n 1,5 n 2,1 n 2,3 n 3,1 n 3,2 n 3,4 n 3,5 n 4,3 n 4,5 n 5,1 n 5,3 n 5,4 compare result as tuple result expect result test public void test all neighbor no value throw exception get the all the neighbor for each vertex except for vertex with id and final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with all neighbor graph group reduce on edge new select neighbor except five and two edge direction all list tuple2 long long result vertex with all neighbor collect expected result 1,2 n 1,3 n 1,5 n 3,1 n 3,2 n 3,4 n 3,5 n 4,3 n 4,5 compare result as tuple result expect result test public void test all neighbor with value greater than four throw exception get the all the neighbor for each vertex that have a value greater than four final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with all neighbor graph group reduce on edge new select neighbor value greater than four edge direction all list tuple2 long long result vertex with all neighbor collect expected result 5,1 n 5,3 n 5,4 compare result as tuple result expect result test public void test max weight edge throw exception get the maximum weight among all edge of a vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with max edge weight graph group reduce on edge new select max weight neighbor edge direction all list tuple2 long long result vertex with max edge weight collect expected result 1,51 n 2,23 n 3,35 n 4,45 n 5,51 n compare result as tuple result expect result test public void test lowest weight out neighbor no value throw exception get the lowest weight out of all the out neighbor of each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertice with lowest out neighbor graph reduce on edge new select min weight neighbor no value edge direction out list tuple2 long long result vertex with lowest out neighbor collect expected result 1,12 n 2,23 n 3,34 n 4,45 n 5,51 n compare result as tuple result expect result test public void test lowest weight in neighbor no value throw exception get the lowest weight out of all the in neighbor of each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertice with lowest out neighbor graph reduce on edge new select min weight neighbor no value edge direction in list tuple2 long long result vertex with lowest out neighbor collect expected result 1,51 n 2,12 n 3,13 n 4,34 n 5,35 n compare result as tuple result expect result test public void test max weight all neighbor throw exception get the maximum weight among all edge of a vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with max edge weight graph reduce on edge new select max weight neighbor no value edge direction all list tuple2 long long result vertex with max edge weight collect expected result 1,51 n 2,23 n 3,35 n 4,45 n 5,51 n compare result as tuple result expected result suppress warning serial private static final class select min weight neighbor implement edge function with vertex value long long long tuple2 long long override public void iterate edge vertex long long v iterable edge long long edge collector tuple2 long long out throw exception long weight long max value long min neighbor id for edge long long edge edge if edge get value weight weight edge get value min neighbor id edge get target out collect new tuple2 v get id min neighbor id suppress warning serial private static final class select max weight neighbor implement edge function with vertex value long long long tuple2 long long override public void iterate edge vertex long long v iterable edge long long edge collector tuple2 long long out throw exception long weight long min value for edge long long edge edge if edge get value weight weight edge get value out collect new tuple2 v get id weight suppress warning serial private static final class select min weight neighbor no value implement reduce edge function long override public long reduce edge long first edge value long second edge value return math min first edge value second edge value suppress warning serial private static final class select max weight neighbor no value implement reduce edge function long override public long reduce edge long first edge value long second edge value return math max first edge value second edge value suppress warning serial private static final class select min weight in neighbor implement edge function with vertex value long long long tuple2 long long override public void iterate edge vertex long long v iterable edge long long edge collector tuple2 long long out throw exception long weight long max value long min neighbor id for edge long long edge edge if edge get value weight weight edge get value min neighbor id edge get source out collect new tuple2 v get id min neighbor id suppress warning serial private static final class select out neighbor implement edge function long long tuple2 long long override public void iterate edge iterable tuple2 long edge long long edge collector tuple2 long long out throw exception for tuple2 long edge long long edge edge out collect new tuple2 edge f0 edge f1 get target suppress warning serial private static final class select out neighbor exclude five implement edge function long long tuple2 long long override public void iterate edge iterable tuple2 long edge long long edge collector tuple2 long long out throw exception for tuple2 long edge long long edge edge if edge f0 out collect new tuple2 edge f0 edge f1 get target suppress warning serial private static final class select out neighbor value greater than two implement edge function with vertex value long long long tuple2 long long override public void iterate edge vertex long long v iterable edge long long edge collector tuple2 long long out throw exception for edge long long edge edge if v get value out collect new tuple2 v get id edge get target suppress warning serial private static final class select in neighbor implement edge function long long tuple2 long long override public void iterate edge iterable tuple2 long edge long long edge collector tuple2 long long out throw exception for tuple2 long edge long long edge edge out collect new tuple2 edge f0 edge f1 get source suppress warning serial private static final class select in neighbor except five implement edge function long long tuple2 long long override public void iterate edge iterable tuple2 long edge long long edge collector tuple2 long long out throw exception for tuple2 long edge long long edge edge if edge f0 out collect new tuple2 edge f0 edge f1 get source suppress warning serial private static final class select in neighbor value greater than two implement edge function with vertex value long long long tuple2 long long override public void iterate edge vertex long long v iterable edge long long edge collector tuple2 long long out throw exception for edge long long edge edge if v get value out collect new tuple2 v get id edge get source suppress warning serial private static final class select neighbor implement edge function long long tuple2 long long override public void iterate edge iterable tuple2 long edge long long edge collector tuple2 long long out throw exception for tuple2 long edge long long edge edge if object equal edge f0 edge f1 get target out collect new tuple2 edge f0 edge f1 get source else out collect new tuple2 edge f0 edge f1 get target suppress warning serial private static final class select neighbor except five and two implement edge function long long tuple2 long long override public void iterate edge iterable tuple2 long edge long long edge collector tuple2 long long out throw exception for tuple2 long edge long long edge edge if edge f0 edge f0 if object equal edge f0 edge f1 get target out collect new tuple2 edge f0 edge f1 get source else out collect new tuple2 edge f0 edge f1 get target suppress warning serial private static final class select neighbor value greater than four implement edge function with vertex value long long long tuple2 long long override public void iterate edge vertex long long v iterable edge long long edge collector tuple2 long long out throw exception for edge long long edge edge if v get value if v get id equal edge get target out collect new tuple2 v get id edge get source else out collect new tuple2 v get id edge get target 
reduce on neighbor method i t case run with parameterized class public class reduce on neighbor method i t case extend multiple program test base public reduce on neighbor method i t case test execution mode mode super mode private string expect result test public void test sum of out neighbor throw exception get the sum of out neighbor value for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph group reduce on neighbor new sum out neighbor edge direction out list tuple2 long long result vertex with sum of out neighbor value collect expected result 1,5 n 2,3 n 3,9 n 4,5 n 5,1 n compare result as tuple result expect result test public void test sum of in neighbor throw exception get the sum of in neighbor value time the edge weight for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum graph group reduce on neighbor new sum in neighbor edge direction in list tuple2 long long result vertex with sum collect expected result 1,255 n 2,12 n 3,59 n 4,102 n 5,285 n compare result as tuple result expect result test public void test sum of o all neighbor throw exception get the sum of all neighbor value include own vertex value for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph group reduce on neighbor new sum all neighbor edge direction all list tuple2 long long result vertex with sum of out neighbor value collect expected result 1,11 n 2,6 n 3,15 n 4,12 n 5,13 n compare result as tuple result expect result test public void test sum of out neighbor id greater than three throw exception get the sum of out neighbor value for each vertex with id greater than three final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph group reduce on neighbor new sum out neighbor id greater than three edge direction out list tuple2 long long result vertex with sum of out neighbor value collect expected result 4,5 n 5,1 n compare result as tuple result expect result test public void test sum of in neighbor id greater than three throw exception get the sum of in neighbor value time the edge weight for each vertex with id greater than three final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum graph group reduce on neighbor new sum in neighbor id greater than three edge direction in list tuple2 long long result vertex with sum collect expected result 4,102 n 5,285 n compare result as tuple result expect result test public void test sum of o all neighbor id greater than three throw exception get the sum of all neighbor value include own vertex value for each vertex with id greater than three final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph group reduce on neighbor new sum all neighbor id greater than three edge direction all list tuple2 long long result vertex with sum of out neighbor value collect expected result 4,12 n 5,13 n compare result as tuple result expect result test public void test sum of out neighbor no value throw exception get the sum of out neighbor value for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph reduce on neighbor new sum neighbor edge direction out list tuple2 long long result vertex with sum of out neighbor value collect expected result 1,5 n 2,3 n 3,9 n 4,5 n 5,1 n compare result as tuple result expect result test public void test sum of in neighbor no value throw exception get the sum of in neighbor value time the edge weight for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum graph group reduce on neighbor new sum in neighbor no value edge direction in list tuple2 long long result vertex with sum collect expected result 1,255 n 2,12 n 3,59 n 4,102 n 5,285 n compare result as tuple result expect result test public void test sum of all neighbor no value throw exception get the sum of all neighbor value for each vertex final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of all neighbor value graph reduce on neighbor new sum neighbor edge direction all list tuple2 long long result vertex with sum of all neighbor value collect expected result 1,10 n 2,4 n 3,12 n 4,8 n 5,8 n compare result as tuple result expect result test public void test sum of out neighbor no value multiply by two id greater than two throw exception get the sum of out neighbor value for each vertex with id greater than two as well as the same sum multiply by two final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph group reduce on neighbor new sum out neighbor no value multiply by two id greater than two edge direction out list tuple2 long long result vertex with sum of out neighbor value collect expected result 3,9 n 3,18 n 4,5 n 4,10 n 5,1 n 5,2 compare result as tuple result expect result test public void test sum of in neighbor no value multiply by two id greater than two throw exception get the sum of in neighbor value for each vertex with id greater than two as well as the same sum multiply by two final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph group reduce on neighbor new sum in neighbor no value multiply by two id greater than two edge direction in list tuple2 long long result vertex with sum of out neighbor value collect expected result 3,59 n 3,118 n 4,204 n 4,102 n 5,570 n 5,285 compare result as tuple result expect result test public void test sum of all neighbor no value multiply by two id greater than two throw exception get the sum of all neighbor value for each vertex with id greater than two as well as the same sum multiply by two final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of all neighbor value graph group reduce on neighbor new sum all neighbor no value multiply by two id greater than two edge direction all list tuple2 long long result vertex with sum of all neighbor value collect expected result 3,12 n 3,24 n 4,8 n 4,16 n 5,8 n 5,16 compare result as tuple result expect result test public void test sum of out neighbor multiply by two throw exception get the sum of out neighbor value for each vertex as well as the sum of out neighbor value multiply by two final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph group reduce on neighbor new sum out neighbor multiply by two edge direction out list tuple2 long long result vertex with sum of out neighbor value collect expected result 1,5 n 1,10 n 2,3 n 2,6 n 3,9 n 3,18 n 4,5 n 4,10 n 5,1 n 5,2 compare result as tuple result expect result test public void test sum of in neighbor subtract one throw exception get the sum of in neighbor value time the edge weight for each vertex as well as the same sum minus one final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum graph group reduce on neighbor new sum in neighbor subtract one edge direction in list tuple2 long long result vertex with sum collect expected result 1,255 n 1,254 n 2,12 n 2,11 n 3,59 n 3,58 n 4,102 n 4,101 n 5,285 n 5,284 compare result as tuple result expect result test public void test sum of o all neighbor add five throw exception get the sum of all neighbor value include own vertex value for each vertex as well as the same sum plus five final execution environment env execution environment get execution environment graph long long long graph graph from datum set test graph util get long long vertex datum env test graph util get long long edge datum env env datum set tuple2 long long vertex with sum of out neighbor value graph group reduce on neighbor new sum all neighbor add five edge direction all list tuple2 long long result vertex with sum of out neighbor value collect expected result 1,11 n 1,16 n 2,6 n 2,11 n 3,15 n 3,20 n 4,12 n 4,17 n 5,13 n 5,18 compare result as tuple result expected result suppress warning serial private static final class sum out neighbor implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f1 get value out collect new tuple2 vertex get id sum suppress warning serial private static final class sum in neighbor implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f0 get value neighbor f1 get value out collect new tuple2 vertex get id sum suppress warning serial private static final class sum all neighbor implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f1 get value out collect new tuple2 vertex get id sum vertex get value suppress warning serial private static final class sum out neighbor id greater than three implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f1 get value if vertex get id out collect new tuple2 vertex get id sum suppress warning serial private static final class sum in neighbor id greater than three implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f0 get value neighbor f1 get value if vertex get id out collect new tuple2 vertex get id sum suppress warning serial private static final class sum all neighbor id greater than three implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f1 get value if vertex get id out collect new tuple2 vertex get id sum vertex get value suppress warning serial private static final class sum neighbor implement reduce neighbor function long override public long reduce neighbor long first neighbor long second neighbor return first neighbor second neighbor suppress warning serial private static final class sum in neighbor no value implement neighbor function long long long tuple2 long long override public void iterate neighbor iterable tuple3 long edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum tuple3 long edge long long vertex long long next null for tuple3 long edge long long vertex long long neighbor neighbor next neighbor sum next f2 get value next f1 get value out collect new tuple2 next f0 sum suppress warning serial private static final class sum out neighbor no value multiply by two id greater than two implement neighbor function long long long tuple2 long long override public void iterate neighbor iterable tuple3 long edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum tuple3 long edge long long vertex long long next null for tuple3 long edge long long vertex long long neighbor neighbor next neighbor sum next f2 get value if next f0 out collect new tuple2 next f0 sum out collect new tuple2 next f0 sum suppress warning serial private static final class sum in neighbor no value multiply by two id greater than two implement neighbor function long long long tuple2 long long override public void iterate neighbor iterable tuple3 long edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum tuple3 long edge long long vertex long long next null for tuple3 long edge long long vertex long long neighbor neighbor next neighbor sum next f2 get value next f1 get value if next f0 out collect new tuple2 next f0 sum out collect new tuple2 next f0 sum suppress warning serial private static final class sum all neighbor no value multiply by two id greater than two implement neighbor function long long long tuple2 long long override public void iterate neighbor iterable tuple3 long edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum tuple3 long edge long long vertex long long next null for tuple3 long edge long long vertex long long neighbor neighbor next neighbor sum next f2 get value if next f0 out collect new tuple2 next f0 sum out collect new tuple2 next f0 sum suppress warning serial private static final class sum out neighbor multiply by two implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f1 get value out collect new tuple2 vertex get id sum out collect new tuple2 vertex get id sum suppress warning serial private static final class sum in neighbor subtract one implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f0 get value neighbor f1 get value out collect new tuple2 vertex get id sum out collect new tuple2 vertex get id sum suppress warning serial private static final class sum all neighbor add five implement neighbor function with vertex value long long long tuple2 long long override public void iterate neighbor vertex long long vertex iterable tuple2 edge long long vertex long long neighbor collector tuple2 long long out throw exception long sum for tuple2 edge long long vertex long long neighbor neighbor sum neighbor f1 get value out collect new tuple2 vertex get id sum vertex get value out collect new tuple2 vertex get id sum vertex get value 
scatter gather configuration i t case run with parameterized class public class scatter gather configuration i t case extend multiple program test base public scatter gather configuration i t case test execution mode mode super mode private string expect result test public void test run with configuration throw exception test graph s run scatter gather iteration when configuration parameter be provide final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new assign one mapper create the configuration object scatter gather configuration parameter new scatter gather configuration parameter add broadcast set for scatter function messaging bcast set env from element parameter add broadcast set for gather function update bcast set env from element parameter register aggregator superstep aggregator new long sum aggregator parameter set opt num vertex true graph long long long re graph run scatter gather iteration new message function new update function parameter datum set vertex long long datum re get vertex list vertex long long result datum collect expected result 1,11 n 2,11 n 3,11 n 4,11 n 5,11 compare result as tuple result expect result test public void test iteration configuration throw exception test name parallelism and solution set unmanaged parameter final execution environment env execution environment get execution environment scatter gather iteration long long long long iteration scatter gather iteration with edge test graph util get long long edge datum env new dummy message function new dummy update function scatter gather configuration parameter new scatter gather configuration parameter set name gelly iteration parameter set parallelism parameter set solution set unmanaged memory true iteration configure parameter assert assert equal gelly iteration iteration get iteration configuration get name assert assert equal iteration get iteration configuration get parallelism assert assert equal true iteration get iteration configuration be solution set unmanaged memory datum set vertex long long datum test graph util get long long vertex datum env run operation iteration list vertex long long result datum collect expected result 1,11 n 2,12 n 3,13 n 4,14 n 5,15 compare result as tuple result expect result test public void test default configuration throw exception test graph s run scatter gather iteration when configuration parameter be not provide i e degree and num vertex will be edge direction will be out final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new assign one mapper graph long long long re graph run scatter gather iteration new message function default new update function default datum set tuple2 long long datum re get vertex map new vertex to tuple2 map list tuple2 long long result datum collect expected result 1,6 n 2,6 n 3,6 n 4,6 n 5,6 compare result as tuple result expect result test public void test iteration default direction throw exception test that if no direction parameter be give the iteration work as before i e it collect message from the in neighbor and send they to the out neighbor final execution environment env execution environment get execution environment graph long hash set long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new initialise hash set mapper datum set vertex long hash set long result vertex graph run scatter gather iteration new id messenger trg new vertex update direction get vertex list vertex long hash set long result result vertex collect expected result n n n n compare result as tuple result expect result test public void test iteration i n direction throw exception test that if the direction parameter be set to in message be collect from the out neighbor and send to the in neighbor final execution environment env execution environment get execution environment graph long hash set long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new initialise hash set mapper configure the iteration scatter gather configuration parameter new scatter gather configuration parameter set direction edge direction in datum set vertex long hash set long result vertex graph run scatter gather iteration new id messenger src new vertex update direction parameter get vertex list vertex long hash set long result result vertex collect expected result n n n n compare result as tuple result expect result test public void test iteration a l l direction throw exception test that if the direction parameter be set to all message be collect from all the neighbor and send to all the neighbor final execution environment env execution environment get execution environment graph long hash set long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new initialise hash set mapper configure the iteration scatter gather configuration parameter new scatter gather configuration parameter set direction edge direction all datum set vertex long hash set long result vertex graph run scatter gather iteration new id messenger all new vertex update direction parameter get vertex list vertex long hash set long result result vertex collect expected result n n n n compare result as tuple result expect result test public void test send to all direction i n throw exception test that send message to all neighbor work correctly when the direction be set to in final execution environment env execution environment get execution environment graph long hash set long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new initialise hash set mapper configure the iteration scatter gather configuration parameter new scatter gather configuration parameter set direction edge direction in datum set vertex long hash set long result vertex graph run scatter gather iteration new send msg to all new vertex update direction parameter get vertex list vertex long hash set long result result vertex collect expected result n n n n compare result as tuple result expect result test public void test send to all direction o u t throw exception test that send message to all neighbor work correctly when the direction be set to out final execution environment env execution environment get execution environment graph long hash set long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new initialise hash set mapper configure the iteration scatter gather configuration parameter new scatter gather configuration parameter set direction edge direction out datum set vertex long hash set long result vertex graph run scatter gather iteration new send msg to all new vertex update direction parameter get vertex list vertex long hash set long result result vertex collect expected result n n n n compare result as tuple result expect result test public void test send to all direction a l l throw exception test that send message to all neighbor work correctly when the direction be set to all final execution environment env execution environment get execution environment graph long hash set long long graph graph from collection test graph util get long long vertex test graph util get long long edge env map vertex new initialise hash set mapper configure the iteration scatter gather configuration parameter new scatter gather configuration parameter set direction edge direction all datum set vertex long hash set long result vertex graph run scatter gather iteration new send msg to all new vertex update direction parameter get vertex list vertex long hash set long result result vertex collect expected result n n n n compare result as tuple result expect result test public void test num vertex not set throw exception test that if the number of vertex option be not set be return as value final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env datum set vertex long long vertex with num vertex graph run scatter gather iteration new dummy message function new update function num vertex get vertex list vertex long long result vertex with num vertex collect expected result n n n n compare result as tuple result expect result test public void test in degree set throw exception test that if the degree be set they can be access in every superstep inside the update function and the value be correctly compute for degree in the scatter function final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env configure the iteration scatter gather configuration parameter new scatter gather configuration parameter set opt degree true datum set vertex long long vertex with degree graph run scatter gather iteration new degree message function new update function in degree parameter get vertex list vertex long long result vertex with degree collect expected result 1,1 n 2,1 n 3,2 n 4,1 n 5,2 compare result as tuple result expect result test public void test in degree not set throw exception test that if the degree option be not set then be return as a value for in degree final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env datum set vertex long long vertex with degree graph run scatter gather iteration new dummy message function new update function in degree get vertex list vertex long long result vertex with degree collect expected result n n n n compare result as tuple result expect result test public void test out degree set throw exception test that if the degree be set they can be access in every superstep inside the update function and the value be correctly compute for degree in the scatter function final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env configure the iteration scatter gather configuration parameter new scatter gather configuration parameter set opt degree true datum set vertex long long vertex with degree graph run scatter gather iteration new degree message function new update function out degree parameter get vertex list vertex long long result vertex with degree collect expected result 1,2 n 2,1 n 3,2 n 4,1 n 5,1 compare result as tuple result expect result test public void test out degree not set throw exception test that if the degree option be not set then be return as a value for out degree final execution environment env execution environment get execution environment graph long long long graph graph from collection test graph util get long long vertex test graph util get long long edge env datum set vertex long long vertex with degree graph run scatter gather iteration new dummy message function new update function out degree get vertex list vertex long long result vertex with degree collect expected result n n n n compare result as tuple result expect result test public void test direction a l l and degree throw exception compute the number of neighbor in a vertex centric manner and verify that it be equal to the sum in degree out degree final execution environment env execution environment get execution environment graph long boolean long graph graph from collection test graph util get long boolean vertex test graph util get long long edge env configure the iteration scatter gather configuration parameter new scatter gather configuration parameter set opt degree true parameter set direction edge direction all datum set vertex long boolean vertex with num neighbor graph run scatter gather iteration new id messenger new vertex update num neighbor parameter get vertex list vertex long boolean result vertex with num neighbor collect expected result true n true n true n true n true compare result as tuple result expected result suppress warning serial private static final class message function extend scatter function long long long long override public void pre superstep test bcast variable suppress warning unchecked list integer bcast set list integer list get broadcast set messaging bcast set assert assert equal bcast set get int value assert assert equal bcast set get int value assert assert equal bcast set get int value test number of vertex assert assert equal get number of vertex test aggregator if get superstep number long aggr value long value get previous iteration aggregate superstep aggregator get value assert assert equal aggr value override public void send message vertex long long vertex send message to keep vertex active send message to all neighbor vertex get value suppress warning serial private static final class message function default extend scatter function long long long long override public void send message vertex long long vertex test number of vertex assert assert equal get number of vertex test degree assert assert equal get in degree assert assert equal get out degree send message to keep vertex active send message to all neighbor vertex get value suppress warning serial private static final class update function extend gather function long long long long sum aggregator aggregator new long sum aggregator override public void pre superstep test bcast variable suppress warning unchecked list integer bcast set list integer list get broadcast set update bcast set assert assert equal bcast set get int value assert assert equal bcast set get int value assert assert equal bcast set get int value test aggregator aggregator get iteration aggregator superstep aggregator test number of vertex assert assert equal get number of vertex override public void update vertex vertex long long vertex message iterator long in message long superstep get superstep number aggregator aggregate superstep set new vertex value vertex get value suppress warning serial private static final class update function default extend gather function long long long override public void update vertex vertex long long vertex message iterator long in message test number of vertex assert assert equal get number of vertex test degree assert assert equal get in degree assert assert equal get out degree set new vertex value vertex get value suppress warning serial private static final class update function num vertex extend gather function long long long override public void update vertex vertex long long vertex message iterator long in message set new vertex value get number of vertex suppress warning serial private static final class dummy update function extend gather function long long long override public void update vertex vertex long long vertex message iterator long in message set new vertex value vertex get value suppress warning serial private static final class dummy message function extend scatter function long long long long override public void send message vertex long long vertex send message to keep vertex active send message to all neighbor vertex get value suppress warning serial private static final class degree message function extend scatter function long long long long override public void send message vertex long long vertex if vertex get id assert assert equal get out degree assert assert equal get in degree else if vertex get id assert assert equal get out degree assert assert equal get in degree send message to keep vertex active send message to all neighbor vertex get value suppress warning serial private static final class vertex update direction extend gather function long hash set long long override public void update vertex vertex long hash set long vertex message iterator long message throw exception vertex get value clear for long msg message vertex get value add msg set new vertex value vertex get value suppress warning serial private static final class update function in degree extend gather function long long long override public void update vertex vertex long long vertex message iterator long in message long in degree get in degree set new vertex value in degree suppress warning serial private static final class update function out degree extend gather function long long long override public void update vertex vertex long long vertex message iterator long in message long out degree get out degree set new vertex value out degree suppress warning serial private static final class vertex update num neighbor extend gather function long boolean long override public void update vertex vertex long boolean vertex message iterator long message throw exception long count for suppress warning unused long msg message count set new vertex value count get in degree get out degree suppress warning serial private static final class update function degree extend gather function long long long override public void update vertex vertex long long vertex message iterator long in message long in degree get in degree long out degree get out degree set new vertex value in degree out degree suppress warning serial private static final class id messenger src extend scatter function long hash set long long long override public void send message vertex long hash set long vertex throw exception for edge long long edge get edge send message to edge get source vertex get id suppress warning serial private static final class id messenger all extend scatter function long hash set long long long override public void send message vertex long hash set long vertex throw exception for edge long long edge get edge if edge get source equal vertex get id send message to edge get source vertex get id else send message to edge get target vertex get id suppress warning serial private static final class send msg to all extend scatter function long hash set long long long override public void send message vertex long hash set long vertex throw exception send message to all neighbor vertex get id suppress warning serial private static final class id messenger extend scatter function long boolean long long override public void send message vertex long boolean vertex throw exception for edge long long edge get edge if edge get source equal vertex get id send message to edge get source vertex get id else send message to edge get target vertex get id suppress warning serial private static final class id messenger trg extend scatter function long hash set long long long override public void send message vertex long hash set long vertex throw exception for edge long long edge get edge send message to edge get target vertex get id suppress warning serial private static final class assign one mapper implement map function vertex long long long public long map vertex long long value return 1 l suppress warning serial private static final class initialise hash set mapper implement map function vertex long long hash set long override public hash set long map vertex long long value throw exception return new hash set 
value array serializer upgrade test run with parameterized class public class value array serializer upgrade test extend type serializer upgrade test base object object public value array serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification byte value array serializer migration version byte value array serializer setup class byte value array serializer verifier class test specification add new test specification char value array serializer migration version char value array serializer setup class char value array serializer verifier class test specification add new test specification double value array serializer migration version double value array serializer setup class double value array serializer verifier class test specification add new test specification float value array serializer migration version float value array serializer setup class float value array serializer verifier class test specification add new test specification int value array serializer migration version int value array serializer setup class int value array serializer verifier class test specification add new test specification long value array serializer migration version long value array serializer setup class long value array serializer verifier class test specification add new test specification null value array serializer migration version null value array serializer setup class null value array serializer verifier class test specification add new test specification short value array serializer migration version short value array serializer setup class short value array serializer verifier class test specification add new test specification string value array serializer migration version string value array serializer setup class string value array serializer verifier class return test specification specification for byte value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class byte value array serializer setup implement type serializer upgrade test base pre upgrade setup byte value array override public type serializer byte value array create prior serializer return new byte value array serializer override public byte value array create test datum byte value array byte value new byte value array byte value add new byte value byte byte value add new byte value byte return byte value this class be only public to work with link org apache flink api common typeutil class relocator public static final class byte value array serializer verifier implement type serializer upgrade test base upgrade verifier byte value array override public type serializer byte value array create upgrade serializer return new byte value array serializer override public matcher byte value array test datum matcher byte value array byte value new byte value array byte value add new byte value byte byte value add new byte value byte return be byte value override public matcher type serializer schema compatibility byte value array schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for char value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class char value array serializer setup implement type serializer upgrade test base pre upgrade setup char value array override public type serializer char value array create prior serializer return new char value array serializer override public char value array create test datum char value array array new char value array array add new char value char array add new char value char array add new char value char return array this class be only public to work with link org apache flink api common typeutil class relocator public static final class char value array serializer verifier implement type serializer upgrade test base upgrade verifier char value array override public type serializer char value array create upgrade serializer return new char value array serializer override public matcher char value array test datum matcher char value array array new char value array array add new char value char array add new char value char array add new char value char return be array override public matcher type serializer schema compatibility char value array schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for double value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class double value array serializer setup implement type serializer upgrade test base pre upgrade setup double value array override public type serializer double value array create prior serializer return new double value array serializer override public double value array create test datum double value array array new double value array array add new double value 1.2 array add new double value 3.4 return array this class be only public to work with link org apache flink api common typeutil class relocator public static final class double value array serializer verifier implement type serializer upgrade test base upgrade verifier double value array override public type serializer double value array create upgrade serializer return new double value array serializer override public matcher double value array test datum matcher double value array array new double value array array add new double value 1.2 array add new double value 3.4 return be array override public matcher type serializer schema compatibility double value array schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for float value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class float value array serializer setup implement type serializer upgrade test base pre upgrade setup float value array override public type serializer float value array create prior serializer return new float value array serializer override public float value array create test datum float value array array new float value array array add new float value 1.2 f array add new float value 3.4 f return array this class be only public to work with link org apache flink api common typeutil class relocator public static final class float value array serializer verifier implement type serializer upgrade test base upgrade verifier float value array override public type serializer float value array create upgrade serializer return new float value array serializer override public matcher float value array test datum matcher float value array array new float value array array add new float value 1.2 f array add new float value 3.4 f return be array override public matcher type serializer schema compatibility float value array schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for int value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class int value array serializer setup implement type serializer upgrade test base pre upgrade setup int value array override public type serializer int value array create prior serializer return new int value array serializer override public int value array create test datum int value array array new int value array array add new int value array add new int value return array this class be only public to work with link org apache flink api common typeutil class relocator public static final class int value array serializer verifier implement type serializer upgrade test base upgrade verifier int value array override public type serializer int value array create upgrade serializer return new int value array serializer override public matcher int value array test datum matcher int value array array new int value array array add new int value array add new int value return be array override public matcher type serializer schema compatibility int value array schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for long value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class long value array serializer setup implement type serializer upgrade test base pre upgrade setup long value array override public type serializer long value array create prior serializer return new long value array serializer override public long value array create test datum long value array array new long value array array add new long value l array add new long value l return array this class be only public to work with link org apache flink api common typeutil class relocator public static final class long value array serializer verifier implement type serializer upgrade test base upgrade verifier long value array override public type serializer long value array create upgrade serializer return new long value array serializer override public matcher long value array test datum matcher long value array array new long value array array add new long value l array add new long value l return be array override public matcher type serializer schema compatibility long value array schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for null value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class null value array serializer setup implement type serializer upgrade test base pre upgrade setup null value array override public type serializer null value array create prior serializer return new null value array serializer override public null value array create test datum null value array array new null value array array add new null value array add new null value return array this class be only public to work with link org apache flink api common typeutil class relocator public static final class null value array serializer verifier implement type serializer upgrade test base upgrade verifier null value array override public type serializer null value array create upgrade serializer return new null value array serializer override public matcher null value array test datum matcher null value array array new null value array array add new null value array add new null value return be array override public matcher type serializer schema compatibility null value array schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for short value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class short value array serializer setup implement type serializer upgrade test base pre upgrade setup short value array override public type serializer short value array create prior serializer return new short value array serializer override public short value array create test datum short value array array new short value array array add new short value short array add new short value short return array this class be only public to work with link org apache flink api common typeutil class relocator public static final class short value array serializer verifier implement type serializer upgrade test base upgrade verifier short value array override public type serializer short value array create upgrade serializer return new short value array serializer override public matcher short value array test datum matcher short value array array new short value array array add new short value short array add new short value short return be array override public matcher type serializer schema compatibility short value array schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for string value array serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class string value array serializer setup implement type serializer upgrade test base pre upgrade setup string value array override public type serializer string value array create prior serializer return new string value array serializer override public string value array create test datum string value array array new string value array array add new string value array add new string value return array this class be only public to work with link org apache flink api common typeutil class relocator public static final class string value array serializer verifier implement type serializer upgrade test base upgrade verifier string value array override public type serializer string value array create upgrade serializer return new string value array serializer override public matcher string value array test datum matcher string value array array new string value array array add new string value array add new string value return be array override public matcher type serializer schema compatibility string value array schema compatibility matcher migration version version return type serializer matcher be compatible as be 
adamic adar i t case run with parameterized class public class adamic adar i t case extend copyable value driver base i t case public adamic adar i t case string id type test execution mode mode super id type mode private string parameter int scale string output string additional parameter string parameter new string algorithm adamic adar mirror result input r mat graph scale integer to string scale type id type simplify undirected output output return array util add all parameter additional parameter test public void test long description throw exception string expect regex substr new adamic adar get long description expect output from exception new string algorithm adamic adar expect program parametrization exception class test public void test print with r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect count parameter print test public void test parallelism throw exception test util verify parallelism parameter print flat map mirror result group reduce compute score group reduce generate group pair 
clustering coefficient i t case run with parameterized class public class clustering coefficient i t case extend copyable value driver base i t case public clustering coefficient i t case string id type test execution mode mode super id type mode private string parameter int scale string order string simplify string output return new string algorithm clustering coefficient order order input r mat graph scale integer to string scale type id type simplify simplify output output test public void test long description throw exception string expect regex substr new clustering coefficient get long description expect output from exception new string algorithm clustering coefficient expect program parametrization exception class test public void test hash with direct r mat graph throw exception string expect n new checksum 0x00000075 d99a55b6 l n n triplet count triangle count global clustering coefficient 0.31552175 0 - 9 n vertex count average clustering coefficient 0.41178524 0 - 9 n expect output parameter direct direct hash expect test public void test hash with undirected r mat graph throw exception string expect n n triplet count triangle count global clustering coefficient 0.31552175 0 - 9 n vertex count average clustering coefficient 0.50945459 0 - 9 n expect output parameter direct undirected hash n new checksum 0x00000076635 e00e2 l expect expected output parameter undirected undirected hash n new checksum 0x000000743 ef6d14b l expect test public void test parallelism throw exception string large operator new string combine count triangle flat map split triangle vertex join triangle list group reduce generate triplet datum sink count test util verify parallelism parameter direct direct print large operator test util verify parallelism parameter direct undirected print large operator test util verify parallelism parameter undirected undirected print large operator 
connected component i t case run with parameterized class public class connect component i t case extend non transformable driver base i t case public connected component i t case string id type test execution mode mode super id type mode private string parameter int scale string output return new string algorithm connect component input be mat graph scale integer to string scale type id type simplify undirected edge factor a 0.25 b 0.25 c 0.25 noise enable noise 1.0 output output test public void test long description throw exception string expect regex substr new connected component get long description expect output from exception new string algorithm connect component expect program parametrization exception class test public void test hash with r mat graph throw exception expect checksum parameter hash 0x0000000000033 e88 l test public void test print with r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum parameter print new checksum 0x00000024 edd0568d l 
edge list i t case run with parameterized class public class edge list i t case extend non transformable driver base i t case public edge list i t case string id type test execution mode mode super id type mode private string parameter string input string output string additional parameter string parameter new string algorithm edge list input input type id type output output return array util add all parameter additional parameter test public void test long description throw exception string expect regex substr new edge list get long description expect output from exception new string algorithm edge list expect program parametrization exception class circulant graph private string get circulant graph parameter string output return parameter circulant graph output vertex count range0 13:4 test public void test hash with circulant graph throw exception expect checksum get circulant graph parameter hash 0x000000000001 ae80 test public void test print with circulant graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get circulant graph parameter print new checksum 0x0000004 bdcc52cbc l test public void test parallelism with circulant graph throw exception test util verify parallelism get circulant graph parameter print complete graph private string get complete graph parameter string output return parameter complete graph output vertex count test public void test hash with complete graph throw exception expect checksum get complete graph parameter hash 0x0000000000113 ca0 l test public void test print with complete graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get complete graph parameter print new checksum 0x0000031109 a0c398 l test public void test parallelism with complete graph throw exception test util verify parallelism get complete graph parameter print cycle graph private string get cycle graph parameter string output return parameter cycle graph output vertex count test public void test hash with cycle graph throw exception expect checksum get cycle graph parameter hash 0x000000000000 d740 l test public void test print with cycle graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get cycle graph parameter print new checksum 0x000000272 a136fca l test public void test parallelism with cycle graph throw exception test util verify parallelism get cycle graph parameter print echo graph private string get echo graph parameter string output return parameter echo graph output vertex count vertex degree test public void test hash with echo graph throw exception expect checksum get echo graph parameter hash 0x0000000000057720 l test public void test print with echo graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get echo graph parameter print new checksum 0x000000 f7190b8fca l test public void test parallelism with echo graph throw exception test util verify parallelism get echo graph parameter print empty graph private string get empty graph parameter string output return parameter empty graph output vertex count test public void test hash with empty graph throw exception expect checksum get empty graph parameter hash 0x0000000000000000 l test public void test print with empty graph throw exception expect output checksum get empty graph parameter print new checksum 0x0000000000000000 l test public void test parallelism with empty graph throw exception test util verify parallelism get empty graph parameter print grid graph private string get grid graph parameter string output return parameter grid graph output dim0 true dim1 false dim2 true test public void test hash with grid graph throw exception expect checksum get grid graph parameter hash 0x000000000000 eba0 l test public void test print with grid graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get grid graph parameter print new checksum 0x00000033237 d24ee l test public void test parallelism with grid graph throw exception test util verify parallelism get grid graph parameter print hypercube graph private string get hypercube graph parameter string output return parameter hypercube graph output dimension test public void test hash with hypercube graph throw exception expect checksum get hypercube graph parameter hash 0x00000000001 bc800 l test public void test print with hypercube graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get hypercube graph parameter print new checksum 0x000001 f243ee33b2 l test public void test parallelism with hypercube graph throw exception test util verify parallelism get hypercube graph parameter print path graph private string get path graph parameter string output return parameter path graph output vertex count test public void test hash with path graph throw exception expect checksum get path graph parameter hash 0x000000000000 d220 l test public void test print with path graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get path graph parameter print new checksum 0x000000269 be2d4c2 l test public void test parallelism with path graph throw exception test util verify parallelism get path graph parameter print r mat graph private string get r mat graph parameter string output string simplify if simplify null return parameter be mat graph output scale else return parameter be mat graph output scale simplify simplify test public void test hash with r mat graph throw exception expect checksum get r mat graph parameter hash null 0x00000000001 ee529 test public void test print with r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get r mat graph parameter print null new checksum 0x000002 f737939f05 l test public void test parallelism with r mat graph throw exception test util verify parallelism get r mat graph parameter print null test public void test hash with direct r mat graph throw exception expect checksum get r mat graph parameter hash direct 0x00000000001579 bd l test public void test print with direct r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get r mat graph parameter print direct new checksum 0x0000020 e35b0f35d l test public void test parallelism with direct r mat graph throw exception test util verify parallelism get r mat graph parameter print direct test public void test hash with undirected r mat graph throw exception expect checksum get r mat graph parameter hash undirected 0x0000000000242920 l test public void test print with undirected r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get r mat graph parameter print undirected new checksum 0x0000036 fe5802162 l test public void test parallelism with undirected r mat graph throw exception test util verify parallelism get r mat graph parameter print undirected singleton edge graph private string get singleton edge graph parameter string output return parameter singleton edge graph output vertex pair count test public void test hash with singleton edge graph throw exception expect checksum get singleton edge graph parameter hash 0x000000000001 b3c0 l test public void test print with singleton edge graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get singleton edge graph parameter print new checksum 0x0000002 e59e10d9a l test public void test parallelism with singleton edge graph throw exception test util verify parallelism get singleton edge graph parameter print star graph private string get star graph parameter string output return parameter star graph output vertex count test public void test hash with star graph throw exception expect checksum get star graph parameter hash 0x0000000000006 ba0 l test public void test print with star graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum get star graph parameter print new checksum 0x00000011 ec3faee8 l test public void test parallelism with star graph throw exception test util verify parallelism get star graph parameter print 
graph metric i t case run with parameterized class public class graph metric i t case extend driver base i t case public graph metric i t case string id type test execution mode mode super id type mode private string parameter int scale string order string output return new string algorithm graph metric order order input r mat graph scale integer to string scale type id type simplify order output output test public void test long description throw exception string expect regex substr new graph metric get long description expect output from exception new string algorithm graph metric expect program parametrization exception class test public void test with direct r mat graph throw exception string expect n vertex metric n vertex count n edge count 1,168 n unidirectional edge count n bidirectional edge count n average degree 9.983 n density 0.08605953 n triplet count 29,286 n maximum degree n maximum out degree n maximum in degree n maximum triplet 4,095 n n edge metric n triangle triplet count 4,575 n rectangle triplet count 11,756 n maximum triangle triplet n maximum rectangle triplet n expect output parameter direct hash expect expected output parameter direct print expect test public void test with undirected r mat graph throw exception string expect n vertex metric n vertex count n edge count n average degree 15.846 n density 0.13660477 n triplet count 29,286 n maximum degree n maximum triplet 4,095 n n edge metric n triangle triplet count 4,575 n rectangle triplet count 11,756 n maximum triangle triplet n maximum rectangle triplet n expect output parameter undirected hash expect expected output parameter undirected print expect test public void test parallelism throw exception test util verify parallelism parameter direct print test util verify parallelism parameter undirected print 
h i t s i t case run with parameterized class public class h i t s i t case extend driver base i t case public h i t s i t case string id type test execution mode mode super id type mode private string parameter int scale string output return new string algorithm hit input r mat graph scale integer to string scale type id type simplify direct output output test public void test long description throw exception string expect regex substr new hit get long description expect output from exception new string algorithm hit expect program parametrization exception class test public void test print with r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect count parameter print test public void test parallelism throw exception test util verify parallelism parameter print 
jaccard index i t case run with parameterized class public class jaccard index i t case extend copyable value driver base i t case public jaccard index i t case string id type test execution mode mode super id type mode private string parameter int scale string output string additional parameter string parameter new string algorithm jaccard index mirror result input r mat graph scale integer to string scale type id type simplify undirected output output return array util add all parameter additional parameter test public void test long description throw exception string expect regex substr new jaccard index get long description expect output from exception new string algorithm jaccard index expect program parametrization exception class test public void test hash with r mat graph throw exception expect checksum parameter hash 0x00004 caba2e663d5 l test public void test print with r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum parameter print new checksum 0x00004 c5a726220c0 l test public void test parallelism throw exception test util verify parallelism parameter print flat map mirror result group reduce compute score group reduce generate group pair 
page rank i t case run with parameterized class public class page rank i t case extend driver base i t case public page rank i t case string id type test execution mode mode super id type mode private string parameter int scale string output return new string algorithm page rank input r mat graph scale integer to string scale type id type simplify direct output output test public void test long description throw exception string expect regex substr new page rank get long description expect output from exception new string algorithm page rank expect program parametrization exception class test public void test print with r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect count parameter print test public void test parallelism throw exception test util verify parallelism parameter print 
long value with proper hash code serializer upgrade test run with parameterized class public class long value with proper hash code serializer upgrade test extend type serializer upgrade test base long value with proper hash code long value with proper hash code public long value with proper hash code serializer upgrade test test specification long value with proper hash code long value with proper hash code test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification long value with proper hash code serializer migration version long value with proper hash code serializer setup class long value with proper hash code serializer verifier class return test specification specification for long value with proper hash code serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class long value with proper hash code serializer setup implement type serializer upgrade test base pre upgrade setup long value with proper hash code override public type serializer long value with proper hash code create prior serializer return new long value with proper hash code long value with proper hash code serializer override public long value with proper hash code create test datum return new long value with proper hash code this class be only public to work with link org apache flink api common typeutil class relocator public static final class long value with proper hash code serializer verifier implement type serializer upgrade test base upgrade verifier long value with proper hash code override public type serializer long value with proper hash code create upgrade serializer return new long value with proper hash code long value with proper hash code serializer override public matcher long value with proper hash code test datum matcher return be new long value with proper hash code override public matcher type serializer schema compatibility long value with proper hash code schema compatibility matcher migration version version return type serializer matcher be compatible as be 
triangle list i t case run with parameterized class public class triangle list i t case extend copyable value driver base i t case public triangle list i t case string id type test execution mode mode super id type mode private string parameter int scale string order string output string parameter new string algorithm triangle list order order permute result input r mat graph scale integer to string scale type id type simplify order output output if output equal hash return array util add all parameter sort triangle vertex triadic census else return parameter test public void test long description throw exception string expect regex substr new triangle list get long description expect output from exception new string algorithm triangle list expect program parametrization exception class test public void test hash with direct r mat graph throw exception string expect n new checksum 0x000077 d3e5e69fa3 l n n triadic census n 1,679 n 267,130 n 57,972 n d 8,496 n u 8,847 n c 17,501 n d 13,223 n u 12,865 n t 1,674 n c n 5,678 n d 1,066 n u n c 2,011 n 2,867 n 1,149 n expect output parameter direct hash expect test public void test hash with undirected r mat graph throw exception string expect n new checksum 0x000077 ea1798a4e0 l n n triadic census n 1,679 n 325,102 n 66,610 n 10,235 n expect output parameter undirected hash expect test public void test print with direct r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum parameter direct print new checksum 0x000077 d967722c8a l test public void test print with undirected r mat graph throw exception skip char since it be not print as a number assume assume false id type equal char id type equal native char expect output checksum parameter undirected print new checksum 0x0000780 ffcb6838e l test public void test parallelism throw exception string large operator new string flat map permute triangle vertex join triangle list group reduce generate triplet test util verify parallelism parameter direct print large operator test util verify parallelism parameter undirected print large operator 
community detection i t case run with parameterized class public class community detection i t case extend multiple program test base public community detection i t case test execution mode mode super mode private string expect test public void test single iteration throw exception test one iteration of the simple community detection example execution environment env execution environment get execution environment graph long long double input graph graph from datum set community detection datum get simple edge datum set env new init label env list vertex long long result input graph run new community detection community detection datum delta get vertex collect expect community detection datum community single iteration compare result as tuple result expect test public void test tie breaker throw exception test one iteration of the simple community detection example where a tie must be broken execution environment env execution environment get execution environment graph long long double input graph graph from datum set community detection datum get tie edge datum set env new init label env list vertex long long result input graph run new community detection community detection datum delta get vertex collect expect community detection datum community with tie compare result as tuple result expect suppress warning serial private static final class init label implement map function long long public long map long id return id 
label propagation i t case run with parameterized class public class label propagation i t case extend multiple program test base public label propagation i t case test execution mode mode super mode private string expect result test public void test single iteration throw exception test one iteration of label propagation example with a simple graph execution environment env execution environment get execution environment graph long long null value input graph graph from datum set label propagation datum get default vertex set env label propagation datum get default edge datum set env env list vertex long long result input graph run new label propagation collect expected result label propagation datum label after iteration compare result as tuple result expect result test public void test tie breaker throw exception test the label propagation example where a tie must be broken execution environment env execution environment get execution environment graph long long null value input graph graph from datum set label propagation datum get tie vertex set env label propagation datum get tie edge datum set env env list vertex long long result input graph run new label propagation collect expected result label propagation datum label with tie compare result as tuple result expect result 
summarization i t case run with parameterized class public class summarization i t case extend multiple program test base private static final pattern token separator pattern compile private static final pattern id separator pattern compile public summarization i t case test execution mode mode super mode test public void test with vertex and edge string value throw exception execution environment env execution environment get execution environment graph long string string input graph from datum set summarization datum get vertex env summarization datum get edge env env list vertex long summarization vertex value string summarize vertex new array list list edge long edge value string summarize edge new array list graph long summarization vertex value string edge value string output input run new summarization output get vertices output new local collection output format summarize vertex output get edge output new local collection output format summarize edge env execute validate vertex summarization datum expect vertex summarize vertex validate edge summarization datum expect edge with value summarize edge test public void test with vertex and absent edge string value throw exception execution environment env execution environment get execution environment graph long string null value input graph from datum set summarization datum get vertex env summarization datum get edge env env run new translate edge value new to null value list vertex long summarization vertex value string summarize vertex new array list list edge long edge value null value summarize edge new array list graph long summarization vertex value string edge value null value output input run new summarization output get vertices output new local collection output format summarize vertex output get edge output new local collection output format summarize edge env execute validate vertex summarization datum expect vertex summarize vertex validate edge summarization datum expect edge absent value summarize edge test public void test with vertex and edge long value throw exception execution environment env execution environment get execution environment graph long long long input graph from datum set summarization datum get vertex env summarization datum get edge env env run new translate vertex value new string to long run new translate edge value new string to long list vertex long summarization vertex value long summarize vertex new array list list edge long edge value long summarize edge new array list graph long summarization vertex value long edge value long output input run new summarization output get vertices output new local collection output format summarize vertex output get edge output new local collection output format summarize edge env execute validate vertex summarization datum expect vertex summarize vertex validate edge summarization datum expect edge with value summarize edge private vv extend comparable vv void validate vertex string expect vertex list vertex long summarization vertex value vv actual vertex array sort expect vertex collection sort actual vertex new comparator vertex long summarization vertex value vv override public int compare vertex long summarization vertex value vv o1 vertex long summarization vertex value vv o2 int result o1 get id compare to o2 get id if result result o1 get value get vertex group value compare to o2 get value get vertex group value return result for int i i expect vertex length i validate vertex expect vertex i actual vertex get i private ev extend comparable ev void validate edge string expect edge list edge long edge value ev actual edge array sort expect edge collection sort actual edge new comparator edge long edge value ev override public int compare edge long edge value ev o1 edge long edge value ev o2 int result o1 get source compare to o2 get source if result result o1 get target compare to o2 get target if result result o1 get value get edge group value compare to o2 get value get edge group value return result for int i i expect edge length i validate edge expect edge i actual edge get i private vv void validate vertex string expect vertex long summarization vertex value vv actual string token token separator split expect assert true get list from id range token contain actual get id assert equal get group value token actual get value get vertex group value to string assert equal get group count token actual get value get vertex group count private ev void validate edge string expect edge long edge value ev actual string token token separator split expect assert true get list from id range token contain actual get source assert true get list from id range token contain actual get target assert equal get group value token actual get value get edge group value to string assert equal get group count token actual get value get edge group count private list long get list from id range string id range string split id separator split id range list long result new array list split length for string id split result add long parse long id return result private string get group value string token return id separator split token private long get group count string token return long value of id separator split token private static class string to long implement translate function string long override public long translate string value long reuse throw exception return long parse long value 
triangle enumerator i t case run with parameterized class public class triangle enumerator i t case extend multiple program test base public triangle enumerator i t case test execution mode mode super mode test public void test triangle enumerator throw exception execution environment env execution environment get execution environment graph long null value null value graph graph from datum set triangle count datum get default edge datum set env env list tuple3 long long long actual output graph run new triangle enumerator collect list tuple3 long long long expect result triangle count datum get list of triangle assert assert equal expected result size actual output size for tuple3 long long long result triangle actual output assert assert true expected result index of result triangle 
runner i t case run with parameterized class public class runner i t case extend driver base i t case rule public expect exception throw expect exception none public runner i t case string id type test execution mode mode super id type mode test public void test without algorithm throw exception string expect select a algorithm to view usage throw expect program parametrization exception class throw expect message expect expected output new string expect test public void test with unknown algorithm throw exception string expect unknown algorithm name not a algorithm throw expect program parametrization exception class throw expect message expect expected output new string algorithm not a algorithm expect test public void test algorithm usage throw exception string expect pass through of the graph s edge list throw expect program parametrization exception class throw expect message expect expected output new string algorithm edge list expect test public void test without input throw exception string expect no input give throw expect program parametrization exception class throw expect message expect expected output new string algorithm edge list output not a output expect test public void test with unknown input throw exception string expect unknown input type not a input throw expect program parametrization exception class throw expect message expect expected output new string algorithm edge list input not a input expect test public void test without output throw exception string expect no output give throw expect program parametrization exception class throw expect message expect expected output new string algorithm edge list input r mat graph expect test public void test with unknown output throw exception string expect unknown output type not a output throw expect program parametrization exception class throw expect message expect expected output new string algorithm edge list input r mat graph output not a output expect 
euclidean graph weigh i t case run with parameterized class public class euclidean graph weigh i t case extend multiple program test base private string vertex path private string edge path private string result path private string expect rule public temporary folder temp folder new temporary folder public euclidean graph weigh i t case test execution mode mode super mode before public void before throw exception result path temp folder new file to u be i to string file vertex file temp folder new file file util write file utf8 vertex file euclidean graph datum vertex file edge file temp folder new file file util write file utf8 edge file euclidean graph datum edge vertex path vertex file to u be i to string edge path edge file to u be i to string test public void test graph weighting weigh throw exception euclidean graph weigh main new string vertex path edge path result path expect euclidean graph datum result weighted edge after public void after throw exception test base util compare result by line in memory expect result path 
incremental s s s p i t case run with parameterized class public class incremental s s s p i t case extend multiple program test base private string vertex path private string edge path private string edge in s s s p path private string result path private string expect rule public temporary folder temp folder new temporary folder public incremental s s s p i t case test execution mode mode super mode before public void before throw exception result path temp folder new file to u be i to string file vertex file temp folder new file file util write file utf8 vertex file incremental s s s p datum vertex file edge file temp folder new file file util write file utf8 edge file incremental s s s p datum edge file edge in s s s p file temp folder new file file util write file utf8 edge in s s s p file incremental s s s p datum edge in sssp vertex path vertex file to u be i to string edge path edge file to u be i to string edge in s s s p path edge in s s s p file to u be i to string test public void test incremental s s s p throw exception incremental s s s p main new string vertex path edge path edge in s s s p path incremental s s s p datum src edge to be remove incremental s s s p datum trg edge to be remove incremental s s s p datum val edge to be remove result path incremental s s s p datum num vertex expect incremental s s s p datum result vertex test public void test incremental s s s p non s p edge throw exception execution environment env execution environment get execution environment datum set vertex long double vertex incremental s s s p datum get default vertex datum set env datum set edge long double edge incremental s s s p datum get default edge datum set env datum set edge long double edge in s s s p incremental s s s p datum get default edge in s s s p env the edge to be remove be a non sp edge edge long double edge to be remove new edge 3 l 5 l 5.0 graph long double double graph graph from datum set vertex edge env assumption all minimum weight path be keep graph long double double sssp graph graph from datum set vertex edge in s s s p env remove the edge graph remove edge edge to be remove configure the iteration scatter gather configuration parameter new scatter gather configuration if incremental s s s p be in s s s p edge to be remove edge in s s s p parameter set direction edge direction in parameter set opt degree true run the scatter gather iteration to propagate info graph long double double result sssp graph run scatter gather iteration new incremental s s s p invalidate messenger edge to be remove new incremental s s s p vertex distance updater incremental s s s p datum num vertex parameter datum set vertex long double result vertex result get vertex result vertex write as csv result path n env execute else vertex write as csv result path n env execute expect incremental s s s p datum vertex after public void after throw exception test base util compare result by line in memory expect result path 
music profile i t case run with parameterized class public class music profile i t case extend multiple program test base private string triplet path private string mismatch path private string top song result path private string community result path private string expect top song rule public temporary folder temp folder new temporary folder public music profile i t case test execution mode mode super mode before public void before throw exception top song result path temp folder new file to u be i to string community result path temp folder new file to u be i to string file triplet file temp folder new file file util write file utf8 triplet file music profile datum user song triplet triplet path triplet file to u be i to string file mismatch file temp folder new file file util write file utf8 mismatch file music profile datum mismatch mismatch path mismatch file to u be i to string test public void test music profile example throw exception music profile main new string triplet path mismatch path top song result path community result path music profile datum max iteration expect top song music profile datum top song result after public void after throw exception test base util compare result by line in memory expect top song top song result path array list string list new array list test base util read all result line list community result path new string false string result list to array new string list size array sort result check that user and user be in the same community assert assert equal user and be not in the same community result substr result substr check that user user and user be in the same community assert assert equal user and be not in the same community result substr result substring assert assert equal user and be not in the same community result substr result substring 
page rank i t case run with parameterized class public class page rank i t case extend multiple program test base public page rank i t case test execution mode mode super mode test public void test page rank with three iteration throw exception final execution environment env execution environment get execution environment graph long double double input graph graph from datum set page rank datum get default edge datum set env new init mapper env list vertex long double result input graph run new page rank 0.85 collect compare with delta result 0.01 test public void test g s a page rank with three iteration throw exception final execution environment env execution environment get execution environment graph long double double input graph graph from datum set page rank datum get default edge datum set env new init mapper env list vertex long double result input graph run new g s a page rank 0.85 collect compare with delta result 0.01 test public void test page rank with three iteration and num of vertex throw exception final execution environment env execution environment get execution environment graph long double double input graph graph from datum set page rank datum get default edge datum set env new init mapper env list vertex long double result input graph run new page rank 0.85 collect compare with delta result 0.01 test public void test g s a page rank with three iteration and num of vertex throw exception final execution environment env execution environment get execution environment graph long double double input graph graph from datum set page rank datum get default edge datum set env new init mapper env list vertex long double result input graph run new g s a page rank 0.85 collect compare with delta result 0.01 private void compare with delta list vertex long double result double delta string result string for vertex long double v result result string v f0 to string v f1 to string n string expect result page rank datum rank after iteration string expect expected result be empty new string expect result split n string result array result string be empty new string result string split n array sort expect array sort result array for int i i expect length i string expect field expect i split string result field result array i split double expect pay load double parse double expect field double result pay load double parse double result field assert assert true value differ by more than the permissible delta math abs expect pay load result pay load delta suppress warning serial private static final class init mapper implement map function long double public double map long value return 1.0 
single source shortest path i t case run with parameterized class public class single source shortest path i t case extend multiple program test base private string edge path private string result path private string expect rule public temporary folder temp folder new temporary folder public single source shortest path i t case test execution mode mode super mode before public void before throw exception result path temp folder new file to u be i to string file edge file temp folder new file file util write file utf8 edge file single source shortest path datum edge edge path edge file to u be i to string test public void test s s s p example throw exception single source shortest path main new string single source shortest path datum src vertex id edge path result path expect single source shortest path datum result single source shortest path test public void test g s a s s s p example throw exception g s a single source shortest path main new string single source shortest path datum src vertex id edge path result path expect single source shortest path datum result single source shortest path test public void test pregel s s s p example throw exception pregel s s s p main new string single source shortest path datum src vertex id edge path result path expect single source shortest path datum result single source shortest path after public void after throw exception test base util compare result by line in memory expect result path 
gather sum apply i t case run with parameterized class public class gather sum apply i t case extend multiple program test base public gather sum apply i t case test execution mode mode super mode connect component test private string expect result c c 1,1 n 2,1 n 3,1 n 4,1 n test public void test connect component with object reuse disabled throw exception final execution environment env execution environment get execution environment env get config disable object reuse graph long long null value input graph graph from datum set connected component default datum get default edge datum set env new identity mapper env list vertex long long result input graph run new g s a connected component collect compare result as tuple result expect result c c test public void test connect component with object reuse enable throw exception final execution environment env execution environment get execution environment env get config enable object reuse datum set edge long value null value edge translate translate edge id connect component default datum get default edge datum set env new long to long value graph long value long value null value input graph graph from datum set edge new identity mapper env list vertex long value long value result input graph run new g s a connected component collect compare result as tuple result expect result c c single source shortest path test test public void test single source shortest path throw exception final execution environment env execution environment get execution environment graph long null value double input graph graph from datum set single source shortest path datum get default edge datum set env new init mapper s s s p env list vertex long double result input graph run new g s a single source shortest path 1 l collect string expect result 1,0 n 2,12 n 3,13 n 4,47 n 5,48 n compare result as tuple result expected result suppress warning serial private static final class init mapper s s s p implement map function long null value public null value map long value return null value get instance 
savepoint writer i t case run with value parameterize class public class savepoint writer i t case extend abstract test base private static final string account uid account private static final string currency uid currency private static final string modify uid number private static final map state descriptor string double descriptor new map state descriptor currency rate type string type double private final state backend backend private static final collection account account array as list new account 100.0 new account 100.0 new account 100.0 private static final collection currency rate currency rate array as list new currency rate usd 1.0 new currency rate eur 1.3 public savepoint writer i t case state backend backend throw exception this backend backend reset the cluster so we can change the state backend mini cluster resource after mini cluster resource before parameterized parameter name savepoint writer public static collection state backend datum return array as list new memory state backend new rock d b state backend state backend new memory state backend test public void test state bootstrap and modification throw exception final string savepoint path get temp dir path new abstract i d to hex string bootstrap state savepoint path validate bootstrap savepoint path final string modify path get temp dir path new abstract i d to hex string modify savepoint savepoint path modify path validate modification modify path private void bootstrap state string savepoint path throw exception execution environment b env execution environment get execution environment datum set account account datum set b env from collection account bootstrap transformation account transformation operator transformation bootstrap with account datum set key by acc acc id transform new account bootstrapper datum set currency rate currency datum set b env from collection currency rate bootstrap transformation currency rate broadcast transformation operator transformation bootstrap with currency datum set transform new currency bootstrap function savepoint create backend with operator account uid transformation with operator currency uid broadcast transformation write savepoint path b env execute bootstrap private void validate bootstrap string savepoint path throw program invocation exception stream execution environment s env stream execution environment get execution environment s env set state backend backend collect sink account list clear s env from collection account key by acc acc id flat map new update and get account uid account uid add sink new collect sink s env from collection currency rate connect s env from collection currency rate broadcast descriptor process new currency validation function uid currency uid add sink new discard sink job graph job graph s env get stream graph get job graph job graph set savepoint restore setting savepoint restore setting for path savepoint path false cluster client client mini cluster resource get cluster client client util submit job and wait for result client job graph savepoint writer i t case class get class loader assert assert equal unexpected output collect sink account list size private void modify savepoint string savepoint path string modify path throw exception execution environment b env execution environment get execution environment datum set integer datum b env from element bootstrap transformation integer transformation operator transformation bootstrap with datum transform new modify process function savepoint load b env savepoint path backend remove operator currency uid with operator modify uid transformation write modify path b env execute modify private void validate modification string savepoint path throw program invocation exception stream execution environment s env stream execution environment get execution environment s env set state backend backend collect sink account list clear datum stream account stream s env from collection account key by acc acc id flat map new update and get account uid account uid stream add sink new collect sink stream map acc acc id map new stateful operator uid modify uid add sink new discard sink job graph job graph s env get stream graph get job graph job graph set savepoint restore setting savepoint restore setting for path savepoint path false cluster client client mini cluster resource get cluster client client util submit job and wait for result client job graph savepoint writer i t case class get class loader assert assert equal unexpected output collect sink account list size a simple pojo suppress warning weaker access public static class account account int id double amount this id id this amount amount this timestamp l public int id public double amount public long timestamp override public boolean equal object obj return obj instanceof account account obj id id account obj amount amount override public int hash code return object hash id amount a simple pojo suppress warning weaker access public static class currency rate public string currency public double rate currency rate string currency double rate this currency currency this rate rate override public boolean equal object obj return obj instanceof currency rate currency rate obj currency equal currency currency rate obj rate equal rate override public int hash code return object hash currency rate a savepoint writer function public static class account bootstrapper extend key state bootstrap function integer account value state double state override public void open configuration parameter value state descriptor double descriptor new value state descriptor total type double state get runtime context get state descriptor override public void process element account value context ctx throw exception state update value amount a streaming function bootstrapp off the state public static class update and get account extend rich flat map function account account value state double state override public void open configuration parameter throw exception super open parameter value state descriptor double descriptor new value state descriptor total type double state get runtime context get state descriptor override public void flat map account value collector account out throw exception double current state value if current null value amount current state update value amount out collect value a bootstrap function public static class modify process function extend state bootstrap function integer list integer number list state integer state override public void open configuration parameter number new array list override public void process element integer value context ctx number add value override public void snapshot state function snapshot context context throw exception state clear state add all number override public void initialize state function initialization context context throw exception state context get operator state store get union list state new list state descriptor number type int a streaming function bootstrapp off the state public static class stateful operator extend rich map function integer integer implement checkpoint function list integer number list state integer state override public void open configuration parameter number new array list override public void snapshot state function snapshot context context throw exception state clear state add all number override public void initialize state function initialization context context throw exception state context get operator state store get union list state new list state descriptor number type int if context be restore set integer expect new hash set expect add expect add expect add for integer number state get assert assert true duplicate state expect contain number expect remove number assert assert true fail to bootstrap all state element array to string expect to array expect be empty override public integer map integer value return null a broadcast bootstrap function public static class currency bootstrap function extend broadcast state bootstrap function currency rate override public void process element currency rate value context ctx throw exception ctx get broadcast state descriptor put value currency value rate check the restore broadcast state public static class currency validation function extend broadcast process function currency rate currency rate void override public void process element currency rate value read only context ctx collector void out throw exception assert assert equal incorrect currency rate value rate ctx get broadcast state descriptor get value currency 0.0001 override public void process broadcast element currency rate value context ctx collector void out ignore a simple collection sink public static class collect sink implement sink function account static set integer account list new concurrent skip list set override public void invoke account value context context account list add value id 
union close branching test run with parameterized class suppress warning serial unchecked public class union close branching test extend compiler test base parameterize parameter public static collection object param collection object param array as list new object execution mode pipelined batch pipelined execution mode pipelined force pipelined pipelined execution mode batch batch pipelined execution mode batch force batch batch make sure that change to execution mode be reflect in this test assert equal execution mode value length param size return param private final execution mode execution mode expect link data exchange mode from source to union private final datum exchange mode source to union expect link data exchange mode from union to join private final datum exchange mode union to join expected link ship strategy type from source to union private final ship strategy type source to union strategy ship strategy type partition hash expect link ship strategy type from union to join private final ship strategy type union to join strategy ship strategy type forward public union close branching test execution mode execution mode datum exchange mode source to union datum exchange mode union to join this execution mode execution mode this source to union source to union this union to join union to join test public void test union close branching test throw exception build test program execution environment env execution environment get execution environment env get config set execution mode execution mode env set parallelism datum set tuple1 integer src1 env from element new tuple1 new tuple1 datum set tuple1 integer src2 env from element new tuple1 new tuple1 datum set tuple1 integer union src1 union src2 datum set tuple2 integer integer join union join union where equal to project first project second join output new discard output format tuple2 integer integer verify optimize plan optimize plan optimize plan compile no stats env create program plan sink plan node sink node optimize plan get datum sink iterator next dual input plan node join node dual input plan node sink node get predecessor verify that the compiler correctly set the expect datum exchange mode for channel channel join node get input assert equal unexpected datum exchange mode between union and join node union to join channel get datum exchange mode assert equal unexpected ship strategy between union and join node union to join strategy channel get ship strategy for source plan node src optimize plan get datum source for channel channel src get outgoing channel assert equal unexpected datum exchange mode between source and union node source to union channel get datum exchange mode assert equal unexpected ship strategy between source and union node source to union strategy channel get ship strategy verify generate job graph job graph generator jgg new job graph generator job graph job graph jgg compile job graph optimize plan list job vertex vertex job graph get vertex sort topologically from source sanity check for the test setup assert equal unexpected number of vertex create vertex size verify all source job vertex source new job vertex vertex get vertex get for job vertex src source sanity check assert true unexpected vertex type test setup be break src be input vertex the union be not translate to a extra union task but the join use a union input gate to read multiple input the source create a single result per consumer assert equal unexpected number of create result src get number of produce intermediate datum set for intermediate datum set datum set src get produce datum set result partition type d type datum set get result type ensure batch exchange unless pipelined force be enable if execution mode equal execution mode pipelined force assert true expect batch exchange but result type be ds type d type be block else assert false expect non batch exchange but result type be ds type d type be block 
timestamp serializer test run with parameterized class public class timestamp serializer test extend serializer test base timestamp parameterized parameter public static collection object datum return array as list new object private int precision public timestamp serializer test int precision super this precision precision override protect type serializer timestamp create serializer return new timestamp serializer precision override protect int get length return precision override protect class timestamp get type class return timestamp class override protect timestamp get test datum return new timestamp timestamp value of 2018 - 03 11 03 00:00 
kv state request serializer test run with parameterized class public class kv state request serializer test parameterized parameter public static collection boolean parameter return array as list false true parameterized parameter public boolean async test key and namespace serialization util test public void test key and namespace serialization throw exception type serializer long key serializer long serializer instance type serializer string namespace serializer string serializer instance long expect key integer max value l string expect namespace knilf byte serialize key and namespace kv state serializer serialize key and namespace expect key key serializer expect namespace namespace serializer tuple2 long string actual kv state serializer deserialize key and namespace serialize key and namespace key serializer namespace serializer assert equal expect key actual f0 long value assert equal expect namespace actual f1 test key and namespace deserialization util with too few byte test expect i o exception class public void test key and namespace deserialization empty throw exception kv state serializer deserialize key and namespace new byte long serializer instance string serializer instance test key and namespace deserialization util with too few byte test expect i o exception class public void test key and namespace deserialization too short throw exception kv state serializer deserialize key and namespace new byte long serializer instance string serializer instance test key and namespace deserialization util with too many byte test expect i o exception class public void test key and namespace deserialization too many1 throw exception long null string byte kv state serializer deserialize key and namespace new byte long serializer instance string serializer instance test key and namespace deserialization util with too many byte test expect i o exception class public void test key and namespace deserialization too many2 throw exception long null string byte kv state serializer deserialize key and namespace new byte long serializer instance string serializer instance test value serialization util test public void test value serialization throw exception type serializer long value serializer long serializer instance long expect value long max value l byte serialize value kv state serializer serialize value expect value value serializer long actual value kv state serializer deserialize value serialize value value serializer assert equal expect value actual value test value deserialization with too few byte test expect i o exception class public void test deserialize value empty throw exception kv state serializer deserialize value new byte long serializer instance test value deserialization with too few byte test expect i o exception class public void test deserialize value too short throw exception byte incomplete long kv state serializer deserialize value new byte long serializer instance test value deserialization with too many byte test expect i o exception class public void test deserialize value too many1 throw exception long byte kv state serializer deserialize value new byte long serializer instance test value deserialization with too many byte test expect i o exception class public void test deserialize value too many2 throw exception long byte kv state serializer deserialize value new byte long serializer instance test list serialization util test public void test list serialization throw exception final long key 0 l final heap key state backend long long heap key state backend get long heap key state backend key final internal list state long void namespace long list state long heap key state backend create internal state void namespace serializer instance new list state descriptor test long serializer instance test list serialization key list state verify that the serialization of a list use the give list state match the deserialization with link kv state serializer deserialize list param key key of the list state param list state list state use the link void namespace must also be a link internal kv state instance throw exception public static void test list serialization final long key final internal list state long void namespace long list state throw exception type serializer long value serializer long serializer instance list state set current namespace void namespace instance list final int num element final list long expect value new array list for int i i num element i final long value thread local random current next long expect value add value list state add value final byte serialize key kv state serializer serialize key and namespace key long serializer instance void namespace instance void namespace serializer instance final byte serialize value list state get serialize value serialize key list state get key serializer list state get namespace serializer list state get value serializer list long actual value kv state serializer deserialize list serialize value value serializer assert equal expect value actual value single value long expect value thread local random current next long byte serialize value kv state serializer serialize value expect value value serializer list long actual value kv state serializer deserialize list serialize value value serializer assert equal actual value size assert equal expect value actual value get long value test list deserialization with too few byte test public void test deserialize list empty throw exception list long actual value kv state serializer deserialize list new byte long serializer instance assert equal actual value size test list deserialization with too few byte test expect i o exception class public void test deserialize list too short1 throw exception byte incomplete long kv state serializer deserialize list new byte long serializer instance test list deserialization with too few byte test expect i o exception class public void test deserialize list too short2 throw exception long byte separator byte incomplete long kv state serializer deserialize list new byte long serializer instance test map serialization util test public void test map serialization throw exception final long key 0 l final heap key state backend long long heap key state backend get long heap key state backend key final internal map state long void namespace long string map state internal map state long void namespace long string long heap key state backend get partition state void namespace instance void namespace serializer instance new map state descriptor test long serializer instance string serializer instance test map serialization key map state private heap key state backend long get long heap key state backend final long key throw backend building exception final key group range key group range new key group range execution config execution config new execution config object for heap state list serialisation final heap key state backend long long heap key state backend new heap key state backend builder mock task kv state registry class long serializer instance class loader get system class loader key group range get number of key group key group range execution config ttl time provider default collection empty list abstract state backend get compression decorator execution config test local recovery config disabled new heap priority queue set factory key group range key group range get number of key group async new closeable registry build long heap key state backend set current key key return long heap key state backend verify that the serialization of a map use the give map state match the deserialization with link kv state serializer deserialize list param key key of the map state param map state map state use the link void namespace must also be a link internal kv state instance throw exception public static void test map serialization final long key final internal map state long void namespace long string map state throw exception type serializer long user key serializer long serializer instance type serializer string user value serializer string serializer instance map state set current namespace void namespace instance map final int num element final map long string expect value new hash map for int i i num element i final long value thread local random current next long expect value put value long to string value map state put value long to string value expect value put 0 l null map state put 0 l null final byte serialize key kv state serializer serialize key and namespace key long serializer instance void namespace instance void namespace serializer instance final byte serialize value map state get serialize value serialize key map state get key serializer map state get namespace serializer map state get value serializer map long string actual value kv state serializer deserialize map serialize value user key serializer user value serializer assert equal expect value size actual value size for map entry long string actual entry actual value entry set assert equal expect value get actual entry get key actual entry get value single value byte array output stream bao new byte array output stream long expect key thread local random current next long string expect value long to string expect key byte be null bao write kv state serializer serialize value expect key user key serializer bao write be null bao write kv state serializer serialize value expect value user value serializer byte serialize value bao to byte array map long string actual value kv state serializer deserialize map serialize value user key serializer user value serializer assert equal actual value size assert equal expect value actual value get expect key test map deserialization with too few byte test public void test deserialize map empty throw exception map long string actual value kv state serializer deserialize map new byte long serializer instance string serializer instance assert equal actual value size test map deserialization with too few byte test expect i o exception class public void test deserialize map too short1 throw exception byte incomplete key kv state serializer deserialize map new byte long serializer instance string serializer instance test map deserialization with too few byte test expect i o exception class public void test deserialize map too short2 throw exception long key byte incomplete value kv state serializer deserialize map new byte long serializer instance long serializer instance test map deserialization with too few byte test expect i o exception class public void test deserialize map too short3 throw exception long key1 boolean false long value1 byte incomplete key2 kv state serializer deserialize map new byte long serializer instance long serializer instance private byte random byte array int capacity byte byte new byte capacity thread local random current next byte byte return byte 
message serializer test run with parameterized class public class message serializer test private final byte buf allocator alloc unpooled byte buf allocator default parameterize parameter public static collection boolean parameter return array as list false true parameterized parameter public boolean async test request serialization test public void test request serialization throw exception long request id integer max value l kv state i d kv state id new kv state i d byte serialize key and namespace random byte array final kv state internal request request new kv state internal request kv state id serialize key and namespace final message serializer kv state internal request kv state response serializer new message serializer new kv state internal request kv state internal request deserializer new kv state response kv state response deserializer byte buf buf message serializer serialize request alloc request id request int frame length buf read int assert equal message type request message serializer deserialize header buf assert equal request id message serializer get request id buf kv state internal request request deser serializer deserialize request buf assert equal buf reader index frame length assert equal kv state id request deser get kv state id assert array equal serialize key and namespace request deser get serialize key and namespace test request serialization with zero length serialize key and namespace test public void test request serialization with zero length key and namespace throw exception long request id integer max value l kv state i d kv state id new kv state i d byte serialize key and namespace new byte final kv state internal request request new kv state internal request kv state id serialize key and namespace final message serializer kv state internal request kv state response serializer new message serializer new kv state internal request kv state internal request deserializer new kv state response kv state response deserializer byte buf buf message serializer serialize request alloc request id request int frame length buf read int assert equal message type request message serializer deserialize header buf assert equal request id message serializer get request id buf kv state internal request request deser serializer deserialize request buf assert equal buf reader index frame length assert equal kv state id request deser get kv state id assert array equal serialize key and namespace request deser get serialize key and namespace test that we don t try to be smart about code null code key and namespace they should be treat explicitly test expect null pointer exception class public void test null pointer exception on null serialize key and namepsace throw exception new kv state internal request new kv state i d null test response serialization test public void test response serialization throw exception long request id integer max value l byte serialize result random byte array final kv state response response new kv state response serialize result final message serializer kv state internal request kv state response serializer new message serializer new kv state internal request kv state internal request deserializer new kv state response kv state response deserializer byte buf buf message serializer serialize response alloc request id response int frame length buf read int assert equal message type request result message serializer deserialize header buf assert equal request id message serializer get request id buf kv state response response deser serializer deserialize response buf assert equal buf reader index frame length assert array equal serialized result response deser get content test response serialization with zero length serialize result test public void test response serialization with zero length serialize result throw exception byte serialize result new byte final kv state response response new kv state response serialize result final message serializer kv state internal request kv state response serializer new message serializer new kv state internal request kv state internal request deserializer new kv state response kv state response deserializer byte buf buf message serializer serialize response alloc l response int frame length buf read int assert equal message type request result message serializer deserialize header buf assert equal l message serializer get request id buf kv state response response deser serializer deserialize response buf assert equal buf reader index frame length assert array equal serialized result response deser get content test that we don t try to be smart about code null code result they should be treat explicitly test expect null pointer exception class public void test null pointer exception on null serialized result throw exception new kv state response byte null test request failure serialization test public void test kv state request failure serialization throw exception long request id integer max value l illegal state exception cause new illegal state exception expect test byte buf buf message serializer serialize request failure alloc request id cause int frame length buf read int assert equal message type request failure message serializer deserialize header buf request failure request failure message serializer deserialize request failure buf assert equal buf reader index frame length assert equal request id request failure get request id assert equal cause get class request failure get cause get class assert equal cause get message request failure get cause get message test server failure serialization test public void test server failure serialization throw exception illegal state exception cause new illegal state exception expect test byte buf buf message serializer serialize server failure alloc cause int frame length buf read int assert equal message type server failure message serializer deserialize header buf throwable request message serializer deserialize server failure buf assert equal buf reader index frame length assert equal cause get class request get class assert equal cause get message request get message private byte random byte array int capacity byte byte new byte capacity thread local random current next byte byte return byte 
channel state write request dispatcher test run with parameterized class public class channel state write request dispatcher test private final list channel state write request request private final optional class expect exception public static final long checkpoint id 42 l parameter public static object datum return new object valid call new object empty as list start complete in complete out new object empty as list start write in complete in new object empty as list start write out complete out new object empty as list start complete in write out new object empty as list start complete out write in invalid without start new object of illegal argument exception class singleton list write in new object of illegal argument exception class singleton list write out new object of illegal argument exception class singleton list complete in new object of illegal argument exception class singleton list complete out invalid double complete new object of illegal argument exception class as list start complete in complete in new object of illegal argument exception class as list start complete out complete out invalid write after complete new object of illegal state exception class as list start complete in write in new object of illegal state exception class as list start complete out write out invalid double start new object of illegal state exception class as list start start private static checkpoint in progress request complete out return complete output checkpoint id private static checkpoint in progress request complete in return complete input checkpoint id private static channel state write request write in return write checkpoint id new input channel info closeable iterator of element new network buffer memory segment factory allocate unpool segment free buffer recycler instance buffer recycle buffer private static channel state write request write out return write checkpoint id new result subpartition info new network buffer memory segment factory allocate unpool segment free buffer recycler instance private static checkpoint start request start return new checkpoint start request checkpoint id new channel state write result new checkpoint storage location reference new byte public channel state write request dispatcher test optional class expect exception list channel state write request request this request request this expect exception expect exception test public void do run channel state write request dispatcher processor new channel state write request dispatcher impl get stream factory factory new channel state serializer impl try for channel state write request request request processor dispatch request catch throwable t if expect exception filter e e be instance t be present return throw new runtime exception unexpected exception t expect exception if present e fail expect exception e 
channel state no rescaling partitioner test run with parameterized class public class channel state no rescaling partitioner test parameter name old parallelism new parallelism offset size public static collection object parameter list object param new array list int par level int offset size final list function operator subtask state extractor array as list operator subtask state get input channel state operator subtask state get result subpartition state generate all possible combination of the above parameter for int old parallelism par level for int new parallelism par level for int offset size offset size for function operator subtask state state extractor extractor param add new object old parallelism new parallelism offset size state extractor return param private static final operator i d operator id new operator i d private final int old parallelism private final int new parallelism private final int offset size private final function operator subtask state extend state object collection extract state public channel state no rescaling partitioner test int old parallelism int new parallelism int offset size function operator subtask state extend state object collection extract state this old parallelism old parallelism this new parallelism new parallelism this offset size offset size this extract state extract state test public t extend abstract channel state handle void test no rescaling operator state state new operator state operator id old parallelism old parallelism state put state new operator subtask state empty empty empty empty singleton new input channel state handle new input channel info new empty stream state handle get offset singleton new result subpartition state handle new result subpartition info new empty stream state handle get offset try noinspection unchecked state assignment operation re distribute partitionable state singleton list state new parallelism singleton list operator i d pair generate i d only operator id function operator subtask state state object collection t this extract state channel state non rescale repartitioner test catch illegal argument exception e if should fail throw e else return if should fail fail expect to fail for old parallelism old parallelism new parallelism new parallelism offset size offset size extract state extract state private boolean should fail return old parallelism new parallelism offset size private list long get offset list long offset new array list offset size for int i i offset size i offset add 0 l return offset 
conjunct future test run with parameterized class public class conjunct future test extend test logger parameterize parameter public static collection future factory parameter return array as list new conjunct future factory new wait future factory parameterize parameter public future factory future factory test public void test conjunct future fail on empty and null throw exception try future factory create future null fail catch null pointer exception ignore try future factory create future array as list new completable future null new completable future fail catch null pointer exception ignore test public void test conjunct future completion throw exception some future that we combine java util concurrent completable future object future1 new java util concurrent completable future java util concurrent completable future object future2 new java util concurrent completable future java util concurrent completable future object future3 new java util concurrent completable future java util concurrent completable future object future4 new java util concurrent completable future some future be initially complete future2 complete new object build the conjunct future conjunct future result future factory create future array as list future1 future2 future3 future4 completable future result map result then accept value assert equal result get num future total assert equal result get num future complete assert false result be do assert false result map be do complete two more future future4 complete new object assert equal result get num future complete assert false result be do assert false result map be do future1 complete new object assert equal result get num future complete assert false result be do assert false result map be do complete one future again future1 complete new object assert equal result get num future complete assert false result be do assert false result map be do complete the final future future3 complete new object assert equal result get num future complete assert true result be do assert true result map be do test public void test conjunct future failure on first throw exception java util concurrent completable future object future1 new java util concurrent completable future java util concurrent completable future object future2 new java util concurrent completable future java util concurrent completable future object future3 new java util concurrent completable future java util concurrent completable future object future4 new java util concurrent completable future build the conjunct future conjunct future result future factory create future array as list future1 future2 future3 future4 completable future result map result then accept value assert equal result get num future total assert equal result get num future complete assert false result be do assert false result map be do future2 complete exceptionally new i o exception assert equal result get num future complete assert true result be do assert true result map be do try result get fail catch execution exception e assert true e get cause instanceof i o exception try result map get fail catch execution exception e assert true e get cause instanceof i o exception test public void test conjunct future failure on successive throw exception java util concurrent completable future object future1 new java util concurrent completable future java util concurrent completable future object future2 new java util concurrent completable future java util concurrent completable future object future3 new java util concurrent completable future java util concurrent completable future object future4 new java util concurrent completable future build the conjunct future conjunct future result future factory create future array as list future1 future2 future3 future4 assert equal result get num future total java util concurrent completable future result map result then accept value future1 complete new object future3 complete new object future4 complete new object future2 complete exceptionally new i o exception assert equal result get num future complete assert true result be do assert true result map be do try result get fail catch execution exception e assert true e get cause instanceof i o exception try result map get fail catch execution exception e assert true e get cause instanceof i o exception test that the conjunct future return upon completion the collection of all future value in the same order in which the future be insert test public void test conjunct future value throw exception final int number future final list completable future integer future new array list number future for int i i number future i future add new completable future conjunct future collection number result future util combine all future final list tuple2 integer completable future integer shuffle future int stream range future size map to obj index tuple2 of index future get index collect collector to list collection shuffle shuffle future for tuple2 integer completable future integer shuffle future shuffle future assert that result be do be false shuffle future f1 complete shuffle future f0 assert that result be do be true assert that result get be equal to int stream range number future box collect collector to list test public void test conjunct of none throw exception final conjunct future result future factory create future collection java util concurrent completable future object empty list assert equal result get num future total assert equal result get num future complete assert true result be do factory to create link conjunct future for test private interface future factory conjunct future create future collection extend java util concurrent completable future future private static class conjunct future factory implement future factory override public conjunct future create future collection extend java util concurrent completable future future return future util combine all future private static class wait future factory implement future factory override public conjunct future create future collection extend java util concurrent completable future future return future util wait for all future 
asynchronous file i o channel test run with power mock runner class public class asynchronous file i o channel test private static final logger log logger factory get logger asynchronous file i o channel test class test public void test all request process listener notification throw exception config final int number of run final int number of request setup final executor service executor executor new fix thread pool final random random new random final request queue write request request queue new request queue write request final request do callback buffer io channel callback mock request do callback class final test notification listener listener new test notification listener the test try final i o manager async io manager new i o manager async repeatedly add request and process they and have one thread try to register as a listener until the channel be closed and all request be process for int run run number of run run final test async file i o channel io channel new test async file i o channel io manager create channel request queue io channel callback true final count down latch sync new count down latch the mock request final buffer buffer mock buffer class final write request request mock write request class add request task callable void add request task new callable void override public void call throw exception for int i i number of run i log debug start run i for int j j number of request j io channel add request request log debug add all request of run number of request i int sleep random next int log debug sleep for ms before next run sleep thread sleep sleep log debug do closing channel io channel close sync count down return null process request task callable void process request task new callable void override public void call throw exception int total number of request number of run for int i i total i request queue take io channel handle process buffer buffer null log debug process all request number of request sync count down return null listener callable void register listener task new callable void override public void call throw exception while true int current listener get number of notification if io channel register all request process listener listener listener wait for notification current else if io channel be closed break log debug stop listener channel close sync count down return null run task in random order final list callable task new link list callable task add add request task task add process request task task add register listener task collection shuffle task for callable task task executor submit task if sync await time unit minute fail test fail due to a timeout this indicate a deadlock due to the way that listener be register notify in the asynchronous file i o channel listener reset finally executor shutdown test public void test close but add request and register listener race throw exception config final int number of run setup final executor service executor executor new fix thread pool final request queue write request request queue new request queue write request suppress warning unchecked final request do callback buffer io channel callback mock request do callback class final test notification listener listener new test notification listener the test try final i o manager async io manager new i o manager async repeatedly close the channel and add a request for int i i number of run i final test async file i o channel io channel new test async file i o channel io manager create channel request queue io channel callback true final count down latch sync new count down latch final write request request mock write request class io channel close add request task callable void add request task new callable void override public void call throw exception try io channel add request request catch throwable expect finally sync count down return null listener callable void register listener task new callable void override public void call throw exception try while true int current listener get number of notification if io channel register all request process listener listener listener wait for notification current else if io channel be closed break finally sync count down return null executor submit add request task executor submit register listener task if sync await time unit minute fail test fail due to a timeout this indicate a deadlock due to the way that listener be register notify in the asynchronous file i o channel finally executor shutdown test public void test closing wait try final i o manager async io man new i o manager async final int num block final memory segment seg memory segment factory allocate unpool segment final atomic integer callback counter new atomic integer final atomic boolean exception occur new atomic boolean final request do callback memory segment callback new request do callback memory segment override public void request successful memory segment buffer we do the non safe variant the callback should come in order from the same thread so it should always work callback counter set callback counter get if buffer seg exception occur set true override public void request fail memory segment buffer i o exception e exception occur set true block channel writer with callback memory segment writer io man create block channel writer io man create channel callback try for int i i num block i writer write block seg writer close assert equal num block callback counter get assert false exception occur get finally writer close and delete catch exception e e print stack trace fail e get message test public void test exception forward to close throw exception try i o manager async io man new i o manager async test exception forward to close io man test exception forward to close io man test exception forward to close io man private void test exception forward to close i o manager async io man final int num block final int fail block try memory segment seg memory segment factory allocate unpool segment file i o channel id channel id io man create channel block channel writer with callback memory segment writer new asynchronous block writer with callback channel id io man get write request queue channel id new no op callback private int num block override public void write block memory segment segment throw i o exception num block if num block fail block this request not return increment and get this request queue add new fail write request this segment else super write block segment try for int i i num block i writer write block seg writer close fail do not forward exception catch i o exception e expect finally try writer close and delete catch throwable ignore catch exception e e print stack trace fail e get message private static class no op callback implement request do callback memory segment override public void request successful memory segment buffer override public void request fail memory segment buffer i o exception e private static class fail write request implement write request private final asynchronous file i o channel memory segment write request channel private final memory segment segment protect fail write request asynchronous file i o channel memory segment write request target channel memory segment segment this channel target channel this segment segment override public void write throw i o exception throw new i o exception override public void request do i o exception ioex this channel handle process buffer this segment ioex private static class test async file i o channel extend asynchronous file i o channel buffer write request protect test async file i o channel id channel i d request queue write request request queue request do callback buffer callback boolean write enable throw i o exception super channel i d request queue callback write enable int get number of outstanding request return request not return get 
buffer compression test run with parameterized class public class buffer compression test private static final int buffer size private static final int num long buffer size private final boolean compress to original buffer private final boolean decompress to original buffer private final buffer compressor compressor private final buffer decompressor decompressor private final buffer buffer to compress parameter name be direct codec compress to original decompress to original public static collection object parameter return array as list new object true l z4 true false true l z4 false true true l z4 false false false l z4 true false false l z4 false true false l z4 false false public buffer compression test boolean be direct string compression codec boolean compress to original buffer boolean decompress to original buffer this compress to original buffer compress to original buffer this decompress to original buffer decompress to original buffer this compressor new buffer compressor buffer size compression codec this decompressor new buffer decompressor buffer size compression codec this buffer to compress create buffer and fill with long value be direct test public void test compress and decompress net work buffer buffer compress buffer compress compressor buffer to compress compress to original buffer assert true compress buffer be compress buffer decompress buffer decompress decompressor compress buffer decompress to original buffer assert false decompress buffer be compressed verify decompression result decompress buffer num long test public void test compress and decompress read only slice network buffer int offset num long int length num long buffer read only slice buffer buffer to compress read only slice offset length buffer compress buffer compress compressor read only slice buffer compress to original buffer assert true compress buffer be compress buffer decompress buffer decompress decompressor compress buffer decompress to original buffer assert false decompress buffer be compressed verify decompression result decompress buffer num long num long test expect illegal argument exception class public void test compress empty buffer compress compressor buffer to compress read only slice compress to original buffer test expect illegal argument exception class public void test decompress empty buffer buffer read only slice buffer buffer to compress read only slice read only slice buffer set compressed true decompress decompressor read only slice buffer decompress to original buffer test expect illegal argument exception class public void test compress buffer with non zero read offset buffer to compress set reader index compress compressor buffer to compress compress to original buffer test expect illegal argument exception class public void test decompress buffer with non zero read offset buffer to compress set reader index buffer to compress set compressed true decompress decompressor buffer to compress decompress to original buffer test expect illegal argument exception class public void test compress null compress compressor null compress to original buffer test expect illegal argument exception class public void test decompress null decompress decompressor null decompress to original buffer test expect illegal argument exception class public void test compress compress buffer buffer to compress set compressed true compress compressor buffer to compress compress to original buffer test expect illegal argument exception class public void test decompress uncompressed buffer decompress decompressor buffer to compress decompress to original buffer test expect illegal argument exception class public void test compress event throw i o exception compress compressor event serializer to buffer end of partition event instance compress to original buffer test expect illegal argument exception class public void test decompress event throw i o exception decompress decompressor event serializer to buffer end of partition event instance decompress to original buffer test public void test datum size grow after compression int num byte buffer read only slice buffer buffer to compress read only slice buffer size num byte buffer compress buffer compress compressor read only slice buffer compress to original buffer assert false compress buffer be compressed assert equal read only slice buffer compress buffer assert equal num byte compress buffer readable byte private static buffer create buffer and fill with long value boolean be direct memory segment segment if be direct segment memory segment factory allocate unpool segment buffer size else segment memory segment factory allocate unpool off heap memory buffer size for int i i num long i segment put long little endian i i network buffer buffer new network buffer segment free buffer recycler instance buffer set size num long return buffer private static void verify decompression result buffer buffer long start int num long byte buffer byte buffer buffer get nio buffer readable order byte order little endian for int i i num long i assert equal start i byte buffer get long private static buffer compress buffer compressor compressor buffer buffer boolean compress to original buffer if compress to original buffer return compressor compress to original buffer buffer return compressor compress to intermediate buffer buffer private static buffer decompress buffer decompressor decompressor buffer buffer boolean decompress to original buffer if decompress to original buffer return decompressor decompress to original buffer buffer return decompressor decompress to intermediate buffer buffer 
netty client server ssl test run with parameterized class public class netty client server ssl test extend test logger parameterize parameter public string ssl provider parameterize parameter name ssl provider public static list string parameter return s s l util test available ssl provider verify valid ssl configuration and connection test public void test valid ssl connection throw exception test valid ssl connection create ssl config verify valid advanced ssl configuration and connection test public void test valid ssl connection advanced throw exception configuration ssl config create ssl config ssl config set integer ssl internal session cache size ssl config set integer ssl internal session timeout ssl config set integer ssl internal handshake timeout ssl config set integer ssl internal close notify flush timeout test valid ssl connection ssl config private void test valid ssl connection configuration ssl config throw exception one shot latch server channel init complete new one shot latch final ssl handler server ssl handler new ssl handler netty protocol protocol new no op protocol netty config netty config create netty config ssl config final netty buffer pool buffer pool new netty buffer pool final netty server server netty test util init server netty config buffer pool ssl handler factory new testing server channel initializer protocol ssl handler factory server channel init complete server ssl handler final netty client client netty test util init client netty config protocol buffer pool final netty server and client server and client new netty server and client server client channel ch netty test util connect server and client ssl handler client ssl handler ssl handler ch pipeline get ssl assert equal or default ssl config ssl internal handshake timeout client ssl handler get handshake timeout milli assert equal or default ssl config ssl internal close notify flush timeout client ssl handler get close notify flush timeout millis should be able to send text datum ch pipeline add last new string decoder add last new string encoder ch write and flush test sync session context be only be available after a session be setup this should be true after datum be send server channel init complete await assert not null server ssl handler verify server parameter assert equal or default ssl config ssl internal handshake timeout server ssl handler get handshake timeout milli assert equal or default ssl config ssl internal close notify flush timeout server ssl handler get close notify flush timeout millis s s l session context session context server ssl handler engine get session get session context assert not null bug in unit test setup session context not available session context note can t verify session cache set at the client delegate to server instead with we own channel initializer assert equal or default ssl config ssl internal session cache size session context get session cache size int session timeout ssl config get integer ssl internal session timeout if session timeout session timeout config be in millisecond but the context return it in seconds assert equal session timeout session context get session timeout else assert true default value should not be propagate session context get session timeout netty test util shutdown server and client private static void assert equal or default configuration ssl config config option integer option long actual long expect ssl config get integer option if expect option default value assert equal expect actual else assert true default value option default value should not be propagate actual verify failure on invalid ssl configuration test public void test invalid ssl configuration throw exception netty protocol protocol new no op protocol configuration config create ssl config modify the keystore password to a incorrect one config set string security option ssl internal keystore password invalidpassword netty config netty config create netty config config netty test util netty server and client server and client null try server and client netty test util init server and client protocol netty config assert fail create server and client from invalid configuration catch exception e exception should be throw as expect netty test util shutdown server and client verify ssl handshake error when untrusted server certificate be use test public void test ssl handshake error throw exception netty protocol protocol new no op protocol configuration config create ssl config use a server certificate which be not present in the truststore config set string security option ssl internal keystore src test resource untrusted keystore netty config netty config create netty config config netty test util netty server and client server and client netty test util init server and client protocol netty config channel ch netty test util connect server and client ch pipeline add last new string decoder add last new string encoder attempt to write datum over ssl should fail assert false ch write and flush test await be success netty test util shutdown server and client test public void test client untrusted certificate throw exception final configuration server config create ssl config final configuration client config create ssl config give the client a different keystore certificate client config set string security option ssl internal keystore src test resource untrusted keystore final netty config netty server config create netty config server config final netty config netty client config create netty config client config final netty buffer pool buffer pool new netty buffer pool final netty protocol protocol new no op protocol final netty server server netty test util init server netty server config protocol buffer pool final netty client client netty test util init client netty client config protocol buffer pool final netty server and client server and client new netty server and client server client final channel ch netty test util connect server and client ch pipeline add last new string decoder add last new string encoder attempt to write datum over ssl should fail assert false ch write and flush test await be success netty test util shutdown server and client test public void test ssl pin for valid fingerprint throw exception netty protocol protocol new no op protocol configuration config create ssl config pin the certificate base on internal cert config set string security option ssl internal cert fingerprint s s l util test get certificate fingerprint config flink test netty config netty config create netty config config netty test util netty server and client server and client netty test util init server and client protocol netty config channel ch netty test util connect server and client ch pipeline add last new string decoder add last new string encoder assert true ch write and flush test await be success netty test util shutdown server and client test public void test ssl pin for invalid fingerprint throw exception netty protocol protocol new no op protocol configuration config create ssl config pin the certificate base on internal cert config set string security option ssl internal cert fingerprint s s l util test get certificate fingerprint config flink test replace all 0 - 9 a z netty config netty config create netty config config netty test util netty server and client server and client netty test util init server and client protocol netty config channel ch netty test util connect server and client ch pipeline add last new string decoder add last new string encoder assert false ch write and flush test await be success netty test util shutdown server and client private configuration create ssl config return s s l util test create internal ssl config with key and trust store ssl provider private static netty config create netty config configuration config return new netty config inet address get loopback address net util get available port netty test util default segment size config private static final class no op protocol extend netty protocol no op protocol super null null override public channel handler get server channel handler return new channel handler override public channel handler get client channel handler return new channel handler wrapper around link netty server server channel initializer make the server s ssl handler available for the test private static class testing server channel initializer extend netty server server channel initializer private final one shot latch latch private final ssl handler server handler testing server channel initializer netty protocol protocol s s l handler factory ssl handler factory one shot latch latch ssl handler server handler super protocol ssl handler factory this latch latch this server handler server handler override public void init channel socket channel channel throw exception super init channel channel ssl handler ssl handler ssl handler channel pipeline get ssl assert not null ssl handler server handler ssl handler latch trigger 
bound block subpartition write read test run with parameterized class public class bound block subpartition write read test private static final string temp dir environment information get temporary file directory private static file channel manager file channel manager class rule public static final temporary folder tmp folder new temporary folder private static final int buffer size private static final string compression codec l z4 private static final buffer decompressor decompressor new buffer decompressor buffer size compression codec parameter private final bound block subpartition type type private final boolean compression enable parameter name type compression enable public static collection object parameter return array stream bound block subpartition type value map type new object type true type false flat map array stream collect collector to list public bound block subpartition write read test bound block subpartition type type boolean compression enable this type type this compression enable compression enable test before class public static void set up file channel manager new file channel manager impl new string temp dir testing after class public static void shutdown throw exception file channel manager close test public void test write and read datum throw exception final int num long roughly mi byte setup final bound block subpartition subpartition create and fill partition num long test check final result subpartition view reader subpartition create read view read long reader num long subpartition get buffer in backlog compression enable decompressor cleanup reader release all resource subpartition release test public void test read10 consumer sequential throw exception final int num long setup final bound block subpartition subpartition create and fill partition num long test check for int i i i final result subpartition view reader subpartition create read view read long reader num long subpartition get buffer in backlog compression enable decompressor reader release all resource cleanup subpartition release test public void test read10 consumer concurrent throw exception final int num long setup final bound block subpartition subpartition create and fill partition num long test final long reader reader thread create subpartition long reader subpartition num long subpartition get buffer in backlog compression enable for check thread t reader thread t start check for check thread t reader thread t sync this propagate assertion error out from the thread cleanup subpartition release common test pass private static void read long result subpartition view reader long num long int num buffer boolean compression enable buffer decompressor decompressor throw exception buffer and backlog next long expect next long 0 l int next expect backlog num buffer while next reader get next buffer null next buffer be buffer assert true next be datum available assert equal next expect backlog next buffer in backlog byte buffer buffer next buffer get nio buffer readable if compression enable next buffer be compress buffer uncompressed buffer decompressor decompress to intermediate buffer next buffer buffer uncompressed buffer get nio buffer readable uncompressed buffer recycle buffer while buffer have remain assert equal expect next long buffer get long next buffer recycle buffer next expect backlog assert equal num long expect next long assert equal next expect backlog util private static void write long bound block subpartition partition long num throw i o exception final memory segment memory memory segment factory allocate unpool segment buffer size long l while num int po for num pos memory size po memory put long big endian pos l num partition add new buffer consumer memory ignore pos buffer datum type datum buffer we need to flush after every buffer as long as the add contract be that buffer be immediately add and can be fill further after that for low latency streaming datum exchange partition flush private bound block subpartition create and fill partition long num long throw i o exception bound block subpartition subpartition create subpartition write long subpartition num long subpartition finish return subpartition private bound block subpartition create subpartition throw i o exception return type create partition test util create partition result partition type block file channel manager compression enable buffer size new file tmp folder new folder partitiondata buffer size private static long reader create subpartition long reader bound block subpartition subpartition int num reader int num long int num buffer boolean compression enable throw i o exception final long reader reader thread new long reader num reader for int i i num reader i result subpartition view reader subpartition create read view reader thread i new long reader reader num long num buffer compression enable return reader thread private static final class long reader extend check thread private final result subpartition view reader private final long num long private final int num buffer private final boolean compression enable private final buffer decompressor decompressor long reader result subpartition view reader long num long int num buffer boolean compression enable this reader reader this num long num long this num buffer num buffer this compression enable compression enable this decompressor new buffer decompressor buffer size compression codec override public void go throw exception read long reader num long num buffer compression enable decompressor 
bind datum test base run with parameterized class public abstract class bound datum test base class rule public static final temporary folder tmp folder new temporary folder max buffer size use by the test that write datum for implementation that need to instantiate buffer in the read side protect static final int buffer size mi byte private static final string compression codec l z4 private static final buffer compressor compressor new buffer compressor buffer size compression codec private static final buffer decompressor decompressor new buffer decompressor buffer size compression codec parameterize parameter public static boolean compression enable parameterized parameter name compression enable public static boolean compression enable return new boolean false true bound datum instantiation protect abstract boolean be region base protect abstract bound datum create bound datum path temp file path throw i o exception protect abstract bound datum create bound datum with region path temp file path int region size throw i o exception protect bound datum create bound datum throw i o exception return create bound datum create temp path private bound datum create bound datum with region int region size throw i o exception return create bound datum with region create temp path region size test test public void test write and read datum throw exception try bound datum bd create bound datum test write and read datum bd test public void test write and read datum across region throw exception if be region base return try bound datum bd create bound datum with region test write and read datum bd private void test write and read datum bound datum bd throw exception final int num int final int num buffer write int bd num int bd finish write read int bd create reader num buffer num int test public void return null after empty throw exception try bound datum bd create bound datum bd finish write final bound datum reader reader bd create reader check that multiple call now return empty buffer assert null reader next buffer assert null reader next buffer assert null reader next buffer test public void test delete file on close throw exception final path path create temp path final bound datum bd create bound datum path assert true file exist path bd close assert false file exist path test public void test get size single region throw exception try bound datum bd create bound datum test get size bd test public void test get size multiple region throw exception if be region base return int page size page size util get system page size or conservative multiple try bound datum bd create bound datum with region page size test get size bd page size page size buffer reader writer util header length private static void test get size bound datum bd int buffer size1 int buffer size2 throw exception final int expect size1 buffer size1 buffer reader writer util header length final int expect size final buffer size1 buffer size2 buffer reader writer util header length bd write buffer buffer builder test util build some buffer buffer size1 assert equal expect size1 bd get size bd write buffer buffer builder test util build some buffer buffer size2 assert equal expect size final bd get size bd finish write assert equal expect size final bd get size util private static int write int bound datum bd int num int throw i o exception final int num int in buffer buffer size int num buffer for int next value next value num ints next value num ints in buffer buffer buffer buffer builder test util build buffer with ascend int buffer size num int in buffer next value if compression enable bd write buffer compressor compress to intermediate buffer buffer else bd write buffer buffer num buffer return num buffer private static void read int bound datum reader reader int num buffer expect int num int throw i o exception buffer b int next value int num buffer while b reader next buffer null final int num int in buffer b get size if compression enable b be compress buffer decompress buffer decompressor decompress to intermediate buffer b buffer builder test util validate buffer with ascend int decompress buffer num int in buffer next value else buffer builder test util validate buffer with ascend int b num int in buffer next value next value num ints in buffer num buffer b recycle buffer assert equal num buffer expect num buffer assert that next value matcher greater than or equal to num ints private static path create temp path throw i o exception return new file tmp folder new folder subpartitiondata to path 
recover input channel test run with parameterized class public class recover input channel test private final boolean be remote parameterized parameter name be remote public static collection object parameter return array as list new object true false public recover input channel test boolean be remote this be remote be remote test public void test concurrent read state and process throw exception test concurrent read state and process be remote test public void test concurrent read state and release throw exception test concurrent read state and release be remote test that there be no potential deadlock and buffer leak issue while the follow action happen concurrently task thread process the recover state buffer from recover input channel unspill io thread read the recover state and queue the buffer into recover input channel canceler thread close the input gate and release the recover input channel test public void test concurrent read state and process and release throw exception test concurrent read state and process and release be remote test that there be no buffer leak while recover the empty input channel state test public void test read empty state throw exception test read empty state or throw exception be remote channel state reader no op test that there be no buffer leak while throw exception during state recovery test expect i o exception class public void test read state with exception throw exception test read empty state or throw exception be remote new channel state reader with exception private void test read empty state or throw exception boolean be remote channel state reader reader throw exception setup final int total buffer final network buffer pool global pool new network buffer pool total buffer final single input gate input gate create input gate global pool final recover input channel input channel create recover channel be remote input gate try input gate set input channel input channel input gate setup it would throw expect exception for the case of test read state with exception input channel read recover state reader the channel only have one end of channel state event in the queue for the case of test read empty state assert equal input channel get number of queue buffer assert false input channel get next buffer be present assert true input channel get state consume future be do finally cleanup and verify no buffer leak input gate close global pool destroy all buffer pool assert equal total buffer global pool get number of available memory segment global pool destroy test that the process of read recover state execute concurrently with channel buffer processing base on the condition of the total number of state be more that the total buffer amount to confirm that the lifecycle recycle of exclusive float buffer work well private void test concurrent read state and process boolean be remote throw exception setup final int total buffer final network buffer pool global pool new network buffer pool total buffer final single input gate input gate create input gate global pool final recover input channel input channel create recover channel be remote input gate the number of state be more that the total buffer amount final int total state final int state final channel state reader reader new result partition test finite channel state reader total state state final executor service executor executor new fix thread pool throwable throw null try input gate set input channel input channel input gate setup final callable void process task process recover buffer task input channel total state state false final callable void read state task read recover state task input channel reader false submit task and wait for result executor new callable read state task process task catch throwable t throw t finally cleanup cleanup global pool executor null throw input channel private void test concurrent read state and release boolean be remote throw exception setup final int total buffer final network buffer pool global pool new network buffer pool total buffer final single input gate input gate create input gate global pool final recover input channel input channel create recover channel be remote input gate the number of state be more that the total buffer amount final int total state final int state final channel state reader reader new result partition test finite channel state reader total state state final executor service executor executor new fix thread pool throwable throw null try input gate set input channel input channel input gate setup submit task and wait for result executor new callable read recover state task input channel reader true release channel task input channel catch throwable t throw t finally cleanup cleanup global pool executor null throw input channel private void test concurrent read state and process and release boolean be remote throw exception setup final int total buffer final network buffer pool global pool new network buffer pool total buffer final single input gate input gate create input gate global pool final recover input channel input channel create recover channel be remote input gate the number of state be more that the total buffer amount final int total state final int state final channel state reader reader new result partition test finite channel state reader total state state final executor service executor executor new fix thread pool throwable throw null try input gate set input channel input channel input gate setup final callable void process task process recover buffer task input channel total state state true final callable void read state task read recover state task input channel reader true final callable void release task release channel task input channel submit task and wait for result executor new callable read state task process task release task catch throwable t throw t finally cleanup cleanup global pool executor null throw input channel private callable void read recover state task recover input channel input channel channel state reader reader boolean verify release return try input channel read recover state reader catch throwable t if verify release input channel be release throw new assertion error exception be expect here only if the input channel be release t return null private callable void process recover buffer task recover input channel input channel int total state int state boolean verify release return process all the queue state buffer and verify the datum int num process state while num process state total state if verify release input channel be release break if input channel get number of queue buffer thread sleep continue try optional buffer and availability buffer and availability input channel get next buffer if buffer and availability be present buffer buffer buffer and availability get buffer buffer builder and consumer test assert content buffer null state buffer recycle buffer num process state catch throwable t if verify release input channel be release throw new assertion error exception be expect here only if the input channel be release t return null private callable void release channel task recover input channel input channel return input channel release all resource return null private recover input channel create recover channel boolean be remote single input gate gate if be remote return new input channel builder build remote recover channel gate else return new input channel builder build local recover channel gate private single input gate create input gate network buffer pool global pool throw exception return new single input gate builder set buffer pool factory global pool create buffer pool set segment provider global pool build 
pipelined subpartition with read view test run with parameterized class public class pipelined subpartition with read view test private pipelined subpartition subpartition private awaitable buffer availablity listener availablity listener private pipelined subpartition view read view parameterized parameter public boolean compression enable parameterized parameter name compression enable public static boolean parameter return new boolean false true before public void setup throw i o exception final result partition parent partition test util create partition result partition type pipelined no op file channel manager instance compression enable buffer size subpartition new pipelined subpartition parent availablity listener new awaitable buffer availablity listener read view subpartition create read view availablity listener after public void tear down read view release all resource subpartition release test expect illegal state exception class public void test add two non finish buffer throw i o exception subpartition add create buffer builder create buffer consumer subpartition add create buffer builder create buffer consumer assert null read view get next buffer test public void test add empty non finish buffer throw i o exception assert equal availablity listener get num notification buffer builder buffer builder create buffer builder subpartition add buffer builder create buffer consumer assert equal availablity listener get num notification assert null read view get next buffer buffer builder finish buffer builder create buffer builder subpartition add buffer builder create buffer consumer assert equal subpartition get buffer in backlog assert equal availablity listener get num notification notification from finish previous buffer assert null read view get next buffer assert equal subpartition get buffer in backlog test public void test add non empty not finish buffer throw exception assert equal availablity listener get num notification subpartition add create fill unfinished buffer consumer note that since the buffer builder be not finish there be still a retain instance assert equal subpartition get buffer in backlog assert next buffer read view false false false normally more available flag from input channel should ignore non finish buffer consumer otherwise we would busy loop on the unfinished buffer consumer test public void test unfinished buffer behind finish throw exception subpartition add create fill finish buffer consumer finish subpartition add create fill unfinished buffer consumer not finish assert equal subpartition get buffer in backlog assert that availablity listener get num notification greater than 0 l assert next buffer read view false false true not notify but we could still access the unfinished buffer assert next buffer read view false false false assert no next buffer read view after flush call unfinished buffer consumer should be report as available otherwise we might not flush some of the datum test public void test flush with unfinished buffer behind finish throw exception subpartition add create fill finish buffer consumer finish subpartition add create fill unfinished buffer consumer not finish long old num notification availablity listener get num notification assert equal subpartition get buffer in backlog subpartition flush buffer queue be should already be notify no further notification necessary assert that old num notification greater than 0 l assert equal old num notification availablity listener get num notification assert equal subpartition get buffer in backlog assert next buffer read view true false true assert next buffer read view false false false assert no next buffer read view a flush call with a buffer size of should always notify consumer unless already flush test public void test flush with unfinished buffer behind finished2 throw exception no buffer no notification or any other effect subpartition flush assert equal availablity listener get num notification subpartition add create fill finished buffer consumer finish subpartition add create fill unfinished buffer consumer not finish assert equal subpartition get buffer in backlog assert next buffer read view false false true long old num notification availablity listener get num notification subpartition flush buffer queue be again need to flush assert equal old num notification availablity listener get num notification subpartition flush calling again should not flush again assert equal old num notification availablity listener get num notification assert equal subpartition get buffer in backlog assert next buffer read view false false false assert no next buffer read view test public void test multiple empty buffer throw exception assert equal availablity listener get num notification subpartition add create fill finished buffer consumer assert equal availablity listener get num notification subpartition add create fill finished buffer consumer assert equal availablity listener get num notification subpartition add create fill finished buffer consumer assert equal availablity listener get num notification assert equal subpartition get buffer in backlog subpartition add create fill finish buffer consumer assert equal availablity listener get num notification assert next buffer read view false false true test public void test empty flush subpartition flush assert equal availablity listener get num notification test public void test basic pipelined produce consume logic throw exception empty should return null assert false read view be available assert no next buffer read view assert false read view be available also after get next buffer assert equal availablity listener get num notification add datum to the queue subpartition add create fill finish buffer consumer buffer size assert false read view be available assert equal subpartition get total number of buffer assert equal subpartition get buffer in backlog assert equal subpartition get total number of byte only update when get the buffer assert equal availablity listener get num notification and one available result assert next buffer read view buffer size false false true assert equal buffer size subpartition get total number of byte only update when get the buffer assert equal subpartition get buffer in backlog assert no next buffer read view assert equal subpartition get buffer in backlog add datum to the queue subpartition add create fill finish buffer consumer buffer size assert false read view be available assert equal subpartition get total number of buffer assert equal subpartition get buffer in backlog assert equal buffer size subpartition get total number of byte only update when get the buffer assert equal availablity listener get num notification assert next buffer read view buffer size false false true assert equal buffer size subpartition get total number of byte only update when get the buffer assert equal subpartition get buffer in backlog assert no next buffer read view assert equal subpartition get buffer in backlog some test with event fill with buffer event and buffer subpartition add create fill finish buffer consumer buffer size assert false read view be available subpartition add create event buffer consumer buffer size buffer datum type event buffer assert false read view be available subpartition add create fill finish buffer consumer buffer size assert false read view be available assert equal subpartition get total number of buffer assert equal subpartition get buffer in backlog two buffer event don t count assert equal buffer size subpartition get total number of byte only update when get the buffer assert equal availablity listener get num notification the first buffer assert next buffer read view buffer size true true true assert equal buffer size subpartition get total number of byte only update when get the buffer assert equal subpartition get buffer in backlog the event assert next event read view buffer size null false false true assert equal buffer size subpartition get total number of byte only update when get the buffer assert equal subpartition get buffer in backlog the remain buffer assert next buffer read view buffer size false false true assert equal buffer size subpartition get total number of byte only update when get the buffer assert equal subpartition get buffer in backlog nothing more assert no next buffer read view assert equal subpartition get buffer in backlog assert equal subpartition get total number of buffer assert equal buffer size subpartition get total number of byte assert equal availablity listener get num notification test public void test barrier overtake throw exception subpartition add create fill finish buffer consumer assert equal availablity listener get num notification assert equal availablity listener get num priority event subpartition add create fill finished buffer consumer assert equal availablity listener get num notification assert equal availablity listener get num priority event buffer consumer event buffer event serializer to buffer consumer end of superstep event instance subpartition add event buffer assert equal availablity listener get num notification assert equal availablity listener get num priority event subpartition add create fill finished buffer consumer assert equal availablity listener get num notification assert equal availablity listener get num priority event checkpoint option option new checkpoint option checkpoint type checkpoint new checkpoint storage location reference new byte true true buffer consumer barrier buffer event serializer to buffer consumer new checkpoint barrier option subpartition add barrier buffer true assert equal availablity listener get num notification assert equal availablity listener get num priority event list buffer inflight subpartition request inflight buffer snapshot assert equal array as list inflight stream map buffer get size collect collector to list inflight for each buffer recycle buffer assert next event read view barrier buffer get write byte checkpoint barrier class true false true assert next buffer read view true false true assert next buffer read view true true true assert next event read view event buffer get write byte end of superstep event class false false true assert next buffer read view false false true assert no next buffer read view test public void test backlog consistent with number of consumable buffer throw exception test backlog consistent with number of consumable buffer false false test public void test backlog consistent with consumable buffer for flush partition throw exception test backlog consistent with number of consumable buffer true false test public void test backlog consistent with consumable buffer for finished partition throw exception test backlog consistent with number of consumable buffer false true private void test backlog consistent with number of consumable buffer boolean be flush request boolean be finish throw exception final int number of add buffer for int i i number of add buffer i if i number of add buffer be finish subpartition add create fill finish buffer consumer else subpartition add create fill unfinished buffer consumer if be flush request subpartition flush if be finish subpartition finish final int backlog subpartition get buffer in backlog int number of consumable buffer try final closeable registry closeable registry new closeable registry while read view be available integer max value result subpartition buffer and backlog buffer and backlog read view get next buffer assert not null buffer and backlog if buffer and backlog buffer be buffer number of consumable buffer closeable registry register closeable buffer and backlog buffer recycle buffer assert that backlog be number of consumable buffer test public void test block by checkpoint and resume consumption throw i o exception interrupt exception block subpartition by checkpoint add a event after subpartition block subpartition add create event buffer consumer buffer size buffer datum type event buffer no datum available notification after add a event check num notification and availability resume consumption and check availability true assert next event read view buffer size null false false true block subpartition by checkpoint add a buffer and flush the subpartition subpartition add create fill finish buffer consumer buffer size subpartition flush no datum available notification after add a buffer and flush the subpartition check num notification and availability resume consumption and check availability integer max value false assert next buffer read view buffer size false false true block subpartition by checkpoint add two buffer to the subpartition subpartition add create fill finish buffer consumer buffer size subpartition add create fill finish buffer consumer buffer size no datum available notification after add the second buffer check num notification and availability resume consumption and check availability integer max value true assert next buffer read view buffer size false false true assert next buffer read view buffer size false false true private void block subpartition by checkpoint int num notification throw i o exception interrupt exception subpartition add create event buffer consumer buffer size buffer datum type align exactly once checkpoint barrier assert equal num notification availablity listener get num notification assert next event read view buffer size null false false true private void check num notification and availability int num notification throw i o exception interrupted exception assert equal num notification availablity listener get num notification view not available and no buffer can be read assert false read view be available integer max value assert no next buffer read view private void resume consumption and check availability int available credit boolean datum available read view resume consumption assert equal datum available read view be available available credit static void assert next buffer result subpartition view read view int expect readable buffer size boolean expect be datum available int expect buffer in backlog boolean expect be event available boolean expect recycle after recycle throw i o exception interrupt exception assert next buffer or event read view expect readable buffer size true null expect be datum available expect buffer in backlog expect be event available expect recycle after recycle static void assert next event result subpartition view read view int expect readable buffer size class extend abstract event expect event class boolean expect be datum available int expect buffer in backlog boolean expect be event available boolean expect recycle after recycle throw i o exception interrupt exception assert next buffer or event read view expect readable buffer size false expect event class expect be datum available expect buffer in backlog expect be event available expect recycle after recycle private static void assert next buffer or event result subpartition view read view int expect readable buffer size boolean expect be buffer nullable class extend abstract event expect event class boolean expect be datum available int expect buffer in backlog boolean expect be event available boolean expect recycle after recycle throw i o exception interrupt exception check argument expect event class null expect be buffer result subpartition buffer and backlog buffer and backlog read view get next buffer assert not null buffer and backlog try assert equal buffer size expect readable buffer size buffer and backlog buffer readable byte assert equal buffer or event expect be buffer buffer and backlog buffer be buffer if expect event class null assert assert that event serializer from buffer buffer and backlog buffer class loader get system class loader instance of expect event class assert equal datum available expect be datum available buffer and backlog be datum available assert equal datum available expect be datum available read view be available integer max value assert equal backlog expect buffer in backlog buffer and backlog buffer in backlog assert equal event available expect be event available buffer and backlog be event available assert equal event available expect be event available read view be available assert false not recycle buffer and backlog buffer be recycled finally buffer and backlog buffer recycle buffer assert equal recycle expect recycle after recycle buffer and backlog buffer be recycled static void assert no next buffer result subpartition view read view throw i o exception interrupted exception assert null read view get next buffer 
leader election test run with parameterized class public class leader election test extend test logger enum leader election type zoo keeper embed standalone parameterized parameter name leader election public static collection leader election type parameter return array as list leader election type value private final service class service class public leader election test leader election type leader election type switch leader election type case zoo keeper service class new zoo keeper service class break case embed service class new embed service class break case standalone service class new standalone service class break default throw new illegal argument exception string format unknown leader election type s leader election type before public void setup throw exception service class setup after public void teardown throw exception service class teardown test public void test have leadership throw exception final leader election service leader election service service class create leader election service final manual leader contender manual leader contender new manual leader contender try assert that leader election service have leadership uuid random u u i d be false leader election service start manual leader contender final uuid leader session id manual leader contender wait for leader session id assert that leader election service have leadership leader session id be true assert that leader election service have leadership uuid random u u i d be false leader election service confirm leadership leader session id foobar assert that leader election service have leadership leader session id be true leader election service stop assert that leader election service have leadership leader session id be false finally manual leader contender rethrow error private static final class manual leader contender implement leader contender private static final uuid null leader session id new uuid 0 l 0 l private final array block queue uuid leader session id new array block queue private volatile exception exception override public void grant leadership uuid leader session i d leader session id offer leader session i would override public void revoke leadership leader session id offer null leader session id override public string get description return foobar override public void handle error exception exception this exception exception void rethrow error throw exception if exception null throw exception uuid wait for leader session id throw interrupted exception return leader session id take private interface service class void setup throw exception void teardown throw exception leader election service create leader election service throw exception private static final class zoo keeper service class implement service class private testing server testing server private curator framework client private configuration configuration override public void setup throw exception try test server new testing server catch exception e throw new runtime exception could not start zoo keeper testing cluster e configuration new configuration configuration set string high availability option ha zookeeper quorum testing server get connect string configuration set string high availability option ha mode zookeeper client zoo keeper util start curator framework configuration override public void teardown throw exception if client null client close client null if test server null testing server stop test server null override public leader election service create leader election service throw exception return zoo keeper util create leader election service client configuration private static final class embed service class implement service class private embed leader service embed leader service override public void setup embed leader service new embed leader service testing util default execution context override public void teardown if embed leader service null embed leader service shutdown embed leader service null override public leader election service create leader election service throw exception return embed leader service create leader election service private static final class standalone service class implement service class override public void setup throw exception noop override public void teardown throw exception noop override public leader election service create leader election service throw exception return new standalone leader election service 
connection util test run with power mock runner class public class connection util test test public void test return local host address use heuristic throw exception instead of use a unstable localhost port as unreachable to cause test fail unstably use a absolutely unreachable outside ip port inet socket address unreachable new inet socket address 8.8 8.8 0x f f f f final long start system nano time inet address add connection util find connect address unreachable check that it do not take forever max seconds this check can unfortunately not be too tight or it will be flaky on some ci infrastructure assert true system nano time start 000 l we should have find a heuristic address assert not null add make sure that we return the inet address get local host as a heuristic assert equal inet address get local host add test public void test find connect address when get local host throw throw exception power mockito mock static inet address class mockito when inet address get local host then throw new unknown host exception then call real method final inet address loopback address inet4 address get by name 127.0 0.1 thread socket server thread try server socket socket new server socket loopback address make sure that the thread will eventually die even if something else go wrong socket set so timeout socket server thread new thread new runnable override public void run try socket accept catch i o exception e ignore socket server thread start final inet socket address socket address new inet socket address loopback address socket get local port final inet address address connection util find connect address socket address make sure we get a address via alternative mean assert not null address 
s s l util test run with parameterized class public class s s l util test extend test logger private static final string trust store path s s l util test class get resource local127 truststore get file private static final string key store path s s l util test class get resource local127 keystore get file private static final string trust store password password private static final string key store password password private static final string key password password public static final list string available ssl provider static if system get property flink test with openssl null assert true open s s l not available but required property flink test with openssl be set open ssl be available available ssl provider array as list jdk openssl else available ssl provider collection singleton list jdk parameterized parameter public string ssl provider parameterize parameter name ssl provider public static list string parameter return available ssl provider test whether activation of internal rest ssl evaluate the config flag correctly suppress warning deprecation test public void check enable s s l backwards compatibility configuration old conf new configuration old conf set boolean security option ssl enable true assert true s s l util be internal s s l enable old conf assert true s s l util be rest s s l enable old conf new option take precedence configuration new option new configuration new option set boolean security option ssl internal enable true new option set boolean security option ssl rest enable false assert true s s l util be internal s s l enable new option assert false s s l util be rest s s l enable new option new option take precedence configuration precedence new configuration precedence set boolean security option ssl enable true precedence set boolean security option ssl internal enable false precedence set boolean security option ssl rest enable false assert false s s l util be internal s s l enable precedence assert false s s l util be rest s s l enable precedence test whether activation of rest mutual ssl authentication evaluate the config flag correctly test public void check enable rest s s l authentication ssl have to be enable configuration no s s l option new configuration no s s l option set boolean security option ssl rest enable false no s s l option set boolean security option ssl rest authentication enable true assert false s s l util be rest s s l authentication enable no s s l option authentication be disabled by default configuration default option new configuration default option set boolean security option ssl rest enable true assert false s s l util be rest s s l authentication enable default option configuration option new configuration no s s l option set boolean security option ssl rest enable true no s s l option set boolean security option ssl rest authentication enable true assert true s s l util be rest s s l authentication enable no s s l option test public void test socket factory when ssl disabled throw exception configuration config new configuration try s s l util create s s l server socket factory config fail exception expect catch illegal configuration exception ignore try s s l util create s s l client socket factory config fail exception expect catch illegal configuration exception ignore rest client test if rest client ssl be create give a valid ssl configuration test public void test r e s t client s s l throw exception configuration client config create rest ssl config with trust store s s l handler factory ssl s s l util create rest client s s l engine factory client config assert not null ssl test that rest client ssl client be not create if ssl be not configure test public void test r e s t client s s l disabled throw exception configuration client config create rest ssl config with trust store client config set boolean security option ssl rest enable false try s s l util create rest client s s l engine factory client config fail exception expect catch illegal configuration exception ignore test that rest client ssl creation fail with bad ssl configuration test public void test r e s t client s s l miss trust store throw exception configuration config new configuration config set boolean security option ssl rest enable true config set string security option ssl rest truststore password some password try s s l util create rest client s s l engine factory config fail exception expect catch illegal configuration exception ignore test that rest client ssl creation fail with bad ssl configuration test public void test r e s t client s s l miss password throw exception configuration config new configuration config set boolean security option ssl rest enable true config set string security option ssl rest truststore trust store path try s s l util create rest client s s l engine factory config fail exception expect catch illegal configuration exception ignore test that rest client ssl creation fail with bad ssl configuration test public void test r e s t client s s l wrong password throw exception configuration client config create rest ssl config with trust store client config set string security option ssl rest truststore password badpassword try s s l util create rest client s s l engine factory client config fail exception expect catch exception ignore server test that rest server ssl engine be create give a valid ssl configuration test public void test r e s t server s s l throw exception configuration server config create rest ssl config with key store s s l handler factory ssl s s l util create rest server s s l engine factory server config assert not null ssl test that rest server ssl engine be not create if ssl be disabled test public void test r e s t server s s l disabled throw exception configuration server config create rest ssl config with key store server config set boolean security option ssl rest enable false try s s l util create rest server s s l engine factory server config fail exception expect catch illegal configuration exception ignore test that rest server ssl engine creation fail with bad ssl configuration test public void test r e s t server s s l bad keystore password configuration server config create rest ssl config with key store server config set string security option ssl rest keystore password badpassword try s s l util create rest server s s l engine factory server config fail exception expect catch exception ignore test that rest server ssl engine creation fail with bad ssl configuration test public void test r e s t server s s l bad key password configuration server config create rest ssl config with key store server config set string security option ssl rest key password badpassword try s s l util create rest server s s l engine factory server config fail exception expect catch exception ignore mutual auth context test public void test internal s s l throw exception final configuration config create internal ssl config with key and trust store assert not null s s l util create internal server s s l engine factory config assert not null s s l util create internal client s s l engine factory config test public void test internal s s l with s s l pin throw exception final configuration config create internal ssl config with key and trust store config set string security option ssl internal cert fingerprint get certificate fingerprint config flink test assert not null s s l util create internal server s s l engine factory config assert not null s s l util create internal client s s l engine factory config test public void test internal s s l disable throw exception final configuration config create internal ssl config with key and trust store config set boolean security option ssl internal enable false try s s l util create internal server s s l engine factory config fail exception expect catch exception ignore try s s l util create internal client s s l engine factory config fail exception expect catch exception ignore test public void test internal s s l key store only throw exception final configuration config create internal ssl config with key store try s s l util create internal server s s l engine factory config fail exception expect catch exception ignore try s s l util create internal client s s l engine factory config fail exception expect catch exception ignore test public void test internal s s l trust store only throw exception final configuration config create internal ssl config with trust store try s s l util create internal server s s l engine factory config fail exception expect catch exception ignore try s s l util create internal client s s l engine factory config fail exception expect catch exception ignore test public void test internal s s l wrong keystore password throw exception final configuration config create internal ssl config with key and trust store config set string security option ssl internal keystore password badpw try s s l util create internal server s s l engine factory config fail exception expect catch exception ignore try s s l util create internal client s s l engine factory config fail exception expect catch exception ignore test public void test internal s s l wrong truststore password throw exception final configuration config create internal ssl config with key and trust store config set string security option ssl internal truststore password badpw try s s l util create internal server s s l engine factory config fail exception expect catch exception ignore try s s l util create internal client s s l engine factory config fail exception expect catch exception ignore test public void test internal s s l wrong key password throw exception final configuration config create internal ssl config with key and trust store config set string security option ssl internal key password badpw try s s l util create internal server s s l engine factory config fail exception expect catch exception ignore try s s l util create internal client s s l engine factory config fail exception expect catch exception ignore protocol and cipher suite test if s s l util set the right ssl version and cipher suite for s s l server socket test public void test set s s l version and cipher suite for s s l server socket throw exception configuration server config create internal ssl config with key and trust store set custom protocol and cipher suite server config set string security option ssl protocol t l sv1 server config set string security option ssl algorithm tl rsa with aes cbc sha tl rsa with aes cbc s h a256 try server socket socket s s l util create s s l server socket factory server config create server socket assert true socket instanceof s s l server socket final s s l server socket ssl socket s s l server socket socket string protocol ssl socket get enable protocol string algorithm ssl socket get enable cipher suite assert equal protocol length assert equal t l sv1 protocol assert equal algorithm length assert that algorithm array contain in any order tl rsa with aes cbc sha tl rsa with aes cbc s h a256 test that link s s l handler factory be create correctly test public void test create s s l engine factory throw exception configuration server config create internal ssl config with key and trust store final string ssl algorithm final string expect ssl protocol if ssl provider equal ignore case openssl open s s l do not support the same set of cipher algorithm ssl algorithm new string tl rsa with aes gcm s h a256 tl rsa with aes gcm s h a384 expect ssl protocol new string s s lv2 hello t l sv1 else ssl algorithm new string tl dhe rsa with aes cbc sha tl dhe rsa with aes cbc s h a256 expect ssl protocol new string t l sv1 set custom protocol and cipher suite server config set string security option ssl protocol t l sv1 server config set string security option ssl algorithm string join ssl algorithm final s s l handler factory server s s l handler factory s s l util create internal server s s l engine factory server config final ssl handler ssl handler server s s l handler factory create netty s s l handler unpool byte buf allocator default assert equal expect ssl protocol length ssl handler engine get enable protocol length assert that ssl handler engine get enable protocol array contain in any order expect ssl protocol assert equal ssl algorithm length ssl handler engine get enable cipher suite length assert that ssl handler engine get enable cipher suite array contain in any order ssl algorithm test public void test invalid fingerprint parse throw exception final configuration config create internal ssl config with key and trust store final string fingerprint get certificate fingerprint config flink test config set string security option ssl internal cert fingerprint fingerprint substr fingerprint length try s s l util create internal server s s l engine factory config fail expect exception catch illegal argument exception e assert that e get message contain string malformed fingerprint util private configuration create rest ssl config with key store final configuration config new configuration config set boolean security option ssl rest enable true add ssl provider config config ssl provider add rest key store config config return config private configuration create rest ssl config with trust store final configuration config new configuration config set boolean security option ssl rest enable true add ssl provider config config ssl provider add rest trust store config config return config public static configuration create rest ssl config with key and trust store string ssl provider final configuration config new configuration config set boolean security option ssl rest enable true add ssl provider config config ssl provider add rest key store config config add rest trust store config config return config private configuration create internal ssl config with key store final configuration config new configuration config set boolean security option ssl internal enable true add ssl provider config config ssl provider add internal key store config config return config private configuration create internal ssl config with trust store final configuration config new configuration config set boolean security option ssl internal enable true add ssl provider config config ssl provider add internal trust store config config return config private configuration create internal ssl config with key and trust store return create internal ssl config with key and trust store ssl provider public static configuration create internal ssl config with key and trust store string ssl provider final configuration config new configuration config set boolean security option ssl internal enable true add ssl provider config config ssl provider add internal key store config config add internal trust store config config return config public static string get certificate fingerprint configuration config string certificate alias throw exception key store key store key store get instance key store get default type try input stream key store file file new input stream new file config get string security option ssl internal keystore to path key store load key store file config get string security option ssl internal keystore password to char array return get sha1 fingerprint key store get certificate certificate alias public static string get rest certificate fingerprint configuration config string certificate alias throw exception key store key store key store get instance key store get default type try input stream key store file file new input stream new file config get string security option ssl rest keystore to path key store load key store file config get string security option ssl rest keystore password to char array return get sha1 fingerprint key store get certificate certificate alias private static void add ssl provider config configuration config string ssl provider if ssl provider equal ignore case openssl assert true open s s l not available open ssl be available flink s default algorithm set be not available for open s s l choose a different one config set string security option ssl algorithm tl ecdhe rsa with aes gcm s h a256 tl ecdhe rsa with aes gcm s h a384 config set string security option ssl provider ssl provider private static void add rest key store config configuration config config set string security option ssl rest keystore key store path config set string security option ssl rest keystore password key store password config set string security option ssl rest key password key password private static void add rest trust store config configuration config config set string security option ssl rest truststore trust store path config set string security option ssl rest truststore password trust store password private static void add internal key store config configuration config config set string security option ssl internal keystore key store path config set string security option ssl internal keystore password key store password config set string security option ssl internal key password key password private static void add internal trust store config configuration config config set string security option ssl internal truststore trust store path config set string security option ssl internal truststore password trust store password private static string get sha1 fingerprint certificate cert if cert null return null try message digest digest message digest get instance s h a1 return to hexadecimal string digest digest cert get encode catch no such algorithm exception certificate encode exception e ignore return null private static string to hexadecimal string byte value string builder sb new string builder int len value length for int i i len i int num int value i 0xff if num 0x10 sb append sb append integer to hex string num if i len sb append return sb to string to upper case locale we 
binary operator test base run with parameterized class public abstract class binary operator test base s extend function in out extend test logger implement task context s out protect static final int page size private final i o manager io manager private final memory manager mem manager private final list mutable object iterator in input private final list type comparator in comparator private final list unilateral sort merger in sorter private final abstract invokable owner private final task config task config private final task manager runtime info task manage info protect final long per sort mem protect final double per sort fraction mem private collector out output protect int num file handle private s stub private driver s in driver private volatile boolean running true private execution config execution config private list type serializer in input serializer new array list protect binary operator test base execution config execution config long memory int max num sorter long per sort memory if memory max num sorter per sort memory throw new illegal argument exception final long total mem math max memory math max max num sorter per sort memory this per sort mem per sort memory this per sort fraction mem double per sort memory total mem this io manager new i o manager async this mem manager total mem memory manager builder new builder set memory size total mem build null this input new array list this comparator new array list this sorter new array list this owner new dummy invokable this task config new task config new configuration this execution config execution config this task manage info new testing task manager runtime info parameterize parameter public static collection object get configuration throw i o exception link list object config new link list execution config with reuse new execution config with reuse enable object reuse execution config without reuse new execution config without reuse disable object reuse object a without reuse configs add a object b with reuse configs add b return config public void add input mutable object iterator in input type serializer in serializer this input add input this sorter add null this input serializer add serializer suppress warning unchecked public void add input sort mutable object iterator in input type serializer in serializer type comparator in comp throw exception this input serializer add serializer unilateral sort merger in sorter new unilateral sort merger this mem manager this io manager input this owner new runtime serializer factory serializer class in serializer create instance get class comp this per sort fraction mem 0.8 f true use large record handler false this sorter add sorter this input add null public void add driver comparator type comparator in comparator this comparator add comparator public void set output collector out output this output output public void set output list out output type serializer out out serializer this output new list output collector output out serializer public int get num file handle for sort return num file handle public void set num file handle for sort int num file handle this num file handle num file handle suppress warning rawtype public void test driver driver driver class stub class throw exception test driver internal driver stub class suppress warning unchecked rawtype public void test driver internal driver driver class stub class throw exception this driver driver driver setup this this stub s stub class new instance regular running logic this run true boolean stub open false try run the datum preparation try driver prepare catch throwable t throw new exception the datum preparation cause a error t get message t open stub implementation try function util open function this stub get task config get stub parameter stub open true catch throwable t throw new exception the user define open method cause a exception t get message t if run return run the user code driver run close we close here such that a regular close throw a exception mark a task as fail if this running function util close function this stub stub open false this output close catch exception ex close the input but do not report any exception since we already have another root cause if stub open try function util close function this stub catch throwable ignore if resettable driver invoke tear down if this driver instanceof resettable driver final resettable driver re driver resettable driver this driver try re driver teardown catch throwable t throw new exception error while shut down a iterative operator t get message t drop exception if the task be cancel if this run throw ex finally driver cleanup suppress warning unchecked rawtype public void test resettable driver resettable driver driver class stub class int iteration throw exception driver setup this for int i i iteration i if i driver initialize else driver reset test driver driver stub class driver teardown public void cancel throw exception this running false compensate for race where cancel be call before the driver be set not that this be a artifact of a bad design of this test base where the setup of the basic property be not separate from the invocation of the execution logic while this driver null thread sleep this driver cancel override public task config get task config return this task config override public task manager runtime info get task manager info return this task manage info override public execution config get execution config return execution config override public class loader get user code class loader return get class get class loader override public i o manager get i o manager return this io manager override public memory manager get memory manager return this mem manager override public x mutable object iterator x get input int index mutable object iterator in in this input get index if in null wait from sorter try in this sorter get index get iterator catch interrupt exception e throw new runtime exception interrupt this input set index in suppress warning unchecked mutable object iterator x input mutable object iterator x this input get index return input override suppress warning unchecked public x type serializer factory x get input serializer int index type serializer x ser type serializer x this input serializer get index return new runtime serializer factory ser class x ser create instance get class override public x type comparator x get driver comparator int index suppress warning unchecked type comparator x comparator type comparator x this comparator get index return comparator override public s get stub return this stub override public collector out get output collector return this output override public abstract invokable get contain task return this owner override public string format log string string message return driver tester message override public operator metric group get metric group return unregistered metric group create unregistered operator metric group after public void shutdown all throw exception 1st shutdown sorter for unilateral sort merger sorter this sorter if sorter null sorter close this sorter clear 2nd shutdown i o this io manager close last verify all memory be return and shutdown mem manager memory manager mem man get memory manager if mem man null assert assert true memory manager manage memory be not completely free mem man verify empty mem man shutdown private static final class list output collector out implement collector out private final list out output private final type serializer out serializer public list output collector list out output list type serializer out serializer this output output list this serializer serializer override public void collect out record this output add serializer copy record override public void close public static final class count output collector out implement collector out private int num override public void collect out record this num override public void close public int get number of record return this num 
driver test base run with parameterized class public abstract class driver test base s extend function extend test logger implement task context s record protect static final long default per sort mem protect static final int page size private final i o manager io manager private final memory manager mem manager private final list mutable object iterator record input private final list type comparator record comparator private final list unilateral sort merger record sorter private final abstract invokable owner private final task config task config private final task manager runtime info task manage info protect final long per sort mem protect final double per sort fraction mem private collector record output protect int num file handle private s stub private driver s record driver private volatile boolean running true private execution config execution config protect driver test base execution config execution config long memory int max num sorter this execution config memory max num sorter default per sort mem protect driver test base execution config execution config long memory int max num sorter long per sort memory if memory max num sorter per sort memory throw new illegal argument exception final long total mem math max memory math max max num sorter per sort memory this per sort mem per sort memory this per sort fraction mem double per sort memory total mem this io manager new i o manager async this mem manager total mem memory manager builder new builder set memory size total mem build null this input new array list mutable object iterator record this comparator new array list type comparator record this sorter new array list unilateral sort merger record this owner new dummy invokable this task config new task config new configuration this execution config execution config this task manage info new testing task manager runtime info parameterize parameter public static collection object get configuration link list object config new link list object execution config with reuse new execution config with reuse enable object reuse execution config without reuse new execution config without reuse disable object reuse object a without reuse configs add a object b with reuse configs add b return config public void add input mutable object iterator record input this input add input this sorter add null public void add input sort mutable object iterator record input record comparator comp throw exception unilateral sort merger record sorter new unilateral sort merger record this mem manager this io manager input this owner record serializer factory get comp this per sort fraction mem 0.8 f true use large record handler true this sorter add sorter this input add null public void add driver comparator record comparator comparator this comparator add comparator public void set output collector record output this output output public void set output list record output this output new list output collector output public int get num file handle for sort return num file handle public void set num file handle for sort int num file handle this num file handle num file handle suppress warning rawtype public void test driver driver driver class stub class throw exception test driver internal driver stub class suppress warning unchecked rawtype public void test driver internal driver driver class stub class throw exception this driver driver driver setup this this stub s stub class new instance regular running logic boolean stub open false try run the datum preparation try driver prepare catch throwable t throw new exception the datum preparation cause a error t get message t open stub implementation try function util open function this stub get task config get stub parameter stub open true catch throwable t throw new exception the user define open method cause a exception t get message t if run return run the user code driver run close we close here such that a regular close throw a exception mark a task as fail if this running function util close function this stub stub open false this output close catch exception ex close the input but do not report any exception since we already have another root cause if stub open try function util close function this stub catch throwable ignore if resettable driver invoke tear down if this driver instanceof resettable driver final resettable driver re driver resettable driver this driver try re driver teardown catch throwable t throw new exception error while shut down a iterative operator t get message t drop exception if the task be cancel if this run throw ex finally driver cleanup suppress warning unchecked rawtype public void test resettable driver resettable driver driver class stub class int iteration throw exception driver setup this for int i i iteration i if i driver initialize else driver reset test driver driver stub class driver teardown public void cancel throw exception this running false compensate for race where cancel be call before the driver be set not that this be a artifact of a bad design of this test base where the setup of the basic property be not separate from the invocation of the execution logic while this driver null thread sleep this driver cancel override public task config get task config return this task config override public task manager runtime info get task manager info return this task manage info override public execution config get execution config return execution config override public class loader get user code class loader return get class get class loader override public i o manager get i o manager return this io manager override public memory manager get memory manager return this mem manager override public x mutable object iterator x get input int index mutable object iterator record in this input get index if in null wait from sorter try in this sorter get index get iterator catch interrupt exception e throw new runtime exception interrupt this input set index in suppress warning unchecked mutable object iterator x input mutable object iterator x this input get index return input override public x type serializer factory x get input serializer int index suppress warning unchecked type serializer factory x factory type serializer factory x record serializer factory get return factory override public x type comparator x get driver comparator int index suppress warning unchecked type comparator x comparator type comparator x this comparator get index return comparator override public s get stub return this stub override public collector record get output collector return this output override public abstract invokable get contain task return this owner override public string format log string string message return driver tester message override public operator metric group get metric group return unregistered metric group create unregistered operator metric group after public void shutdown all throw exception 1st shutdown sorter for unilateral sort merger sorter this sorter if sorter null sorter close this sorter clear 2nd shutdown i o this io manager close last verify all memory be return and shutdown mem manager memory manager mem man get memory manager if mem man null assert assert true memory manager manage memory be not completely free mem man verify empty mem man shutdown private static final class list output collector implement collector record private final list record output public list output collector list record output list this output output list override public void collect record record this output add record create copy override public void close public static final class count output collector implement collector record private int num override public void collect record record this num override public void close public int get number of record return this num 
unary operator test base run with parameterized class public abstract class unary operator test base s extend function in out extend test logger implement task context s out protect static final long default per sort mem protect static final int page size private final task manager runtime info task manage info private final i o manager io manager private final memory manager mem manager private mutable object iterator in input private type serializer in input serializer private list type comparator in comparator private unilateral sort merger in sorter private final abstract invokable owner private final task config task config protect final long per sort mem protect final double per sort fraction mem private collector out output protect int num file handle private s stub private driver s out driver private volatile boolean run private execution config execution config protect unary operator test base execution config execution config long memory int max num sorter this execution config memory max num sorter default per sort mem protect unary operator test base execution config execution config long memory int max num sorter long per sort memory if memory max num sorter per sort memory throw new illegal argument exception final long total mem math max memory math max max num sorter per sort memory this per sort mem per sort memory this per sort fraction mem double per sort memory total mem this io manager new i o manager async this mem manager total mem memory manager builder new builder set memory size total mem build null this owner new dummy invokable configuration config new configuration this task config new task config config this execution config execution config this comparator new array list type comparator in this task manage info new testing task manager runtime info parameterize parameter public static collection object get configuration execution config with reuse new execution config with reuse enable object reuse execution config without reuse new execution config without reuse disable object reuse object a without reuse object b with reuse return array as list a b public void set input mutable object iterator in input type serializer in serializer this input input this input serializer serializer this sorter null public void add input sort mutable object iterator in input type serializer in serializer type comparator in comp throw exception this input null this input serializer serializer this sorter new unilateral sort merger in this mem manager this io manager input this owner this in get input serializer comp this per sort fraction mem 0.8 f true use large record handler false public void add driver comparator type comparator in comparator this comparator add comparator public void set output collector out output this output output public void set output list out output type serializer out out serializer this output new list output collector out output out serializer public int get num file handle for sort return num file handle public void set num file handle for sort int num file handle this num file handle num file handle suppress warning rawtype public void test driver driver driver class stub class throw exception test driver internal driver stub class suppress warning unchecked rawtype public void test driver internal driver driver class stub class throw exception this driver driver driver setup this this stub s stub class new instance regular running logic this run true boolean stub open false try run the datum preparation try driver prepare catch throwable t throw new exception the datum preparation cause a error t get message t open stub implementation try function util open function this stub get task config get stub parameter stub open true catch throwable t throw new exception the user define open method cause a exception t get message t run the user code driver run close we close here such that a regular close throw a exception mark a task as fail if this running function util close function this stub stub open false this output close catch exception ex close the input but do not report any exception since we already have another root cause if stub open try function util close function this stub catch throwable t ignore if resettable driver invoke tear down if this driver instanceof resettable driver final resettable driver re driver resettable driver this driver try re driver teardown catch throwable t throw new exception error while shut down a iterative operator t get message t drop exception if the task be cancel if this run throw ex finally driver cleanup suppress warning unchecked rawtype public void test resettable driver resettable driver driver class stub class int iteration throw exception driver setup this for int i i iteration i if i driver initialize else driver reset test driver driver stub class driver teardown public void cancel throw exception this run false this driver cancel override public task config get task config return this task config override public execution config get execution config return execution config override public class loader get user code class loader return get class get class loader override public i o manager get i o manager return this io manager override public memory manager get memory manager return this mem manager override public task manager runtime info get task manager info return this task manage info override public x mutable object iterator x get input int index mutable object iterator in in this input if in null wait from sorter try in this sorter get iterator catch interrupt exception e throw new runtime exception interrupt this input in suppress warning unchecked mutable object iterator x input mutable object iterator x this input return input override public x type serializer factory x get input serializer int index if index throw new illegal argument exception suppress warning unchecked type serializer x ser type serializer x input serializer return new runtime serializer factory x ser class x ser create instance get class override public x type comparator x get driver comparator int index suppress warning unchecked type comparator x comparator type comparator x this comparator get index return comparator override public s get stub return this stub override public collector out get output collector return this output override public abstract invokable get contain task return this owner override public string format log string string message return driver tester message override public operator metric group get metric group return unregistered metric group create unregistered operator metric group after public void shutdown all throw exception 1st shutdown sorter if this sorter null sorter close 2nd shutdown i o this io manager close last verify all memory be return and shutdown mem manager memory manager mem man get memory manager if mem man null assert assert true memory manager manage memory be not completely free mem man verify empty mem man shutdown private static final class list output collector out implement collector out private final list out output private final type serializer out serializer public list output collector list out output list type serializer out serializer this output output list this serializer serializer override public void collect out record this output add serializer copy record override public void close public static final class count output collector out implement collector out private int num override public void collect out record this num override public void close public int get number of record return this num 
bit set test run with parameterized class public class bit set test private bit set bit set int byte size memory segment memory segment public bit set test int byte size this byte size byte size memory segment memory segment factory allocate unpool segment byte size before public void init bit set new bit set byte size bit set set memory segment memory segment bit set clear test expect illegal argument exception class public void verify bit set size1 bit set set memory segment memory segment test expect illegal argument exception class public void verify bit set size2 bit set set memory segment null test expect illegal argument exception class public void verify bit set size3 bit set set memory segment memory segment test expect illegal argument exception class public void verify input index1 bit set set byte size test expect illegal argument exception class public void verify input index2 bit set set test public void test set value int bit size bit set bit size assert equal bit size byte size for int i i bite size i assert false bit set get i if i bite set set i for int i i bite size i if i assert true bit set get i else assert false bit set get i parameterize parameter name byte size public static object get byte size return new integer 
asynchronous operation result test run with parameterized class public class asynchronous operation result test extend rest response marshal test base asynchronous operation result trigger id parameterize parameter public static collection object datum return array as list new object asynchronous operation result in progress asynchronous operation result complete new trigger id private final asynchronous operation result trigger id asynchronous operation result public asynchronous operation result test asynchronous operation result trigger id asynchronous operation result this asynchronous operation result asynchronous operation result override protect class asynchronous operation result trigger id get test response class return class asynchronous operation result trigger id class asynchronous operation result class override protect collection class get type parameter return collection singleton trigger id class override protect asynchronous operation result trigger id get test response instance throw exception return asynchronous operation result override protect void assert original equal to unmarshalled asynchronous operation result trigger id expect asynchronous operation result trigger id actual assert that actual queue status get id be expect queue status get id assert that actual resource be expect resource 
job submit handler test run with parameterized class public class job submit handler test extend test logger parameterize parameter name ssl enable public static iterable tuple2 boolean string datum array list tuple2 boolean string parameter new array list parameter add tuple2 of false no ssl for string ssl provider s s l util test available ssl provider parameter add tuple2 of true ssl provider return parameter class rule public static final temporary folder temporary folder new temporary folder private final configuration configuration private blob server blob server public job submit handler test tuple2 boolean string with ssl this configuration with ssl f0 s s l util test create internal ssl config with key and trust store with ssl f1 new configuration before public void setup throw i o exception configuration config new configuration configuration config set string blob server option storage directory temporary folder new folder get absolute path blob server new blob server config new void blob store blob server start after public void teardown throw i o exception if blob server null blob server close test public void test serialization failure handling throw exception final path job graph file temporary folder new file to path dispatcher gateway mock gateway new testing dispatcher gateway builder set submit function job graph completable future complete future acknowledge get build job submit handler handler new job submit handler completable future complete future mock gateway rpc util inf timeout collection empty map testing util default executor configuration job submit request body request new job submit request body job graph file to string collection empty list collection empty list try handler handle request new handler request request empty message parameter get instance mock gateway assert fail catch rest handler exception rhe assert assert equal http response status bad request rhe get http response status test public void test successful job submission throw exception final path job graph file temporary folder new file to path try object output stream object out new object output stream file new output stream job graph file object out write object new job graph testjob testing dispatcher gateway builder builder new testing dispatcher gateway builder builder set blob server port blob server get port set submit function job graph completable future complete future acknowledge get set hostname localhost dispatcher gateway mock gateway builder build job submit handler handler new job submit handler completable future complete future mock gateway rpc util inf timeout collection empty map testing util default executor configuration job submit request body request new job submit request body job graph file get file name to string collection empty list collection empty list handler handle request new handler request request empty message parameter get instance collection empty map collection empty map collection singleton job graph file to file mock gateway get test public void test rejection on count mismatch throw exception final path job graph file temporary folder new file to path try object output stream object out new object output stream file new output stream job graph file object out write object new job graph testjob final path count exceed file temporary folder new file to path testing dispatcher gateway builder builder new testing dispatcher gateway builder builder set blob server port blob server get port set submit function job graph completable future complete future acknowledge get set hostname localhost dispatcher gateway mock gateway builder build job submit handler handler new job submit handler completable future complete future mock gateway rpc util inf timeout collection empty map testing util default executor configuration job submit request body request new job submit request body job graph file get file name to string collection empty list collection empty list try handler handle request new handler request request empty message parameter get instance collection empty map collection empty map array as list job graph file to file count exceed file to file mock gateway get catch exception e exception util find throwable e candidate candidate instanceof rest handler exception candidate get message contain count test public void test file handling throw exception final string dc entry name entry completable future job graph submit job graph future new completable future dispatcher gateway dispatcher gateway new testing dispatcher gateway builder set blob server port blob server get port set submit function submit job graph submit job graph future complete submit job graph return completable future complete future acknowledge get build job submit handler handler new job submit handler completable future complete future dispatcher gateway rpc util inf timeout collection empty map testing util default executor configuration final path job graph file temporary folder new file to path final path jar file temporary folder new file to path final path artifact file temporary folder new file to path final job graph job graph new job graph the entry that should be update job graph add user artifact dc entry name new distribute cache distribute cache entry random false try object output stream object out new object output stream file new output stream job graph file object out write object job graph job submit request body request new job submit request body job graph file get file name to string collection singleton list jar file get file name to string collection singleton new job submit request body distribute cache file dc entry name artifact file get file name to string handler handle request new handler request request empty message parameter get instance collection empty map collection empty map array as list job graph file to file jar file to file artifact file to file dispatcher gateway get assert assert true no job graph be submit submit job graph future be do final job graph submit job graph submit job graph future get assert assert equal submit job graph get user jar blob key size assert assert equal submit job graph get user artifact size assert assert not null submit job graph get user artifact get dc entry name blob key test public void test fail job submission throw exception final string error message test dispatcher gateway mock gateway new testing dispatcher gateway builder set submit function jobgraph future util complete exceptionally new exception error message build job submit handler handler new job submit handler completable future complete future mock gateway rpc util inf timeout collection empty map testing util default executor configuration final path job graph file temporary folder new file to path job graph job graph new job graph testjob try object output stream object out new object output stream file new output stream job graph file object out write object job graph job submit request body request new job submit request body job graph file get file name to string collection empty list collection empty list try handler handle request new handler request request empty message parameter get instance collection empty map collection empty map collection singleton list job graph file to file mock gateway get catch exception e throwable t exception util strip execution exception e assert assert equal error message t get message 
job execution result response body test run with parameterized class public class job execution result response body test extend rest response marshal test base job execution result response body private static final job i d test job id new job i d private static final long test net runtime long max value private static final byte test accumulator value private static final string test accumulator name test private static final map string serialize value optional failure object test accumulator collection singleton map test accumulator name serialize value from byte test accumulator value parameterize parameter public static collection object datum throw i o exception return array as list new object job execution result response body create new job result builder job id test job id application status application status succeed net runtime test net runtime accumulator result test accumulator serialize throwable new serialize throwable new runtime exception expect build job execution result response body create new job result builder job id test job id application status application status fail net runtime test net runtime accumulator result test accumulator build job execution result response body in progress private final job execution result response body job execution result response body public job execution result response body test final job execution result response body job execution result response body this job execution result response body job execution result response body override protect class job execution result response body get test response class return job execution result response body class override protect job execution result response body get test response instance throw exception return job execution result response body override protect void assert original equal to unmarshalled final job execution result response body expect final job execution result response body actual assert that actual get status equal to actual get status final job result expect job execution result expect get job execution result final job result actual job execution result actual get job execution result if expect job execution result null assert not null actual job execution result assert that actual job execution result get job id equal to expect job execution result get job id assert that actual job execution result get application status equal to expect job execution result get application status assert that actual job execution result get net runtime equal to expect job execution result get net runtime assert that actual job execution result get accumulator result equal to expect job execution result get accumulator result final optional serialize throwable expect failure cause optional expect job execution result get serialize throwable expect failure cause optional if present expected failure cause final serialize throwable actual failure cause actual job execution result get serialize throwable or else throw new assertion error actual failure cause be not available assert that actual failure cause get full stringify stack trace equal to expect failure cause get full stringify stack trace assert that actual failure cause get original error class name equal to expect failure cause get original error class name assert array equal expect failure cause get serialize exception actual failure cause get serialize exception if expect job execution result get accumulator result null assert not null actual job execution result get accumulator result assert array equal actual job execution result get accumulator result get test accumulator name get byte array expect job execution result get accumulator result get test accumulator name get byte array 
savepoint info marshal test run with parameterized class public class savepoint info marshal test extend rest response marshal test base savepoint info parameterize parameter public static collection object datum return array as list new object new savepoint info tmp null new savepoint info null new serialize throwable new runtime exception expect private final savepoint info savepoint info public savepoint info marshal test savepoint info savepoint info this savepoint info savepoint info override protect class savepoint info get test response class return savepoint info class override protect savepoint info get test response instance throw exception return savepoint info override protect void assert original equal to unmarshalled savepoint info expect savepoint info actual assert that actual get location be expect get location if expect get failure cause null assert that actual get failure cause not null value assert that actual get failure cause deserialize error class loader get system class loader get message be expect get failure cause deserialize error class loader get system class loader get message 
savepoint trigger request body test run with parameterized class public class savepoint trigger request body test extend rest request marshal test base savepoint trigger request body private final savepoint trigger request body savepoint trigger request body public savepoint trigger request body test final savepoint trigger request body savepoint trigger request body this savepoint trigger request body savepoint trigger request body parameterized parameter public static collection object datum return array as list new object new savepoint trigger request body tmp true new savepoint trigger request body tmp false override protect class savepoint trigger request body get test request class return savepoint trigger request body class override protect savepoint trigger request body get test request instance return savepoint trigger request body override protect void assert original equal to unmarshalled final savepoint trigger request body expect final savepoint trigger request body actual assert equal expect get target directory actual get target directory 
rest server endpoint i t case run with parameterized class public class rest server endpoint i t case extend test logger private static final job i d path job id new job i d private static final job i d query job id new job i d private static final string job id key jobid private static final time timeout time seconds 10 l private static final int test rest max content length rule public temporary folder temporary folder new temporary folder private rest server endpoint server endpoint private rest client rest client private test upload handler test upload handler private inet socket address server address private final configuration config private s s l context default s s l context private s s l socket factory default s s l socket factory private test handler test handler public rest server endpoint i t case final configuration config this config require non null config parameterize parameter public static collection object datum throw exception final configuration config get base config final string truststore path get test resource local127 truststore get absolute path final string keystore path get test resource local127 keystore get absolute path final configuration ssl config new configuration config ssl config set boolean security option ssl rest enable true ssl config set string security option ssl rest truststore truststore path ssl config set string security option ssl rest truststore password password ssl config set string security option ssl rest keystore keystore path ssl config set string security option ssl rest keystore password password ssl config set string security option ssl rest key password password final configuration ssl rest auth config new configuration ssl config ssl rest auth config set boolean security option ssl rest authentication enable true final configuration ssl pin rest auth config new configuration ssl rest auth config ssl pin rest auth config set string security option ssl rest cert fingerprint s s l util test get rest certificate fingerprint ssl pin rest auth config flink test return array as list new object config ssl config ssl rest auth config ssl pin rest auth config private static configuration get base config final string loopback address inet address get loopback address get host address final configuration config new configuration config set string rest option bind port config set string rest option bind address loopback address config set string rest option address loopback address config set integer rest option server max content length test rest max content length config set integer rest option client max content length test rest max content length return config before public void setup throw exception config set string web option upload dir temporary folder new folder get canonical path default s s l context s s l context get default default s s l socket factory http u be l connection get default s s l socket factory final s s l context ssl client context s s l util create rest s s l context config true if ssl client context null s s l context set default ssl client context http u be l connection set default s s l socket factory ssl client context get socket factory rest server endpoint configuration server config rest server endpoint configuration from configuration config rest client configuration client config rest client configuration from configuration config restful gateway mock restful gateway mock restful gateway class final gateway retriever restful gateway mock gateway retriever completable future complete future mock restful gateway test handler new test handler mock gateway retriever rpc util inf timeout test version handler test version handler new test version handler mock gateway retriever rpc util inf timeout test version selection handler1 test version selection handler1 new test version selection handler1 mock gateway retriever rpc util inf timeout test version selection handler2 test version selection handler2 new test version selection handler2 mock gateway retriever rpc util inf timeout test upload handler new test upload handler mock gateway retriever rpc util inf timeout final static file server handler restful gateway static file server handler new static file server handler mock gateway retriever rpc util inf timeout temporary folder get root final list tuple2 rest handler specification channel inbound handler handler array as list tuple2 of new test header test handler tuple2 of test upload header instance test upload handler tuple2 of test version handler get message header test version handler tuple2 of test version selection handler1 get message header test version selection handler1 tuple2 of test version selection handler2 get message header test version selection handler2 tuple2 of web content handler specification get instance static file server handler server endpoint new test rest server endpoint server config handler rest client new test rest client client config server endpoint start server address server endpoint get server address after public void teardown throw exception if default s s l context null s s l context set default default s s l context http u be l connection set default s s l socket factory default s s l socket factory if rest client null rest client shutdown timeout rest client null if server endpoint null server endpoint close async get timeout get size timeout get unit server endpoint null test that request be handle as individual unit which don t interfere with each other this mean that request response can overtake each other test public void test request interleave throw exception final handler blocker handler blocker new handler blocker timeout test handler handler body id if id handler blocker arrive and block return completable future complete future new test response id send first request and wait until the handler block final completable future test response response1 send request to test handler new test request handler blocker await request to arrive send second request and verify response final completable future test response response2 send request to test handler new test request assert equal response2 get id wake up block handler handler blocker unblock request verify response to first request assert equal response1 get id test that a bad handler request handler request can not be create be report as a bad request and not a internal server error p see flink test public void test bad handler request throw exception final faulty test parameter parameter new faulty test parameter parameter faulty job i d path parameter resolve path job id test parameter parameter job i d query parameter resolve collection singleton list query job id completable future test response response rest client send request server address get host name server address get port new test header parameter new test request try response get fail the request should fail with a bad request return code catch execution exception ee throwable t exception util strip execution exception ee assert true t instanceof rest client exception rest client exception rce rest client exception t assert equal http response status bad request rce get http response status test that request larger than link test rest max content length be reject test public void test should respect max content length limit for request throw exception test handler handler body id throw new assertion error request should not arrive at server try send request to test handler new test request create string of size test rest max content length get fail expect exception not throw catch final execution exception e final throwable throwable exception util strip execution exception e assert that throwable instance of rest client exception class assert that throwable get message contain string try to raise test that response larger than link test rest max content length be reject test public void test should respect max content length limit for response throw exception test handler handler body id completable future complete future new test response id create string of size test rest max content length try send request to test handler new test request get fail expect exception not throw catch final execution exception e final throwable throwable exception util strip execution exception e assert that throwable instance of too long frame exception class assert that throwable get message contain string try to raise test that multipart form datum upload work correctly see file upload handler test public void test file upload throw exception final string boundary generate multi part boundary final string crlf be n final string upload content hello final http u r l connection connection open http connection for upload boundary try output stream output connection get output stream print writer writer new print writer new output stream writer output standard charset utf true writer append boundary append crlf writer append content disposition form datum name foo filename bar append crlf writer append content type plain text charset utf8 append crlf writer append crlf flush output write upload content get byte standard charset utf output flush writer append crlf flush writer append boundary append crlf flush assert equal connection get response code final byte last upload file contents test upload handler get last upload file contents assert equal upload content new string last upload file contents standard charset utf send multipart form datum without a file should result in a bad request if the handler expect a file upload test public void test multi part form datum without file upload throw exception final string boundary generate multi part boundary final string crlf be n final http u be l connection connection open http connection for upload boundary try output stream output connection get output stream print writer writer new print writer new output stream writer output standard charset utf true writer append boundary append crlf writer append content disposition form datum name foo append crlf writer append crlf flush output write test get byte standard charset utf output flush writer append crlf flush writer append boundary append crlf flush assert equal connection get response code test that file can be serve with the link static file server handler test public void test static file server handler throw exception final file file temporary folder new file file write file to path collection singleton list foobar final url url new url server endpoint get rest base url file get name final http u be l connection connection http u r l connection url open connection connection set request method get final string file contents i o util to string connection get input stream assert equal foobar file contents trim test public void test versioning throw exception completable future empty response body unspecified version response rest client send request server address get host name server address get port test version header instance empty message parameter get instance empty request body get instance collection empty list unspecified version response get time unit seconds completable future empty response body specify version response rest client send request server address get host name server address get port test version header instance empty message parameter get instance empty request body get instance collection empty list rest a p i version v1 specify version response get time unit seconds test public void test version selection throw exception completable future empty response body version1 response rest client send request server address get host name server address get port test version selection headers1 instance empty message parameter get instance empty request body get instance collection empty list rest a p i version v0 try version1 response get time unit seconds fail catch execution exception ee rest client exception rce rest client exception ee get cause assert equal http response status ok rce get http response status completable future empty response body version2 response rest client send request server address get host name server address get port test version selection headers2 instance empty message parameter get instance empty request body get instance collection empty list rest a p i version v1 try version2 response get time unit seconds fail catch execution exception ee rest client exception rce rest client exception ee get cause assert equal http response status accept rce get http response status test public void test default version routing throw exception assume assume false ignore ssl enable test to keep ok http usage simple config get boolean security option ssl rest enable ok http client client new ok http client final request request new request builder url server endpoint get rest base url test version selection headers2 instance get target rest endpoint u r l build try final response response client new call request execute assert equal http response status accept code response code test public void test non ssl redirect for enable ssl throw exception assume assume true config get boolean security option ssl rest enable ok http client client new ok http client builder follow redirect false build string http url server endpoint get rest base url path string http url http url replace http http request request new request builder url http url build try final response response client new call request execute assert equal http response status move permanently code response code assert that response header name have item location assert equal http url response header location test that after call link rest server endpoint close async the handler be close first and we wait for in flight request to finish as long as not all handler be closed http request should be serve test public void test should wait for handler when close throw exception test handler close future new completable future final handler blocker handler blocker new handler blocker timeout test handler handler body id intentionally schedule the work on a different thread this be to simulate handler where the completable future be finish by the rpc framework return completable future supply async handler blocker arrive and block return new test response id initiate close rest server endpoint but the test handler should block final completable future void close rest server endpoint future server endpoint close async assert that close rest server endpoint future be do be false final completable future test response request send request to test handler new test request handler blocker await request to arrive allow handler to close but there be still one in flight request which should prevent the rest server endpoint from close test handler close future complete null assert that close rest server endpoint future be do be false finish the in flight request handler blocker unblock request request get timeout get size timeout get unit close rest server endpoint future get timeout get size timeout get unit test public void test rest server bind port throw exception final int port range start final int port range end final configuration config new configuration config set string rest option address localhost config set string rest option bind port port range start port range end final rest server endpoint configuration server config rest server endpoint configuration from configuration config try rest server endpoint server endpoint1 new test rest server endpoint server config collection empty list rest server endpoint server endpoint2 new test rest server endpoint server config collection empty list server endpoint1 start server endpoint2 start assert not equal server endpoint1 get server address get port server endpoint2 get server address get port assert that server endpoint1 get server address get port be greater than or equal to port range start assert that server endpoint1 get server address get port be less than or equal to port range end assert that server endpoint2 get server address get port be greater than or equal to port range start assert that server endpoint2 get server address get port be less than or equal to port range end test public void test endpoint must be unique throw exception final rest server endpoint configuration server config rest server endpoint configuration from configuration config final list tuple2 rest handler specification channel inbound handler handler array as list tuple2 of new test header test handler tuple2 of new test header test upload handler assert throw rest handler registration flink runtime exception class try test rest server endpoint rest server endpoint new test rest server endpoint server config handler rest server endpoint start return null test public void test duplicate handler registration be forbid throw exception final rest server endpoint configuration server config rest server endpoint configuration from configuration config final list tuple2 rest handler specification channel inbound handler handler array as list tuple2 of new test header test handler tuple2 of test upload header instance test handler assert throw duplicate rest handler flink runtime exception class try test rest server endpoint rest server endpoint new test rest server endpoint server config handler rest server endpoint start return null private static file get test resource final string file name final class loader class loader class loader get system class loader final url resource class loader get resource file name if resource null throw new illegal argument exception string format test resource s do not exist file name return new file resource get file private http u be l connection open http connection for upload final string boundary throw i o exception final http u be l connection connection http u r l connection new url server endpoint get rest base url upload open connection connection set do output true connection set request property content type multipart form datum boundary boundary return connection private static string generate multi part boundary return long to hex string system current time milli private static string create string of size int size string builder sb new string builder size for int i i size i sb append a return sb to string static class test rest server endpoint extend rest server endpoint private final list tuple2 rest handler specification channel inbound handler handler test rest server endpoint rest server endpoint configuration configuration list tuple2 rest handler specification channel inbound handler handler throw i o exception super configuration this handler require non null handler override protect list tuple2 rest handler specification channel inbound handler initialize handler final completable future string local address future return handler override protect void start internal private static class test handler extend abstract rest handler restful gateway test request test response test parameter private completable future void close future completable future complete future null private function integer completable future test response handler body test handler gateway retriever restful gateway leader retriever time timeout super leader retriever timeout collection empty map new test header override protect completable future test response handle request nonnull handler request test request test parameter request restful gateway gateway assert equal request get path parameter job i d path parameter class path job id assert equal request get query parameter job i d query parameter class get query job id final int id request get request body id return handler body apply id override public completable future void close handler async return close future private completable future test response send request to test handler final test request test request try return rest client send request server address get host name server address get port new test header create test parameter test request catch final i o exception e throw new runtime exception e private static test parameter create test parameter final test parameter parameter new test parameter parameter job i d path parameter resolve path job id parameter job i d query parameter resolve collection singleton list query job id return parameter this be a helper class for test that require to have fine grained control over http request so that they be not dispatch immediately private static class handler blocker private final time timeout private final count down latch request arrive latch new count down latch private final count down latch finish request latch new count down latch private handler blocker final time timeout this timeout check not null timeout wait until link arrive and block be call public void await request to arrive try assert true request arrive latch await timeout get size timeout get unit catch final interrupted exception e thread current thread interrupt signal that the request arrive this method block until link unblock request be call public void arrive and block mark request arrive try assert true finish request latch await timeout get size timeout get unit catch final interrupted exception e thread current thread interrupt see arrive and block public void unblock request finish request latch count down private void mark request arrive request arrive latch count down static class test rest client extend rest client test rest client rest client configuration configuration super configuration testing util default executor private static class test request implement request body public final int id public final string content public test request int id this id null json creator public test request json property id int id json property content final string content this id id this content content private static class test response implement response body public final int id public final string content public test response int id this id null json creator public test response json property id int id json property content string content this id id this content content private static class test header implement message header test request test response test parameter override public http method wrapper get http method return http method wrapper post override public string get target rest endpoint u r l return test jobid override public class test request get request class return test request class override public class test response get response class return test response class override public http response status get response status code return http response status ok override public string get description return override public test parameter get unresolved message parameter return new test parameter private static class test parameter extend message parameter private final job i d path parameter job i d path parameter new job i d path parameter private final job i d query parameter job i d query parameter new job i d query parameter override public collection message path parameter get path parameter return collection singleton job i d path parameter override public collection message query parameter get query parameter return collection singleton job i d query parameter private static class faulty test parameter extend test parameter private final faulty job i d path parameter faulty job i d path parameter new faulty job i d path parameter override public collection message path parameter get path parameter return collection singleton faulty job i d path parameter static class job i d path parameter extend message path parameter job i d job i d path parameter super job id key override public job i would convert from string string value return job i d from hex string value override protect string convert to string job i d value return value to string override public string get description return correct job i d parameter static class faulty job i d path parameter extend message path parameter job i d faulty job i d path parameter super job id key override protect job i would convert from string string value throw conversion exception return job i d from hex string value override protect string convert to string job i d value return foobar override public string get description return faulty job i d parameter static class job i d query parameter extend message query parameter job i d job i d query parameter super job id key message parameter requisiteness mandatory override public job i would convert string to value string value return job i d from hex string value override public string convert value to string job i d value return value to string override public string get description return query job i d parameter private static class test upload handler extend abstract rest handler restful gateway empty request body empty response body empty message parameter private volatile byte last upload file contents private test upload handler final gateway retriever extend restful gateway leader retriever final time timeout super leader retriever timeout collection empty map test upload header instance override protect completable future empty response body handle request nonnull final handler request empty request body empty message parameter request nonnull final restful gateway gateway throw rest handler exception collection path upload file request get upload file stream map file to path collect collector to list if upload file size throw new rest handler exception expect file receive upload file size http response status bad request try last upload file contents file read all byte upload file iterator next catch i o exception e throw new rest handler exception could not read contents of upload file http response status internal server error e return completable future complete future empty response body get instance public byte get last upload file contents return last upload file contents static class test version handler extend abstract rest handler restful gateway empty request body empty response body empty message parameter test version handler final gateway retriever extend restful gateway leader retriever final time timeout super leader retriever timeout collection empty map test version header instance override protect completable future empty response body handle request nonnull handler request empty request body empty message parameter request nonnull restful gateway gateway throw rest handler exception return completable future complete future empty response body get instance enum test version header implement message header empty request body empty response body empty message parameter instance override public class empty request body get request class return empty request body class override public http method wrapper get http method return http method wrapper get override public string get target rest endpoint u r l return test version override public class empty response body get response class return empty response body class override public http response status get response status code return http response status ok override public string get description return null override public empty message parameter get unresolved message parameter return empty message parameter get instance override public collection rest a p i version get support a p i version return collection singleton rest a p i version v1 private interface test version selection header base extend message header empty request body empty response body empty message parameter override default class empty request body get request class return empty request body class override default http method wrapper get http method return http method wrapper get override default string get target rest endpoint u r l return test select version override default class empty response body get response class return empty response body class override default http response status get response status code return http response status ok override default string get description return null override default empty message parameter get unresolved message parameter return empty message parameter get instance private enum test version selection headers1 implement test version selection header base instance override public collection rest a p i version get support a p i version return collection singleton rest a p i version v0 private enum test version selection headers2 implement test version selection header base instance override public collection rest a p i version get support a p i version return collection singleton rest a p i version v1 private static class test version selection handler1 extend abstract rest handler restful gateway empty request body empty response body empty message parameter private test version selection handler1 final gateway retriever extend restful gateway leader retriever final time timeout super leader retriever timeout collection empty map test version selection headers1 instance override protect completable future empty response body handle request nonnull handler request empty request body empty message parameter request nonnull restful gateway gateway throw rest handler exception throw new rest handler exception test failure http response status ok private static class test version selection handler2 extend abstract rest handler restful gateway empty request body empty response body empty message parameter private test version selection handler2 final gateway retriever extend restful gateway leader retriever final time timeout super leader retriever timeout collection empty map test version selection headers2 instance override protect completable future empty response body handle request nonnull handler request empty request body empty message parameter request nonnull restful gateway gateway throw rest handler exception throw new rest handler exception test failure http response status accept private enum test upload header implement message header empty request body empty response body empty message parameter instance override public class empty response body get response class return empty response body class override public http response status get response status code return http response status ok override public class empty request body get request class return empty request body class override public empty message parameter get unresolved message parameter return empty message parameter get instance override public http method wrapper get http method return http method wrapper post override public string get target rest endpoint u r l return upload override public string get description return override public boolean accept file upload return true 
rest server s s l auth i t case run with parameterized class public class rest server s s l auth i t case extend test logger private static final string key store file rest server s s l auth i t case class get resource local127 keystore get file private static final string trust store file rest server s s l auth i t case class get resource local127 truststore get file private static final string untrusted key store file rest server s s l auth i t case class get resource untrusted keystore get file private static final time timeout time seconds 10 l private final configuration client config private final configuration server config public rest server s s l auth i t case final tuple2 configuration configuration clinet server config this client config clinet server config f0 this server config clinet server config f1 parameterized parameter public static collection object datum throw exception client and server trust store do not match tuple2 configuration configuration untrusted get client server configuration configuration server config new configuration untrusted f1 server config set string security option ssl rest truststore trust store file expect fingerprint which client do not have server config set string security option ssl rest cert fingerprint s s l util test get rest certificate fingerprint server config flink test replace all 0 - 9 a z configuration client config new configuration untrusted f0 client config set string security option ssl rest truststore trust store file client and server use same trust store however server configure with mismatch fingerprint tuple2 configuration configuration with fingerprint tuple2 of client config server config return array as list new object untrusted with fingerprint test public void test connect failure throw exception rest client rest client null rest server endpoint server endpoint null try rest server endpoint configuration rest server config rest server endpoint configuration from configuration server config rest client configuration rest client config rest client configuration from configuration client config restful gateway restful gateway new testing restful gateway builder build rest server endpoint i t case test version handler test version handler new rest server endpoint i t case test version handler completable future complete future restful gateway rpc util inf timeout server endpoint new rest server endpoint i t case test rest server endpoint rest server config array as list tuple2 of test version handler get message header test version handler rest client new rest server endpoint i t case test rest client rest client config server endpoint start completable future empty response body response rest client send request server endpoint get server address get host name server endpoint get server address get port rest server endpoint i t case test version header instance empty message parameter get instance empty request body get instance collection empty list response get time unit seconds fail should never complete normally catch execution exception exception that be what we want assert true exception util find throwable exception s s l exception class be present finally if rest client null rest client shutdown timeout if server endpoint null server endpoint close private static tuple2 configuration configuration get client server configuration final configuration base config new configuration base config set string rest option bind port base config set string rest option address localhost base config set boolean security option ssl rest enable true base config set boolean security option ssl rest authentication enable true base config set string security option ssl algorithm tl rsa with aes cbc sha configuration server config new configuration base config server config set string security option ssl rest truststore trust store file server config set string security option ssl rest truststore password password server config set string security option ssl rest keystore key store file server config set string security option ssl rest keystore password password server config set string security option ssl rest key password password configuration client config new configuration base config client config set string security option ssl rest truststore untrusted key store file client config set string security option ssl rest truststore password password client config set string security option ssl rest keystore key store file client config set string security option ssl rest keystore password password client config set string security option ssl rest key password password return tuple2 of client config server config 
array list serializer upgrade test run with parameterized class public class array list serializer upgrade test extend type serializer upgrade test base array list string array list string private static final string spec name arraylist serializer public array list serializer upgrade test test specification array list string array list string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version array list serializer setup class array list serializer verifier class return test specification specification for arraylist serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class array list serializer setup implement type serializer upgrade test base pre upgrade setup array list string override public type serializer array list string create prior serializer return new array list serializer string serializer instance override public array list string create test datum array list string datum new array list datum add apache datum add flink return datum this class be only public to work with link org apache flink api common typeutil class relocator public static final class array list serializer verifier implement type serializer upgrade test base upgrade verifier array list string override public type serializer array list string create upgrade serializer return new array list serializer string serializer instance override public matcher array list string test datum matcher array list string datum new array list datum add apache datum add flink return be datum override public matcher type serializer schema compatibility array list string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
file state backend test run with parameterized class public class file state backend test extend state backend test base f state backend parameterized parameter public static list boolean mode return array as list true false parameterized parameter public boolean use async mode rule public final temporary folder temp folder new temporary folder override protect fs state backend get state backend throw exception file checkpoint path temp folder new folder return new f state backend checkpoint path to u be i use async mode override protect boolean be serializer presence require on restore return true disable these because the verification do not work for this state backend override test public void test value state restore with wrong serializer override test public void test list state restore with wrong serializer override test public void test reduce state restore with wrong serializer override test public void test map state restore with wrong serializer ignore test public void test concurrent map if queryable throw exception super test concurrent map if queryable 
checkpoint state output stream test run with parameterized class public class checkpoint state output stream test extend test logger rule public final temporary folder tmp new temporary folder public enum checkpoint state output stream type file base state f checkpoint meta datum parameterized parameter public static collection checkpoint state output stream type get checkpoint state output stream type return array as list checkpoint state output stream type value parameterize parameter public checkpoint state output stream type state output stream type test validate that even empty stream create a file and a file state handle test public void test empty state throw exception final file system f file system get local file system final path folder base folder final string file name my file name final path file path new path folder file name final file state handle handle try f s datum output stream stream create test stream fs folder file name handle close and get result stream must have create a handle assert not null handle assert equal file path handle get file path the pointer path should exist as a directory assert true f exist handle get file path assert false f get file status file path be dir the contents should be empty try f s datum input stream in handle open input stream assert equal in read simple write and read test test public void test write and read throw exception final file system f file system get local file system final path folder base folder final string file name foo bar name final random rnd new random final byte datum new byte write the datum mixed single byte write and array write final file state handle handle try f s datum output stream stream create test stream fs folder file name for int i i datum length if rnd next boolean stream write datum i else int len rnd next int math min datum length i stream write datum i len i len handle close and get result stream stream from handle must hold the contents try f s datum input stream in handle open input stream byte buffer new byte datum length read fully in buffer assert array equal datum buffer the pointer must point to a file with that contents try f s datum input stream in f open handle get file path byte buffer new byte datum length read fully in buffer assert array equal datum buffer test that the underlie stream file be delete upon call close test public void test cleanup when close stream throw i o exception final file system f file system get local file system final path folder new path tmp new folder to u be i final string file name non creative test file name final path path new path folder file name write some test datum and close the stream try f s datum output stream stream create test stream fs folder file name random rnd new random for int i i rnd next int i stream write rnd next int assert true f exist path assert false f exist path test that the underlie stream file be delete if the close and get handle method fail test public void test cleanup when fail close and get handle throw i o exception final path folder new path tmp new folder to u be i final string file name test name final path file path new path folder file name final file system f spy new test f path new fail close stream new file path get path f s datum output stream stream create test stream fs folder file name stream write new byte try close and get result stream fail expect i o exception catch i o exception ignore expected exception verify f delete file path false this test validate that a close operation can happen even while a close and get handle call be in progress p p that behavior be essential for fast cancellation concurrent cleanup test public void test close do not lock throw exception final path folder new path tmp new folder to u be i final string file name this be ignore anyways file final file system file system spy new test f path new blocker stream final f s datum output stream checkpoint stream create test stream file system folder file name final one shot latch sync new one shot latch final check thread thread new check thread override public void go throw exception sync trigger that call should now block because it access the position close and get result checkpoint stream thread start sync await checkpoint stream close the thread may or may not fail that depend on the thread race it be not important for this test important be that the thread do not freeze lock up try thread sync catch i o exception ignore create a new test stream instance private f s datum output stream create test stream file system f path dir string file name throw i o exception switch state output stream type case file base state return new file base state output stream f new path dir file name case f checkpoint meta datum path full path new path dir file name return new f checkpoint metadata output stream f full path dir default throw new illegal state exception unsupported checkpoint stream output type close the stream successfully and return a file state handle to the result private file state handle close and get result f s datum output stream stream throw i o exception switch state output stream type case file base state return file base state output stream stream close and get handle case fs checkpoint meta datum return f checkpoint metadata output stream stream close and finalize checkpoint get metadata handle default throw new illegal state exception unsupported checkpoint stream output type utility private path base folder throw exception return new path new file tmp new folder uuid random u u i d to string to u be i private static void read fully input stream in byte buffer throw i o exception int pos int remain buffer length while remain int read in read buffer po remain if read throw new e o f exception pos read remain read private static class blocker stream extend f s datum output stream private final one shot latch blocker new one shot latch override public long get po throw i o exception block return 0 l override public void write int b throw i o exception block override public void flush throw i o exception block override public void sync throw i o exception block override public void close throw i o exception blocker trigger private void block throw i o exception try blocker await catch interrupted exception e throw new i o exception interrupt throw new i o exception close private static class fail close stream extend local datum output stream fail close stream file file throw i o exception super file override public void close throw i o exception throw new i o exception private static class test f extend local file system private final function with exception path f s datum output stream i o exception stream factory test fs function with exception path f s datum output stream i o exception stream factory this stream factory stream factory override public f s datum output stream create path file path write mode overwrite throw i o exception return stream factory apply file path 
f checkpoint state output stream test run with parameterized class public class f checkpoint state output stream test parameterized parameter name relative path public static list boolean parameter return array as list true false parameterized parameter public boolean relative path rule public final temporary folder temp dir new temporary folder test expect illegal argument exception class public void test wrong parameter throw exception this should fail new f checkpoint stream factory f checkpoint state output stream path from local file temp dir new folder file system get local file system relative path test public void test empty state throw exception f checkpoint stream factory checkpoint state output stream stream new f checkpoint stream factory f checkpoint state output stream path from local file temp dir new folder file system get local file system relative path stream state handle handle stream close and get handle assert null handle test public void test state below mem threshold throw exception run test false test public void test state one buffer above threshold throw exception run test true test public void test state above mem threshold throw exception run test true test public void test zero threshold throw exception run test true test public void test get po throw exception f checkpoint stream factory checkpoint state output stream stream new f checkpoint stream factory f checkpoint state output stream path from local file temp dir new folder file system get local file system relative path for int i i i assert assert equal i stream get po stream write 0x42 stream close and get handle stream new f checkpoint stream factory f checkpoint state output stream path from local file temp dir new folder file system get local file system relative path byte datum testme get byte config constant default charset for int i i i assert assert equal i datum length stream get po stream write 0x42 stream write datum stream close and get handle test that the underlie stream file be delete upon call close test public void test cleanup when close stream throw i o exception final file system f mock file system class final f s datum output stream output stream mock f s datum output stream class final argument captor path path captor argument captor for class path class when f create path captor capture any file system write mode class then return output stream checkpoint stream factory checkpoint state output stream stream new f checkpoint stream factory f checkpoint state output stream path from local file temp dir new folder f relative path this should create the underlie file stream stream write new byte verify f create any path class any file system write mode class stream close verify f delete eq path captor get value any boolean test that the underlie stream file be delete if the close and get handle method fail test public void test cleanup when fail close and get handle throw i o exception final file system f mock file system class final f s datum output stream output stream mock f s datum output stream class final argument captor path path captor argument captor for class path class when f create path captor capture any file system write mode class then return output stream do throw new i o exception test i o exception when output stream close checkpoint stream factory checkpoint state output stream stream new f checkpoint stream factory f checkpoint state output stream path from local file temp dir new folder f relative path this should create the underlie file stream stream write new byte verify f create any path class any file system write mode class try stream close and get handle fail expect i o exception catch i o exception io e expect exception verify f delete eq path captor get value any boolean private void run test int num byte int buffer size int threshold boolean expect file throw exception f checkpoint stream factory checkpoint state output stream stream new f checkpoint stream factory f checkpoint state output stream path from local file temp dir new folder file system get local file system buffer size threshold relative path random rnd new random byte original new byte num byte byte byte new byte original length rnd next byte original system arraycopy original byte original length the test write a mixture of write individual byte and byte array int pos while pos byte length boolean single rnd next boolean if single stream write byte po else int num rnd next boolean byte length pos rnd next int byte length po stream write byte pos num pos num stream state handle handle stream close and get handle if expect file assert true handle instanceof file state handle else assert true handle instanceof byte stream state handle make sure the writing process do not alter the original byte array assert array equal original byte try input stream in stream handle open input stream byte validation new byte byte length datum input stream datum input stream new datum input stream in stream datum input stream read fully validation assert array equal byte validation handle discard state test public void test write fail fast when close throw exception f checkpoint state output stream stream new f checkpoint state output stream path from local file temp dir new folder file system get local file system relative path assert false stream be closed stream close assert true stream be closed try stream write fail catch i o exception e expect try stream write new byte fail catch i o exception e expect test public void test mix below and above threshold throw exception final byte state1 new byte final byte state2 new byte final byte state3 new byte final byte state4 new byte final random rnd new random rnd next byte state1 rnd next byte state2 rnd next byte state3 rnd next byte state4 final file directory temp dir new folder final path base path path from local file directory final supplier checkpoint state output stream factory new f checkpoint state output stream base path file system get local file system relative path checkpoint state output stream stream1 factory get checkpoint state output stream stream2 factory get checkpoint state output stream stream3 factory get stream1 write state1 stream2 write state2 stream3 write state3 file state handle handle1 file state handle stream1 close and get handle byte stream state handle handle2 byte stream state handle stream2 close and get handle byte stream state handle handle3 byte stream state handle stream3 close and get handle use with try with resource stream state handle handle4 try checkpoint stream factory checkpoint state output stream stream4 factory get stream4 write state4 handle4 stream4 close and get handle close before access handle checkpoint stream factory checkpoint state output stream stream5 factory get stream5 write state4 stream5 close try stream5 close and get handle fail catch i o exception e uh huh validate byte in stream handle1 open input stream state1 handle1 discard state assert false be directory empty directory ensure local file delete handle1 get file path validate byte in stream handle2 open input stream state2 handle2 discard state assert false be directory empty directory nothing be write to the stream so it will return nothing assert null handle3 assert false be directory empty directory validate byte in stream handle4 open input stream state4 handle4 discard state assert true be directory empty directory not delete parent directory this test check that the stream do not check and clean the parent directory when encounter a write error test public void test stream do not try to clean up parent on error throw exception final file directory temp dir new folder prevent creation of file in that directory this operation do not work reliably on window so we use a assume to skip the test be this prerequisite operation be not support assume true directory set writable false true check directory not writable directory file system f spy file system get local file system f checkpoint state output stream stream1 new f checkpoint state output stream path from local file directory f relative path f checkpoint state output stream stream2 new f checkpoint state output stream path from local file directory f relative path stream1 write new byte stream2 write new byte try stream1 close and get handle fail this should fail with a exception catch i o exception ignore stream2 close no delete call must have happen verify fs time delete any path class any boolean the directory must still exist as a proper directory assert true directory exist assert true directory be directory utility private static void ensure local file delete path path uri uri path to uri if file equal uri get scheme file file new file uri get path assert false file not properly delete file exist else throw new illegal argument exception not a local path private static boolean be directory empty file directory if directory exist return true string nest directory list return nest null nest length private static void validate byte in stream input stream be byte datum throw i o exception try byte holder new byte datum length int pos int read while po holder length read be read holder pos holder length po pos read assert equal not enough datum holder length po assert equal too much data be read assert array equal wrong datum datum holder finally be close private static void check directory not writable file directory try try file output stream fos new file output stream new file directory temp fo write fo flush fail this should fail when writing be properly prevent catch i o exception ignore expect work 
heap state backend test base run with parameterized class public abstract class heap state backend test base parameterize parameter public static collection boolean parameter return array as list false true parameterized parameter public boolean async public heap key state backend string create keyed backend collection key state handle state handle throw exception return create key backend string serializer instance state handle public k heap key state backend k create key backend type serializer k key serializer collection key state handle state handle throw exception final key group range key group range new key group range final int num key group key group range get number of key group execution config execution config new execution config return new heap key state backend builder mock task kv state registry class key serializer heap state backend test base class get class loader num key group key group range execution config ttl time provider default state handle abstract state backend get compression decorator execution config test local recovery config disabled new heap priority queue set factory key group range num key group async new closeable registry build 
java serializer upgrade test run with parameterized class public class java serializer upgrade test extend type serializer upgrade test base serializable serializable private static final string spec name java serializer public java serializer upgrade test test specification serializable serializable test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version java serializer setup class java serializer verifier class return test specification specification for java serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class java serializer setup implement type serializer upgrade test base pre upgrade setup serializable override public type serializer serializable create prior serializer return new java serializer override public serializable create test datum return this class be only public to work with link org apache flink api common typeutil class relocator public static final class java serializer verifier implement type serializer upgrade test base upgrade verifier serializable override public type serializer serializable create upgrade serializer return new java serializer override public matcher serializable test datum matcher return be override public matcher type serializer schema compatibility serializable schema compatibility matcher migration version version return type serializer matcher be compatible as be 
memory state backend test run with parameterized class public class memory state backend test extend state backend test base memory state backend parameterize parameter name use asyncmode public static list boolean mode return array as list true false parameterized parameter public boolean use asyncmode override protect memory state backend get state backend return new memory state backend use asyncmode override protect boolean be serializer presence require on restore return true disable these because the verification do not work for this state backend override test public void test value state restore with wrong serializer override test public void test list state restore with wrong serializer override test public void test reduce state restore with wrong serializer override test public void test map state restore with wrong serializer ignore test public void test concurrent map if queryable throw exception super test concurrent map if queryable 
ttl serializer upgrade test run with parameterized class public class ttl serializer upgrade test extend type serializer upgrade test base ttl value string ttl value string public ttl serializer upgrade test test specification ttl value string ttl value string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification ttl serializer migration version ttl serializer setup class ttl serializer verifier class return test specification specification for ttl serializer public static final class ttl serializer setup implement type serializer upgrade test base pre upgrade setup ttl value string override public type serializer ttl value string create prior serializer return new ttl serializer long serializer instance string serializer instance override public ttl value string create test datum return new ttl value hello gordon public static final class ttl serializer verifier implement type serializer upgrade test base upgrade verifier ttl value string override public type serializer ttl value string create upgrade serializer return new ttl serializer long serializer instance string serializer instance override public matcher ttl value string test datum matcher return ttl value be hello gordon be 13 l override public matcher type serializer schema compatibility ttl value string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
ttl state test base run with parameterized class public abstract class ttl state test base protect static final long ttl private static final int inc cleanup all key copy on write state map default capacity copy on write state map default capacity number of key group protect mock ttl time provider time provider protect state backend test context sbetc protect static final string unexpired avail unexpired state should be available protected static final string update unexpired avail unexpired state should be available after update protect static final string expire unavail expire state should be unavailable private static final string expire avail expire state should be available private state ttl config ttl config before public void setup time provider new mock ttl time provider sbetc create state backend test context time provider protect abstract state backend test context create state backend test context ttl time provider time provider parameterize parameter public ttl state test context base ctx parameterized parameter name public static list ttl state test context base test context return array as list new ttl value state test context new ttl fix len elem list state test context new ttl non fix len elem list state test context new ttl map state all entry test context new ttl map state per element test context new ttl map state per null element test context new ttl aggregate state test context new ttl reduce state test context new ttl folding state test context public boolean full snapshot return true suppress warning unchecked protect s extend internal kv state string uv ttl state test context base s uv ctx return ttl state test context base s uv ctx suppress warning unchecked private uv ttl merge state test context uv mctx return ttl merge state test context uv ctx private void init test throw exception init test state ttl config update type on create and write state ttl config state visibility never return expire private void init test state ttl config update type update type state ttl config state visibility visibility throw exception init test update type visibility ttl private void init test state ttl config update type update type state ttl config state visibility visibility long ttl throw exception init test get conf builder ttl set update type update type set state visibility visibility disable cleanup in background build protect static state ttl config builder get conf builder long ttl return state ttl config new builder time millisecond ttl protect s extend state state descriptor s object init test state ttl config ttl config throw exception this ttl config ttl config sbetc create and restore key state backend null sbetc set current key default key state descriptor s object state desc create state ctx init test value return state desc suppress warning unchecked private s extend state state descriptor s object create state throw exception state descriptor s object state descriptor ctx create state descriptor state descriptor enable time to live ttl config ctx ttl state internal kv state string sbetc create state state descriptor default namespace return state descriptor private void take and restore snapshot throw exception restore snapshot sbetc take snapshot number of key group protect void take and restore snapshot int number of key group after restore throw exception restore snapshot sbetc take snapshot number of key group after restore private void restore snapshot key state handle snapshot int number of key group throw exception sbetc create and restore key state backend number of key group snapshot sbetc set current key default key create state protect boolean incremental cleanup support return false test public void test non existent value throw exception init test assert equal non exist state should be empty ctx empty value ctx get test public void test exact expiration on write throw exception init test state ttl config update type on create and write state ttl config state visibility never return expire take and restore snapshot time provider time ctx update ctx update empty take and restore snapshot time provider time assert equal unexpired avail ctx get update empty ctx get take and restore snapshot time provider time ctx update ctx update unexpired take and restore snapshot time provider time assert equal update unexpired avail ctx get unexpired ctx get take and restore snapshot time provider time ctx update ctx update expire take and restore snapshot time provider time assert equal update unexpired avail ctx get update expire ctx get take and restore snapshot time provider time assert equal expire unavail ctx empty value ctx get assert true original state should be clear on access ctx be original empty value test public void test relaxed expiration on write throw exception init test state ttl config update type on create and write state ttl config state visibility return expire if not clean up time provider time ctx update ctx update empty take and restore snapshot time provider time assert equal expire avail ctx get update empty ctx get assert true original state should be clear on access ctx be original empty value assert equal expire state should be clear on access ctx empty value ctx get test public void test exact expiration on read throw exception init test state ttl config update type on read and write state ttl config state visibility never return expire time provider time ctx update ctx update empty take and restore snapshot time provider time assert equal unexpired avail ctx get update empty ctx get take and restore snapshot time provider time assert equal unexpired state should be available after read ctx get update empty ctx get take and restore snapshot time provider time assert equal expire unavail ctx empty value ctx get assert true original state should be clear on access ctx be original empty value test public void test relaxed expiration on read throw exception init test state ttl config update type on read and write state ttl config state visibility return expire if not clean up time provider time ctx update ctx update empty take and restore snapshot time provider time assert equal unexpired avail ctx get update empty ctx get take and restore snapshot time provider time assert equal expire avail ctx get update empty ctx get assert equal expired state should be clear on access ctx empty value ctx get test public void test expiration timestamp overflow throw exception init test state ttl config update type on create and write state ttl config state visibility never return expire long max value time provider time ctx update ctx update empty take and restore snapshot time provider time assert equal unexpired avail ctx get update empty ctx get test public void test merge namespace throw exception assume that ctx instance of ttl merge state test context class init test time provider time list tuple2 string object expire update to merge mctx generate expire update to merge mctx apply state update expire update to merge take and restore snapshot time provider time list tuple2 string object unexpired update to merge mctx generate unexpired update to merge mctx apply state update unexpired update to merge take and restore snapshot time provider time list tuple2 string object final update to merge mctx generate final update to merge mctx apply state update final update to merge take and restore snapshot time provider time mctx ttl state merge namespace target namespace ttl merge state test context namespace mctx ttl state set current namespace target namespace assert equal unexpected result of merge operation mctx get merge result unexpired update to merge final update to merge mctx get test public void test multiple key throw exception init test test multiple state id id sbetc set current key id false test public void test multiple key with snapshot cleanup throw exception assume true full snapshot strategy full snapshot init test get conf builder ttl cleanup full snapshot build set time back after restore to see entry unexpired if it be not clean up in snapshot properly test multiple state id id sbetc set current key id true test public void test multiple namespace throw exception init test test multiple state id id ctx ttl state set current namespace id false test public void test multiple namespace with snapshot cleanup throw exception assume true full snapshot strategy full snapshot init test get conf builder ttl cleanup full snapshot build set time back after restore to see entry unexpired if it be not clean up in snapshot properly test multiple state id id ctx ttl state set current namespace id true private void test multiple state id consumer string id changer boolean time back after restore throw exception test empty storage snapshot restore take and restore snapshot time provider time id changer accept id2 ctx update ctx update empty take and restore snapshot time provider time id changer accept id1 ctx update ctx update empty id changer accept id2 ctx update ctx update unexpired time provider time take and restore snapshot id changer accept id1 assert equal unexpired avail ctx get update empty ctx get id changer accept id2 assert equal update unexpired avail ctx get unexpired ctx get take and restore snapshot time provider time id changer accept id2 ctx update ctx update expire time provider time take and restore snapshot time provider time time back after restore time provider time id changer accept id1 assert equal expire unavail ctx empty value ctx get id changer accept id2 assert equal update unexpired avail ctx get update expire ctx get time provider time take and restore snapshot time provider time time back after restore time provider time id changer accept id1 assert equal expire unavail ctx empty value ctx get id changer accept id2 assert equal expire unavail ctx empty value ctx get test public void test snapshot change restore throw exception init test time provider time sbetc set current key k1 ctx update ctx update empty time provider time sbetc set current key k1 ctx update ctx update unexpired time provider time sbetc set current key k2 ctx update ctx update empty key state handle snapshot sbetc take snapshot time provider time sbetc set current key k1 ctx update ctx update expire sbetc set current key k2 ctx update ctx update unexpired restore snapshot snapshot number of key group time provider time sbetc set current key k1 assert equal expire unavail ctx empty value ctx get sbetc set current key k2 assert equal unexpired avail ctx get update empty ctx get test expect state migration exception class public void test restore ttl and register non ttl state compat failure throw exception assume that this not instance of mock ttl state test class init test time provider time ctx update ctx update empty key state handle snapshot sbetc take snapshot sbetc create and restore key state backend snapshot sbetc set current key default key sbetc create state ctx create state descriptor test public void test incremental cleanup throw exception assume true incremental cleanup support init test get conf builder ttl cleanup incrementally true build final int key to update copy on write state map default capacity number of key group time provider time create enough key to trigger incremental rehash update key inc cleanup all key ctx update empty time provider time update some update key key to update ctx update unexpired runnable future snapshot result key state handle snapshot runnable future sbetc trigger snapshot update more concurrently with snapshotting update key key to update key to update ctx update unexpired time provider time expire rest trigger more incremental cleanup by other op check rest expire and cleanup update check expire key key to update inc cleanup all key key state handle snapshot snapshot runnable future get get job manager own snapshot restore snapshot which should discard concurrent update time provider time restore snapshot snapshot number of key group check rest unexpired also after restore which should discard concurrent update check unexpired key key to update inc cleanup all key ctx get update empty time provider time remove some for int i key to update i key to update key to update i sbetc set current key integer to string i ctx ttl state clear check update not expire check unexpired key key to update ctx get unexpired trigger more incremental cleanup by other op check that concurrently update and then restore with original value be expire check expire key key to update key to update time provider time check rest expire and cleanup update check expire key key to update inc cleanup all key check update expire check expire key key to update private t void update key int start key int end key t value throw exception for int i start key i end key i sbetc set current key integer to string i ctx update value private t void check unexpired key int start key int end key t value throw exception for int i start key i end key i sbetc set current key integer to string i assert equal unexpired avail value ctx get private void check expire key int start key int end key throw exception for int i start key i end key i sbetc set current key integer to string i assert true original state should be clear ctx be original empty value private void trigger more incremental cleanup by other op throw exception trigger more cleanup by do something out side of inc cleanup all key for int i inc cleanup all key i inc cleanup all key i sbetc set current key integer to string i if i ctx get else ctx update ctx update empty after public void tear down throw exception sbetc dispose 
void namespace serializer upgrade test run with parameterized class public class void namespace serializer upgrade test extend type serializer upgrade test base void namespace void namespace private static final string spec name void namespace serializer public void namespace serializer upgrade test test specification void namespace void namespace test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version void namespace serializer setup class void namespace serializer verifier class return test specification specification for voidnamespace serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class void namespace serializer setup implement type serializer upgrade test base pre upgrade setup void namespace override public type serializer void namespace create prior serializer return void namespace serializer instance override public void namespace create test datum return void namespace instance this class be only public to work with link org apache flink api common typeutil class relocator public static final class void namespace serializer verifier implement type serializer upgrade test base upgrade verifier void namespace override public type serializer void namespace create upgrade serializer return void namespace serializer instance override public matcher void namespace test datum matcher return be void namespace instance override public matcher type serializer schema compatibility void namespace schema compatibility matcher migration version version return type serializer matcher be compatible as be 
rest a p i stability test run with parameterized class public final class rest a p i stability test extend test logger private static final string regenerate snapshot property generate rest snapshot private static final string snapshot resource pattern rest api s snapshot private static final object mapper object mapper new object mapper parameterize parameter name version public static iterable rest a p i version get stable version return array stream rest a p i version value filter rest a p i version be stable version collect collector to list private final rest a p i version api version public rest a p i stability test final rest a p i version api version this api version api version test public void test dispatcher rest a p i stability throw i o exception final string version snapshot file name string format snapshot resource pattern api version get u r l version prefix final rest a p i snapshot current snapshot create snapshot new document dispatcher rest endpoint if system get property regenerate snapshot property null write snapshot version snapshot file name current snapshot final url resource rest a p i stability test class get class loader get resource version snapshot file name if resource null assert fail snapshot file do not exist if you add a new version re run this test with d regenerate snapshot property be set final rest a p i snapshot previous snapshot object mapper read value resource rest a p i snapshot class assert compatible previous snapshot current snapshot private static void write snapshot final string version snapshot file name final rest a p i snapshot snapshot throw i o exception object mapper writer with default pretty printer write value new file src test resource version snapshot file name snapshot system out println rest api snapshot version snapshot file name be update please remember to commit the snapshot private rest a p i snapshot create snapshot final document rest endpoint rest endpoint final list json node call rest endpoint get spec stream we only compare compatibility within the give version filter spec spec get support a p i version contain api version map spec final object node json object mapper create object node for final compatibility routine routine compatibility routine routine final object extract routine get container spec json set routine get key object mapper value to tree extract return json collect collector to list return new rest a p i snapshot call private static void assert compatible final rest a p i snapshot old final rest a p i snapshot cur for final json node old call old call final list tuple2 json node compatibility check result compatibility check result cur call stream map cur call tuple2 of cur call check compatibility old call cur call collect collector to list if compatibility check result stream all match result result f1 get backward compatibility compatibility incompatible fail old call compatibility check result if compatibility check result stream none match result result f1 get backward compatibility compatibility identical assert fail the api be modify in a compatible way but the snapshot be not update to update the snapshot re run this test with d regenerate snapshot property be set check for entirely new call for which the snapshot should be update for final json node cur call cur call final list tuple2 json node compatibility check result compatibility check result old call stream map old call tuple2 of cur call check compatibility old call cur call collect collector to list if compatibility check result stream none match result result f1 get backward compatibility compatibility identical assert fail the api be modify in a compatible way but the snapshot be not update to update the snapshot re run this test with d regenerate snapshot property be set private static void fail final json node old call final list tuple2 json node compatibility check result compatibility check result final string builder sb new string builder sb append no compatible call could be find for old call compatibility check result stream sort collection reverse order comparator compare int tuple tuple f1 get backward compatibility grade for each order result sb append system line separator sb append t reject by candidate result f0 sb append system line separator sb append t compatibility grade result f1 get backward compatibility grade compatibility routine routine size sb append system line separator sb append t incompatibility for assertion error error result f1 get backward compatibility error sb append system line separator sb append t t error get message assert fail sb to string private static compatibility check result check compatibility final json node old call final json node new call return compatibility routine routine stream map routine check compatibility routine old call new call reduce compatibility check result merge get private static x compatibility check result check compatibility final compatibility routine x routine final json node old call final json node cur call final optional x old read json routine old call final optional x cur read json routine cur call return routine check compatibility old cur private static x optional x read json final compatibility routine x routine final json node call final optional json node json container optional of nullable call get routine get key return json container map container json to object container routine get container class private static x x json to object final json node json container final class x container class try return object mapper tree to value json container container class catch json processing exception e throw new runtime exception e static final class rest a p i snapshot public list json node call private rest a p i snapshot require by jackson rest a p i snapshot list json node call this call call 
history server test run with parameterized class public class history server test extend test logger private static final json factory jackson factory new json factory enable json generator feature auto close target disable json generator feature auto close json content private static final object mapper object mapper new object mapper enable deserialization feature fail on miss creator property rule public final temporary folder tmp folder new temporary folder private mini cluster with client resource cluster private file jm directory private file hs directory parameterize parameter name flink version less than 1.4 public static collection boolean parameter return array as list true false parameterized parameter public static boolean version less than14 before public void set up throw exception jm directory tmp folder new folder jm version less than14 hs directory tmp folder new folder hs version less than14 configuration cluster config new configuration cluster config set string job manager option archive dir jm directory to u be i to string cluster new mini cluster with client resource new mini cluster resource configuration builder set configuration cluster config set number task manager set number slot per task manager build cluster before after public void tear down if cluster null cluster after test public void test history server integration throw exception final int num job final int num legacy job count down latch num expect archive job new count down latch num job num legacy job configuration history server config create test configuration false history server hs new history server history server config event if event get type history server archive fetcher archive event type create num expect archive job count down try hs start string base url http localhost hs get web port assert assert equal get job overview base url get job size for int x x num job x run job create legacy archive jm directory to path wait for archive creation num job num legacy job assert true num expect archive job await 10 l time unit seconds assert assert equal num job num legacy job get job overview base url get job size check whether the dashboard configuration contain all expect field get dashboard configuration base url finally hs stop test public void test remove oldest modify archive beyond history size limit throw exception final int num archive to keep in history final int num archive before hs start final int num archive after hs start final int num archive to remove upon hs start num archive before hs start num archive to keep in history final long one minute since epoch l 60 l list string expect job id to keep new link list for int j j num archive before hs start j string job id create legacy archive jm directory to path j one minute since epoch if j num archive to remove upon hs start expect job id to keep add job id count down latch num archive create initially new count down latch num archive to keep in history count down latch num archive delete initially new count down latch num archive to remove upon hs start count down latch num archive create total new count down latch num archive before hs start num archive to remove upon hs start num archive after hs start count down latch num archive delete total new count down latch num archive to remove upon hs start num archive after hs start configuration history server config create test configuration history server option history server cleanup expire job default value history server config set history server option history server retain job num archive to keep in history history server hs new history server history server config event switch event get type case create num archive create initially count down num archive create total count down break case delete num archive delete initially count down num archive delete total count down break try hs start string base url http localhost hs get web port assert true num archive create initially await 10 l time unit seconds assert true num archive delete initially await 10 l time unit seconds assert assert equal new hash set expect job id to keep get id from job overview base url for int j num archive before hs start j num archive before hs start num archive after hs start j expect job id to keep remove expect job id to keep add create legacy archive jm directory to path j one minute since epoch assert true num archive create total await 10 l time unit seconds assert true num archive delete total await 10 l time unit seconds assert assert equal new hash set expect job id to keep get id from job overview base url finally hs stop private set string get id from job overview string base url throw exception return get job overview base url get job stream map job detail get job id map job i d to string collect collector to set test expect illegal configuration exception class public void test fail if history size limit be zero throw exception start history server with size limit test expect illegal configuration exception class public void test fail if history size limit be less than minus one throw exception start history server with size limit private void start history server with size limit int max history size throw i o exception flink exception interrupt exception configuration history server config create test configuration history server option history server cleanup expire job default value history server config set integer history server option history server retain job max history size new history server history server config start test public void test clean expire job throw exception run archive expiration test true test public void test remain expired job throw exception run archive expiration test false private void run archive expiration test boolean cleanup expire job throw exception int num expire job cleanup expire job int num job for int x x num job x run job wait for archive creation num job count down latch num expect archive job new count down latch num job count down latch first archive expire latch new count down latch num expire job count down latch all archive expire latch new count down latch cleanup expire job num job configuration history server config create test configuration cleanup expire job history server hs new history server history server config event switch event get type case create num expect archive job count down break case delete first archive expire latch count down all archive expire latch count down break try hs start string base url http localhost hs get web port assert true num expect archive job await 10 l time unit seconds collection job detail job get job overview base url get job assert assert equal num job job size string job id to delete job stream find first map job detail get job id map job i d to string or else throw new illegal state exception expect at least one exist job delete one archive from jm file delete if exist jm directory to path resolve job id to delete assert true first archive expire latch await 10 l time unit seconds check that archive be still no longer present in hs collection job detail job after deletion get job overview base url get job assert assert equal num job num expire job job after deletion size assert assert equal num expire job job after deletion stream map job detail get job id map job i d to string filter job id job id equal job id to delete count delete remain archive from jm and ensure file be clean up list string remain job id job after deletion stream map job detail get job id map job i d to string collect collector to list for string remain job id remain job id file delete if exist jm directory to path resolve remain job id assert true all archive expire latch await 10 l time unit seconds assert job file clean up cleanup expire job finally hs stop private void assert job file clean up boolean job file should be delete throw i o exception try stream path path file walk hs directory to path final list path job file path filter path path equal hs directory to path map path hs directory to path relativize path filter path path equal path get config json filter path path equal path get job filter path path equal path get job overview json filter path path equal path get overview collect collector to list assert that job file job file should be delete empty not empty private void wait for archive creation int num job throw interrupted exception the job be archive asynchronously after env execute return file archive jm directory list file while archive null archive length num job thread sleep archive jm directory list file private configuration create test configuration boolean cleanup expire job configuration history server config new configuration history server config set string history server option history server archive dir jm directory to u be i to string history server config set string history server option history server web dir hs directory get absolute path history server config set long history server option history server archive refresh interval l history server config set boolean history server option history server cleanup expire job cleanup expire job history server config set integer history server option history server web port return history server config private static dashboard configuration get dashboard configuration string base url throw exception tuple2 integer string response get from h t t p base url dashboard configuration header instance get target rest endpoint u r l return object mapper read value response f1 dashboard configuration class private static multiple job detail get job overview string base url throw exception tuple2 integer string response get from h t t p base url job overview header url return object mapper read value response f1 multiple job detail class private static void run job throw exception stream execution environment env stream execution environment get execution environment env from element add sink new discard sink env execute static tuple2 integer string get from h t t p string url throw exception url u new url url http u r l connection connection http u r l connection u open connection connection set connect timeout connection connect input stream be if connection get response code error be connection get error stream else be connection get input stream return tuple2 of connection get response code i o util to string be connection get content encoding null connection get content encode utf private static string create legacy archive path directory long file modify date throw i o exception string job id create legacy archive directory file job archive directory resolve job id to file job archive set last modify file modify date return job id private static string create legacy archive path directory throw i o exception job i d job id job i d generate string writer sw new string writer try json generator gen jackson factory create generator sw try json object root new json object gen try json array finish new json array gen finish try json object job new json object gen gen write string field jid job id to string gen write string field name testjob gen write string field state job status finish name gen write number field start time 0 l gen write number field end time 1 l gen write number field duration 1 l gen write number field last modification 1 l try json object task new json object gen task gen write number field total if version less than14 gen write number field pend else gen write number field create gen write number field deploy gen write number field schedule gen write number field run gen write number field finish gen write number field cancel gen write number field cancel gen write number field fail string json sw to string archive json archive json new archive json joboverview json f job archivist archive job new org apache flink core f path directory to uri job id collection singleton archive json return job id to string private static final class json object implement auto closeable private final json generator gen json object json generator gen throw i o exception this gen gen gen write start object private json object json generator gen string name throw i o exception this gen gen gen write object field start name override public void close throw i o exception gen write end object private static final class json array implement auto closeable private final json generator gen json array json generator gen string name throw i o exception this gen gen gen write array field start name override public void close throw i o exception gen write end array 
scala either serializer upgrade test run with parameterized class public class scala either serializer upgrade test extend type serializer upgrade test base either integer string either integer string private static final string spec name scala either serializer public scala either serializer upgrade test test specification either integer string either integer string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version either serializer setup class either serializer verifier class return test specification specification for either serializer leave this class be only public to work with link org apache flink api common typeutil class relocator public static final class either serializer setup implement type serializer upgrade test base pre upgrade setup either integer string override public type serializer either integer string create prior serializer return new either serializer int serializer instance string serializer instance override public either integer string create test datum return new right hello world this class be only public to work with link org apache flink api common typeutil class relocator public static final class either serializer verifier implement type serializer upgrade test base upgrade verifier either integer string override public type serializer either integer string create upgrade serializer return new either serializer int serializer instance string serializer instance override public matcher either integer string test datum matcher return be new right hello world override public matcher type serializer schema compatibility either integer string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
scala option serializer upgrade test run with parameterized class public class scala option serializer upgrade test extend type serializer upgrade test base option string option string private static final string spec name scala option serializer public scala option serializer upgrade test test specification option string option string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version scala option serializer setup class scala option serializer verifier class return test specification specification for scala option serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class scala option serializer setup implement type serializer upgrade test base pre upgrade setup option string override public type serializer option string create prior serializer return new option serializer string serializer instance override public option string create test datum return option empty this class be only public to work with link org apache flink api common typeutil class relocator public static final class scala option serializer verifier implement type serializer upgrade test base upgrade verifier option string override public type serializer option string create upgrade serializer return new option serializer string serializer instance override public matcher option string test datum matcher return be option empty override public matcher type serializer schema compatibility option string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
scala try serializer upgrade test run with parameterized class public class scala try serializer upgrade test extend type serializer upgrade test base try string try string private static final string spec name scala try serializer public scala try serializer upgrade test test specification try string try string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version scala try serializer setup class scala try serializer verifier class return test specification specification for scala try serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class scala try serializer setup implement type serializer upgrade test base pre upgrade setup try string override public type serializer try string create prior serializer return new try serializer string serializer instance new execution config suppress warning unchecked override public try string create test datum return new failure new specify exception specify exception for scala try this class be only public to work with link org apache flink api common typeutil class relocator public static final class scala try serializer verifier implement type serializer upgrade test base upgrade verifier try string override public type serializer try string create upgrade serializer return new try serializer string serializer instance new execution config suppress warning unchecked override public matcher try string test datum matcher return be new failure new specify exception specify exception for scala try override public matcher type serializer schema compatibility try string schema compatibility matcher migration version version return type serializer matcher be compatible as be a specify runtime exception override link equal object public static final class specify exception extend runtime exception public specify exception string message super message override public boolean equal object obj if obj this return true if obj instanceof specify exception return false specify exception other specify exception obj return object equal get message other get message 
state backend benchmark util test run with parameterized class public class state backend benchmark util test rule public temporary folder temp new temporary folder private final value state descriptor long value state descriptor new value state descriptor value state long class private final list state descriptor long list state descriptor new list state descriptor list state long class private final map state descriptor long double map state descriptor new map state descriptor map state long class double class parameterize parameter name public static collection object datum return array as list state backend benchmark util state backend type value parameterize parameter public state backend benchmark util state backend type backend type test public void test create key state backend throw i o exception key state backend long backend create key state backend backend type clean up backend test public void test get value state throw exception key state backend long backend create key state backend backend type get value state backend value state descriptor clean up backend test public void test get list state throw exception key state backend long backend create key state backend backend type get list state backend list state descriptor clean up backend test public void test get map state throw exception key state backend long backend create key state backend backend type get map state backend map state descriptor clean up backend test public void test apply to all key throw exception key state backend long backend create key state backend backend type list state long list state get list state backend list state descriptor for long i i i backend set current key i list state add i apply to all key backend list state descriptor k state backend set current key k state clear for long i i i backend set current key i assert assert null list state get clean up backend test public void test compact state throw exception key state backend long backend create key state backend backend type list state long list state get list state backend list state descriptor for long i i i backend set current key i list state add i if backend instanceof rock d b keyed state backend rock d b keyed state backend long rock d b keyed state backend rock d b keyed state backend long backend compact state rock d b keyed state backend list state descriptor clean up backend 
rock d b async snapshot test run with power mock runner class suppress warning serial public class rock d b async snapshot test extend test logger temporary fold for test rule public final temporary folder temporary folder new temporary folder this ensure that asynchronous state handle be actually materialize asynchronously p we use latch to block at various stage and see if the code still continue through the part that be not asynchronous if the checkpoint be not do asynchronously the test will simply lock forever test public void test fully async snapshot throw exception final one input stream task test harness string string test harness new one input stream task test harness one input stream task new basic type info string type info basic type info string type info test harness setup output for singleton operator chain test harness configure for keyed stream new key selector string string override public string get key string value throw exception return value basic type info string type info stream config stream config test harness get stream config file db dir temporary folder new folder rock d b state backend backend new rock d b state backend new memory state backend backend set db storage path db dir get absolute path stream config set state backend backend stream config set stream operator new async checkpoint operator stream config set operator i d new operator i d final one shot latch delay checkpoint latch new one shot latch final one shot latch ensure checkpoint latch new one shot latch checkpoint responder checkpoint responder mock new checkpoint responder override public void acknowledge checkpoint job i d job i d execution attempt i d execution attempt i d long checkpoint id checkpoint metric checkpoint metric task state snapshot subtask state block on the latch to verify that trigger checkpoint return below even though the async checkpoint would not finish try delay checkpoint latch await catch interrupted exception e throw new runtime exception e boolean have manage key state false for map entry operator i d operator subtask state entry subtask state get subtask state mapping operator subtask state state entry get value if state null have manage key state state get manage key state null should be one k v state assert true have manage key state we now know that the checkpoint go through ensure checkpoint latch trigger override public void decline checkpoint job i d job i d execution attempt i d execution attempt i d long checkpoint id throwable cause job i d job i d new job i d execution attempt i d execution attempt i d new execution attempt i d 0 l 0 l test task state manager task state manager test mock new test task state manager job i d execution attempt i d checkpoint responder mock test local recovery config disabled stream mock environment mock env new stream mock environment test harness job config test harness task config test harness memory size new mock input split provider test harness buffer size task state manager test mock atomic reference throwable error ref new atomic reference mock env set external exception handler error ref set test harness invoke mock env test harness wait for task run final one input stream task string string task test harness get task task trigger checkpoint async new checkpoint meta datum checkpoint option for checkpoint with default location false get test harness process element new stream record wohoo now we allow the checkpoint delay checkpoint latch trigger wait for the checkpoint to go through ensure checkpoint latch await test harness end input executor service thread pool task get async operation thread pool thread pool shutdown assert assert true thread pool await termination time unit millisecond test harness wait for task completion if error ref get null fail unexpected exception during execution this test ensure that cancel of asynchronous snapshot work as expect and do not block test public void test cancel fully async checkpoint throw exception final one input stream task test harness string string test harness new one input stream task test harness one input stream task new basic type info string type info basic type info string type info test harness setup output for singleton operator chain test harness configure for keyed stream value value basic type info string type info stream config stream config test harness get stream config file db dir temporary folder new folder final rock d b state backend priority queue state type timer service priority queue type rock d b option timer service factory default value final int skip stream if timer service priority queue type rock d b state backend priority queue state type heap we skip the first create stream because it be use to checkpoint the timer service which be currently not asynchronous skip stream else if timer service priority queue type rock d b state backend priority queue state type rocksdb skip stream else throw new assertion error string format unknown timer service priority queue type s timer service priority queue type this be the proper instance that we need to call blocker checkpoint stream factory blocker checkpoint stream factory new blocker checkpoint stream factory int count skip stream override public checkpoint state output stream create checkpoint state output stream checkpoint state scope scope throw i o exception if count count return new blocking checkpoint output stream new mem checkpoint stream factory memory checkpoint output stream max size null null integer max value else return super create checkpoint state output stream scope to avoid serialization of the above factory instance we need to pass it in through a static variable state backend state backend new backend for test stream new static forward factory blocker checkpoint stream factory rock d b state backend backend new rock d b state backend state backend backend set db storage path db dir get absolute path stream config set state backend backend stream config set stream operator new async checkpoint operator stream config set operator i d new operator i d test task state manager task state manager test mock new test task state manager stream mock environment mock env new stream mock environment test harness job config test harness task config test harness memory size new mock input split provider test harness buffer size task state manager test mock blocker checkpoint stream factory set blocker latch new one shot latch blocker checkpoint stream factory set waiter latch new one shot latch test harness invoke mock env test harness wait for task run final one input stream task string string task test harness get task task trigger checkpoint async new checkpoint meta datum checkpoint option for checkpoint with default location false get test harness process element new stream record wohoo blocker checkpoint stream factory get waiter latch await task cancel blocker checkpoint stream factory get blocker latch trigger test harness end input executor service thread pool task get async operation thread pool thread pool shutdown assert assert true thread pool await termination time unit millisecond set block checkpoint output stream create stream blocker checkpoint stream factory get all create stream for block checkpoint output stream stream create stream assert assert true not all of the create stream size create stream have be close stream be closed try test harness wait for task completion fail operation complete cancel fail catch exception expect throwable cause expect get cause if cause instanceof cancel task exception fail unexpected exception expect test that the snapshot file be clean up in case of a failure during the snapshot procedure test public void test cleanup of snapshot in failure case throw exception long checkpoint id 1 l long timestamp 42 l mock environment env mock environment builder build final i o exception test exception new i o exception test exception checkpoint state output stream output stream spy new fail stream test exception rock d b state backend backend new rock d b state backend state backend new memory state backend backend set db storage path temporary folder new folder to u be i to string abstract key state backend void key state backend backend create key state backend env new job i d test operator void serializer instance new key group range null ttl time provider default new unregistered metric group collection empty list new closeable registry try register a state so that the state backend have to checkpoint something key state backend get partition state namespace string serializer instance new value state descriptor foobar string class runnable future snapshot result key state handle snapshot future key state backend snapshot checkpoint id timestamp new test checkpoint stream factory output stream checkpoint option for checkpoint with default location try future util run if not do and get snapshot future fail expect a exception to be throw here catch execution exception e assert assert equal test exception e get cause verify output stream close finally i o util close quietly key state backend key state backend dispose i o util close quietly env test public void test consistent snapshot serialization flag and mask assert assert equal 0x f f f f end of key group mark assert assert equal 0x80 first bit in byte mask byte expect key new byte byte mod key expect key clone assert assert false have meta datum follow flag mod key set meta datum follow flag in key mod key assert assert true have meta datum follow flag mod key clear meta datum follow flag mod key assert assert false have meta datum follow flag mod key assert assert true array equal expect key mod key private static class async checkpoint operator extend abstract stream operator string implement one input stream operator string string override public void open throw exception super open also get the state in open this way we be sure that it be create before we trigger the test checkpoint value state string state get partition state void namespace instance void namespace serializer instance new value state descriptor count string serializer instance override public void process element stream record string element throw exception we also don t care value state string state get partition state void namespace instance void namespace serializer instance new value state descriptor count string serializer instance state update element get value fail stream private static class static forward factory implement stream factory static checkpoint stream factory factory static forward factory checkpoint stream factory factory static forward factory factory factory override public checkpoint state output stream get throw i o exception return factory create checkpoint state output stream checkpoint state scope exclusive private static class fail stream extend checkpoint state output stream private final i o exception test exception fail stream i o exception test exception this test exception test exception nullable override public stream state handle close and get handle throw new unsupported operation exception override public long get po throw new unsupported operation exception override public void write int b throw i o exception throw test exception override public void flush throw i o exception throw test exception override public void sync throw i o exception throw test exception override public void close throw new unsupported operation exception 
rock d b init test run with power mock runner class prepare for test rock d b class public class rock d b init test rule public final temporary folder temporary folder new temporary folder this test check that the rock d b native code loader still respond to reset the init flag test public void test reset init flag throw exception rock d b state backend reset rock d b loaded flag test public void test temp lib folder delete on fail throw exception power mockito spy rock d b class power mockito when rock d b class load library then throw new expected test exception file temp folder temporary folder new folder try rock d b state backend ensure rock d b be load temp folder get absolute path fail not throw expect exception catch i o exception ignore ignore file file temp folder list file assert assert not null file assert assert equal file length 
rock d b memory controller util test run with power mock runner class prepare for test rock d b memory controller util class public class rock d b memory controller util test rule public final temporary folder temporary folder new temporary folder before public void ensure rock db native library load throw i o exception native library loader get instance load library temporary folder new folder get absolute path test public void test create share resource with expect capacity power mockito mock static rock d b memory controller util class final atomic long actual cache capacity new atomic long 0 l final atomic long actual wbm capacity new atomic long 0 l when rock d b memory controller util allocate rock d b share resource any long any double any double then call real method when rock d b memory controller util calculate actual cache capacity any long any double then call real method when rock d b memory controller util calculate write buffer manager capacity any long any double then call real method because power mockito can not mock on native static method easily we introduce create cache and create write buffer manager wrapper here when rock d b memory controller util create cache any long any double then answer answer l r u cache invocation object argument invocation get argument actual cache capacity set long argument return l r u cache invocation call real method when rock d b memory controller util create write buffer manager any long any cache class then answer answer write buffer manager invocation object argument invocation get argument actual wbm capacity set long argument return write buffer manager invocation call real method long total memory size l double write buffer ratio 0.5 double high pri pool ratio 0.1 rock d b memory controller util allocate rock d b share resource total memory size write buffer ratio high pri pool ratio long expect cache capacity rock d b memory controller util calculate actual cache capacity total memory size write buffer ratio long expect wbm capacity rock d b memory controller util calculate write buffer manager capacity total memory size write buffer ratio assert that actual cache capacity get be expect cache capacity assert that actual wbm capacity get be expect wbm capacity 
rock d b state backend migration test run with parameterized class public class rock d b state backend migration test extend state backend migration test base rock d b state backend parameterized parameter name incremental checkpoint public static collection boolean parameter return array as list false true parameterized parameter public boolean enable incremental checkpointing store it because we need it for the cleanup test private string db path override protect rock d b state backend get state backend throw i o exception db path temp folder new folder get absolute path string checkpoint path temp folder new folder to u be i to string rock d b state backend backend new rock d b state backend new f state backend checkpoint path enable incremental checkpoint configuration configuration new configuration configuration set rock d b option timer service factory rock d b state backend priority queue state type rocksdb backend backend configure configuration thread current thread get context class loader backend set db storage path db path return backend 
rock d b state backend test run with parameterized class public class rock d b state backend test extend state backend test base rock d b state backend private one shot latch blocker private one shot latch waiter private blocker checkpoint stream factory test stream factory private rock d b keyed state backend integer key state backend private list rock object all create closeable private value state integer test state1 private value state string test state2 parameterized parameter name incremental checkpoint public static collection boolean parameter return array as list false true parameterized parameter public boolean enable incremental checkpointing rule public final temporary folder temp folder new temporary folder store it because we need it for the cleanup test private string db path private rock d b db null private column family handle default c f handle null private final rock d b resource container option container new rock d b resource container public void prepare rock d b throw exception string db path new file temp folder new folder db instance dir string get absolute path column family option column option option container get column option array list column family handle column family handle new array list db rock d b operation util open d b db path collection empty list column family handle column option option container get db option default c f handle column family handle remove override protect rock d b state backend get state backend throw i o exception db path temp folder new folder get absolute path string checkpoint path temp folder new folder to u be i to string rock d b state backend backend new rock d b state backend new f state backend checkpoint path enable incremental checkpoint configuration configuration new configuration configuration set rock d b option timer service factory rock d b state backend priority queue state type rocksdb backend backend configure configuration thread current thread get context class loader backend set db storage path db path return backend override protect boolean be serializer presence require on restore return false small safety net for instance cleanup so that no native object be leave after public void cleanup rock d b if key state backend null i o util close quietly key state backend key state backend dispose i o util close quietly default c f handle i o util close quietly db i o util close quietly option container if all create closeable null for rock object rock closeable all create closeable verify rock closeable time close all create closeable null public void setup rock key state backend throw exception blocker new one shot latch waiter new one shot latch test stream factory new blocker checkpoint stream factory test stream factory set blocker latch blocker test stream factory set waiter latch waiter test stream factory set after number invocation prepare rock d b keyed state backend rock d b test util builder for test d b temp folder new folder this be not use anyways because the db be inject int serializer instance spy db default c f handle option container get column option set enable incremental checkpointing enable incremental checkpoint build test state1 key state backend get partition state void namespace instance void namespace serializer instance new value state descriptor test state integer class test state2 key state backend get partition state void namespace instance void namespace serializer instance new value state descriptor test state string class all create closeable new array list do answer new answer object override public object answer invocation on mock invocation on mock throw throwable rock iterator rock iterator spy rock iterator invocation on mock call real method all create closeable add rock iterator return rock iterator when key state backend db new iterator any column family handle class any read option class do answer new answer object override public object answer invocation on mock invocation on mock throw throwable snapshot snapshot spy snapshot invocation on mock call real method all create closeable add snapshot return snapshot when key state backend db get snapshot do answer new answer object override public object answer invocation on mock invocation on mock throw throwable column family handle snapshot spy column family handle invocation on mock call real method all create closeable add snapshot return snapshot when key state backend db create column family any column family descriptor class for int i i i key state backend set current key i test state1 update i test state2 update s i test public void test correct merge operator set throw exception prepare rock d b final column family option column family option spy new column family option rock d b keyed state backend integer test null try test rock d b test util builder for test d b temp folder new folder int serializer instance db default c f handle column family option set enable incremental checkpointing enable incremental checkpoint build value state descriptor string stub state1 new value state descriptor stub state string serializer instance test create internal state string serializer instance stub state1 value state descriptor string stub state2 new value state descriptor stub state string serializer instance test create internal state string serializer instance stub state2 the default cf be pre create so sum up to time once for each stub state verify column family option mockito time set merge operator name rock d b keyed state backend merge operator name finally if test null i o util close quietly test test dispose column family option close test public void test release snapshot after backend close throw exception setup rock key state backend try runnable future snapshot result key state handle snapshot key state backend snapshot 0 l 0 l test stream factory checkpoint option for checkpoint with default location rock d b spy d b key state backend db if enable incremental checkpointing verify spy d b time get snapshot verify spy d b time release snapshot any snapshot class ensure every rock object not close yet for rock object rock closeable all create closeable verify rock closeable time close snapshot cancel true this key state backend dispose verify spy d b time close assert equal true key state backend be disposed ensure every rock object be close exactly once for rock object rock closeable all create closeable verify rock closeable time close finally key state backend dispose key state backend null test public void test dismiss snapshot throw exception setup rock key state backend try runnable future snapshot result key state handle snapshot key state backend snapshot 0 l 0 l test stream factory checkpoint option for checkpoint with default location snapshot cancel true verify rock object release finally this key state backend dispose this key state backend null test public void test dismiss snapshot not runnable throw exception setup rock key state backend try runnable future snapshot result key state handle snapshot key state backend snapshot 0 l 0 l test stream factory checkpoint option for checkpoint with default location snapshot cancel true thread async snapshot thread new thread snapshot async snapshot thread start try snapshot get fail catch exception ignore async snapshot thread join verify rock object release finally this key state backend dispose this key state backend null test public void test complete snapshot throw exception setup rock key state backend try runnable future snapshot result key state handle snapshot key state backend snapshot 0 l 0 l test stream factory checkpoint option for checkpoint with default location thread async snapshot thread new thread snapshot async snapshot thread start waiter await wait for snapshot to run waiter reset run state update blocker trigger allow checkpoint to start write waiter await wait for snapshot stream writing to run snapshot result key state handle snapshot result snapshot get key state handle key state handle snapshot result get job manager own snapshot assert not null key state handle assert true key state handle get state size assert equal key state handle get key group range get number of key group for block checkpoint output stream stream test stream factory get all create stream assert true stream be closed async snapshot thread join verify rock object release finally this key state backend dispose this key state backend null test public void test cancel run snapshot throw exception setup rock key state backend try runnable future snapshot result key state handle snapshot key state backend snapshot 0 l 0 l test stream factory checkpoint option for checkpoint with default location thread async snapshot thread new thread snapshot async snapshot thread start waiter await wait for snapshot to run waiter reset run state update snapshot cancel true blocker trigger allow checkpoint to start write for block checkpoint output stream stream test stream factory get all create stream assert true stream be closed waiter await wait for snapshot stream writing to run try snapshot get fail catch exception ignore async snapshot thread join verify rock object release finally this key state backend dispose this key state backend null test public void test dispose delete all directory throw exception abstract key state backend integer backend create key backend int serializer instance collection file all file in db dir file util list file and dir new file db path new accept all filter new accept all filter try value state descriptor string kv id new value state descriptor id string class null kv id initialize serializer unless set new execution config value state string state backend get partition state void namespace instance void namespace serializer instance kv id backend set current key state update hello more than just the root directory assert true all file in db dir size finally i o util close quietly backend backend dispose all file in db dir file util list file and dir new file db path new accept all filter new accept all filter just the root directory leave assert equal all file in db dir size test public void test share incremental state de registration throw exception if enable incremental checkpoint abstract key state backend integer backend create key backend int serializer instance try value state descriptor string kv id new value state descriptor id string class null kv id initialize serializer unless set new execution config value state string state backend get partition state void namespace instance void namespace serializer instance kv id queue incremental remote key state handle previous state handle new link list share state registry share state registry spy new share state registry for int checkpoint id checkpoint id checkpoint id reset share state registry backend set current key checkpoint id state update hello checkpoint id runnable future snapshot result key state handle snapshot backend snapshot checkpoint id checkpoint id create stream factory checkpoint option for checkpoint with default location snapshot run snapshot result key state handle snapshot result snapshot get incremental remote key state handle state handle incremental remote key state handle snapshot result get job manager own snapshot map state handle i d stream state handle share state new hash map state handle get share state state handle register share state share state registry for map entry state handle i d stream state handle e share state entry set verify share state registry register reference state handle create share state registry key from file name e get key e get value previous state handle add state handle backend notify checkpoint complete checkpoint id if previous state handle size check remove previous state handle remove share state registry while previous state handle be empty reset share state registry check remove previous state handle remove share state registry finally i o util close quietly backend backend dispose private void check remove incremental remote key state handle remove share state registry registry throw exception for state handle i d id remove get share state key set verify registry time unregister reference remove create share state registry key from file name id remove discard state for state handle i d id remove get share state key set verify registry unregister reference remove create share state registry key from file name id private void run state update throw exception for int i i i if i thread sleep key state backend set current key i test state1 update i test state2 update s i private void verify rock object release ensure every rock object be close exactly once for rock object rock closeable all create closeable verify rock closeable time close assert not null null key state backend db rock d b spy d b key state backend db if enable incremental checkpointing verify spy d b time get snapshot verify spy d b time release snapshot any snapshot class key state backend dispose verify spy d b time close assert equal true key state backend be disposed private static class accept all filter implement i o file filter override public boolean accept file file return true override public boolean accept file file string s return true 
union serializer upgrade test run with parameterized class public class union serializer upgrade test extend type serializer upgrade test base tag union string long tag union string long public union serializer upgrade test test specification tag union string long tag union string long test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification union serializer one migration version union serializer one setup class union serializer one verifier class test specification add new test specification union serializer two migration version union serializer two setup class union serializer two verifier class return test specification private static type serializer tag union string long string long row supplier return new union serializer string serializer instance long serializer instance specification for union serializer for tag union one this class be only public to work with link org apache flink api common typeutil class relocator public static final class union serializer one setup implement type serializer upgrade test base pre upgrade setup tag union string long override public type serializer tag union string long create prior serializer return new union serializer string serializer instance long serializer instance override public tag union string long create test datum return tag union one flink this class be only public to work with link org apache flink api common typeutil class relocator public static final class union serializer one verifier implement type serializer upgrade test base upgrade verifier tag union string long override public type serializer tag union string long create upgrade serializer return new union serializer string serializer instance long serializer instance override public matcher tag union string long test datum matcher return be tag union one flink override public matcher type serializer schema compatibility tag union string long schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for union serializer for tag union two this class be only public to work with link org apache flink api common typeutil class relocator public static final class union serializer two setup implement type serializer upgrade test base pre upgrade setup tag union string long override public type serializer tag union string long create prior serializer return new union serializer string serializer instance long serializer instance override public tag union string long create test datum return tag union two l this class be only public to work with link org apache flink api common typeutil class relocator public static final class union serializer two verifier implement type serializer upgrade test base upgrade verifier tag union string long override public type serializer tag union string long create upgrade serializer return new union serializer string serializer instance long serializer instance override public matcher tag union string long test datum matcher return be tag union two l override public matcher type serializer schema compatibility tag union string long schema compatibility matcher migration version version return type serializer matcher be compatible as be 
checkpoint config from configuration test run with parameterized class public class checkpoint config from configuration test parameterized parameter name public static collection test spec spec return array as list test spec test value checkpoint mode at least once when set from file execution checkpoint mode at least once via setter checkpoint config set checkpoint mode getter via checkpoint config get checkpoint mode non default value checkpoint mode at least once test spec test value l when set from file execution checkpoint interval s via setter checkpoint config set checkpoint interval getter via checkpoint config get checkpoint interval non default value l test spec test value l when set from file execution checkpoint timeout s via setter checkpoint config set checkpoint timeout getter via checkpoint config get checkpoint timeout non default value l test spec test value when set from file execution checkpoint max concurrent checkpoint via setter checkpoint config set max concurrent checkpoint getter via checkpoint config get max concurrent checkpoint non default value test spec test value l when set from file execution checkpoint min pause s via setter checkpoint config set min pause between checkpoint getter via checkpoint config get min pause between checkpoint non default value l test spec test value true when set from file execution checkpoint prefer checkpoint for recovery true via setter checkpoint config set prefer checkpoint for recovery getter via checkpoint config be prefer checkpoint for recovery non default value true test spec test value checkpoint config externalize checkpoint cleanup retain on cancellation when set from file execution checkpoint externalized checkpoint retention retain on cancellation via setter checkpoint config enable externalized checkpoint getter via checkpoint config get externalize checkpoint cleanup non default value checkpoint config externalize checkpoint cleanup delete on cancellation test spec test value when set from file execution checkpoint tolerable fail checkpoint via setter checkpoint config set tolerable checkpoint failure number getter via checkpoint config get tolerable checkpoint failure number non default value test spec test value true when set from file execution checkpoint unaligned true via setter checkpoint config enable unaligned checkpoint getter via checkpoint config be unaligned checkpoint enable non default value true parameterized parameter public test spec spec test public void test loading from configuration checkpoint config config from setter new checkpoint config checkpoint config config from file new checkpoint config configuration configuration new configuration configuration set string spec key spec value config from file configure configuration spec set value config from setter spec assert equal config from file config from setter test public void test not override if not set checkpoint config config new checkpoint config spec set non default value config configuration configuration new configuration config configure configuration spec assert equal non default config private static class test spec t private string key private string value private final t object value private t non default value private bi consumer checkpoint config t setter private function checkpoint config t getter private test spec t value this object value value public static t test spec t test value t value return new test spec value public test spec t when set from file string key string value this key key this value value return this public test spec t via setter bi consumer checkpoint config t setter this setter setter return this public test spec t getter via function checkpoint config t getter this getter getter return this public test spec t non default value t non default value this non default value non default value return this public void set value checkpoint config config setter accept config object value public void set non default value checkpoint config config setter accept config non default value public void assert equal checkpoint config config from file checkpoint config config from setter assert that getter apply config from file equal to getter apply config from setter public void assert equal non default checkpoint config config from file assert that getter apply config from file equal to non default value override public string to string return key key 
stream execution environment configuration test run with parameterized class public class stream execution environment configuration test parameterized parameter name public static collection test spec spec return array as list test spec test value time characteristic ingestion time when set from file pipeline time characteristic ingestion time via setter stream execution environment set stream time characteristic getter via stream execution environment get stream time characteristic non default value time characteristic event time test spec test value l when set from file execution buffer timeout min via setter stream execution environment set buffer timeout getter via stream execution environment get buffer timeout non default value l test spec test value false when set from file pipeline operator chain false via setter env b if b throw new illegal argument exception can not programmatically enable operator chain else env disable operator chain getter via stream execution environment be chain enable non default value false test spec test value execution config closure cleaner level top level when set from file pipeline closure cleaner level top level via setter env v env get config set closure cleaner level v getter via env env get config get closure cleaner level non default value execution config closure cleaner level none test spec test value l when set from file execution checkpoint timeout s via setter env v env get checkpoint config set checkpoint timeout v getter via env env get checkpoint config get checkpoint timeout non default value l parameterize parameter public test spec spec test public void test loading from configuration stream execution environment config from setter stream execution environment get execution environment stream execution environment config from file stream execution environment get execution environment configuration configuration new configuration configuration set string spec key spec value config from file configure configuration execution config test class get class loader spec set value config from setter spec assert equal config from file config from setter test public void test not override if not set stream execution environment environment stream execution environment get execution environment spec set non default value environment configuration configuration new configuration environment configure configuration execution config test class get class loader spec assert equal non default environment private static class test spec t private string key private string value private final t object value private t non default value private bi consumer stream execution environment t setter private function stream execution environment t getter private test spec t value this object value value public static t test spec t test value t value return new test spec value public test spec t when set from file string key string value this key key this value value return this public test spec t via setter bi consumer stream execution environment t setter this setter setter return this public test spec t getter via function stream execution environment t getter this getter getter return this public test spec t non default value t non default value this non default value non default value return this public void set value stream execution environment config setter accept config object value public void set non default value stream execution environment config setter accept config non default value public void assert equal stream execution environment config from file stream execution environment config from setter assert that getter apply config from file equal to getter apply config from setter public void assert equal non default stream execution environment config from file assert that getter apply config from file equal to non default value override public string to string return key key 
bucket state serializer test run with parameterized class public class bucket state serializer test private static final int current version parameterize parameter name previous version public static collection integer previous version return array as list parameterized parameter public integer previous version private static final string in progress content write private static final string pend content write private static final string bucket id test bucket class rule public static temporary folder temp folder new temporary folder private static java nio file path get resource path string scenario name int version return path get src test resource resolve bucket state migration test resolve scenario name v version private static java nio file path get snapshot path string scenario name int version java nio file path base path get resource path scenario name version return base path resolve snapshot private static java nio file path get output path string scenario name int version java nio file path base path get resource path scenario name version return base path resolve bucket test ignore public void prepare deserialization empty throw i o exception final string scenario name empty final java nio file path scenario path get resource path scenario name current version file util delete directory scenario path to file file create directory scenario path final java nio file path output path get output path scenario name current version final path test bucket path new path output path resolve bucket id to string final bucket string string bucket create new bucket test bucket path final bucket state string bucket state bucket on reception of checkpoint byte byte simple versioned serialization write version and serialize bucket state serializer bucket state file write get snapshot path scenario name current version byte test public void test serialization empty throw i o exception final string scenario name empty final java nio file path output path get output path scenario name previous version final path test bucket path new path output path resolve bucket id to string final bucket state string recover state read bucket state scenario name previous version final bucket string string bucket restore bucket recover state assert assert equal test bucket path bucket get bucket path assert assert null bucket get in progress part assert assert true bucket get pend file recoverable per checkpoint be empty test ignore public void prepare deserialization only in progress throw i o exception final string scenario name only in progress final java nio file path scenario path get resource path scenario name current version file util delete directory scenario path to file file create directory scenario path final java nio file path output path get output path scenario name current version final path test bucket path new path output path resolve bucket id to string final bucket string string bucket create new bucket test bucket path bucket write in progress content system current time millis final bucket state string bucket state bucket on reception of checkpoint final byte byte simple versioned serialization write version and serialize bucket state serializer bucket state file write get snapshot path scenario name current version byte test public void test serialization only in progress throw i o exception final string scenario name only in progress final java nio file path output path get output path scenario name previous version final path test bucket path new path output path resolve bucket id to string final bucket state string recover state read bucket state scenario name previous version final bucket string string bucket restore bucket recover state assert assert equal test bucket path bucket get bucket path check restore the correct in progress file writer assert assert equal bucket get in progress part get size long num file file list path get test bucket path to string map file assert that file get file name to string start with part 0 - 0 inprogress return count assert that num file be 1 l test ignore public void prepare deserialization full throw i o exception prepare deserialization full true full test public void test serialization full throw i o exception test deserialization full true full test ignore public void prepare deserialization null in progress throw i o exception prepare deserialization full false full no in progress test public void test serialization null in progress throw i o exception test deserialization full false full no in progress private static void prepare deserialization full final boolean with in progress final string scenario name throw i o exception final java nio file path scenario path get resource path scenario name current version file util delete directory path get scenario path to string template to file file create directory scenario path final int no of pend checkpoint final java nio file path output path get output path scenario name current version final path test bucket path new path output path resolve bucket id to string final bucket string string bucket create new bucket test bucket path bucket state string bucket state null pend for checkpoint for int i i no of pend checkpoint i write byte to the in progress file bucket write pend content system current time millis bucket write pend content system current time millis every checkpoint would produce a pend file bucket state bucket on reception of checkpoint i if with in progress create a in progress file bucket write in progress content system current time milli pend file and in progress file bucket state bucket on reception of checkpoint no of pend checkpoint final byte byte simple versioned serialization write version and serialize bucket state serializer bucket state file write get snapshot path scenario name current version byte copy the scenario file to a template directory it be because that the test test serialization full would change the in progress file to pend file move to template directory scenario path private void test deserialization full final boolean with in progress final string scenario name throw i o exception try final java nio file path output path get output path scenario name previous version final path test bucket path new path output path resolve bucket id to string restore the state final bucket state string recover state read bucket state from template scenario name previous version final int no of pend checkpoint there be checkpoint do not complete final map long list in progress file writer pend file recoverable pend file recoverable recover state get pend file recoverable per checkpoint assert assert equal 5 l pend file recoverable size final set string before restore path file list output path resolve bucket id map file file get file name to string collect collector to set before retsore all file have inprogress for int i i no of pend checkpoint i final string part part i inprogress assert that before restore path have item start with part recover and commit final bucket bucket restore bucket no of pend checkpoint recover state assert assert equal test bucket path bucket get bucket path assert assert equal bucket get pend file recoverable for current checkpoint size final set string after restore path file list output path resolve bucket id map file file get file name to string collect collector to set after restore all pend file be comit there be no inporgress in file name for the committed file for int i i no of pend checkpoint i final string part part i assert that after restore path have item part after restore path remove part if with in progress only the in progress must be leave assert that after restore path iterable with size verify that the in progress file be still there assert that after restore path have item start with part no of pend checkpoint inprogress else assert that after restore path empty finally file util delete directory get resource path scenario name previous version to file private static bucket string string create new bucket final path bucket path throw i o exception return bucket get new bucket id bucket path create bucket writer default roll policy builder with max part size build output file config builder build private static bucket string string restore bucket final int initial part counter final bucket state string bucket state throw i o exception return bucket restore initial part counter create bucket writer default roll policy builder with max part size build bucket state output file config builder build private static row wise bucket writer string string create bucket writer throw i o exception return new row wise bucket writer file system get local file system create recoverable writer new simple string encoder private static simple versioned serializer bucket state string bucket state serializer throw i o exception final row wise bucket writer bucket writer create bucket writer return new bucket state serializer bucket writer get property get in progress file recoverable serializer bucket writer get property get pend file recoverable serializer simple versioned string serializer instance private static bucket state string read bucket state final string scenario name final int version throw i o exception byte byte file read all byte get snapshot path scenario name version return simple versioned serialization read version and de serialize bucket state serializer byte private static bucket state string read bucket state from template final string scenario name final int version throw i o exception final java nio file path scenario path get resource path scenario name version clear the scenario file first file util delete directory scenario path to file prepare the scenario file file util copy new path scenario path to string template new path scenario path to string false return read bucket state scenario name version private static void move to template directory java nio file path scenario path throw i o exception file util copy new path scenario path to string new path scenario path to string template false file util delete directory scenario path to file 
two phase commit sink state serializer upgrade test run with parameterized class public class two phase commit sink state serializer upgrade test extend type serializer upgrade test base two phase commit sink function state integer string two phase commit sink function state integer string public two phase commit sink state serializer upgrade test test specification two phase commit sink function state integer string two phase commit sink function state integer string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification two phase commit sink state serializer migration version two phase commit sink state serializer setup class two phase commit sink state serializer verifier class return test specification public static type serializer two phase commit sink function state integer string int string state serializer supplier return new two phase commit sink function state serializer int serializer instance string serializer instance specification for two phase commit sink state serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class two phase commit sink state serializer setup implement type serializer upgrade test base pre upgrade setup two phase commit sink function state integer string override public type serializer two phase commit sink function state integer string create prior serializer return int string state serializer supplier override public two phase commit sink function state integer string create test datum two phase commit sink function transaction holder integer pend transaction new two phase commit sink function transaction holder list two phase commit sink function transaction holder integer list new array list list add new two phase commit sink function transaction holder optional string optional optional of flink return new two phase commit sink function state pend transaction list optional this class be only public to work with link org apache flink api common typeutil class relocator public static final class two phase commit sink state serializer verifier implement type serializer upgrade test base upgrade verifier two phase commit sink function state integer string override public type serializer two phase commit sink function state integer string create upgrade serializer return int string state serializer supplier override public matcher two phase commit sink function state integer string test datum matcher two phase commit sink function transaction holder integer pend transaction new two phase commit sink function transaction holder list two phase commit sink function transaction holder integer list new array list list add new two phase commit sink function transaction holder optional string optional optional of flink return be new two phase commit sink function state pend transaction list optional override public matcher type serializer schema compatibility two phase commit sink function state integer string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
stream element queue test run with parameterized class public class stream element queue test extend test logger parameterize parameter public static collection async datum stream output mode output mode return array as list async datum stream output mode order async datum stream output mode unordered private final async datum stream output mode output mode public stream element queue test async datum stream output mode output mode this output mode precondition check not null output mode private stream element queue integer create stream element queue int capacity switch output mode case order return new order stream element queue capacity case unordered return new unordered stream element queue capacity default throw new illegal state exception unknown output mode output mode test public void test put stream element queue integer queue create stream element queue watermark watermark new watermark 0 l stream record integer stream record new stream record 1 l add two element to reach capacity assert true queue try put watermark be present assert true queue try put stream record be present assert equal queue size queue full can not add new element assert false queue try put new watermark 2 l be present check if expect value be return for checkpointing assert equal array as list watermark stream record queue value test public void test pop stream element queue integer queue create stream element queue add two element to reach capacity put successfully queue new watermark 0 l result future integer record result put successfully queue new stream record 1 l assert equal queue size remove complete element watermark be always complete assert equal array as list new watermark 0 l pop complete queue assert equal queue size now complete the stream record record result complete collection singleton assert equal array as list new stream record 1 l pop complete queue assert equal queue size assert true queue be empty test that a put operation fail if the queue be full test public void test put on full throw exception final stream element queue integer queue create stream element queue fill up queue result future integer result future put successfully queue new stream record 0 l assert equal queue size can not add more put unsuccessfully queue new stream record 1 l pop the complete element free the queue again result future complete collection singleton assert equal array as list new stream record integer 0 l pop complete queue now the put operation should complete put successfully queue new stream record 1 l test two adjacent watermark can be process successfully test public void test watermark only final stream element queue integer queue create stream element queue put successfully queue new watermark 2 l put successfully queue new watermark 5 l assert assert equal queue size assert assert false queue be empty assert assert equal array as list new watermark 2 l new watermark 5 l pop complete queue assert assert equal queue size assert assert true queue be empty assert assert equal collection empty list pop complete queue 
buffer entry serializer upgrade test run with parameterized class public class buffer entry serializer upgrade test extend type serializer upgrade test base buffer entry string buffer entry string public buffer entry serializer upgrade test test specification buffer entry string buffer entry string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification buffer entry serializer migration version buffer entry serializer setup class buffer entry serializer verifier class return test specification specification for buffer entry serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class buffer entry serializer setup implement type serializer upgrade test base pre upgrade setup buffer entry string suppress warning unchecked rawtype override public type serializer buffer entry string create prior serializer return new buffer entry serializer string serializer instance override public buffer entry string create test datum return new buffer entry hello false this class be only public to work with link org apache flink api common typeutil class relocator public static final class buffer entry serializer verifier implement type serializer upgrade test base upgrade verifier buffer entry string suppress warning unchecked rawtype override public type serializer buffer entry string create upgrade serializer return new buffer entry serializer string serializer instance override public matcher buffer entry string test datum matcher return buffer entry be hello be false override public matcher type serializer schema compatibility buffer entry string schema compatibility matcher migration version version return type serializer matcher be compatible as be 
interval join operator test run with parameterized class public class interval join operator test private final boolean lh faster than rhs parameter name lh faster than rhs public static collection object datum return array as list new object true false public interval join operator test boolean lh faster than rh this lhs faster than rhs lhs faster than rhs test public void test implementation mirror correctly throw exception long lower bound long upper bound boolean lower bound inclusive true boolean upper bound inclusive false setup harness lower bind lower bound inclusive upper bound upper bound inclusive process element and watermark and expect stream record of stream record of stream record of stream record of stream record of no late record close setup harness upper bound upper bound inclusive lower bind lower bound inclusive process element and watermark and expect stream record of stream record of stream record of stream record of stream record of no late record close test lh rh rhs public void test negative inclusive and negative inclusive throw exception setup harness true true process element and watermark and expect stream record of stream record of stream record of stream record of stream record of no late record close test lh rh rhs public void test negative inclusive and positive inclusive throw exception setup harness true true process element and watermark and expect stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of no late record close test lh rh lhs public void test positive inclusive and positive inclusive throw exception setup harness true true process element and watermark and expect stream record of stream record of stream record of stream record of stream record of no late record close test public void test negative exclusive and negative exlusive throw exception setup harness false false process element and watermark and expect stream record of stream record of no late record close test public void test negative exclusive and positive exlusive throw exception setup harness false false process element and watermark and expect stream record of stream record of stream record of stream record of no late record close test public void test positive exclusive and positive exlusive throw exception setup harness false false process element and watermark and expect stream record of stream record of no late record close test public void test state cleanup negative inclusive negative inclusive throw exception setup harness true true process element1 process element1 process element1 process element1 process element1 process element2 process element2 process element2 process element2 process element2 fill both buffer with value process watermark1 process watermark2 set common watermark to and check that data be clean assert left buffer contain only assert right buffer contain only process watermark1 set common watermark to and check that data be clean process watermark2 assert left buffer contain only assert right buffer contain only process watermark1 set common watermark to and check that datum all buffer be empty process watermark2 assert left buffer empty assert right buffer empty close test public void test state cleanup negative positive negative exlusive throw exception setup harness false false process element1 process element1 process element1 process element1 process element1 process element2 process element2 process element2 process element2 process element2 fill both buffer with value process watermark1 process watermark2 set common watermark to and check that data be clean assert left buffer contain only assert right buffer contain only process watermark1 set common watermark to and check that data be clean process watermark2 assert left buffer contain only assert right buffer contain only process watermark1 set common watermark to and check that datum all buffer be empty process watermark2 assert left buffer empty assert right buffer empty close test public void test state cleanup positive inclusive positive inclusive throw exception setup harness true true process element1 process element1 process element1 process element1 process element1 process element2 process element2 process element2 process element2 process element2 fill both buffer with value process watermark1 process watermark2 set common watermark to and check that data be clean assert left buffer contain only assert right buffer contain only process watermark1 set common watermark to and check that data be clean process watermark2 assert left buffer contain only assert right buffer contain only process watermark1 set common watermark to and check that datum all buffer be empty process watermark2 assert left buffer empty assert right buffer empty close test public void test state cleanup positive exlusive positive exclusive throw exception setup harness false false process element1 process element1 process element1 process element1 process element1 process element2 process element2 process element2 process element2 process element2 fill both buffer with value process watermark1 process watermark2 set common watermark to and check that data be clean assert left buffer contain only assert right buffer contain only process watermark1 set common watermark to and check that data be clean process watermark2 assert left buffer contain only assert right buffer contain only process watermark1 set common watermark to and check that datum all buffer be empty process watermark2 assert left buffer empty assert right buffer empty close test public void test restore from snapshot throw exception config int lower bind boolean lower bound inclusive true int upper bound boolean upper bound inclusive true create first test harness operator subtask state handle list stream record tuple2 test elem test elem expect output try test harness test harness create test harness lower bind lower bound inclusive upper bound upper bound inclusive test harness setup test harness open process element with first test harness test harness process element1 create stream record lh test harness process watermark1 new watermark test harness process element2 create stream record rh test harness process watermark2 new watermark test harness process element1 create stream record lh test harness process watermark1 new watermark test harness process element2 create stream record rh test harness process watermark2 new watermark test harness process element1 create stream record lh test harness process watermark1 new watermark test harness process element2 create stream record rh test harness process watermark2 new watermark snapshot and validate output handle test harness snapshot test harness close expect output list new array list stream record of stream record of stream record of stream record of stream record of stream record of stream record of test harness util assert no late record test harness get output assert output expect output test harness get output try test harness new test harness create test harness lower bind lower bound inclusive upper bound upper bound inclusive create new test harness from snapshpt new test harness setup new test harness initialize state handle new test harness open process element new test harness process element1 create stream record lh new test harness process watermark1 new watermark new test harness process element2 create stream record rh new test harness process watermark2 new watermark assert expect output expect output list new array list stream record of stream record of stream record of test harness util assert no late record new test harness get output assert output expect output new test harness get output test public void test context correct left timestamp throw exception interval join operator string test elem test elem tuple2 test elem test elem op new interval join operator true true test elem serializer test elem serializer new process join function test elem test elem tuple2 test elem test elem override public void process element test elem leave test elem right context ctx collector tuple2 test elem test elem out throw exception assert assert equal left t ctx get leave timestamp try test harness test harness new test harness op elem elem key elem elem key type information of string class test harness setup test harness open process element and watermark test harness test public void test return correct timestamp throw exception interval join operator string test elem test elem tuple2 test elem test elem op new interval join operator true true test elem serializer test elem serializer new process join function test elem test elem tuple2 test elem test elem private static final long serial version u i d 1 l override public void process element test elem leave test elem right context ctx collector tuple2 test elem test elem out throw exception assert assert equal math max leave t right ts ctx get timestamp try test harness test harness new test harness op elem elem key elem elem key type information of string class test harness setup test harness open process element and watermark test harness test public void test context correct right timestamp throw exception interval join operator string test elem test elem tuple2 test elem test elem op new interval join operator true true test elem serializer test elem serializer new process join function test elem test elem tuple2 test elem test elem override public void process element test elem leave test elem right context ctx collector tuple2 test elem test elem out throw exception assert assert equal right ts ctx get right timestamp try test harness test harness new test harness op elem elem key elem elem key type information of string class test harness setup test harness open process element and watermark test harness test expect flink exception class public void test fail with no timestamp leave throw exception test harness new test harness create test harness 0 l true 0 l true new test harness setup new test harness open note that the stream record have no timestamp in constructor new test harness process element1 new stream record new test elem lh test expect flink exception class public void test fail with no timestamp right throw exception try test harness new test harness create test harness 0 l true 0 l true new test harness setup new test harness open note that the stream record have no timestamp in constructor new test harness process element2 new stream record new test elem rh test public void test discard late datum throw exception setup harness true true process element1 process element2 process element1 process element2 process element1 process element2 process watermark1 process watermark2 process element1 this element be late and should not be join again process element1 process element2 process element1 process element2 and expect stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of stream record of no late record close private void assert empty map state long state throw exception boolean state be empty iterable size state key assert assert true state not empty state be empty private void assert contain only map state long state long t throw exception for long t t string message key not find in state n expect array to string t n actual state key assert assert true message state contain t string message too many object in state n expect array to string t n actual state key assert assert equal message t length iterable size state key private void assert output iterable stream record tuple2 test elem test elem expect output queue object actual output int actual size actual output stream filter elem elem instanceof stream record collect collector to list size int expect size iterable size expect output assert assert equal expect and actual size of stream record different expect size actual size for stream record tuple2 test elem test elem record expect output assert assert true actual output contain record private test harness create test harness long lower bind boolean lower bound inclusive long upper bound boolean upper bind inclusive throw exception interval join operator string test elem test elem tuple2 test elem test elem operator new interval join operator lower bound upper bind lower bound inclusive upper bound inclusive test elem serializer test elem serializer new passthrough function return new test harness operator elem elem key key elem elem key key type information of string class private join test builder setup harness long lower bind boolean lower bound inclusive long upper bound boolean upper bind inclusive throw exception interval join operator string test elem test elem tuple2 test elem test elem operator new interval join operator lower bound upper bind lower bound inclusive upper bound inclusive test elem serializer test elem serializer new passthrough function test harness t new test harness operator elem elem key key elem elem key key type information of string class return new join test builder t operator private class join test builder private interval join operator string test elem test elem tuple2 test elem test elem operator private test harness test harness public join test builder test harness t interval join operator string test elem test elem tuple2 test elem test elem operator throw exception this test harness t this operator operator t open t setup public test harness get return test harness public join test builder process element1 int t throw exception test harness process element1 create stream record t lh return this public join test builder process element2 int t throw exception test harness process element2 create stream record t rh return this public join test builder process watermark1 int t throw exception test harness process watermark1 new watermark t return this public join test builder process watermark2 int t throw exception test harness process watermark2 new watermark t return this public join test builder process element and watermark int from int to throw exception if lh faster than rhs add to lh for int i from i to i test harness process element1 create stream record i lh test harness process watermark1 new watermark i add to rh for int i from i to i test harness process element2 create stream record i rh test harness process watermark2 new watermark i else add to rh for int i from i to i test harness process element2 create stream record i rh test harness process watermark2 new watermark i add to lh for int i from i to i test harness process element1 create stream record i lh test harness process watermark1 new watermark i return this safe vararg public final join test builder and expect stream record tuple2 test elem test elem elem assert output list new array list elem test harness get output return this public join test builder assert left buffer contain only long timestamp try assert contain only operator get leave buffer timestamp catch exception e throw new runtime exception e return this public join test builder assert right buffer contain only long timestamp try assert contain only operator get right buffer timestamp catch exception e throw new runtime exception e return this public join test builder assert left buffer empty try assert empty operator get leave buffer catch exception e throw new runtime exception e return this public join test builder assert right buffer empty try assert empty operator get right buffer catch exception e throw new runtime exception e return this public join test builder no late record test harness util assert no late record this test harness get output return this public void close throw exception test harness close private static class passthrough function extend process join function test elem test elem tuple2 test elem test elem override public void process element test elem leave test elem right context ctx collector tuple2 test elem test elem out throw exception out collect tuple2 of left right private stream record tuple2 test elem test elem stream record of long lhs t long rhs t test elem lh new test elem lh t lh test elem rh new test elem rh t rh long t math max lh t rhs t return new stream record tuple2 of lh rhs t private static class test elem string key long t string source public test elem long t string source this key key this t t this source source override public boolean equal object o if this o return true if o null get class o get class return false test elem test elem test elem o if t test elem t return false if key null key equal test elem key test elem key null return false return source null source equal test elem source test elem source null override public int hash code int result key null key hash code result result int t t result result source null source hash code return result override public string to string return this source this ts public static type serializer test elem serializer return type information of new type hint test elem create serializer new execution config private static stream record test elem create stream record long t string source test elem test elem new test elem t source return new stream record test elem t private void process element and watermark test harness test harness throw exception if lh faster than rhs add to lh for int i i i test harness process element1 create stream record i lh test harness process watermark1 new watermark i add to rh for int i i i test harness process element2 create stream record i rh test harness process watermark2 new watermark i else add to rh for int i i i test harness process element2 create stream record i rh test harness process watermark2 new watermark i add to lh for int i i i test harness process element1 create stream record i lh test harness process watermark1 new watermark i custom test harness to avoid endless generic in all of the test code private static class test harness extend keyed two input stream operator test harness string test elem test elem tuple2 test elem test elem test harness two input stream operator test elem test elem tuple2 test elem test elem operator key selector test elem string key selector1 key selector test elem string key selector2 type information string key type throw exception super operator key selector1 key selector2 key type 
internal timer service impl test run with parameterized class public class internal timer service impl test private final int max parallelism private final key group range test key group range private static internal timer integer string any internal timer return any public internal timer service impl test int start key group int end key group int max parallelism this test key group range new key group range start key group end key group this max parallelism max parallelism test public void test key group start index set int start key group idx int end key group idx key group range test key group list new key group range start key group idx end key group idx test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string service create internal timer service test key group list key context processing time service int serializer instance string serializer instance create queue factory assert assert equal start key group idx service get local key group range start idx test public void test timer assignment to key group int total no of timer int total no of key group int start key group idx int end key group idx total no of key group we have to suppress warning unchecked set timer heap internal timer integer string expect non empty timer set new hash set total no of key group test key context key context new test key context final key group range key group range new key group range start key group idx end key group idx final priority queue set factory priority queue set factory create queue factory key group range total no of key group internal timer service impl integer string timer service create internal timer service key group range key context new test processing time service int serializer instance string serializer instance priority queue set factory timer service start timer service int serializer instance string serializer instance mock triggerable class for int i i total no of timer i create the timer to be register timer heap internal timer integer string timer new timer heap internal timer i i hello world i int key group idx key group range assignment assign to key group timer get key total no of key group add it in the adequate expect set of timer per keygroup set timer heap internal timer integer string timer set expect non empty timer set key group idx if timer set null timer set new hash set expect non empty timer set key group idx timer set timer set add timer register the timer as both processing and event time one key context set current key timer get key timer service register event time timer timer get namespace timer get timestamp timer service register processing time timer timer get namespace timer get timestamp list set timer heap internal timer integer string event time timer timer service get event time timer per key group list set timer heap internal timer integer string processing time timer timer service get processing time timer per key group finally verify that the actual timer per key group set be the expect one for int i i expect non empty timer set length i set timer heap internal timer integer string expect expect non empty timer set i set timer heap internal timer integer string actual event event time timer get i set timer heap internal timer integer string actual processing processing time timer get i if expect null assert assert true actual event be empty assert assert true actual processing be empty else assert assert equal expect actual event assert assert equal expect actual processing verify that we only ever have one processing time task register at the link processing time service test public void test only set one physical processing time timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service priority queue set factory priority queue set factory new heap priority queue set factory test key group range max parallelism internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range priority queue set factory int key get key in key group range test key group range max parallelism key context set current key key timer service register processing time timer ciao timer service register processing time timer ciao timer service register processing time timer ciao timer service register processing time timer hello timer service register processing time timer hello assert equal timer service num processing time timer assert equal timer service num processing time timer hello assert equal timer service num processing time timer ciao assert equal processing time service get num active timer assert that processing time service get active timer timestamp contain in any order 10 l processing time service set current time assert equal timer service num processing time timer assert equal timer service num processing time timer hello assert equal timer service num processing time timer ciao assert equal processing time service get num active timer assert that processing time service get active timer timestamp contain in any order 20 l processing time service set current time assert equal timer service num processing time timer assert equal timer service num processing time timer hello assert equal timer service num processing time timer ciao assert equal processing time service get num active timer assert that processing time service get active timer timestamp contain in any order 30 l processing time service set current time assert equal timer service num processing time timer assert equal processing time service get num active timer timer service register processing time timer ciao assert equal processing time service get num active timer verify that register a processing time timer that be earlier than the exist timer remove the one physical timer and create one for the earlier timestamp link processing time service test public void test register earlier processing timer move physical processing timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory int key get key in key group range test key group range max parallelism key context set current key key timer service register processing time timer ciao assert equal timer service num processing time timer assert equal processing time service get num active timer assert that processing time service get active timer timestamp contain in any order 20 l timer service register processing time timer ciao assert equal timer service num processing time timer assert equal processing time service get num active timer assert that processing time service get active timer timestamp contain in any order 10 l test public void test register processing time timer in on processing time do not leak physical timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service final internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory int key get key in key group range test key group range max parallelism key context set current key key timer service register processing time timer ciao assert equal timer service num processing time timer assert equal processing time service get num active timer assert that processing time service get active timer timestamp contain in any order 10 l do answer new answer object override public object answer invocation on mock invocation throw exception timer service register processing time timer ciao return null when mock triggerable on processing time any internal timer processing time service set current time assert equal processing time service get num active timer assert that processing time service get active timer timestamp contain in any order 20 l do answer new answer object override public object answer invocation on mock invocation throw exception timer service register processing time timer ciao return null when mock triggerable on processing time any internal timer processing time service set current time assert equal timer service num processing time timer assert equal processing time service get num active timer assert that processing time service get active timer timestamp contain in any order 30 l test public void test current processing time throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory processing time service set current time 17 l assert equal timer service current processing time processing time service set current time assert equal timer service current processing time test public void test current event time throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory timer service advance watermark assert equal timer service current watermark timer service advance watermark assert equal timer service current watermark this also verify that we don t have leakage between key namespace test public void test set and fire event time timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory get two different key int key1 get key in key group range test key group range max parallelism int key2 get key in key group range test key group range max parallelism while key2 key1 key2 get key in key group range test key group range max parallelism key context set current key key1 timer service register event time timer ciao timer service register event time timer hello key context set current key key2 timer service register event time timer ciao timer service register event time timer hello assert equal timer service num event time timer assert equal timer service num event time timer hello assert equal timer service num event time timer ciao timer service advance watermark verify mock triggerable time on event time any internal timer verify mock triggerable time on event time eq new timer heap internal timer key1 ciao verify mock triggerable time on event time eq new timer heap internal timer key1 hello verify mock triggerable time on event time eq new timer heap internal timer key2 ciao verify mock triggerable time on event time eq new timer heap internal timer key2 hello assert equal timer service num event time timer this also verify that we don t have leakage between key namespace test public void test set and fire processing time timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory get two different key int key1 get key in key group range test key group range max parallelism int key2 get key in key group range test key group range max parallelism while key2 key1 key2 get key in key group range test key group range max parallelism key context set current key key1 timer service register processing time timer ciao timer service register processing time timer hello key context set current key key2 timer service register processing time timer ciao timer service register processing time timer hello assert equal timer service num processing time timer assert equal timer service num processing time timer hello assert equal timer service num processing time timer ciao processing time service set current time verify mock triggerable time on processing time any internal timer verify mock triggerable time on processing time eq new timer heap internal timer key1 ciao verify mock triggerable time on processing time eq new timer heap internal timer key1 hello verify mock triggerable time on processing time eq new timer heap internal timer key2 ciao verify mock triggerable time on processing time eq new timer heap internal timer key2 hello assert equal timer service num processing time timer this also verify that we don t have leakage between key namespace p this also verify that delete timer don t fire test public void test delete event time timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory get two different key int key1 get key in key group range test key group range max parallelism int key2 get key in key group range test key group range max parallelism while key2 key1 key2 get key in key group range test key group range max parallelism key context set current key key1 timer service register event time timer ciao timer service register event time timer hello key context set current key key2 timer service register event time timer ciao timer service register event time timer hello assert equal timer service num event time timer assert equal timer service num event time timer hello assert equal timer service num event time timer ciao key context set current key key1 timer service delete event time timer hello key context set current key key2 timer service delete event time timer ciao assert equal timer service num event time timer assert equal timer service num event time timer hello assert equal timer service num event time timer ciao timer service advance watermark verify mock triggerable time on event time any internal timer verify mock triggerable time on event time eq new timer heap internal timer key1 ciao verify mock triggerable time on event time eq new timer heap internal timer key1 hello verify mock triggerable time on event time eq new timer heap internal timer key2 ciao verify mock triggerable time on event time eq new timer heap internal timer key2 hello assert equal timer service num event time timer this also verify that we don t have leakage between key namespace p this also verify that delete timer don t fire test public void test delete processing time timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory get two different key int key1 get key in key group range test key group range max parallelism int key2 get key in key group range test key group range max parallelism while key2 key1 key2 get key in key group range test key group range max parallelism key context set current key key1 timer service register processing time timer ciao timer service register processing time timer hello key context set current key key2 timer service register processing time timer ciao timer service register processing time timer hello assert equal timer service num processing time timer assert equal timer service num processing time timer hello assert equal timer service num processing time timer ciao key context set current key key1 timer service delete processing time timer hello key context set current key key2 timer service delete processing time timer ciao assert equal timer service num processing time timer assert equal timer service num processing time timer hello assert equal timer service num processing time timer ciao processing time service set current time verify mock triggerable time on processing time any internal timer verify mock triggerable time on processing time eq new timer heap internal timer key1 ciao verify mock triggerable time on processing time eq new timer heap internal timer key1 hello verify mock triggerable time on processing time eq new timer heap internal timer key2 ciao verify mock triggerable time on processing time eq new timer heap internal timer key2 hello assert equal timer service num event time timer this also verify that we iterate over all timer and set the key context on each element test public void test for each event time timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory get two different key int key1 get key in key group range test key group range max parallelism int key2 get key in key group range test key group range max parallelism while key2 key1 key2 get key in key group range test key group range max parallelism set tuple3 integer string long timer new hash set timer add tuple3 of key1 ciao 10 l timer add tuple3 of key1 hello 10 l timer add tuple3 of key2 ciao 10 l timer add tuple3 of key2 hello 10 l for tuple3 integer string long timer timer key context set current key timer f0 timer service register event time timer timer f1 timer f2 set tuple3 integer string long result new hash set timer service for each event time timer namespace timer result add tuple3 of integer key context get current key namespace timer assert assert equal timer result this also verify that we iterate over all timer and set the key context on each element test public void test for each processing time timer throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory get two different key int key1 get key in key group range test key group range max parallelism int key2 get key in key group range test key group range max parallelism while key2 key1 key2 get key in key group range test key group range max parallelism set tuple3 integer string long timer new hash set timer add tuple3 of key1 ciao 10 l timer add tuple3 of key1 hello 10 l timer add tuple3 of key2 ciao 10 l timer add tuple3 of key2 hello 10 l for tuple3 integer string long timer timer key context set current key timer f0 timer service register processing time timer timer f1 timer f2 set tuple3 integer string long result new hash set timer service for each processing time timer namespace timer result add tuple3 of integer key context get current key namespace timer assert assert equal timer result test public void test snapshot and restore throw exception test snapshot and restore internal timer service serialization proxy version test public void test snapshot and restore pre version throw exception test snapshot and restore internal timer snapshot reader writer no version this test check whether timer be assign to correct key group and whether snapshot restore respects key group test public void test snapshot and rebalancing restore throw exception test snapshot and rebalancing restore internal timer service serialization proxy version test public void test snapshot and rebalancing restore pre version throw exception test snapshot and rebalancing restore internal timer snapshot reader writer no version private void test snapshot and restore int snapshot version throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range create queue factory get two different key int key1 get key in key group range test key group range max parallelism int key2 get key in key group range test key group range max parallelism while key2 key1 key2 get key in key group range test key group range max parallelism key context set current key key1 timer service register processing time timer ciao timer service register event time timer hello key context set current key key2 timer service register event time timer ciao timer service register processing time timer hello assert equal timer service num processing time timer assert equal timer service num processing time timer hello assert equal timer service num processing time timer ciao assert equal timer service num event time timer assert equal timer service num event time timer hello assert equal timer service num event time timer ciao map integer byte snapshot new hash map for integer key group index test key group range try byte array output stream out stream new byte array output stream internal timer snapshot integer string timer snapshot timer service snapshot timer for key group key group index internal timer snapshot reader writer get writer for version snapshot version timer snapshot timer service get key serializer timer service get namespace serializer write timer snapshot new datum output view stream wrapper out stream snapshot put key group index out stream to byte array suppress warning unchecked triggerable integer string mock triggerable2 mock triggerable class key context new test key context processing time service new test processing time service timer service restore timer service snapshot snapshot version mock triggerable2 key context processing time service test key group range create queue factory processing time service set current time timer service advance watermark verify mock triggerable2 time on processing time any internal timer verify mock triggerable2 time on processing time eq new timer heap internal timer key1 ciao verify mock triggerable2 time on processing time eq new timer heap internal timer key2 hello verify mock triggerable2 time on event time any internal timer verify mock triggerable2 time on event time eq new timer heap internal timer key1 hello verify mock triggerable2 time on event time eq new timer heap internal timer key2 ciao assert equal timer service num event time timer private void test snapshot and rebalancing restore int snapshot version throw exception suppress warning unchecked triggerable integer string mock triggerable mock triggerable class test key context key context new test key context test processing time service processing time service new test processing time service final priority queue set factory queue factory create queue factory internal timer service impl integer string timer service create and start internal timer service mock triggerable key context processing time service test key group range queue factory int midpoint test key group range get start key group test key group range get end key group test key group range get start key group get two sub key range so that we can restore two range separately key group range sub key group range1 new key group range test key group range get start key group midpoint key group range sub key group range2 new key group range midpoint test key group range get end key group get two different key one per sub range int key1 get key in key group range sub key group range1 max parallelism int key2 get key in key group range sub key group range2 max parallelism key context set current key key1 timer service register processing time timer ciao timer service register event time timer hello key context set current key key2 timer service register event time timer ciao timer service register processing time timer hello assert equal timer service num processing time timer assert equal timer service num processing time timer hello assert equal timer service num processing time timer ciao assert equal timer service num event time timer assert equal timer service num event time timer hello assert equal timer service num event time timer ciao one map per sub key group range map integer byte snapshot1 new hash map map integer byte snapshot2 new hash map for integer key group index test key group range try byte array output stream out stream new byte array output stream internal timer snapshot integer string timer snapshot timer service snapshot timer for key group key group index internal timer snapshot reader writer get writer for version snapshot version timer snapshot timer service get key serializer timer service get namespace serializer write timer snapshot new datum output view stream wrapper out stream if sub key group range1 contain key group index snapshot1 put key group index out stream to byte array else if sub key group range2 contain key group index snapshot2 put key group index out stream to byte array else throw new illegal state exception key group index doesn t belong to any sub range from now on we need everything twice once per sub key group range suppress warning unchecked triggerable integer string mock triggerable1 mock triggerable class suppress warning unchecked triggerable integer string mock triggerable2 mock triggerable class test key context key context1 new test key context test key context key context2 new test key context test processing time service processing time service1 new test processing time service test processing time service processing time service2 new test processing time service internal timer service impl integer string timer service1 restore timer service snapshot1 snapshot version mock triggerable1 key context1 processing time service1 sub key group range1 queue factory internal timer service impl integer string timer service2 restore timer service snapshot2 snapshot version mock triggerable2 key context2 processing time service2 sub key group range2 queue factory processing time service1 set current time timer service1 advance watermark verify mock triggerable1 time on processing time any internal timer verify mock triggerable1 time on processing time eq new timer heap internal timer key1 ciao verify mock triggerable1 never on processing time eq new timer heap internal timer key2 hello verify mock triggerable1 time on event time any internal timer verify mock triggerable1 time on event time eq new timer heap internal timer key1 hello verify mock triggerable1 never on event time eq new timer heap internal timer key2 ciao assert equal timer service1 num event time timer process time service2 set current time timer service2 advance watermark verify mock triggerable2 time on processing time any internal timer verify mock triggerable2 never on processing time eq new timer heap internal timer key1 ciao verify mock triggerable2 time on processing time eq new timer heap internal timer key2 hello verify mock triggerable2 time on event time any internal timer verify mock triggerable2 never on event time eq new timer heap internal timer key1 hello verify mock triggerable2 time on event time eq new timer heap internal timer key2 ciao assert equal timer service2 num event time timer private static class test key context implement key context private object key override public void set current key object key this key key override public object get current key return key private static int get key in key group int key group int max parallelism random rand new random system current time millis int result rand next int while key group range assignment assign to key group result max parallelism key group result rand next int return result private static int get key in key group range key group range range int max parallelism random rand new random system current time millis int result rand next int while range contain key group range assignment assign to key group result max parallelism result rand next int return result private static internal timer service impl integer string create and start internal timer service triggerable integer string triggerable key context key context processing time service processing time service key group range key group list priority queue set factory priority queue set factory internal timer service impl integer string service create internal timer service key group list key context processing time service int serializer instance string serializer instance priority queue set factory service start timer service int serializer instance string serializer instance triggerable return service private static internal timer service impl integer string restore timer service map integer byte state int snapshot version triggerable integer string triggerable key context key context processing time service processing time service key group range key group list priority queue set factory priority queue set factory throw exception create a empty service internal timer service impl integer string service create internal timer service key group list key context processing time service int serializer instance string serializer instance priority queue set factory restore the timer for integer key group index key group list if state contain key key group index try byte array input stream input stream new byte array input stream state get key group index internal timer snapshot restore timer snapshot internal timer snapshot reader writer get reader for version snapshot version internal timer service impl test class get class loader read timer snapshot new datum input view stream wrapper input stream service restore timer for key group restore timer snapshot key group index initialize the service service start timer service int serializer instance string serializer instance triggerable return service private priority queue set factory create queue factory return create queue factory test key group range max parallelism protect priority queue set factory create queue factory key group range key group range int num key group return new heap priority queue set factory key group range num key group parametrization for testing with different key group range parameterized parameter name start end max suppress warning unchecked rawtype public static collection object key range return array as list new object short max value short max value short max value short max value short max value private static k n internal timer service impl k n create internal timer service key group range key group list key context key context processing time service processing time service type serializer k key serializer type serializer n namespace serializer priority queue set factory priority queue set factory timer serializer k n timer serializer new timer serializer key serializer namespace serializer return new internal timer service impl key group list key context processing time service create timer queue test processing timer timer serializer priority queue set factory create timer queue test event timer timer serializer priority queue set factory private static k n key group internal priority queue timer heap internal timer k n create timer queue string name timer serializer k n timer serializer priority queue set factory priority queue set factory return priority queue set factory create name timer serializer 
stream source context idle detection test run with parameterized class public class stream source context idle detection test the test in this class will be parameterize with these enumeration private enum test method test idleness detection use the link source function source context collect object method collect test idleness detection use the link source function source context collect with timestamp object long method collect with timestamp test idleness detection use the link source function source context emit watermark watermark method emit watermark private test method test method public stream source context idle detection test test method test method this test method test method test scenario idle timeout start from as initial time as soon as time reach status should have be toggle to idle after some arbitrary time until the status should remain idle emit a record at status should become active this should fire a idleness detection at emit another record at which be before the next check this should make the idleness check pass advance time to and trigger idleness detection the status should still be active due to step another idleness detection should be fire at advance time to and trigger idleness detection since no record be collect in between the two idleness detection status should have be toggle back to idle p inline comment will refer to the correspond test step in the scenario test public void test manual watermark context throw exception long idle timeout long initial time test processing time service processing time service new test processing time service processing time service set current time initial time final list stream element output new array list mock stream status maintainer mock stream status maintainer new mock stream status maintainer source function source context string context stream source context get source context time characteristic event time processing time service new object mock stream status maintainer new collector output string output idle timeout begin test scenario correspond to step of scenario please see method level javadoc comment processing time service set current time initial time idle timeout assert true mock stream status maintainer get stream status be idle correspond to step of scenario please see method level javadoc comment processing time service set current time initial time idle timeout processing time service set current time initial time idle timeout assert true mock stream status maintainer get stream status be idle correspond to step of scenario please see method level javadoc comment processing time service set current time initial time idle timeout idle timeout switch test method case collect context collect msg break case collect with timestamp context collect with timestamp msg processing time service get current processing time break case emit watermark context emit watermark new watermark processing time service get current processing time break assert true mock stream status maintainer get stream status be active correspond to step of scenario please see method level javadoc comment processing time service set current time initial time idle timeout idle timeout switch test method case collect context collect msg break case collect with timestamp context collect with timestamp msg processing time service get current processing time break case emit watermark context emit watermark new watermark processing time service get current processing time break assert true mock stream status maintainer get stream status be active correspond to step of scenario please see method level javadoc comment processing time service set current time initial time idle timeout idle timeout assert true mock stream status maintainer get stream status be active correspond to step of scenario please see method level javadoc comment processing time service set current time initial time idle timeout idle timeout assert true mock stream status maintainer get stream status be idle test scenario idle timeout watermark interval start from as initial time as soon as time reach status should have be toggle to idle after some arbitrary time until the status should remain idle and no watermark should have be emit emit a record at status should become active this should schedule a idleness detection to be fire at emit another record at which be before the next check this should make the idleness check pass advance time to and trigger idleness detection the status should still be active due to step this should schedule a idleness detection to be fire at advance time to in which a watermark emission task should be fire idleness detection should have be piggy back in the task allow the status to be toggle to idle before the next actual idle detection task at p inline comment will refer to the correspond test step in the scenario test public void test automatic watermark context throw exception long watermark interval long idle timeout long initial time test processing time service processing time service new test processing time service processing time service set current time initial time mock stream status maintainer mock stream status maintainer new mock stream status maintainer final list stream element output new array list final list stream element expect output new array list source function source context string context stream source context get source context time characteristic ingestion time processing time service new object mock stream status maintainer new collector output string output watermark interval idle timeout begin test scenario correspond to step of scenario please see method level javadoc comment processing time service set current time initial time watermark interval expect output add new watermark processing time service get current processing time processing time service get current processing time watermark interval processing time service set current time initial time watermark interval expect output add new watermark processing time service get current processing time processing time service get current processing time watermark interval processing time service set current time initial time idle timeout assert true mock stream status maintainer get stream status be idle assert equal expected output output correspond to step of scenario please see method level javadoc comment processing time service set current time initial time watermark interval processing time service set current time initial time watermark interval processing time service set current time initial time idle timeout processing time service set current time initial time watermark interval processing time service set current time initial time watermark interval processing time service set current time initial time idle timeout assert true mock stream status maintainer get stream status be idle assert equal expected output output correspond to step of scenario please see method level javadoc comment processing time service set current time initial time idle timeout idle timeout switch test method case collect context collect msg expected output add new stream record msg processing time service get current processing time expect output add new watermark processing time service get current processing time processing time service get current processing time watermark interval assert true mock stream status maintainer get stream status be active assert equal expected output output break case collect with timestamp context collect with timestamp msg processing time service get current processing time expect output add new stream record msg processing time service get current processing time expect output add new watermark processing time service get current processing time processing time service get current processing time watermark interval assert true mock stream status maintainer get stream status be active assert equal expected output output break case emit watermark for emit watermark since the watermark will be block it should not make the status become active from here on the status should remain idle for the emit watermark variant test context emit watermark new watermark processing time service get current processing time assert true mock stream status maintainer get stream status be idle assert equal expected output output correspond to step of scenario please see method level javadoc comment processing time service set current time initial time watermark interval processing time service set current time initial time idle timeout idle timeout switch test method case collect context collect msg expected output add new stream record msg processing time service get current processing time assert true mock stream status maintainer get stream status be active assert equal expected output output break case collect with timestamp context collect with timestamp msg processing time service get current processing time expect output add new stream record msg processing time service get current processing time assert true mock stream status maintainer get stream status be active assert equal expected output output break case emit watermark context emit watermark new watermark processing time service get current processing time assert true mock stream status maintainer get stream status be idle assert equal expected output output processing time service set current time initial time watermark interval switch test method case collect case collect with timestamp expect output add new watermark processing time service get current processing time processing time service get current processing time watermark interval assert true mock stream status maintainer get stream status be active assert equal expected output output break case emit watermark assert true mock stream status maintainer get stream status be idle assert equal expected output output processing time service set current time initial time watermark interval switch test method case collect case collect with timestamp expect output add new watermark processing time service get current processing time processing time service get current processing time watermark interval assert true mock stream status maintainer get stream status be active assert equal expected output output break case emit watermark assert true mock stream status maintainer get stream status be idle assert equal expected output output correspond to step of scenario please see method level javadoc comment processing time service set current time initial time idle timeout idle timeout switch test method case collect case collect with timestamp assert true mock stream status maintainer get stream status be active assert equal expected output output break case emit watermark assert true mock stream status maintainer get stream status be idle assert equal expected output output correspond to step of scenario please see method level javadoc comment processing time service set current time initial time watermark interval assert true mock stream status maintainer get stream status be idle assert equal expected output output parameterize parameter name test method suppress warning unchecked public static collection test method time characteristic return array as list new test method test method collect new test method test method collect with timestamp new test method test method emit watermark 
timer serializer upgrade test run with parameterized class public class timer serializer upgrade test extend type serializer upgrade test base timer heap internal timer string integer timer heap internal timer string integer public timer serializer upgrade test test specification timer heap internal timer string integer timer heap internal timer string integer test specification super test specification suppress warning unchecked parameterized parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification timer serializer migration version timer serializer setup class timer serializer verifier class return test specification private static type serializer timer heap internal timer string integer string int timer serializer supplier return new timer serializer string serializer instance int serializer instance specification for timer serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class timer serializer setup implement type serializer upgrade test base pre upgrade setup timer heap internal timer string integer override public type serializer timer heap internal timer string integer create prior serializer return new timer serializer string serializer instance int serializer instance override public timer heap internal timer string integer create test datum return new timer heap internal timer key this class be only public to work with link org apache flink api common typeutil class relocator public static final class timer serializer verifier implement type serializer upgrade test base upgrade verifier timer heap internal timer string integer override public type serializer timer heap internal timer string integer create upgrade serializer return new timer serializer string serializer instance int serializer instance override public matcher timer heap internal timer string integer test datum matcher return be new timer heap internal timer key override public matcher type serializer schema compatibility timer heap internal timer string integer schema compatibility matcher migration version version return type serializer matcher be compatible as be 
checkpoint barrier unaligner cancellation test run with parameterized class public class checkpoint barrier unaligner cancellation test private final list runtime event event private final boolean expect trigger checkpoint private final boolean expect abort checkpoint private final int num channel private final int channel public checkpoint barrier unaligner cancellation test boolean expect trigger checkpoint boolean expect abort checkpoint list runtime event event int num channel int channel this event event this expect trigger checkpoint expect trigger checkpoint this expect abort checkpoint expect abort checkpoint this num channel num channel this channel channel parameterize parameter name expect trigger expect abort num channel chan event public static object parameter return new object new object false true array as list cancel cancel new object false true array as list cancel cancel new object false true array as list cancel checkpoint new object true true array as list cancel checkpoint new object false true array as list cancel checkpoint new object true false array as list checkpoint checkpoint new object true false array as list checkpoint checkpoint new object true true array as list checkpoint checkpoint new object true false array as list checkpoint checkpoint new object true true array as list checkpoint cancel new object true true array as list checkpoint cancel new object true false array as list checkpoint cancel test public void test throw exception test invokable invokable new test invokable checkpoint barrier unaligner unaligner new checkpoint barrier unaligner test subtask checkpoint coordinator instance test invokable new mock index input gate num channel for runtime event e event if e instanceof cancel checkpoint marker unaligner process cancellation barrier cancel checkpoint marker e else if e instanceof checkpoint barrier unaligner process barrier checkpoint barrier e new input channel info channel else throw new illegal argument exception unexpected event type e assert equal expect abort checkpoint expect abort checkpoint invokable checkpoint abort assert equal expect trigger checkpoint expect trigger checkpoint invokable checkpoint trigger private static checkpoint barrier checkpoint int checkpoint id return new checkpoint barrier checkpoint id checkpoint option for checkpoint with default location private static cancel checkpoint marker cancel int checkpoint id return new cancel checkpoint marker checkpoint id private static class test invokable extend abstract invokable test invokable super new dummy environment private boolean checkpoint abort private boolean checkpoint trigger override public void invoke override public void trigger checkpoint on barrier checkpoint meta datum checkpoint meta datum checkpoint option checkpoint option checkpoint metric checkpoint metric checkpoint trigger true override public void abort checkpoint on barrier long checkpoint id throwable cause checkpoint abort true override public e extend exception void execute in task thread throw runnable e runnable string description format object description arg try runnable run catch exception e throw new runtime exception e 
window operator migration test run with parameterized class public class window operator migration test parameterized parameter name migration savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 private static final type information tuple2 string integer string int tuple type information of new type hint tuple2 string integer todo change this to the correspond savepoint version to be write e g link migration version v1 for 1.3 todo and remove all ignore annotation on write snapshot method to generate savepoint todo note you should generate the savepoint base on the release branch instead of the master private final migration version flink generate savepoint version null private final migration version test migrate version public window operator migration test migration version test migrate version this test migrate version test migrate version manually run this to write binary snapshot datum ignore test public void write session window with count trigger snapshot throw exception final int session size list state descriptor tuple2 string integer state desc new list state descriptor window contents string int tuple create serializer new execution config window operator string tuple2 string integer iterable tuple2 string integer tuple3 string long long time window operator new window operator event time session window with gap time seconds session size new time window serializer new tuple key selector string basic type info string type info create serializer new execution config state desc new internal iterable window function new session window function purge trigger of count trigger of null late datum output tag one input stream operator test harness tuple2 string integer tuple3 string long long test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness open add element out of order test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 do snapshot and save to file operator subtask state snapshot test harness snapshot 0 l 0 l operator snapshot util write state handle snapshot src test resource win op migration test session with stateful trigger flink flink generate savepoint version snapshot test harness close test public void test restore session window with count trigger throw exception final int session size list state descriptor tuple2 string integer state desc new list state descriptor window contents string int tuple create serializer new execution config window operator string tuple2 string integer iterable tuple2 string integer tuple3 string long long time window operator new window operator event time session window with gap time seconds session size new time window serializer new tuple key selector string basic type info string type info create serializer new execution config state desc new internal iterable window function new session window function purge trigger of count trigger of null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple3 string long long test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness initialize state operator snapshot util get resource filename win op migration test session with stateful trigger flink test migrate version snapshot test harness open test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness util assert output equal sort output be not correct expected output test harness get output new tuple3 result sort comparator add a element that merge the two key1 session they should now have count and therefore fire test harness process element new stream record new tuple2 key1 expect output add new stream record new tuple3 key1 10 l l l test harness util assert output equal sort output be not correct expected output test harness get output new tuple3 result sort comparator test harness close manually run this to write binary snapshot datum ignore test public void write session window with count trigger in mint condition snapshot throw exception final int session size list state descriptor tuple2 string integer state desc new list state descriptor window contents string int tuple create serializer new execution config window operator string tuple2 string integer iterable tuple2 string integer tuple3 string long long time window operator new window operator event time session window with gap time seconds session size new time window serializer new tuple key selector string basic type info string type info create serializer new execution config state desc new internal iterable window function new session window function purge trigger of count trigger of null late datum output tag one input stream operator test harness tuple2 string integer tuple3 string long long test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness open do snapshot and save to file operator subtask state snapshot test harness snapshot operator snapshot util write state handle snapshot src test resource win op migration test session with stateful trigger mint flink flink generate savepoint version snapshot test harness close this check that we can restore from a virgin code window operator that have never see any element test public void test restore session window with count trigger in mint condition throw exception final int session size list state descriptor tuple2 string integer state desc new list state descriptor window contents string int tuple create serializer new execution config window operator string tuple2 string integer iterable tuple2 string integer tuple3 string long long time window operator new window operator event time session window with gap time seconds session size new time window serializer new tuple key selector string basic type info string type info create serializer new execution config state desc new internal iterable window function new session window function purge trigger of count trigger of null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple3 string long long test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness initialize state operator snapshot util get resource filename win op migration test session with stateful trigger mint flink test migrate version snapshot test harness open add element out of order test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 expect output add new stream record new tuple3 key2 0 l l test harness util assert output equal sort output be not correct expected output test harness get output new tuple3 result sort comparator add a element that merge the two key1 session they should now have count and therefore fire test harness process element new stream record new tuple2 key1 expect output add new stream record new tuple3 key1 10 l l l test harness util assert output equal sort output be not correct expected output test harness get output new tuple3 result sort comparator test harness close manually run this to write binary snapshot datum ignore test public void write reduce event time window snapshot throw exception final int window size reduce state descriptor tuple2 string integer state desc new reduce state descriptor window contents new sum reducer string int tuple create serializer new execution config window operator string tuple2 string integer tuple2 string integer tuple2 string integer time window operator new window operator tumble event time window of time of window size time unit seconds new time window serializer new tuple key selector basic type info string type info create serializer new execution config state desc new internal single value window function new pass through window function string time window tuple2 string integer event time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple2 string integer test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness open add element out of order test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process watermark new watermark expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator test harness process watermark new watermark expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator do snapshot and save to file operator subtask state snapshot test harness snapshot operator snapshot util write state handle snapshot src test resource win op migration test reduce event time flink flink generate savepoint version snapshot test harness close test public void test restore reduce event time window throw exception final int window size reduce state descriptor tuple2 string integer state desc new reduce state descriptor window contents new sum reducer string int tuple create serializer new execution config window operator string tuple2 string integer tuple2 string integer tuple2 string integer time window operator new window operator tumble event time window of time of window size time unit seconds new time window serializer new tuple key selector basic type info string type info create serializer new execution config state desc new internal single value window function new pass through window function string time window tuple2 string integer event time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple2 string integer test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness initialize state operator snapshot util get resource filename win op migration test reduce event time flink test migrate version snapshot test harness open test harness process watermark new watermark expect output add new stream record new tuple2 key1 expect output add new stream record new tuple2 key2 expect output add new watermark test harness process watermark new watermark expect output add new watermark test harness process watermark new watermark expect output add new watermark test harness process watermark new watermark expect output add new stream record new tuple2 key2 expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator test harness close manually run this to write binary snapshot datum ignore test public void write apply event time window snapshot throw exception final int window size list state descriptor tuple2 string integer state desc new list state descriptor window contents string int tuple create serializer new execution config window operator string tuple2 string integer iterable tuple2 string integer tuple2 string integer time window operator new window operator tumble event time window of time of window size time unit seconds new time window serializer new tuple key selector basic type info string type info create serializer new execution config state desc new internal iterable window function new rich sum reducer time window event time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple2 string integer test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness open add element out of order test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key1 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key2 test harness process watermark new watermark expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator test harness process watermark new watermark expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator do snapshot and save to file operator subtask state snapshot test harness snapshot operator snapshot util write state handle snapshot src test resource win op migration test apply event time flink flink generate savepoint version snapshot test harness close test public void test restore apply event time window throw exception final int window size list state descriptor tuple2 string integer state desc new list state descriptor window contents string int tuple create serializer new execution config window operator string tuple2 string integer iterable tuple2 string integer tuple2 string integer time window operator new window operator tumble event time window of time of window size time unit seconds new time window serializer new tuple key selector basic type info string type info create serializer new execution config state desc new internal iterable window function new rich sum reducer time window event time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple2 string integer test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness initialize state operator snapshot util get resource filename win op migration test apply event time flink test migrate version snapshot test harness open test harness process watermark new watermark expect output add new stream record new tuple2 key1 expect output add new stream record new tuple2 key2 expect output add new watermark test harness process watermark new watermark expect output add new watermark test harness process watermark new watermark expect output add new watermark test harness process watermark new watermark expect output add new stream record new tuple2 key2 expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator test harness close manually run this to write binary snapshot datum ignore test public void write reduce processing time window snapshot throw exception final int window size reduce state descriptor tuple2 string integer state desc new reduce state descriptor window contents new sum reducer string int tuple create serializer new execution config window operator string tuple2 string integer tuple2 string integer tuple2 string integer time window operator new window operator tumble processing time window of time of window size time unit seconds new time window serializer new tuple key selector basic type info string type info create serializer new execution config state desc new internal single value window function new pass through window function string time window tuple2 string integer processing time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple2 string integer test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness open test harness set processing time test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key1 test harness set processing time test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key3 expect output add new stream record new tuple2 key1 expect output add new stream record new tuple2 key2 test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator do snapshot and save to file operator subtask state snapshot test harness snapshot operator snapshot util write state handle snapshot src test resource win op migration test reduce processing time flink flink generate savepoint version snapshot test harness close test public void test restore reduce processing time window throw exception final int window size reduce state descriptor tuple2 string integer state desc new reduce state descriptor window contents new sum reducer string int tuple create serializer new execution config window operator string tuple2 string integer tuple2 string integer tuple2 string integer time window operator new window operator tumble processing time window of time of window size time unit seconds new time window serializer new tuple key selector basic type info string type info create serializer new execution config state desc new internal single value window function new pass through window function string time window tuple2 string integer processing time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple2 string integer test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness initialize state operator snapshot util get resource filename win op migration test reduce processing time flink test migrate version snapshot test harness open test harness set processing time test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key1 test harness set processing time expect output add new stream record new tuple2 key1 expect output add new stream record new tuple2 key2 expect output add new stream record new tuple2 key3 test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator test harness close manually run this to write binary snapshot datum ignore test public void write apply processing time window snapshot throw exception final int window size list state descriptor tuple2 string integer state desc new list state descriptor window contents string int tuple create serializer new execution config window operator string tuple2 string integer iterable tuple2 string integer tuple2 string integer time window operator new window operator tumble processing time window of time of window size time unit seconds new time window serializer new tuple key selector basic type info string type info create serializer new execution config state desc new internal iterable window function new rich sum reducer time window processing time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple2 string integer test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness open test harness set processing time test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key1 test harness set processing time test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key3 expect output add new stream record new tuple2 key1 expect output add new stream record new tuple2 key2 test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator do snapshot and save to file operator subtask state snapshot test harness snapshot operator snapshot util write state handle snapshot src test resource win op migration test apply processing time flink flink generate savepoint version snapshot test harness close test public void test restore apply processing time window throw exception final int window size list state descriptor tuple2 string integer state desc new list state descriptor window contents string int tuple create serializer new execution config window operator string tuple2 string integer iterable tuple2 string integer tuple2 string integer time window operator new window operator tumble processing time window of time of window size time unit seconds new time window serializer new tuple key selector basic type info string type info create serializer new execution config state desc new internal iterable window function new rich sum reducer time window processing time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 string integer tuple2 string integer test harness new keyed one input stream operator test harness operator new tuple key selector basic type info string type info test harness setup test harness initialize state operator snapshot util get resource filename win op migration test apply processing time flink test migrate version snapshot test harness open test harness set processing time test harness process element new stream record new tuple2 key2 test harness process element new stream record new tuple2 key1 test harness set processing time expect output add new stream record new tuple2 key1 expect output add new stream record new tuple2 key2 expect output add new stream record new tuple2 key3 test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator test harness close manually run this to write binary snapshot datum ignore test public void write window with kryo serialize key snapshot throw exception final int window size type information tuple2 non pojo type integer input type new type hint tuple2 non pojo type integer get type info reduce state descriptor tuple2 non pojo type integer state desc new reduce state descriptor window contents new sum reducer input type create serializer new execution config type serializer non pojo type key serializer type information of non pojo type class create serializer new execution config assert true key serializer instanceof kryo serializer window operator non pojo type tuple2 non pojo type integer tuple2 non pojo type integer tuple2 non pojo type integer time window operator new window operator tumble event time window of time of window size time unit seconds new time window serializer new tuple key selector key serializer state desc new internal single value window function new pass through window function event time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 non pojo type integer tuple2 non pojo type integer test harness new keyed one input stream operator test harness operator new tuple key selector type information of non pojo type class test harness setup test harness open add element out of order test harness process element new stream record new tuple2 new non pojo type key2 test harness process element new stream record new tuple2 new non pojo type key2 test harness process element new stream record new tuple2 new non pojo type key1 test harness process element new stream record new tuple2 new non pojo type key1 test harness process element new stream record new tuple2 new non pojo type key1 test harness process element new stream record new tuple2 new non pojo type key2 test harness process element new stream record new tuple2 new non pojo type key2 test harness process element new stream record new tuple2 new non pojo type key2 test harness process watermark new watermark expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator test harness process watermark new watermark expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator do snapshot and save to file operator subtask state snapshot test harness snapshot operator snapshot util write state handle snapshot src test resource win op migration test kryo serialize key flink flink generate savepoint version snapshot test harness close test public void test restore kryo serialize key window throw exception final int window size type information tuple2 non pojo type integer input type new type hint tuple2 non pojo type integer get type info reduce state descriptor tuple2 non pojo type integer state desc new reduce state descriptor window contents new sum reducer input type create serializer new execution config type serializer non pojo type key serializer type information of non pojo type class create serializer new execution config assert true key serializer instanceof kryo serializer window operator non pojo type tuple2 non pojo type integer tuple2 non pojo type integer tuple2 non pojo type integer time window operator new window operator tumble event time window of time of window size time unit seconds new time window serializer new tuple key selector key serializer state desc new internal single value window function new pass through window function event time trigger create null late datum output tag concurrent link queue object expect output new concurrent link queue one input stream operator test harness tuple2 non pojo type integer tuple2 non pojo type integer test harness new keyed one input stream operator test harness operator new tuple key selector type information of non pojo type class test harness setup test harness initialize state operator snapshot util get resource filename win op migration test kryo serialize key flink test migrate version snapshot test harness open test harness process watermark new watermark expect output add new stream record new tuple2 new non pojo type key1 expect output add new stream record new tuple2 new non pojo type key2 expect output add new watermark test harness process watermark new watermark expect output add new watermark test harness process watermark new watermark expect output add new watermark test harness process watermark new watermark expect output add new stream record new tuple2 new non pojo type key2 expect output add new watermark test harness util assert output equal sort output be not correct expected output test harness get output new tuple2 result sort comparator test harness close private static class tuple key selector k implement key selector tuple2 k integer k private static final long serial version u i d 1 l override public k get key tuple2 k integer value throw exception return value f0 suppress warning unchecked private static class tuple2 result sort comparator k extend comparable implement comparator object override public int compare object o1 object o2 if o1 instanceof watermark o2 instanceof watermark return else stream record tuple2 k integer sr0 stream record tuple2 k integer o1 stream record tuple2 k integer sr1 stream record tuple2 k integer o2 if sr0 get timestamp sr1 get timestamp return int sr0 get timestamp sr1 get timestamp int comparison sr0 get value f0 compare to sr1 get value f0 if comparison return comparison else return sr0 get value f1 sr1 get value f1 suppress warning unchecked private static class tuple3 result sort comparator implement comparator object override public int compare object o1 object o2 if o1 instanceof watermark o2 instanceof watermark return else stream record tuple3 string long long sr0 stream record tuple3 string long long o1 stream record tuple3 string long long sr1 stream record tuple3 string long long o2 if sr0 get timestamp sr1 get timestamp return int sr0 get timestamp sr1 get timestamp int comparison sr0 get value f0 compare to sr1 get value f0 if comparison return comparison else comparison int sr0 get value f1 sr1 get value f1 if comparison return comparison return int sr0 get value f1 sr1 get value f1 private static class sum reducer k implement reduce function tuple2 k integer private static final long serial version u i d 1 l override public tuple2 k integer reduce tuple2 k integer value1 tuple2 k integer value2 throw exception return new tuple2 value2 f0 value1 f1 value2 f1 private static class rich sum reducer w extend window extend rich window function tuple2 string integer tuple2 string integer string w private static final long serial version u i d 1 l private boolean open call false override public void open configuration parameter throw exception super open parameter open call true override public void close throw exception super close override public void apply string key w window iterable tuple2 string integer input collector tuple2 string integer out throw exception if open call fail open be not call int sum for tuple2 string integer t input sum t f1 out collect new tuple2 key sum private static class session window function implement window function tuple2 string integer tuple3 string long long string time window private static final long serial version u i d 1 l override public void apply string key time window window iterable tuple2 string integer value collector tuple3 string long long out throw exception int sum for tuple2 string integer i value sum i f1 string result string key sum out collect new tuple3 result string window get start window get end 
window serializer upgrade test run with parameterized class public class window serializer upgrade test extend type serializer upgrade test base object object public window serializer upgrade test test specification object object test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification time window serializer migration version time window serializer setup class time window serializer verifier class test specification add new test specification global window serializer migration version global window serializer setup class global window serializer verifier class return test specification specification for time window serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class time window serializer setup implement type serializer upgrade test base pre upgrade setup time window override public type serializer time window create prior serializer return new time window serializer override public time window create test datum return new time window this class be only public to work with link org apache flink api common typeutil class relocator public static final class time window serializer verifier implement type serializer upgrade test base upgrade verifier time window override public type serializer time window create upgrade serializer return new time window serializer override public matcher time window test datum matcher return be new time window override public matcher type serializer schema compatibility time window schema compatibility matcher migration version version return type serializer matcher be compatible as be specification for global window serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class global window serializer setup implement type serializer upgrade test base pre upgrade setup global window override public type serializer global window create prior serializer return new global window serializer override public global window create test datum return global window get this class be only public to work with link org apache flink api common typeutil class relocator public static final class global window serializer verifier implement type serializer upgrade test base upgrade verifier global window override public type serializer global window create upgrade serializer return new global window serializer override public matcher global window test datum matcher return be global window get override public matcher type serializer schema compatibility global window schema compatibility matcher migration version version return type serializer matcher be compatible as be 
stream element serializer upgrade test run with parameterized class public class stream element serializer upgrade test extend type serializer upgrade test base stream element stream element public stream element serializer upgrade test test specification stream element stream element test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification stream element serializer migration version stream element setup class stream element verifier class return test specification specification for stream element serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class stream element setup implement type serializer upgrade test base pre upgrade setup stream element override public type serializer stream element create prior serializer return new stream element serializer string serializer instance override public stream element create test datum return new stream record key this class be only public to work with link org apache flink api common typeutil class relocator public static final class stream element verifier implement type serializer upgrade test base upgrade verifier stream element override public type serializer stream element create upgrade serializer return new stream element serializer string serializer instance suppress warning unchecked rawtype override public matcher stream element test datum matcher return matcher stream record be key be l override public matcher type serializer schema compatibility stream element schema compatibility matcher migration version version return type serializer matcher be compatible as be 
local executor i t case run with parameterized class public class local executor i t case extend test logger parameter name planner public static list string planner return array as list execution entry execution planner value old execution entry execution planner value blink private static final string default environment file test sql client default yaml private static final string dialect environment file test sql client dialect yaml private static final int num tm private static final int num slot per tm class rule public static temporary folder temp folder new temporary folder class rule public static final mini cluster with client resource mini cluster resource new mini cluster with client resource new mini cluster resource configuration builder set configuration get config set number task manager num tm set number slot per task manager num slot per tm build private static cluster client cluster client a generate udf jar use for testing classloading of dependency private static url udf dependency before class public static void setup throw i o exception cluster client mini cluster resource get cluster client file udf jar test user class loader jar create jar file temp folder new folder test jar test classloader udf jar udf dependency udf jar to u be i to u be l private static configuration get config configuration config new configuration config set task manager option manage memory size memory size parse 4m config set integer config constant local number task manager num tms config set integer task manager option num task slot num slot per tm config set boolean web option submit enable false return config parameter public string planner rule public expect exception exception expect exception none test public void test view throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id executor execute sql session id create temporary view if not exist additional view1 as select try executor execute sql session id create temporary view additional view1 as select fail unexpected exception catch exception var1 assert that var1 get cause get message be temporary table default catalog default database additional view1 already exist executor execute sql session id create view additional view1 as select executor execute sql session id create temporary view if not exist additional view2 as select from additional view1 list string actual table executor list table session id list string expect table array as list additional view1 additional view2 table number1 table number2 table source sink test view1 test view2 assert equal expect table actual table although additional view2 need additional view1 drop additional view1 first do not throw try executor execute sql session id drop view additional view1 fail unexpected exception catch exception var1 assert that var1 get cause get message be temporary view with identifier default catalog default database additional view1 exist drop it first before remove the permanent view executor execute sql session id drop temporary view additional view1 executor execute sql session id drop view additional view1 executor execute sql session id drop temporary view additional view2 actual table executor list table session id expect table array as list table number1 table number2 table source sink test view1 test view2 assert equal expect table actual table executor close session session id test public void test list catalog throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id final list string actual catalog executor list catalog session id final list string expect catalog array as list catalog1 default catalog simple catalog assert equal expect catalog actual catalog executor close session session id test public void test list database throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id final list string actual database executor list database session id final list string expect database collection singleton list default database assert equal expect database actual database executor close session session id test public void test create database throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id executor execute update session id create database db1 final list string actual database executor list database session id final list string expect database array as list default database db1 assert equal expect database actual database executor close session session id test public void test drop database throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id executor execute update session id create database db1 list string actual database executor list database session id list string expect database array as list default database db1 assert equal expect database actual database executor execute update session id drop database if exist db1 actual database executor list database session id expect database array as list default database assert equal expect database actual database executor close session session id test public void test alter database throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id executor execute update session id create database db1 comment db1 comment with k1 v1 executor execute update session id alter database db1 set k1 a k2 b final list string actual database executor list database session id final list string expect database array as list default database db1 assert equal expect database actual database todo we should compare the new db1 property after we support describe database in local executor executor close session session id test public void test alter table throw exception final executor executor create default executor cluster client final local executor local executor local executor executor final session context session new session context test session new environment string session id executor open session session assert equal test session session id executor use catalog session id simple catalog executor use database session id default database list string actual table executor list table session id list string expect table array as list test table assert equal expect table actual table executor execute update session id alter table test table rename to t1 actual table executor list table session id expect table array as list t1 assert equal expect table actual table todo we should add alter table set test when we support create table in executor executor close session session id test public void test list table throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id final list string actual table executor list table session id final list string expect table array as list table number1 table number2 table source sink test view1 test view2 assert equal expect table actual table executor close session session id test public void test list user define function throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id final list string actual table executor list user define function session id final list string expect table array as list aggregateudf tableudf scalarudf assert equal expect table actual table executor close session session id test public void test set session property throw exception final local executor executor create default executor cluster client string key optimizer config option table optimizer agg phase strategy key final session context session new session context test session new environment string session id executor open session session check the config in environment assert null executor get session property session id get key check the config in table config assert null executor get execution context session id get table environment get config get configuration get string key null modify config executor set session property session id key one phase check the config in environment again assert equal one phase executor get session property session id get key check the config in table config again assert equal one phase executor get execution context session id get table environment get config get configuration get string key null reset all property executor reset session property session id check the config in environment assert null executor get session property session id get key check the config in table config assert null executor get execution context session id get table environment get config get configuration get string key null test public void test get session property throw exception final executor executor create default executor cluster client final session context session new session context test session new environment session get session env set execution immutable map of result mode changelog open the session and get the session id string session id executor open session session try assert equal test session session id assert equal executor get session property session id get execution result mode changelog modify default executor set session property session id execution result mode table final map string string actual property executor get session property session id final map string string expect property new hash map expect property put execution planner planner expect property put execution type batch expect property put execution time characteristic event time expect property put execution periodic watermark interval expect property put execution parallelism expect property put execution max parallelism expect property put execution max idle state retention expect property put execution min idle state retention expect property put execution result mode table expect property put execution max table result row expect property put execution restart strategy type failure rate expect property put execution restart strategy max failure per interval expect property put execution restart strategy failure rate interval expect property put execution restart strategy delay expect property put table optimizer join reorder enable false expect property put deployment response timeout assert equal expect property actual property reset session property executor reset session property session id assert equal executor get session property session id get execution result mode changelog finally executor close session session id test public void test table schema throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id final table schema actual table schema executor get table schema session id table number2 final table schema expect table schema new table schema new string integer field2 string field2 timestamp field2 new type information type int type string type sql timestamp assert equal expect table schema actual table schema executor close session session id test public void test complete statement throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id final list string expect table hint array as list default catalog default database table number1 default catalog default database table number2 default catalog default database table source sink assert equal expect table hint executor complete statement session id select from ta final list string expect clause collection singleton list where assert equal expect clause executor complete statement session id select from table number2 wh final list string expect field array as list integer field1 assert equal expect field executor complete statement session id select from table number1 where inte executor close session session id test timeout l public void test stream query execution changelog throw exception final url url get class get class loader get resource test datum csv object require non null url final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url get path replace var put var execution type streaming replace var put var result mode changelog replace var put var update mode update mode append replace var put var max row final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id try start job and retrieval final result descriptor desc executor execute query session id select scalar u d f integer field1 string field1 abc from table number1 assert false desc be materialize final list string actual result retrieve changelog result executor session id desc get result id final list string expect result new array list expect result add true hello world abc expect result add true hello world abc expect result add true hello world abc expect result add true hello world abc expect result add true hello world abc expect result add true hello world abc test base util compare result collection expect result actual result comparator natural order finally executor close session session id test timeout l public void test stream query execution changelog multiple time throw exception final url url get class get class loader get resource test datum csv object require non null url final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url get path replace var put var execution type streaming replace var put var result mode changelog replace var put var update mode update mode append replace var put var max row final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id final list string expect result new array list expect result add true hello world expect result add true hello world expect result add true hello world expect result add true hello world expect result add true hello world expect result add true hello world try for int i i i start job and retrieval final result descriptor desc executor execute query session id select scalar u d f integer field1 string field1 from table number1 assert false desc be materialize final list string actual result retrieve changelog result executor session id desc get result id test base util compare result collection expect result actual result comparator natural order finally executor close session session id test timeout l public void test stream query execution table throw exception final url url get class get class loader get resource test datum csv object require non null url final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url get path replace var put var execution type streaming replace var put var result mode table replace var put var update mode update mode append replace var put var max row final string query select scalar u d f integer field1 string field1 abc from table number1 final list string expect result new array list expect result add hello world abc expect result add hello world abc expect result add hello world abc expect result add hello world abc expect result add hello world abc expect result add hello world abc execute stream query table replace var query expect result test timeout l public void test stream query execution table multiple time throw exception final url url get class get class loader get resource test datum csv object require non null url final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url get path replace var put var execution type streaming replace var put var result mode table replace var put var update mode update mode append replace var put var max row final string query select scalar u d f integer field1 string field1 from table number1 final list string expect result new array list expect result add hello world expect result add hello world expect result add hello world expect result add hello world expect result add hello world expect result add hello world final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id try for int i i i execute stream query table replace var query expect result finally executor close session session id test timeout l public void test stream query execution limit table throw exception final url url get class get class loader get resource test datum csv object require non null url final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url get path replace var put var execution type streaming replace var put var result mode table replace var put var update mode update mode append replace var put var max row final string query select count string field1 from table number1 group by string field1 final list string expect result new array list expect result add hello world execute stream query table replace var query expect result test timeout l public void test batch query execution throw exception final url url get class get class loader get resource test datum csv object require non null url final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url get path replace var put var execution type batch replace var put var result mode table replace var put var update mode replace var put var max row final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id try final result descriptor desc executor execute query session id select abc from test view1 assert true desc be materialize final list string actual result retrieve table result executor session id desc get result id final list string expect result new array list expect result add abc expect result add abc expect result add abc expect result add abc expect result add abc expect result add abc test base util compare result collection expect result actual result comparator natural order finally executor close session session id test timeout l public void test batch query execution multiple time throw exception final url url get class get class loader get resource test datum csv object require non null url final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url get path replace var put var execution type batch replace var put var result mode table replace var put var update mode replace var put var max row final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id final list string expect result new array list expect result add expect result add expect result add expect result add expect result add expect result add try for int i i i final result descriptor desc executor execute query session id select from test view1 assert true desc be materialize final list string actual result retrieve table result executor session id desc get result id test base util compare result collection expect result actual result comparator natural order finally executor close session session id test timeout l public void ensure exception on faulty source in streaming changelog mode throw exception final string miss file name miss source final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 miss source replace var put var execution type streaming replace var put var result mode changelog replace var put var update mode update mode append replace var put var max row replace var put var restart strategy type none final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id optional throwable throwable with message optional empty try final result descriptor desc executor execute query session id select from test view1 retrieve changelog result executor session id desc get result id catch sql execution exception e throwable with message find miss file exception e miss file name finally executor close session session id assert true throwable with message be present test timeout l public void ensure exception on faulty source in streaming table mode throw exception final string miss file name miss source final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 miss file name replace var put var execution type streaming replace var put var result mode table replace var put var update mode update mode append replace var put var max row replace var put var restart strategy type none final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id optional throwable throwable with message optional empty try final result descriptor desc executor execute query session id select from test view1 retrieve table result executor session id desc get result id catch sql execution exception e throwable with message find miss file exception e miss file name finally executor close session session id assert true throwable with message be present test timeout l public void ensure exception on faulty source in batch throw exception final string miss file name miss source final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 miss file name replace var put var execution type batch replace var put var result mode table replace var put var update mode replace var put var max row replace var put var restart strategy type none final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id optional throwable throwable with message optional empty try final result descriptor desc executor execute query session id select from test view1 retrieve table result executor session id desc get result id catch sql execution exception e throwable with message find miss file exception e miss file name finally executor close session session id assert true throwable with message be present private optional throwable find miss file exception sql execution exception e string filename optional throwable throwable with message for batch source throwable with message exception util find throwable with message e file filename do not exist or the user run flink if throwable with message be present for streaming source the blink runner always use a streaming source throwable with message exception util find throwable with message e the provide file path filename do not exist return throwable with message test timeout l public void test stream query execution sink throw exception final string csv output path new file temp folder new folder get absolute path test out csv to u be i to string final url url get class get class loader get resource test datum csv object require non null url final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url get path replace var put var execution type streaming replace var put var source sink path csv output path replace var put var update mode update mode append replace var put var max row final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id try executor execute sql session id create function lower u d f as lower u d f case register sink case 1.1 register sink with uppercase insert into keyword flink wrong classloader when insert into with udf final string statement1 insert into table source sink select integer field1 lower u d f string field1 timestamp field1 from table number1 execute and verify sink result executor session id statement1 csv output path case 1.2 register sink with lowercase insert into keyword final string statement2 insert into table source sink n select integer field1 lower u d f string field1 timestamp field1 from table number1 execute and verify sink result executor session id statement2 csv output path case 1.3 execute the same statement again the result should expect to be the same execute and verify sink result executor session id statement2 csv output path case temporary sink executor use catalog session id simple catalog executor use database session id default database all query be pipelined to a in memory sink check it be properly register final result descriptor other catalog desc executor execute query session id select from test table final list string other catalog result retrieve table result executor session id other catalog desc get result id test base util compare result collection simple catalog factory table contents stream map row to string collect collector to list other catalog result comparator natural order finally executor close session session id test public void test use catalog and use database throw exception final string csv output path new file temp folder new folder get absolute path test out csv to u be i to string final url url1 get class get class loader get resource test datum csv final url url2 get class get class loader get resource test datum csv object require non null url1 object require non null url2 final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url1 get path replace var put var source p a t h2 url2 get path replace var put var execution type streaming replace var put var source sink path csv output path replace var put var update mode update mode append replace var put var max row final executor executor create modify executor catalog environment file cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id try assert equal collection singleton list mydatabase executor list database session id executor use catalog session id hivecatalog assert equal array as list dependency test test hive catalog factory additional test database hive catalog default db executor list database session id assert equal collection singleton list dependency test test hive catalog factory table with parameterized type executor list table session id executor use database session id dependency test test hive catalog factory additional test database assert equal collection singleton list dependency test test hive catalog factory test table executor list table session id finally executor close session session id test public void test use non exist database throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id exception expect sql execution exception class executor use database session id nonexistingdb test public void test use non exist catalog throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session assert equal test session session id exception expect sql execution exception class executor use catalog session id nonexistingcatalog executor close session session id test public void test parameterize type throw exception only blink planner support parameterize type assume assume true planner equal blink final url url1 get class get class loader get resource test datum csv final url url2 get class get class loader get resource test datum csv object require non null url1 object require non null url2 final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 url1 get path replace var put var source p a t h2 url2 get path replace var put var execution type batch replace var put var update mode update mode append replace var put var max row replace var put var result mode table final executor executor create modify executor catalog environment file cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id executor use catalog session id hivecatalog string result i d executor execute query session id select from dependency test test hive catalog factory table with parameterized type get result id retrieve table result executor session id result i d make sure legacy type still work executor use catalog session id default catalog result i d executor execute query session id select from table number3 get result id retrieve table result executor session id result i d executor close session session id test public void test create table throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session final string ddl template create table s n a int n b bigint n c varchar n with n connector type filesystem n format type csv n connector path xxx n n try test create table with simple name executor use catalog session id catalog1 executor create table session id string format ddl template my table1 assert equal collection singleton list my table1 executor list table session id executor create table session id string format ddl template my table2 assert equal array as list my table1 my table2 executor list table session id test create table with full qualified name executor use catalog session id catalog1 executor create table session id string format ddl template simple catalog default database my table3 executor create table session id string format ddl template simple catalog default database my table4 assert equal array as list my table1 my table2 executor list table session id executor use catalog session id simple catalog assert equal array as list my table3 my table4 test table executor list table session id test create table with db and table name executor use catalog session id catalog1 executor create table session id string format ddl template default my table5 executor create table session id string format ddl template default my table6 assert equal array as list my table1 my table2 my table5 my table6 executor list table session id finally executor close session session id test ignore todo reopen when flink be fix public void test create table with compute column throw exception assume assume true planner equal blink final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 file fake path1 replace var put var source p a t h2 file fake path2 replace var put var execution type batch replace var put var update mode update mode append replace var put var max row replace var put var result mode table final executor executor create modify executor cluster client replace var final string ddl template create table s n a int n b bigint n c as a n with n connector type filesystem n format type csv n connector path xxx n n final session context session new session context test session new environment string session id executor open session session try executor use catalog session id catalog1 executor create table session id string format ddl template my table1 assert equal collection singleton list my table1 executor list table session id executor create table session id string format ddl template my table2 assert equal array as list my table1 my table2 executor list table session id finally executor close session session id test ignore todo reopen when flink be fix public void test create table with watermark throw exception final map string string replace vars new hash map replace var put var planner planner replace var put var source p a t h1 file fake path1 replace var put var source p a t h2 file fake path2 replace var put var execution type batch replace var put var update mode update mode append replace var put var max row replace var put var result mode table final executor executor create modify executor cluster client replace var final string ddl template create table s n a int n b timestamp n watermark for b as b interval second n with n connector type filesystem n format type csv n connector path xxx n n final session context session new session context test session new environment string session id executor open session session try executor use catalog session id catalog1 executor create table session id string format ddl template my table1 assert equal collection singleton list my table1 executor list table session id executor create table session id string format ddl template my table2 assert equal array as list my table1 my table2 executor list table session id finally executor close session session id test public void test create table with property change throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session try executor use catalog session id catalog1 executor set session property session id execution type batch final string ddl template create table s n a int n b bigint n c varchar n with n connector type filesystem n format type csv n connector path xxx n update mode append n n executor create table session id string format ddl template my table1 change the session property to trigger new execution context executor set session property session id execution restart strategy failure rate interval executor create table session id string format ddl template my table2 assert equal array as list my table1 my table2 executor list table session id reset the session property executor reset session property session id executor create table session id string format ddl template my table3 assert equal array as list my table1 my table2 my table3 executor list table session id finally executor close session session id test public void test drop table throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session try executor use catalog session id catalog1 executor set session property session id execution type batch final string ddl template create table s n a int n b bigint n c varchar n with n connector type filesystem n format type csv n connector path xxx n update mode append n n test drop table executor create table session id string format ddl template my table1 assert equal collection singleton list my table1 executor list table session id executor drop table session id drop table my table1 assert equal collection empty list executor list table session id test drop table if exist executor create table session id string format ddl template my table1 assert equal collection singleton list my table1 executor list table session id executor drop table session id drop table if exist my table1 assert equal collection empty list executor list table session id test drop table with full qualified name executor create table session id string format ddl template my table1 assert equal collection singleton list my table1 executor list table session id executor drop table session id drop table catalog1 default my table1 assert equal collection empty list executor list table session id test drop table with db and table name executor create table session id string format ddl template my table1 assert equal collection singleton list my table1 executor list table session id executor drop table session id drop table default my table1 assert equal collection empty list executor list table session id test drop table that do not exist executor create table session id string format ddl template my table1 assert equal collection singleton list my table1 executor list table session id executor drop table session id drop table if exist catalog2 default my table1 assert equal collection singleton list my table1 executor list table session id executor drop table session id drop table default my table1 test drop table with property change executor create table session id string format ddl template my table1 change the session property to trigger new execution context executor set session property session id execution restart strategy failure rate interval executor create table session id string format ddl template my table2 assert equal array as list my table1 my table2 executor list table session id executor drop table session id drop table my table1 executor drop table session id drop table my table2 assert equal collection empty list executor list table session id test drop table with property reset reset the session property executor create table session id string format ddl template my table1 executor create table session id string format ddl template my table2 executor reset session property session id executor create table session id string format ddl template my table3 assert equal array as list my table1 my table2 my table3 executor list table session id executor drop table session id drop table my table1 executor drop table session id drop table my table2 executor drop table session id drop table my table3 assert equal collection empty list executor list table session id finally executor close session session id test public void test create function throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session argument temporary temporary system if not exist func name final string ddl template create s function s s n as org apache flink table client gateway local local executor i t case test scala function language java try test create table with simple name executor use catalog session id catalog1 executor execute sql session id string format ddl template func1 assert that executor list function session id have item func1 executor execute sql session id string format ddl template temporary if not exist func2 assert that executor list function session id have item func1 func2 test create function with full qualified name executor use catalog session id catalog1 executor create table session id string format ddl template simple catalog default database func3 executor create table session id string format ddl template temporary if not exist simple catalog default database func4 assert that executor list function session id have item func1 func2 executor use catalog session id simple catalog assert that executor list function session id have item func3 func4 test create function with db and table name executor use catalog session id catalog1 executor create table session id string format ddl template temporary default func5 executor create table session id string format ddl template temporary default func6 assert that executor list function session id have item func1 func2 func5 func6 finally executor close session session id test public void test drop function throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session try executor use catalog session id catalog1 executor set session property session id execution type batch argument temporary temporary system if not exist func name final string create template create s function s s n as org apache flink table client gateway local local executor i t case test scala function language java argument temporary temporary system if exist func name final string drop template drop s function s s test drop function executor execute sql session id string format create template func1 assert that executor list function session id have item func1 executor execute sql session id string format drop template func1 assert that executor list function session id not have item func1 test drop function if exist executor execute sql session id string format create template func1 assert that executor list function session id have item func1 executor execute sql session id string format drop template if exist func1 assert that executor list function session id not have item func1 test drop function with full qualified name executor execute sql session id string format create template func1 assert that executor list function session id have item func1 executor execute sql session id string format drop template if exist catalog1 default func1 assert that executor list function session id not have item func1 test drop function with db and function name executor execute sql session id string format create template func1 assert that executor list function session id have item func1 executor execute sql session id string format drop template if exist default func1 assert that executor list function session id not have item func1 test drop function that do not exist executor execute sql session id string format create template func1 assert that executor list function session id have item func1 try executor execute sql session id string format drop template if exist catalog2 default func1 fail unexpected catch exception e assert that e get cause get message be catalog catalog2 do not exist assert that executor list function session id have item func1 executor execute sql session id string format drop template default func1 test drop function with property change executor execute sql session id string format create template func1 change the session property to trigger new execution context executor set session property session id execution restart strategy failure rate interval executor execute sql session id string format create template func2 assert that executor list function session id have item func1 func2 executor execute sql session id string format drop template func1 executor execute sql session id string format drop template func2 assert that executor list function session id not have item func1 func2 test drop function with property reset reset the session property executor execute sql session id string format create template func1 executor execute sql session id string format create template func2 executor reset session property session id executor execute sql session id string format create template func3 assert that executor list function session id have item func1 func2 func3 executor execute sql session id string format drop template func1 executor execute sql session id string format drop template func2 executor execute sql session id string format drop template func3 assert that executor list function session id not have item func1 func2 func3 finally executor close session session id test public void test alter function throw exception final executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session try executor use catalog session id catalog1 executor set session property session id execution type batch argument temporary temporary system if not exist func name final string create template create s function s s n as org apache flink table client gateway local local executor i t case test scala function language java argument temporary temporary system if exist func name func class final string alter template alter s function s s as s test alter function executor execute sql session id string format create template func1 assert that executor list function session id have item func1 executor execute sql session id string format alter template if exist default func1 new class assert that executor list function session id have item func1 test alter non temporary function with temporary keyword try executor execute sql session id string format alter template temporary if exist default func2 func3 fail unexpected exception catch exception var1 assert that var1 get cause get message be alter temporary catalog function be not support finally executor close session session id test public void test s q l dialect throw exception local executor executor create default executor cluster client final session context session new session context test session new environment string session id executor open session session by default to use default dialect assert equal sql dialect default executor get execution context session id get table environment get config get sql dialect test switch dialect executor set session property session id table config option table sql dialect key hive assert equal sql dialect hive executor get execution context session id get table environment get config get sql dialect executor close session session id map string string replace vars new hash map replace var put var dialect default executor create modify executor dialect environment file cluster client replace var session id executor open session session assert equal sql dialect default executor get execution context session id get table environment get config get sql dialect executor close session session id replace var put var dialect hive executor create modify executor dialect environment file cluster client replace var session id executor open session session assert equal sql dialect hive executor get execution context session id get table environment get config get sql dialect executor close session session id private void execute stream query table map string string replace var string query list string expect result throw exception final executor executor create modify executor cluster client replace var final session context session new session context test session new environment string session id executor open session session assert equal test session session id try start job and retrieval final result descriptor desc executor execute query session id query assert true desc be materialize final list string actual result retrieve table result executor session id desc get result id test base util compare result collection expect result actual result comparator natural order finally executor close session session id private void verify sink result string path throw i o exception final list string actual result new array list test base util read all result line actual result path final list string expect result new array list expect result add true hello world 2020 - 01 01 00 00:01 expect result add false hello world 2020 - 01 01 00 00:02 expect result add false hello world 2020 - 01 01 00 00:03 expect result add false hello world 2020 - 01 01 00 00:04 expect result add true hello world 2020 - 01 01 00 00:05 expect result add false hello world 2020 - 01 01 00 00:06 test base util compare result collection expect result actual result comparator natural order private void execute and verify sink result executor executor string session id string statement string result path throw exception final program target descriptor target descriptor executor execute update session id statement wait for job completion and verify result boolean be run true while be run thread sleep slow the processing down final job status job status cluster client get job status target descriptor get job id get switch job status case create case run continue case finish be run false verify sink result result path break default fail unexpected job status private t local executor create default executor cluster client t cluster client throw exception final map string string replace vars new hash map replace var put var planner planner replace var put var execution type batch replace var put var update mode replace var put var max row replace var put var restart strategy type failure rate return new local executor environment file util parse modify default environment file replace var collection empty list cluster client get flink configuration new default c l i cluster client get flink configuration new default cluster client service loader private t local executor create modify executor cluster client t cluster client map string string replace var throw exception replace var put if absent var restart strategy type failure rate return new local executor environment file util parse modify default environment file replace var collection singleton list udf dependency cluster client get flink configuration new default c l i cluster client get flink configuration new default cluster client service loader private t local executor create modify executor string yaml file cluster client t cluster client map string string replace var throw exception replace var put if absent var restart strategy type failure rate return new local executor environment file util parse modify yaml file replace var collection empty list cluster client get flink configuration new default c l i cluster client get flink configuration new default cluster client service loader private list string retrieve table result executor executor string session id string result i d throw interrupted exception final list string actual result new array list while true thread sleep slow the processing down final type result integer result executor snapshot result session id result i d if result get type type result result type payload actual result clear int stream range close result get payload for each page for row row executor retrieve result page result i d page actual result add row to string else if result get type type result result type eo break return actual result private list string retrieve changelog result executor executor string session id string result i d throw interrupted exception final list string actual result new array list while true thread sleep slow the processing down final type result list tuple2 boolean row result executor retrieve result change session id result i d if result get type type result result type payload for tuple2 boolean row change result get payload actual result add change to string else if result get type type result result type eo break return actual result test function scala function for test public static class test scala function extend scalar function public long eval int i long l string s return i l s length 
flink d d l datum type test run with parameterized class public class flink d d l datum type test private static final fixture fixture new fixture test factory instance get type factory private static final string ddl format create table t1 n f0 s n with n k1 v1 n parameterize parameter name index public static list test item test datum return array as list create test item char nullable fixture char1 type char create test item char not null fixture char1 type char not null create test item char not t n n u l l fixture char1 type char not null create test item char not null fixture char1 type char not null create test item char null nullable fixture char1 type char create test item char nullable fixture char33 type char create test item varchar nullable fixture varchar type varchar create test item varchar nullable fixture varchar33 type varchar create test item string nullable fixture create sql type sql type name varchar integer max value string create test item boolean nullable fixture boolean type boolean create test item binary nullable fixture binary type binary create test item binary nullable fixture binary33 type binary create test item varbinary nullable fixture varbinary type varbinary create test item varbinary nullable fixture varbinary33 type varbinary create test item byte nullable fixture create sql type sql type name varbinary integer max value byte create test item decimal nullable fixture decimal type decimal create test item dec nullable fixture decimal type decimal create test item numeric nullable fixture decimal type decimal create test item decimal nullable fixture decimal p10 s0 type decimal create test item dec nullable fixture decimal p10 s0 type decimal create test item numeric nullable fixture decimal p10 s0 type decimal create test item decimal nullable fixture decimal p10 s3 type decimal create test item dec nullable fixture decimal p10 s3 type decimal create test item numeric nullable fixture decimal p10 s3 type decimal create test item tinyint nullable fixture tinyint type tinyint create test item smallint nullable fixture smallint type smallint create test item integer nullable fixture int type integer create test item int nullable fixture int type integer create test item bigint nullable fixture bigint type bigint create test item float nullable fixture float type float create test item double nullable fixture double type double create test item double precision nullable fixture double type double create test item date nullable fixture date type date create test item time nullable fixture time type time create test item time without time zone nullable fixture time type time create test item time nullable fixture time3 type time create test item time without time zone nullable fixture time3 type time create test item timestamp nullable fixture timestamp type timestamp create test item timestamp without time zone nullable fixture timestamp type timestamp create test item timestamp nullable fixture timestamp3 type timestamp create test item timestamp without time zone nullable fixture timestamp3 type timestamp create test item timestamp with local time zone nullable fixture timestamp with local time zone type timestamp with local time zone create test item timestamp with local time zone nullable fixture timestamp3 with local time zone type timestamp with local time zone create test item array timestamp with local time zone nullable fixture create array type nullable fixture timestamp3 with local time zone type array timestamp with local time zone create test item array int not null nullable fixture create array type fixture int type array integer not null create test item int array nullable fixture create array type nullable fixture int type integer array create test item int not null array nullable fixture create array type fixture int type integer not null array create test item int array not null fixture create array type nullable fixture int type integer array not null create test item multiset int not null nullable fixture create multiset type fixture int type multiset integer not null create test item int multiset nullable fixture create multiset type nullable fixture int type integer multiset create test item int not null multiset nullable fixture create multiset type fixture int type integer not null multiset create test item int multiset not null fixture create multiset type nullable fixture int type integer multiset not null create test item map bigint boolean nullable fixture create map type nullable fixture bigint type nullable fixture boolean type map bigint boolean create test item row f0 int not null f1 boolean nullable fixture create struct type array as list fixture int type nullable fixture boolean type array as list f0 f1 row f0 integer not null f1 boolean create test item row f0 int not null f1 boolean nullable fixture create struct type array as list fixture int type nullable fixture boolean type array as list f0 f1 row f0 integer not null f1 boolean create test item row f0 int nullable fixture create struct type collection singleton list nullable fixture int type collection singleton list f0 row f0 integer create test item row f0 int nullable fixture create struct type collection singleton list nullable fixture int type collection singleton list f0 row f0 integer create test item row nullable fixture create struct type collection empty list collection empty list row create test item row nullable fixture create struct type collection empty list collection empty list row create test item row f0 int not null this be a comment f1 boolean this as well nullable fixture create struct type array as list fixture int type nullable fixture boolean type array as list f0 f1 row f0 integer not null this be a comment f1 boolean this as well create test item raw fixture raw type int class fixture raw type int serializer string nullable fixture raw type of integer raw fixture raw type int class fixture raw type int serializer string create test item raw fixture raw type int class fixture raw type int serializer string not null fixture raw type of integer raw fixture raw type int class fixture raw type int serializer string not null create test item raw fixture raw type int class fixture raw type int serializer string substring test literal chain to split long string fixture raw type int serializer string substring not null fixture raw type of integer test parse throw error create test item timestamp with time zone s encounter time at create test item timestamp with time zone s encounter time at create test item null s encounter null at line column create test item cat db my type null cat db my type create test item db my type null db my type create test item my type null my type create test item array my type null array my type create test item row f0 my type f1 c d t null row f0 my type f1 c d t create test item interval year s encounter interval at line column create test item raw s encounter at line column n be expect one of n binary string literal n quote string n prefix string literal n unicode string literal n create test item raw java lang integer s encounter at line column n be expect one of n binary string literal n quote string n prefix string literal n unicode string literal n private static test item create test item object arg assert arg length final string test expr string arg test item test item test item from test expr test expr if arg instanceof string test item with expect error string arg else if arg instanceof rel datum type test item with expect type rel datum type arg if arg length test item with expect unparsed string arg return test item parameterize parameter public test item test item test public void test datum type parse if test item expect type null check type test item test expr test item expect type test public void test throw error if test item expect error null check fail test item test expr test item expect error test public void test datum type unparse if test item expect unparsed null check unparse to test item test expr test item expect unparsed private static rel datum type nullable rel datum type type return fixture nullable type private void check type string type expr rel datum type expect type this sql string format ddl format type expr check type expect type private void check fail string type expr string expect msg pattern sql string format ddl format type expr fail expect msg pattern private void check unparse to string type expr string expect unparsed sql string format ddl format type expr unparsed to expect unparsed private tester get tester return new tester impl test factory instance private sql sql string sql return new sql sql inner class private static class test item private final string test expr nullable private rel datum type expect type nullable private string expect error nullable private string expect unparsed private test item string test expr this test expr test expr static test item from test expr string test expr return new test item test expr test item with expect type rel datum type expect type this expect type expect type return this test item with expect error string expect error this expect error expect error return this test item with expect unparsed string expect unparsed this expect unparsed expect unparsed return this override public string to string return this test expr private class sql private final string sql sql string sql this sql sql public sql check type rel datum type type get tester check type this sql type return this public sql fail string expect msg pattern get tester check fail this sql expect msg pattern return this public sql unparsed to string expect unparsed get tester check unparse this sql expect unparsed return this callback to control how test action be perform protected interface tester void check type string sql rel datum type type void check fail string sql string expect msg pattern void check unparsed string sql string expect unparsed default implementation of link sql parser test tester protect class tester impl implement tester private test factory factory tester impl test factory factory this factory factory public void check type string sql rel datum type type final sql node sql node parse stmt and handle ex sql assert sql node instanceof sql create table final sql create table sql create table sql create table sql node sql node list column sql create table get column list assert column size rel datum type column type sql table column column get get type derive type factory get validator assert equal type column type private sql node parse stmt and handle ex string sql final sql node sql node try sql node factory create parser sql parse stmt catch sql parse exception e throw new runtime exception error while parse sql sql e return sql node public void check fail string sql string expect msg pattern sql parser util string and po sap sql parser util find po sql throwable throw null try final sql node sql node sql node factory create parser sap sql parse stmt util discard sql node catch throwable ex throw ex check ex expect msg pattern sap throw public void check unparsed string sql string expect unparsed final sql node sql node parse stmt and handle ex sql assert sql node instanceof sql create table final sql create table sql create table sql create table sql node sql node list column sql create table get column list assert column size sql datum type spec datum type spec sql table column column get get type sql writer sql writer new sql pretty writer factory create sql dialect false datum type spec unparse sql writer sql datum type spec do not take care of the nullable attribute unparse so we unparse nullable attribute specifically this unparsing logic should keep sync with sql table column if datum type spec get nullable sql writer keyword not null assert equal expect unparsed sql writer to sql string get sql private void check ex string expect msg pattern sql parser util string and po sap throwable throw sql test check ex throw expect msg pattern sap sql test stage validate factory to supply test component private static class test factory static final map string object default option build default option public static final test factory instance new test factory private final map string object option private final sql test factory validator factory validator factory private final test rel datum type factory type factory private final sql operator table operator table private final sql validator catalog reader catalog reader private final sql parser config parser config test factory this default option mock catalog reader simple new sql validator util new validator test factory map string object option sql test factory mock catalog reader factory catalog reader factory sql test factory validator factory validator factory this option option this validator factory validator factory this operator table create operator table sql operator table option get operator table this type factory create type factory sql conformance option get conformance boolean case sensitive boolean option get case sensitive this catalog reader catalog reader factory create type factory case sensitive init this parser config create parser config option public sql parser create parser string sql return sql parser create new source string reader sql parser config public sql dialect create sql dialect return new calcite sql dialect sql dialect empty context with quote casing parser config unquoted casing with conformance parser config conformance with unquoted casing parser config unquoted casing with identifier quote string parser config quote string public test rel datum type factory get type factory return this type factory public sql validator get validator final sql conformance conformance sql conformance option get conformance final boolean enable type coercion boolean option get enable type coercion return validator factory create operator table catalog reader type factory conformance set enable type coercion enable type coercion private static sql operator table create operator table sql operator table op tab0 mock sql operator table op tab new mock sql operator table op tab0 mock sql operator table add ramp op tab return op tab private static sql parser config create parser config map string object option return sql parser config builder set quote quote option get quote set unquoted casing case option get unquoted casing set quote case case option get quote case set conformance sql conformance option get conformance set case sensitive boolean option get case sensitive set parser factory sql parser impl factory option get parser factory build private static test rel datum type factory create type factory sql conformance conformance rel datum type system type system rel datum type system default if conformance should convert ragged union type to vary type system new delegate type system type system public boolean should convert ragged union type to vary return true if conformance allow extend trim type system new delegate type system type system public boolean allow extend trim return true return new test rel datum type factory type system private static map string object build default option final map string object m new hash map m put quote quote back tick m put quote case case unchanged m put unquoted casing case unchanged m put case sensitive true m put enable type coercion false m put conformance sql conformance enum default m put operator table sql std operator table instance m put parser factory flink sql parser impl factory return collection unmodifiable map m 
table api identifier parse test run with parameterized class public class table api identifier parse test private static final string anthropo in greek in unicode 03 b1 03 b d 03 b8 03 c1 03 c9 03 c0 03 b f 03 c2 private static final string anthropo in greek parameterized parameter name parse expect identifier public static object parameter return new object new object array singleton list array new object table singleton list table new object cat db array as list cat db array new object cat db table as list cat db table new object db table as list db table new object ta ble singleton list ta ble new object c at d b ta ble as list c at d b ta ble new object db u anthropo in greek in unicode uescape as list db anthropo in greek new object db as list db anthropo in greek parameterized parameter public string string identifier parameterize parameter public list string expect parsed identifier test public void test table api identifier parse throw parse exception flink sql parser impl parser create flink parser string identifier sql identifier sql identifier parser table api identifier assert that sql identifier name equal to expect parsed identifier private flink sql parser impl create flink parser string expr source string reader reader new source string reader expr flink sql parser impl parser flink sql parser impl flink sql parser impl factory get parser reader parser set tab size parser set unquoted casing lex java unquoted casing parser set quote case lex java quote case parser set identifier max length parser set conformance flink sql conformance default parser switch to btid return parser 
expression resolver test run with parameterized class public class expression resolver test parameterized parameter name public static collection test spec parameter return array as list test spec test column range input schema table schema builder field f0 datum type bigint field f1 datum type string field f2 datum type smallint build select with column range f1 f2 with column range equal to new field reference expression f1 datum type string new field reference expression f2 datum type smallint new field reference expression f0 datum type bigint new field reference expression f1 datum type string test spec test flatten call input schema table schema builder field f0 datum type row datum type field n0 datum type bigint datum type field n1 datum type string build select f0 flatten equal to new call expression function identifier of get build in function definition get array as list new field reference expression f0 datum type row datum type field n0 datum type bigint datum type field n1 datum type string new value literal expression n0 datum type bigint new call expression function identifier of get build in function definition get array as list new field reference expression f0 datum type row datum type field n0 datum type bigint datum type field n1 datum type string new value literal expression n1 datum type string test spec test builtin function call input schema table schema builder field f0 datum type int field f1 datum type double build select f0 be equal f1 equal to new call expression function identifier of equal build in function definition equal array as list new field reference expression f0 datum type int new field reference expression f1 datum type double datum type boolean test spec test lookup legacy scalar function call input schema table schema builder field f0 datum type int build lookup function func new scalar function definition func new legacy scalar func select call func f0 equal to new call expression function identifier of func new scalar function definition func new legacy scalar func array as list value literal new field reference expression f0 datum type int datum type int bridge to integer class test spec test lookup system function call input schema table schema builder field f0 datum type int build lookup function func new scalar func select call func f0 equal to new call expression function identifier of func new scalar func array as list value literal new field reference expression f0 datum type int datum type int not null bridge to int class test spec test inline function call via a class input schema table schema builder field f0 datum type int build select call scalar func class f0 equal to new call expression new scalar func array as list value literal new field reference expression f0 datum type int datum type int not null bridge to int class test spec test lookup catalog function call input schema table schema builder field f0 datum type int build lookup function object identifier of cat db func new scalar func select call cat db func f0 equal to new call expression function identifier of object identifier of cat db func new scalar func array as list value literal new field reference expression f0 datum type int datum type int not null bridge to int class test spec test deeply nest user define inline call input schema table schema builder field f0 datum type int build lookup function func new scalar func select call func call new scalar func call func f0 equal to new call expression function identifier of func new scalar func collection singleton list new call expression new scalar func collection singleton list new call expression function identifier of func new scalar func array as list value literal new field reference expression f0 datum type int datum type int not null bridge to int class datum type int not null bridge to int class datum type int not null bridge to int class parameterize parameter public test spec test spec test public void test resolve expression list resolve expression resolve expression test spec get resolver resolve array as list test spec expression assert that resolve expression equal to test spec expect expression test scalar function function hint input datum type hint input group input group any be var arg true output datum type hint value integer not null bridge to int class public static class scalar func extend scalar function public int eval object any return override public int hash code return override public boolean equal object obj return obj instanceof scalar func legacy scalar function public static class legacy scalar func extend scalar function public int eval object any return override public type information get result type class signature return type int override public int hash code return override public boolean equal object obj return obj instanceof scalar func private static class test spec private final string description private table schema schema private expression expression private list resolve expression expect expression private map function identifier function definition function new hash map private test spec string description this description description public static test spec test string description return new test spec description public test spec input schema table schema schema this schema schema return this public test spec lookup function string name function definition function definition function put function identifier of name function definition return this public test spec lookup function object identifier identifier function definition function definition function put function identifier of identifier function definition return this public test spec select expression expression this expression expression return this public test spec equal to resolve expression resolve expression this expect expression array as list resolve expression return this public expression resolver get resolver return expression resolver resolver for new table config name optional empty new function lookup mock function new datum type factory mock array stream schema map schema query operation new catalog query operation object identifier of schema to array query operation new build override public string to string return description 
value operation tree builder test run with parameterized class public class value operation tree builder test parameterized parameter name public static collection test spec parameter return as list test spec test flatten row constructor value row abc row efg equal to new value query operation as list as list value literal value literal abc as list value literal value literal efg table schema builder field f0 datum type int not null field f1 datum type char not null build test spec test find common type value row 1 l abc row 3.1 f defg equal to new value query operation as list as list cast value literal 1 l datum type float not null value literal abc datum type varchar not null as list value literal 3.1 f value literal defg datum type varchar not null table schema builder field f0 datum type float not null field f1 datum type varchar not null build test spec test explicit common type value datum type row datum type field id datum type decimal datum type field name datum type string row 1 l abc row 3.1 f defg equal to new value query operation as list as list cast value literal 1 l datum type decimal cast value literal abc datum type string not null datum type string as list cast value literal 3.1 f datum type decimal cast value literal defg datum type string not null datum type string table schema builder field id datum type decimal field name datum type string build test spec test explicit common type for nest row value datum type row datum type field id datum type decimal datum type field detail datum type row datum type field name datum type string datum type field amount datum type decimal row 1 l row abc row 3.1 f row defg new big decimal equal to new value query operation as list as list cast value literal 1 l datum type decimal row ctor datum type row datum type field name datum type string datum type field amount datum type decimal cast value literal abc datum type string not null datum type string cast value literal datum type decimal as list cast value literal 3.1 f datum type decimal row ctor datum type row datum type field name datum type string datum type field amount datum type decimal cast value literal defg datum type string not null datum type string cast value literal new big decimal datum type decimal not null datum type decimal table schema builder field id datum type decimal field detail datum type row datum type field name datum type string datum type field amount datum type decimal build test spec test find a common type for nest row value row 1 l row 1 l abc row 3.1 f row 3.1 f defg equal to new value query operation as list as list cast value literal 1 l datum type float not null row ctor datum type row datum type field f0 datum type float not null datum type field f1 datum type varchar not null not null cast value literal 1 l datum type float not null value literal abc datum type varchar not null as list value literal 3.1 f row ctor datum type row datum type field f0 datum type float not null datum type field f1 datum type varchar not null not null value literal 3.1 f datum type float not null value literal defg datum type varchar not null table schema builder field f0 datum type float not null field f1 datum type row datum type field f0 datum type float not null datum type field f1 datum type varchar not null not null build test spec test find common type insert cast for call value call new int scalar function row 3.1 f equal to new value query operation as list singleton list cast new call expression new int scalar function collection empty list datum type int datum type float singleton list cast value literal 3.1 f datum type float table schema builder field f0 datum type float build test spec test row in a function result be not flatten value call new row scalar function equal to new value query operation singleton list singleton list new call expression new row scalar function collection empty list datum type row datum type field f0 datum type int datum type field f1 datum type string table schema builder field f0 datum type row datum type field f0 datum type int datum type field f1 datum type string build test spec test can not find a common super type value value literal local time of value literal local date of expect validation exception type in from value must have a common super type could not find a common type for all row at column n could not find a common super type for type time not null date not null test spec test can not find a common super type in a nest row value row row value literal local time of row row value literal local time of row 2 d row 2.0 value literal local date of expect validation exception type in from value must have a common super type could not find a common type for all row at column n could not find a common super type for type row f0 int not null f1 time not null not null row f0 double not null f1 date not null not null test spec test can not cast to the request type value datum type row datum type field a data type bigint datum type field b datum type binary row value literal value literal local time of row value literal short value literal local date of expect validation exception could not cast the value of the column 01:01 of a row 01:01 to the request type binary test spec test can not cast to the request type in a nest row value datum type row datum type field a data type bigint datum type field b datum type row datum type field c datum type binary row value literal row value literal local time of row value literal short row value literal local date of expect validation exception could not cast the value of the column row 01:01 of a row row 01:01 to the request type row c binary a simple function that return a row function hint output datum type hint row f0 int f1 string public static class row scalar function extend scalar function public row eval return row of abc override public int hash code return override public boolean equal object obj return obj instanceof row scalar function a simple function that return a int public static class int scalar function extend scalar function public integer eval return override public int hash code return override public boolean equal object obj return obj instanceof int scalar function parameterize parameter public test spec test spec rule public expect exception throw expect exception none test public void test value if test spec exception message null throw expect validation exception class throw expect message test spec exception message value query operation operation if test spec expect row type null operation value query operation test spec get tree builder value test spec expect row type test spec expression else operation value query operation test spec get tree builder value test spec expression if test spec query operation null assert that operation get table schema equal to test spec query operation get table schema assert that operation get value equal to test spec query operation get value private static resolve expression row ctor datum type datum type resolve expression expression return new call expression function identifier of row build in function definition row array as list expression datum type private static resolve expression cast resolve expression expression datum type datum type return new call expression function identifier of cast build in function definition cast array as list expression type literal datum type datum type private static class test spec private final string description private expression expression private nullable value query operation query operation private nullable datum type expect row type private nullable string exception message private test spec string description this description description public static test spec test string description return new test spec description public test spec value expression expression this expression expression return this public test spec value datum type row type expression expression this expression expression this expect row type row type return this public test spec equal to value query operation query operation this query operation query operation return this public test spec expect validation exception string message this exception message message return this public operation tree builder get tree builder return operation tree builder create new table config new function lookup mock collection empty map new datum type factory mock name optional empty do not support true override public string to string return description 
field info util test run with enclose class public class field info util test test for by name mode run with parameterized class public static final class test by name mode parameterized parameter name public static collection type information parameter throw exception return array as list new row type info new type information type int type long type sql timestamp new string f0 f1 f2 new pojo type info my pojo class array as list new pojo field my pojo class get declare field f0 type int new pojo field my pojo class get declare field f1 type long new pojo field my pojo class get declare field f2 type sql timestamp parameterized parameter public type information type info test public void test by name mode reorder field info util type info schema schema field info util get field info type info new expression f2 f1 f0 assert assert array equal new string f2 f1 f0 schema get field name test public void test by name mode reorder and rename field info util type info schema schema field info util get field info type info new expression f1 as aa f0 as bb f2 as cc assert assert array equal new string aa bb cc schema get field name test pojo class public static class my pojo public int f0 public long f1 public timestamp f2 public my pojo test for by position mode public static final class test by position mode private static final row type info row type info new row type info new type information type int type long type sql timestamp new string f0 f1 f2 test public void test by position mode field info util type info schema schema field info util get field info row type info new expression aa bb cc assert assert array equal new string aa bb cc schema get field name test public void test by position mode proc time field info util type info schema schema field info util get field info row type info new expression aa bb cc cc proctime as proctime assert assert array equal new string aa bb cc proctime schema get field name 
field info util test run with parameterized class public static final class test by name mode parameterized parameter name public static collection type information parameter throw exception return array as list new row type info new type information type int type long type sql timestamp new string f0 f1 f2 new pojo type info my pojo class array as list new pojo field my pojo class get declare field f0 type int new pojo field my pojo class get declare field f1 type long new pojo field my pojo class get declare field f2 type sql timestamp parameterized parameter public type information type info test public void test by name mode reorder field info util type info schema schema field info util get field info type info new expression f2 f1 f0 assert assert array equal new string f2 f1 f0 schema get field name test public void test by name mode reorder and rename field info util type info schema schema field info util get field info type info new expression f1 as aa f0 as bb f2 as cc assert assert array equal new string aa bb cc schema get field name test pojo class public static class my pojo public int f0 public long f1 public timestamp f2 public my pojo 
csv table sink factory test run with parameterized class public class csv table sink factory test private static table schema testing schema table schema builder field myfield datum type string field myfield2 datum type int field myfield3 datum type map datum type string datum type int field myfield4 datum type row datum type field nest f1 datum type bigint todo we can t declare the tinyint as not null because csv connector will ignore the information field myfield5 datum type array datum type tinyint build parameterized parameter public ternary boolean derive schema parameterized parameter name derive schema public static ternary boolean get derive schema return new ternary boolean ternary boolean true ternary boolean false ternary boolean undefined test public void test append table sink factory descriptor property descriptor create descriptor testing schema descriptor put string update mode append table sink sink create table sink descriptor assert true sink instanceof csv table sink assert equal testing schema to row datum type sink get consume datum type test public void test batch table sink factory descriptor property descriptor create descriptor testing schema table sink sink create table sink descriptor assert true sink instanceof csv table sink assert equal testing schema to row datum type sink get consume datum type test public void test append table source factory descriptor property descriptor create descriptor testing schema descriptor put string update mode append table source sink create table source descriptor assert true sink instanceof csv table source assert equal testing schema to row datum type sink get produce datum type test public void test batch table source factory descriptor property descriptor create descriptor testing schema table source sink create table source descriptor assert true sink instanceof csv table source assert equal testing schema to row datum type sink get produce datum type private descriptor property create descriptor table schema schema map string string property new hash map property put connector type filesystem property put connector property version property put connector path path to csv schema property put format type csv property put format property version property put format field delimiter descriptor property descriptor new descriptor property true descriptor put property property descriptor put table schema schema schema if derive schema ternary boolean true descriptor put boolean format derive schema true else if derive schema ternary boolean false descriptor put table schema format field test schema nothing to put for undefined return descriptor private static table source create table source descriptor property descriptor return table factory service find table source factory class descriptor as map create table source descriptor as map private static table sink create table sink descriptor property descriptor return table factory service find table sink factory class descriptor as map create table sink descriptor as map 
user define function helper test run with parameterized class suppress warning unused public class user define function helper test parameterized parameter public static list test spec test datum return array as list test spec for class valid scalar function class expect success test spec for instance new valid scalar function expect success test spec for class private scalar function class expect error message function class private scalar function class get name be not public test spec for class miss implementation scalar function class expect error message function class miss implementation scalar function class get name do not implement a method name eval test spec for class private method scalar function class expect error message method eval of function class private method scalar function class get name be not public test spec for instance new valid table aggregate function expect success test spec for instance new missing emit table aggregate function expect error message function class miss emit table aggregate function class get name do not implement a method name emit update with retract or emit value test spec for instance new valid table function expect success test spec for instance new parameterized table function expect success test spec for class parameterize table function class expect error message function class parameterize table function class get name must have a public default constructor test spec for class hierarchical table aggregate function class expect success parameter public test spec test spec rule public expect exception throw expect exception none test public void test instantiation if test spec function class null if test spec expect error message null throw expect validation exception class throw expect message test spec expect error message assert that user define function helper instantiate function test spec function class not null value test public void test validation if test spec expect error message null throw expect validation exception class throw expect message test spec expect error message if test spec function class null user define function helper validate class test spec function class else if test spec function instance null user define function helper prepare instance new configuration test spec function instance test utility private static class test spec final nullable class extend user define function function class final nullable user define function function instance nullable string expect error message test spec class extend user define function function class this function class function class this function instance null test spec user define function function instance this function class null this function instance function instance static test spec for class class extend user define function function return new test spec function static test spec for instance user define function function return new test spec function test spec expect error message string expect error message this expect error message expect error message return this test spec expect success this expect error message null return this test class for validation valid scalar function public static class valid scalar function extend scalar function public string eval int i return null private static class private scalar function extend scalar function public string eval int i return null no implementation method public static class miss implementation scalar function extend scalar function nothing to do implementation method be private public static class private method scalar function extend scalar function private string eval int i return null valid table aggregate function public static class valid table aggregate function extend table aggregate function string string public void accumulate string acc string in nothing to do public void emit value string acc collector string out nothing to do override public string create accumulator return null no emit method implementation public static class miss emit table aggregate function extend table aggregate function string string public void accumulate string acc string in nothing to do override public string create accumulator return null valid table function public static class valid table function extend table function string public void eval string i nothing to do table function with parameter in constructor public static class parameterize table function extend table function string public parameterized table function int param nothing to do public void eval string i nothing to do private abstract static class abstract table aggregate function extend table aggregate function string string public void accumulate string acc string in nothing to do hierarchy that be implement different method public static class hierarchical table aggregate function extend abstract table aggregate function public void emit value string acc collector string out nothing to do override public string create accumulator return null 
class datum type converter test run with parameterized class public class class datum type converter test parameterized parameter name index class type public static list object test datum return array as list new object long class datum type bigint not null bridge to long class byte class datum type byte nullable bridge to byte class long class datum type bigint nullable bridge to long class java sql time class datum type time nullable bridge to java sql time class java time duration class datum type interval datum type second bridge to java time duration class java time period class datum type interval datum type year datum type month bridge to java time period class big decimal class null byte class datum type array datum type byte nullable bridge to byte class nullable bridge to byte class byte class datum type array datum type tinyint nullable bridge to byte class nullable bridge to byte class byte class datum type array datum type array datum type tinyint nullable bridge to byte class nullable bridge to byte class nullable bridge to byte class integer class datum type array datum type int nullable bridge to integer class nullable bridge to integer class int class datum type array datum type int not null bridge to int class nullable bridge to int class time interval unit class new atomic datum type new symbol type time interval unit class bridge to time interval unit class row class null parameterized parameter public class clazz parameterized parameter public nullable datum type datum type test public void test class to datum type conversion assert equal optional of nullable datum type class datum type converter extract datum type clazz 
datum type test run with parameterized class public class datum type test parameter name index public static list test spec test datum return array as list test spec for datum type char expect logical type new char type expect conversion class string class test spec for datum type varchar expect logical type new var char type expect conversion class string class test spec for datum type string expect logical type new var char type var char type max length expect conversion class string class test spec for datum type boolean expect logical type new boolean type expect conversion class boolean class test spec for datum type binary expect logical type new binary type expect conversion class byte class test spec for datum type varbinary expect logical type new var binary type expect conversion class byte class test spec for datum type byte expect logical type new var binary type var binary type max length expect conversion class byte class test spec for datum type decimal expect logical type new decimal type expect conversion class big decimal class test spec for datum type tinyint expect logical type new tiny int type expect conversion class byte class test spec for datum type smallint expect logical type new small int type expect conversion class short class test spec for datum type int expect logical type new int type expect conversion class integer class test spec for datum type bigint expect logical type new big int type expect conversion class long class test spec for datum type float expect logical type new float type expect conversion class float class test spec for datum type double expect logical type new double type expect conversion class double class test spec for datum type date expect logical type new date type expect conversion class java time local date class test spec for datum type time expect logical type new time type expect conversion class java time local time class test spec for datum type time expect logical type new time type expect conversion class java time local time class test spec for datum type timestamp expect logical type new timestamp type expect conversion class java time local date time class test spec for datum type timestamp expect logical type new timestamp type expect conversion class java time local date time class test spec for datum type timestamp with time zone expect logical type new zone timestamp type expect conversion class java time offset date time class test spec for datum type timestamp with time zone expect logical type new zone timestamp type expect conversion class java time offset date time class test spec for datum type timestamp with local time zone expect logical type new local zone timestamp type expect conversion class java time instant class test spec for datum type timestamp with local time zone expect logical type new local zone timestamp type expect conversion class java time instant class test spec for datum type interval minute second expect logical type new day time interval type minute to second default day precision expect conversion class java time duration class test spec for datum type interval month expect logical type new year month interval type year month resolution month expect conversion class java time period class test spec for datum type array array int expect logical type new array type new array type new int type expect conversion class integer class test spec for datum type array array int not null bridge to int class expect logical type new array type new array type new int type false expect conversion class int class expect child datum type array int not null bridge to int class test spec for datum type multiset multiset int expect logical type new multiset type new multiset type new int type expect conversion class map class test spec for datum type map int smallint expect logical type new map type new int type new small int type expect conversion class map class test spec for datum type row field field1 char field field2 boolean expect logical type new row type array as list new row type row field field1 new char type new row type row field field2 new boolean type expect conversion class row class test spec for datum type null expect logical type new null type expect conversion class object class test spec for datum type raw type generic datum type test class expect logical type new type information raw type type generic datum type test class expect conversion class datum type test class test spec for datum type raw void class void serializer instance expect logical type new raw type void class void serializer instance expect conversion class void class test spec for unresolved datum type datum type of int expect unresolved string int lookup return int expect logical type new int type test spec for unresolved datum type datum type of integer class expect unresolved string java lang integer expect resolve datum type int test spec for unresolved datum type datum type of java sql timestamp class not null expect unresolved string java sql timestamp expect resolve datum type timestamp not null bridge to java sql timestamp class test spec for unresolved datum type datum type of java sql timestamp class bridge to java time local date time class expect unresolved string java sql timestamp expect resolve datum type timestamp bridge to java time local date time class test spec for unresolved datum type map datum type of int datum type of string expect unresolved string map int string expect resolve datum type map datum type int datum type string test spec for unresolved datum type map datum type of int string not null expect unresolved string map int string not null expect resolve datum type map int string not null test spec for unresolved datum type multiset datum type of string expect unresolved string multiset string expect resolve datum type multiset datum type string test spec for unresolved datum type array datum type of string expect unresolved string array string expect resolve datum type array datum type string test spec for unresolved datum type array datum type of int not null bridge to int class expect unresolved string array int expect resolve datum type array int not null bridge to int class test spec for unresolved datum type row field field1 datum type of char field field2 boolean expect unresolved string row field1 char field2 boolean expect resolve datum type row field field1 char field field2 boolean test spec for unresolved datum type array row field f0 datum type of array int field f1 array int expect unresolved string array row f0 array int f1 array int expect resolve datum type array row field f0 array int field f1 array int test spec for unresolved datum type raw object class expect unresolved string raw java lang object lookup return datum type raw new generic type info object class expect resolve datum type datum type raw new generic type info object class test spec for unresolved datum type datum type of simple pojo class expect resolve datum type datum type structure simple pojo class datum type field name datum type string datum type field count datum type int not null bridge to int class parameter public test spec test spec test public void test logical type if test spec expect logical type null final datum type datum type test spec type factory create datum type test spec abstract datum type assert that datum type have logical type test spec expect logical type assert that to datum type test spec expect logical type bridge to datum type get conversion class equal to datum type assert that to logical type datum type equal to test spec expect logical type test public void test conversion class if test spec expect conversion class null final datum type datum type test spec type factory create datum type test spec abstract datum type assert that datum type have conversion class test spec expect conversion class test public void test child if test spec expect child null final datum type datum type test spec type factory create datum type test spec abstract datum type assert that datum type get child equal to test spec expect child test public void test unresolved string if test spec expect unresolved string null assert that test spec abstract datum type to string equal to test spec expect unresolved string test public void test resolve datum type if test spec expect resolve datum type null final datum type datum type test spec type factory create datum type test spec abstract datum type assert that datum type equal to test spec expect resolve datum type private static class test spec private final datum type factory mock type factory new datum type factory mock private final abstract datum type abstract datum type private nullable logical type expect logical type private nullable class expect conversion class private nullable list datum type expect child private nullable string expect unresolved string private nullable datum type expect resolve datum type private test spec abstract datum type abstract datum type this abstract datum type abstract datum type static test spec for datum type datum type datum type return new test spec datum type static test spec for unresolved datum type unresolved datum type unresolved datum type return new test spec unresolved datum type test spec expect logical type logical type expect logical type this expect logical type expect logical type return this test spec expect conversion class class expect conversion class this expect conversion class expect conversion class return this test spec expect child datum type expect child this expect child array as list expect child return this test spec expect unresolved string string expect unresolved string this expect unresolved string expect unresolved string return this test spec expect resolve datum type datum type expect resolve datum type this expect resolve datum type expect resolve datum type return this test spec lookup return datum type datum type this type factory datum type optional of datum type return this override public string to string return abstract datum type to string helper class simple pojo for test public static class simple pojo public final string name public final int count public simple pojo string name int count this name name this count count 
datum type extractor test run with parameterized class suppress warning unused public class datum type extractor test suppress warning unchecked rawtypes parameter name index public static list test spec test datum return array as list simple extraction of int test spec for type integer class expect datum type datum type int simple extraction of byte test spec for type byte class expect datum type datum type byte extraction from hint conversion class test spec for type new datum type hint mock override public class bridge to return long class object class expect datum type datum type bigint miss precision scale test spec for type big decimal class expect error message value of java math big decimal need fix precision and scale unsupported object type exception test spec for type object class expect error message can not extract a data type from a pure java lang object class usually this indicate that class information be miss or get lose please specify a more concrete class or treat it as a raw type unsupported row type exception test spec for type row class expect error message can not extract a data type from a pure org apache flink type row class please use annotation to define field name and field type explicit precision scale through datum type test spec for type new datum type hint mock override public string value return decimal big decimal class expect datum type datum type decimal default precision scale test spec for type new datum type hint mock override public int default decimal precision return override public int default decimal scale return big decimal class expect datum type datum type decimal different bridging class via default conversion test spec for type java sql timestamp class expect datum type datum type timestamp bridge to java sql timestamp class different bridging class via type itself test spec for type new datum type hint mock override public string value return timestamp java sql timestamp class expect datum type datum type timestamp bridge to java sql timestamp class default seconds for timestamp test spec for type new datum type hint mock override public int default second precision return java time local date time class expect datum type datum type timestamp default second precision for interval test spec for type new datum type hint mock override public int default second precision return java time duration class expect datum type datum type interval datum type second default year precision for interval test spec for type new datum type hint mock override public int default year precision return java time period class expect datum type datum type interval datum type year datum type month default year precision for interval test spec for type new datum type hint mock override public int default year precision return java time period class expect datum type datum type interval datum type month test spec for type raw with default serializer new datum type hint mock override public hint flag allow raw globally return hint flag true object class lookup expect object class expect datum type datum type array datum type array datum type raw new generic type info object class test spec for type raw with custom serializer new datum type hint mock override public string value return raw override public class extend type serializer raw serializer return int serializer class integer class expect datum type datum type raw object class type serializer new int serializer bridge to integer class test spec for type raw with different conversion class new datum type hint mock override public string value return raw override public class bridge to return integer class object class lookup expect integer class expect datum type datum type raw new generic type info integer class test spec for type raw with more specific conversion class new datum type hint mock override public string value return raw override public class bridge to return raw type generic class raw type specific class lookup expect raw type generic class expect datum type datum type raw new generic type info raw type generic class bridge to raw type specific class map type with type variable magic test spec for generic table function class table function with map level2 class expect datum type datum type map datum type bigint datum type boolean array type with type variable magic test spec for generic table function class table function with generic array1 class expect datum type datum type array datum type int invalid type variable test spec for generic table function class table function with hash map class expect error message could not extract a data type from java util hash map java lang integer java lang string interpret it as a structured type be also not successful test spec for generic array type with list conversion class table function class table function with list class expect datum type datum type array datum type array datum type string bridge to list class bridge to list class simple structured type without raw type test spec for type simple pojo class expect datum type get simple pojo datum type simple pojo class complex nest structured type annotation on top of type test spec for type complex pojo class lookup expect object class expect datum type get complex pojo datum type complex pojo class simple pojo class structure type with miss generic test spec for type simple pojo with generic class expect error message unresolved type variable be a data type can not be extract from a type variable the original content might have be erase due to java type erasure structure type with annotation on top of field test spec for generic table function class table function with generic pojo class lookup expect object class expect datum type get complex pojo datum type complex pojo with generic class simple pojo with generic class extraction with generic interface test spec for generic base interface class concrete class class expect datum type datum type string structure type with hierarchy test spec for type simple pojo with generic hierarchy class expect datum type get simple pojo datum type simple pojo with generic hierarchy class structure type with different getter and setter flavor test spec for type complex pojo with getter and setter class lookup expect object class expect datum type get complex pojo datum type complex pojo with getter and setter class simple pojo class structure type with miss setter test spec for type simple pojo with miss setter class expect error message field string field of class simple pojo with miss setter class get name be mutable but be neither publicly accessible nor do it have a correspond setter method structure type with miss getter test spec for type simple pojo with miss getter class expect error message field string field of class simple pojo with miss getter class get name be neither publicly accessible nor do it have a correspond getter method structure type with assign constructor test spec for type simple pojo with assign constructor class expect datum type get simple pojo datum type simple pojo with assign constructor class assign constructor define field order test spec for type pojo with custom field order class expect datum type get pojo with custom order datum type pojo with custom field order class flink tuple test spec for generic table function class table function with tuple class expect datum type get outer tuple datum type many annotation that partially override each other test spec for type simple pojo with many annotation class expect datum type get simple pojo datum type simple pojo with many annotation class many annotation that partially override each other test spec for type complex pojo with many annotation class lookup expect object class expect datum type get complex pojo datum type complex pojo with many annotation class simple pojo class method with vararg test spec for method parameter integer var arg class expect datum type datum type array datum type int not null bridge to int class method with generic parameter test spec for method parameter integer var arg class expect datum type datum type int method with generic return type test spec for method output integer var arg class expect datum type datum type int test spec for type structure type with invalid constructor simple pojo with invalid constructor class expect error message class simple pojo with invalid constructor class get name have neither a constructor that assign all field nor a default constructor test spec for type structure type with self reference pojo with invalid self reference class expect error message cyclic reference detect for class pojo with invalid self reference class get name attribute of structured type must not transitively reference the structured type itself test spec for type structure type with self reference that be avoid use raw pojo with raw self reference class lookup expect pojo with raw self reference class expect datum type get pojo with raw self reference datum type parameter public test spec test spec rule public expect exception throw expect exception none test public void test extraction if test spec expect error message null throw expect validation exception class throw expect cause error matcher test spec run extraction test spec test utility test specification share with the scala test static class test spec private final datum type factory mock type factory new datum type factory mock private final nullable string description private final function datum type factory datum type extractor private nullable datum type expect datum type private nullable string expect error message private test spec nullable string description function datum type factory datum type extractor this description description this extractor extractor static test spec for type string description type type return new test spec description lookup datum type extractor extract from type lookup type static test spec for type type type return for type string null type static test spec for type string description datum type hint hint type type return new test spec description lookup datum type extractor extract from type lookup datum type template from annotation lookup hint type static test spec for type datum type hint hint type type return for type null hint type static test spec for generic string description class base class int generic po type context type return new test spec description lookup datum type extractor extract from generic lookup base class generic pos context type static test spec for generic class base class int generic po type context type return for generic null base class generic pos context type static test spec for method parameter string description class clazz int param po final method method clazz get method return new test spec description lookup datum type extractor extract from method parameter lookup clazz method param pos static test spec for method parameter class clazz int param pos return for method parameter null clazz param pos static test spec for method output string description class clazz final method method clazz get method return new test spec description lookup datum type extractor extract from method output lookup clazz method static test spec for method output class clazz return for method output null clazz boolean have error message return expect error message null test spec lookup expect class lookup class type factory datum type optional of datum type raw new generic type info lookup class type factory expect class optional of lookup class return this test spec expect datum type datum type expect datum type this expect datum type expect datum type return this test spec expect error message string expect error message this expect error message expect error message return this override public string to string if description null return description if expect datum type null return expect datum type expect datum type return expect error expect error message static void run extraction test spec test spec final datum type datum type test spec extractor apply test spec type factory if test spec expect datum type null assert that data type equal to test spec expect datum type static matcher throwable error matcher test spec test spec return contain cause new validation exception test spec expect error message testing datum type share with the scala test static datum type get simple pojo datum type class simple pojo class final structured type builder builder structure type new builder simple pojo class builder attribute array as list new structured attribute int field new int type true new structured attribute primitive boolean field new boolean type false new structured attribute primitive int field new int type false new structured attribute string field new var char type var char type max length builder set final true builder set instantiable true final structured type structure type builder build final list datum type field datum type array as list datum type int datum type boolean not null bridge to boolean class datum type int not null bridge to int class datum type string return new field datum type structure type simple pojo class field datum type test datum type share with the scala test static datum type get complex pojo datum type class complex pojo class class simple pojo class final structured type builder builder structure type new builder complex pojo class builder attribute array as list new structured attribute map field new map type new var char type var char type max length new int type new structured attribute simple pojo field get simple pojo datum type simple pojo class get logical type new structured attribute some object new type information raw type new generic type info object class builder set final true builder set instantiable true final structured type structure type builder build final list datum type field datum type array as list datum type map datum type string datum type int get simple pojo datum type simple pojo class datum type raw new generic type info object class return new field datum type structure type complex pojo class field datum type test datum type share with the scala test public static datum type get pojo with custom order datum type class pojo class final structured type builder builder structure type new builder pojo class builder attribute array as list new structured attribute z new big int type new structured attribute y new boolean type new structured attribute x new int type builder set final true builder set instantiable true final structured type structure type builder build final list datum type field datum type array as list datum type bigint datum type boolean datum type int return new field datum type structure type pojo class field datum type private static datum type get outer tuple datum type final structured type builder builder structure type new builder tuple2 class builder attribute array as list new structured attribute f0 new int type new structured attribute f1 get inner tuple datum type get logical type builder set final true builder set instantiable true final structured type structure type builder build final list datum type field datum type array as list datum type int get inner tuple datum type return new field datum type structure type tuple2 class field datum type private static datum type get inner tuple datum type final structured type builder builder structure type new builder tuple2 class builder attribute array as list new structured attribute f0 new var char type var char type max length new structured attribute f1 new boolean type builder set final true builder set instantiable true final structured type structure type builder build final list datum type field datum type array as list datum type string datum type boolean return new field datum type structure type tuple2 class field datum type private static datum type get pojo with raw self reference datum type final structured type builder builder structure type new builder pojo with raw self reference class builder attribute array as list new structured attribute integer new int type new structured attribute reference new type information raw type new generic type info pojo with raw self reference class builder set final true builder set instantiable true final structured type structure type builder build final list datum type field datum type array as list datum type int datum type raw new generic type info pojo with raw self reference class return new field datum type structure type pojo with raw self reference class field datum type test class for extraction private static class table function with map level0 k v extend table function map k v private static class table function with map level1 v extend table function with map level0 long v private static class table function with map level2 extend table function with map level1 boolean private static class table function with generic array0 t extend table function t private static class table function with generic array1 extend table function with generic array0 integer private static class table function with hash map extend table function hash map integer string private static class table function with list extend table function list list string complex pojo with raw type suppress warning unused datum type hint allow raw globally hint flag true public static class complex pojo public map string integer map field public simple pojo simple pojo field public object some object simple pojo with no raw type suppress warning unused public static class simple pojo public integer int field public boolean primitive boolean field public int primitive int field public string string field private static class table function with generic pojo extend table function complex pojo with generic string integer in the end this should be the same datum type as link complex pojo suppress warning unused public static class complex pojo with generic s i public map s i map field public simple pojo with generic s simple pojo field datum type hint allow raw globally hint flag true public object some object in the end this should be the same datum type as link simple pojo suppress warning unused public static class simple pojo with generic s public integer int field public boolean primitive boolean field public int primitive int field public s string field private interface base interface t no implementation private abstract static class generic class t implement serializable base interface t no implementation private static class concrete class extend generic class string no implementation hierarchy of structured type public static class simple pojo with generic hierarchy extend simple pojo with generic string no implementation private member variable public static class complex pojo with getter and setter private map string integer map field private simple pojo simple pojo field private datum type hint raw object some object java like public map string integer get map field return map field public void set map field map string integer map field this map field map field public simple pojo get simple pojo field return simple pojo field public void set simple pojo field simple pojo simple pojo field this simple pojo field simple pojo field scala like public object some object return some object public void some object object some object this some object some object code set string field be miss suppress warning unused public static class simple pojo with miss setter public integer int field public boolean primitive boolean field public int primitive int field private string string field public string get string field return string field code get string field be miss suppress warning field can be local unused public static class simple pojo with missing getter public integer int field public boolean primitive boolean field public int primitive int field private string string field public void set string field string string field this string field string field immutable type public static class simple pojo with assign constructor public final integer int field public final boolean primitive boolean field public final int primitive int field public final string string field public simple pojo with assign constructor integer int field boolean primitive boolean field int primitive int field string string field this int field int field this primitive boolean field primitive boolean field this primitive int field primitive int field this string field string field private static class table function with tuple extend table function tuple2 integer tuple2 string boolean constructor reorder field public static class pojo with custom field order public integer x public boolean y public long z public pojo with custom field order long z boolean y int x this z z this y y this x x suppress warning unused public pojo with custom field order long z boolean y int x int additional this z y x in the end this should be the same datum type as link simple pojo suppress warning unused datum type hint force raw pattern java lang public static class simple pojo with many annotation public datum type hint int integer int field public datum type hint bridge to boolean class object primitive boolean field public datum type hint value int not null bridge to int class object primitive int field datum type hint force raw pattern public string string field in the end this should be the same datum type as link complex pojo suppress warning unused datum type hint allow raw pattern java lang public static class complex pojo with many annotation public datum type hint map string int object map field public simple pojo simple pojo field public object some object generic vararg in parameter public static class var arg method t suppress warning unused public t eval t i int more return null resolvable parameter public static class integer var arg extend var arg method integer nothing to do private static class raw type generic nothing to do private static class raw type specific extend raw type generic nothing to do default constructor be miss public static class simple pojo with invalid constructor public integer int field public boolean primitive boolean field public int primitive int field public string string field public simple pojo with invalid constructor integer int field this int field int field self reference in attribute public static class pojo with invalid self reference public integer integer public pojo with invalid self reference nest nest pojo nest pojo for self reference test public static class pojo with invalid self reference nest public pojo with invalid self reference reference self reference in attribute that be fix with raw type public static class pojo with raw self reference public integer integer datum type hint value raw bridge to pojo with raw self reference class public pojo with raw self reference reference 
type inference extractor test run with parameterized class suppress warning unused public class type inference extractor test parameter name index public static list test spec test datum return array as list function hint define everything test spec for scalar function full function hint class expect name argument i s expect type argument datum type int datum type string expect output mapping input type strategy sequence new string i be new argument type strategy input type strategy explicit datum type int input type strategy explicit datum type string type strategy explicit datum type boolean function hint define everything with overload test spec for scalar function full function hint class expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type bigint global output hint with local input overload test spec for scalar function global output function hint class expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence input type strategy explicit datum type string type strategy explicit datum type int unsupported output overload test spec for scalar function invalid single output function hint class expect error message function hint that lead to ambiguous result be not allow global and local overloading test spec for scalar function split full function hint class expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type bigint global and local overload with unsupported output overload test spec for scalar function invalid full output function hint class expect error message function hint with same input definition but different result type be not allow ignore argument name during overload test spec for scalar function invalid full output function with arg name hint class expect error message function hint with same input definition but different result type be not allow invalid datum type hint test spec for scalar function incomplete function hint class expect error message datum type hint do neither specify a data type nor input group for use as function argument vararg and any input group test spec for scalar function complex function hint class expect output mapping input type strategy vary sequence new string my int my any new argument type strategy input type strategy explicit datum type int input type strategy any type strategy explicit datum type boolean global input hint and local output hint test spec for scalar function global input function hint class expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type int no argument test spec for scalar function zero arg function class expect name argument expect type argument expect output mapping input type strategy sequence new string new argument type strategy type strategy explicit datum type int test primitive argument extraction test spec for scalar function mixed arg function class expect name argument i d expect type argument datum type int not null bridge to int class datum type double expect output mapping input type strategy sequence new string i would new argument type strategy input type strategy explicit datum type int not null bridge to int class input type strategy explicit datum type double type strategy explicit datum type int test overloaded argument extraction test spec for scalar function overload function class expect output mapping input type strategy sequence new string i would new argument type strategy input type strategy explicit datum type int not null bridge to int class input type strategy explicit datum type double type strategy explicit datum type int expect output mapping input type strategy sequence new string s new argument type strategy input type strategy explicit datum type string type strategy explicit datum type bigint not null bridge to long class test vary argument extraction test spec for scalar function var arg function class expect output mapping input type strategy vary sequence new string i more new argument type strategy input type strategy explicit datum type int not null bridge to int class input type strategy explicit datum type int not null bridge to int class type strategy explicit datum type string test vary argument extraction with byte test spec for scalar function var arg with byte function class expect output mapping input type strategy vary sequence new string byte new argument type strategy input type strategy explicit datum type tinyint not null bridge to byte class type strategy explicit datum type string output hint with input extraction test spec for scalar function extract with output hint function class expect name argument i expect type argument datum type int expect output mapping input type strategy sequence new string i new argument type strategy input type strategy explicit datum type int type strategy explicit datum type int output extraction with input hint test spec for scalar function extract with input hint function class expect name argument i b expect type argument datum type int datum type boolean expect output mapping input type strategy sequence new string i b new argument type strategy input type strategy explicit datum type int input type strategy explicit datum type boolean type strategy explicit datum type double not null bridge to double class different accumulator depend on input test spec for aggregate function input dependent accumulator function class expect accumulator mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type row datum type field f datum type bigint expect accumulator mapping input type strategy sequence input type strategy explicit datum type string type strategy explicit datum type row datum type field f datum type string expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type string expect output mapping input type strategy sequence input type strategy explicit datum type string type strategy explicit datum type string input accumulator and output be spread across the function test spec for aggregate function aggregate function with many annotation class expect name argument be expect type argument datum type row datum type field i datum type int datum type field b datum type boolean expect accumulator mapping input type strategy sequence new string be new argument type strategy input type strategy explicit datum type row datum type field i datum type int datum type field b datum type boolean type strategy explicit datum type row datum type field b datum type boolean expect output mapping input type strategy sequence new string be new argument type strategy input type strategy explicit datum type row datum type field i datum type int datum type field b datum type boolean type strategy explicit datum type string test for table function test spec for table function output hint table function class expect name argument i expect type argument datum type int not null bridge to int class expect output mapping input type strategy sequence new string i new argument type strategy input type strategy explicit datum type int not null bridge to int class type strategy explicit datum type row datum type field i datum type int datum type field b datum type boolean mismatch between hint and implementation regard return type test spec for scalar function invalid method scalar function class expect error message consider all hint the method should comply with the signature n java lang string eval int mismatch between hint and implementation regard accumulator test spec for aggregate function invalid method aggregate function class expect error message consider all hint the method should comply with the signature n accumulate java lang integer int boolean no implementation test spec for table function miss method table function class expect error message could not find a publicly accessible method name eval name argument with overloaded function test spec for scalar function name argument scalar function class expect name argument n scalar function that take any input test spec for scalar function input group scalar function class expect name argument o expect output mapping input type strategy sequence new string o new argument type strategy input type strategy any type strategy explicit datum type string scalar function that take any input as vararg test spec for scalar function var arg input group scalar function class expect output mapping input type strategy vary sequence new string o new argument type strategy input type strategy any type strategy explicit datum type string test spec for scalar function scalar function with implicit overloading order order scalar function class expect output mapping input type strategy sequence new string i new argument type strategy input type strategy explicit datum type int type strategy explicit datum type int expect output mapping input type strategy sequence new string l new argument type strategy input type strategy explicit datum type bigint type strategy explicit datum type bigint test spec for scalar function scalar function with explicit overloading order by class annotation order scalar function2 class expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type bigint expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int test spec for scalar function scalar function with explicit overloading order by method annotation order scalar function3 class expect output mapping input type strategy sequence input type strategy explicit datum type bigint type strategy explicit datum type bigint expect output mapping input type strategy sequence input type strategy explicit datum type int type strategy explicit datum type int parameter public test spec test spec rule public expect exception throw expect exception none test public void test argument name if test spec expect argument name null assert that test spec type inference extraction get get name argument equal to optional of test spec expect argument name else if test spec expect error message null assert that test spec type inference extraction get get name argument equal to optional empty test public void test argument type if test spec expect argument type null assert that test spec type inference extraction get get type argument equal to optional of test spec expect argument type else if test spec expect error message null assert that test spec type inference extraction get get type argument equal to optional empty test public void test input type strategy if test spec expect output strategy be empty assert that test spec type inference extraction get get input type strategy equal to test spec expect output strategy key set stream reduce input type strategy or or else throw assertion error new test public void test accumulator type strategy if test spec expect accumulator strategy be empty assert that test spec type inference extraction get get accumulator type strategy be present equal to true assert that test spec type inference extraction get get accumulator type strategy get equal to type strategy map test spec expect accumulator strategy test public void test output type strategy if test spec expect output strategy be empty assert that test spec type inference extraction get get output type strategy equal to type strategy map test spec expect output strategy test public void test error message if test spec expect error message null throw expect validation exception class throw expect cause error matcher test spec test spec type inference extraction get test utility test specification share with the scala test static class test spec private final string description final supplier type inference type inference extraction nullable list string expect argument name nullable list datum type expect argument type map input type strategy type strategy expect accumulator strategy map input type strategy type strategy expect output strategy nullable string expect error message private test spec string description supplier type inference type inference extraction this description description this type inference extraction type inference extraction this expect accumulator strategy new link hash map this expect output strategy new link hash map static test spec for scalar function class extend scalar function function return for scalar function null function static test spec for scalar function string description class extend scalar function function return new test spec description null function get simple name description type inference extractor for scalar function new datum type factory mock function static test spec for aggregate function class extend aggregate function function return for aggregate function null function static test spec for aggregate function string description class extend aggregate function function return new test spec description null function get simple name description type inference extractor for aggregate function new datum type factory mock function static test spec for table function class extend table function function return for table function null function static test spec for table function string description class extend table function function return new test spec description null function get simple name description type inference extractor for table function new datum type factory mock function static test spec for table aggregate function class extend table aggregate function function return for table aggregate function null function static test spec for table aggregate function string description class extend table aggregate function function return new test spec description null function get simple name description type inference extractor for table aggregate function new datum type factory mock function test spec expect name argument string expect argument name this expect argument name array as list expect argument name return this test spec expect type argument datum type expect argument type this expect argument type array as list expect argument type return this test spec expect accumulator mapping input type strategy validator type strategy accumulator strategy this expect accumulator strategy put validator accumulator strategy return this test spec expect output mapping input type strategy validator type strategy output strategy this expect output strategy put validator output strategy return this test spec expect error message string expect error message this expect error message expect error message return this override public string to string return description static matcher throwable error matcher test spec test spec return contain cause new validation exception test spec expect error message test class for extraction function hint input datum type hint int datum type hint string argument name i be output datum type hint boolean private static class full function hint extend scalar function public boolean eval integer i string s return null private static class complex function hint extend scalar function function hint input datum type hint int datum type hint input group input group any argument name my int my any output datum type hint boolean be var arg true public boolean eval object o return null function hint input datum type hint int output datum type hint int function hint input datum type hint bigint output datum type hint bigint private static class full function hint extend scalar function public number eval number n return null function hint output datum type hint int private static class global output function hint extend scalar function function hint input datum type hint int public integer eval integer n return null function hint input datum type hint string public integer eval string n return null function hint output datum type hint int private static class invalid single output function hint extend scalar function function hint output datum type hint tinyint public integer eval number n return null function hint input datum type hint int output datum type hint int private static class split full function hint extend scalar function function hint input datum type hint bigint output datum type hint bigint public number eval number n return null function hint input datum type hint int output datum type hint int private static class invalid full output function hint extend scalar function function hint input datum type hint int output datum type hint bigint public number eval integer i return null function hint input datum type hint int argument name a output datum type hint int private static class invalid full output function with arg name hint extend scalar function function hint input datum type hint int argument name b output datum type hint bigint public number eval integer i return null function hint input datum type hint int private static class invalid local output function hint extend scalar function function hint output datum type hint int public integer eval integer n return null function hint output datum type hint string public integer eval string n return null function hint input datum type hint int datum type hint output datum type hint boolean private static class incomplete function hint extend scalar function public boolean eval integer i1 integer i2 return null function hint input datum type hint int function hint input datum type hint bigint private static class global input function hint extend scalar function function hint output datum type hint int public integer eval number n return null private static class zero arg function extend scalar function public integer eval return null private static class mixed arg function extend scalar function public integer eval int i double d return null private static class overload function extend scalar function public integer eval int i double d return null public long eval string s return 0 l private static class var arg function extend scalar function public string eval int i int more return null private static class var arg with byte function extend scalar function public string eval byte byte return null function hint output datum type hint int private static class extract with output hint function extend scalar function public object eval integer i return null function hint input datum type hint int datum type hint boolean argument name i b private static class extract with input hint function extend scalar function public double eval object o return 0.0 function hint input datum type hint bigint accumulator datum type hint row f bigint function hint input datum type hint string accumulator datum type hint row f string private static class input dependent accumulator function extend aggregate function string row public void accumulate row accumulator object o nothing to do override public string get value row accumulator return null override public row create accumulator return null function hint output datum type hint string private static class aggregate function with many annotation extend aggregate function string row function hint accumulator datum type hint row b boolean public void accumulate row accumulator datum type hint row i int b boolean row r nothing to do override public string get value row accumulator return null override public row create accumulator return null function hint output datum type hint row i int b boolean private static class output hint table function extend table function row public void eval int i nothing to do function hint output datum type hint string private static class invalid method scalar function extend scalar function public long eval int i return null function hint accumulator datum type hint int private static class invalid method aggregate function extend aggregate function string boolean public void accumulate boolean acc int a boolean b nothing to do override public string get value boolean accumulator return null override public boolean create accumulator return null private static class miss method table function extend table function string nothing to do private static class name argument scalar function extend scalar function public integer eval int n return null public integer eval long n return null public integer eval datum type hint decimal object n return null private static class input group scalar function extend scalar function public string eval datum type hint input group input group any object o return o to string private static class var arg input group scalar function extend scalar function public string eval datum type hint input group input group any object o return array to string o extract order be f int f bigint due to method signature sort private static class order scalar function extend scalar function public long eval long l return l public integer eval integer i return i extract order be f bigint f int function hint input datum type hint bigint output datum type hint bigint function hint input datum type hint int output datum type hint int private static class order scalar function2 extend scalar function public number eval number n return n extract order be f bigint f int private static class order scalar function3 extend scalar function function hint input datum type hint bigint output datum type hint bigint function hint input datum type hint int output datum type hint int public number eval number n return n 
input type strategy test base run with parameterized class public abstract class input type strategy test base parameterize parameter public test spec test spec rule public expect exception throw expect exception none test public void test strategy if test spec expect signature null assert that generate signature equal to test spec expect signature if test spec expect error message null throw expect validation exception class throw expect cause contain cause new validation exception test spec expect error message for list datum type actual argument type test spec actual argument type type inference util result result run type inference actual argument type if test spec expect argument type null assert that result get expect argument type equal to test spec expect argument type private string generate signature final function definition mock function definition mock new function definition mock function definition mock function kind function kind scalar return type inference util generate signature create type inference f function definition mock private type inference util result run type inference list datum type actual argument type final function definition mock function definition mock new function definition mock function definition mock function kind function kind scalar final call context mock call context mock new call context mock call context mock type factory new datum type factory mock call context mock function definition function definition mock call context mock argument datum type actual argument type call context mock argument literal int stream range actual argument type size map to obj i test spec literal pos null i test spec literal po collect collector to list call context mock argument value int stream range actual argument type size map to obj i test spec literal pos null i test spec literal po optional of nullable test spec literal value optional empty collect collector to list call context mock argument null int stream range actual argument type size map to obj i false collect collector to list call context mock name f call context mock output datum type optional empty final type inference util surround info surround info if test spec surround strategy null final type inference outer type inference type inference new builder input type strategy test spec surround strategy output type strategy type strategy miss build surround info new type inference util surround info f outer function definition mock outer type inference else surround info null return type inference util run type inference create type inference call context mock surround info private type inference create type inference final type inference builder builder type inference new builder input type strategy test spec strategy output type strategy type strategy explicit datum type boolean if test spec name argument null builder name argument test spec name argument if test spec type argument null builder type argument test spec type argument return builder build a specification for test to execute protect static class test spec private final nullable string description private final input type strategy strategy private nullable list string name argument private nullable list datum type type argument private list list datum type actual argument type new array list private nullable integer literal po private nullable object literal value private nullable input type strategy surround strategy private nullable string expect signature private nullable list datum type expect argument type private nullable string expect error message private test spec nullable string description input type strategy strategy this description description this strategy strategy static test spec for strategy input type strategy strategy return new test spec null strategy static test spec for strategy string description input type strategy strategy return new test spec description strategy test spec name argument string name this name argument array as list name return this test spec type argument datum type datum type this type argument array as list datum type return this test spec surround strategy input type strategy surround strategy this surround strategy surround strategy return this test spec call with argument type abstract datum type datum type this actual argument type add resolve datum type datum type return this test spec call with literal at int po this literal pos pos return this test spec call with literal at int po object value this literal po pos this literal value value return this test spec expect signature string signature this expect signature signature return this test spec expect argument type abstract datum type datum type this expect argument type resolve datum type datum type return this test spec expect error message string expect error message this expect error message expect error message return this private list datum type resolve datum type abstract datum type datum type final datum type factory mock factory mock new datum type factory mock return array stream datum type map factory mock create datum type collect collector to list override public string to string return description null description strategy get class get simple name 
type strategy test run with parameterized class public class type strategy test parameter name index public static list test spec test datum return array as list miss strategy with arbitrary argument test spec for strategy miss input type datum type int expect error message could not infer a output type for the give argument valid explicit test spec for strategy explicit datum type bigint input type expect datum type datum type bigint infer from input test spec for strategy argument input type datum type int datum type string expect datum type datum type int infer from not exist input test spec for strategy argument input type expect error message could not infer a output type for the give argument int boolean string test spec for strategy create mapping type strategy input type datum type int datum type boolean expect datum type datum type string int string boolean test spec for strategy create mapping type strategy input type datum type int datum type string expect datum type datum type boolean bridge to boolean class int char boolean but avoid cast mapping actually expect string test spec for strategy create mapping type strategy input type datum type int datum type char expect datum type datum type boolean bridge to boolean class invalid mapping strategy test spec for strategy create mapping type strategy input type datum type int datum type int expect error message could not infer a output type for the give argument invalid return type test spec for strategy explicit datum type null input type expect error message could not infer a output type for the give argument untyped null received test spec for strategy first type strategy type strategy first call context optional empty explicit datum type int input type expect datum type datum type int test spec for strategy match root type strategy type strategy match family logical type family numeric input type datum type int expect datum type datum type int test spec for strategy invalid match root type strategy type strategy match family logical type family numeric input type datum type boolean expect error message could not infer a output type for the give argument test spec for strategy infer a row type type strategy row input type datum type bigint datum type string expect datum type datum type row datum type field f0 datum type bigint datum type field f1 datum type string not null test spec for strategy infer a array type type strategy array input type datum type bigint datum type bigint expect datum type datum type array datum type bigint not null test spec for strategy infer a map type type strategy map input type datum type bigint datum type string not null expect datum type datum type map datum type bigint datum type string not null not null test spec for strategy cascade to nullable type nullable explicit datum type boolean not null input type datum type bigint not null datum type varchar nullable expect datum type datum type boolean nullable test spec for strategy cascade to not null type nullable explicit datum type boolean nullable input type datum type bigint not null datum type varchar not null expect datum type datum type boolean not null test spec for strategy cascade to not null type but only consider first argument nullable constant argument count to explicit datum type boolean nullable input type datum type bigint not null datum type varchar nullable expect datum type datum type boolean not null test spec for strategy cascade to null type but only consider first two argument nullable constant argument count to explicit datum type boolean nullable input type datum type bigint not null datum type varchar nullable expect datum type datum type boolean nullable test spec for strategy cascade to not null type but only consider the second and third argument nullable constant argument count between explicit datum type boolean nullable input type datum type bigint nullable datum type bigint not null datum type varchar not null expect datum type datum type boolean not null test spec for strategy find a common type type strategy common input type datum type int datum type tinyint not null datum type decimal expect datum type datum type decimal test spec for strategy find a decimal sum type strategy decimal plus input type datum type decimal datum type decimal expect datum type datum type decimal not null test spec for strategy find a decimal quotient type strategy decimal divide input type datum type decimal datum type decimal expect datum type datum type decimal not null test spec for strategy find a decimal product type strategy decimal time input type datum type decimal datum type decimal expect datum type datum type decimal not null test spec for strategy find a decimal modulo type strategy decimal mod input type datum type decimal datum type decimal expect datum type datum type decimal not null test spec for strategy convert to vary string vary string explicit datum type char not null input type datum type char not null expect datum type datum type varchar not null test spec for strategy concat two string string concat input type datum type char not null datum type varchar expect datum type datum type varchar test spec for strategy access field of a row nullable type by name type strategy get input type datum type row datum type field f0 datum type bigint not null datum type string not null call with literal at f0 expect datum type datum type bigint nullable test spec for strategy access field of a row not null type by name type strategy get input type datum type row datum type field f0 datum type bigint not null not null datum type string not null call with literal at f0 expect datum type datum type bigint not null test spec for strategy access field of a structured nullable type by name type strategy get input type new field datum type structure type new builder object identifier of cat db type attribute collection singleton list new structured type structure attribute f0 new big int type false build collection singleton list datum type bigint not null nullable datum type string not null call with literal at f0 expect datum type datum type bigint nullable test spec for strategy access field of a structure not null type by name type strategy get input type new field datum type structure type new builder object identifier of cat db type attribute collection singleton list new structured type structure attribute f0 new big int type false build collection singleton list datum type bigint not null not null datum type string not null call with literal at f0 expect datum type datum type bigint not null test spec for strategy access field of a row nullable type by index type strategy get input type datum type row datum type field f0 datum type bigint not null datum type int not null call with literal at expect datum type datum type bigint nullable test spec for strategy access field of a row not null type by index type strategy get input type datum type row datum type field f0 datum type bigint not null not null datum type int not null call with literal at expect datum type datum type bigint not null test spec for strategy field can be access only with a literal name type strategy get input type datum type row datum type field f0 datum type bigint not null not null datum type string not null expect error message could not infer a output type for the give argument test spec for strategy field can be access only with a literal index type strategy get input type datum type row datum type field f0 datum type bigint not null not null datum type int not null expect error message could not infer a output type for the give argument parameter public test spec test spec rule public expect exception throw expect exception none test public void test type strategy if test spec expect error message null throw expect validation exception class throw expect cause contain cause new validation exception test spec expect error message type inference util result result run type inference if test spec expect datum type null assert assert that result get output datum type equal to test spec expect datum type private type inference util result run type inference final function definition mock function definition mock new function definition mock function definition mock function kind function kind scalar final call context mock call context mock new call context mock call context mock function definition function definition mock call context mock argument datum type test spec input type call context mock name f call context mock output datum type optional empty call context mock argument literal int stream range test spec input type size map to obj i test spec literal pos null i test spec literal po collect collector to list call context mock argument value int stream range test spec input type size map to obj i test spec literal pos null i test spec literal po optional of nullable test spec literal value optional empty collect collector to list final type inference type inference type inference new builder input type strategy input type strategy wildcard output type strategy test spec strategy build return type inference util run type inference type inference call context mock null private static class test spec private nullable final string description private final type strategy strategy private list datum type input type private nullable datum type expect datum type private nullable string expect error message private nullable integer literal po private nullable object literal value private test spec nullable string description type strategy strategy this description description this strategy strategy static test spec for strategy type strategy strategy return new test spec null strategy static test spec for strategy string description type strategy strategy return new test spec description strategy test spec input type datum type datum type this input type array as list datum type return this test spec call with literal at int po object value this literal po pos this literal value value return this test spec expect datum type datum type expect datum type this expect datum type expect datum type return this test spec expect error message string expect error message this expect error message expect error message return this override public string to string return description null description private static type strategy create mapping type strategy final map input type strategy type strategy mapping new hash map mapping put input type strategy sequence input type strategy explicit datum type int input type strategy explicit datum type string explicit datum type boolean bridge to boolean class mapping put input type strategy sequence input type strategy explicit datum type int input type strategy explicit datum type boolean explicit datum type string return type strategy map mapping 
legacy type info datum type converter test run with parameterized class public class legacy type info datum type converter test parameter name index type info datum type public static list object type info return array as list new object type string datum type string type string datum type string not null type boolean datum type boolean type sql timestamp datum type timestamp bridge to java sql timestamp class type generic legacy type info datum type converter test class new atomic datum type new legacy type information type logical type root raw type generic legacy type info datum type converter test class type row name new string field1 field2 type int type long datum type row field field1 datum type int field field2 datum type bigint type map type float type row type byte datum type map datum type float datum type row field f0 datum type tinyint type primitive array type float datum type array datum type float not null bridge to float class bridge to float class type primitive array type byte datum type byte type object array type primitive array type float datum type array datum type array datum type float not null bridge to float class bridge to float class bridge to float class basic array type info string array type info new atomic datum type new legacy type information type logical type root array basic array type info string array type info object array type info get info for type string datum type array datum type string bridge to string class type tuple type short type double type float new atomic datum type new legacy type information type logical type root structure type type tuple type short type double type float time indicator type info rowtime indicator new atomic datum type new timestamp type true timestamp kind rowtime bridge to java sql timestamp class parameter public type information input type info parameter public datum type datum type test public void test type info to datum type conversion assert that legacy type info datum type converter to datum type input type info equal to datum type nullable test public void test datum type to type info conversion assert that legacy type info datum type converter to legacy type info datum type equal to input type info 
logical common type test run with parameterized class public class logical common type test parameter name index type to public static list object test datum return array as list new object simple type array as list new int type new int type new int type incompatible type array as list new int type new array type new int type null incompatible type array as list new int type new var char type null incompatible type array as list new binary type new var char type null not null type array as list new int type false new int type false new int type false not null with different type array as list new int type true new big int type false new big int type null only array as list new null type new null type null null with other type array as list new null type new int type new int type new int type array type with same element type array as list new array type new int type new array type new int type new array type new int type array type with different element type array as list new array type new big int type new array type new int type new array type new big int type multiset type with different element type array as list new multiset type new big int type new multiset type new int type new multiset type new big int type map type with different element type array as list new map type new big int type new double type new map type new int type new double type new map type new big int type new double type row type with different element type array as list row type of new int type new int type new big int type row type of new big int type new int type new int type row type of new big int type new int type new big int type char type of same length array as list new char type new char type new char type char type of different length array as list new char type new char type new var char type varchar type of different length array as list new var char type new var char type var char type max length new var char type var char type max length mixed varchar and char type array as list new var char type new char type new var char type more mixed varchar and char type array as list new char type new var char type new var char type new var char type binary type of different length array as list new binary type new binary type new var binary type mixed binary and varbinary type array as list new binary type new var binary type new var binary type new var binary type two approximate numeric type array as list new double type new float type new double type one approximate numeric and one decimal type array as list new double type new decimal type new double type one approximate numeric and one exact numeric type array as list new int type new float type new float type two approximate numeric and one decimal type array as list new decimal type new double type new float type new double type decimal precision and scale merge array as list new decimal type new decimal type new decimal type new decimal type decimal precision and scale merge with other exact numeric type array as list new decimal type new int type new big int type new decimal type unsupported time merge array as list new date type new date type new time type null time precision merge array as list new time type new time type new time type new time type timestamp precision merge array as list new timestamp type new timestamp type new timestamp type new timestamp type timestamp merge array as list new timestamp type new zone timestamp type new local zone timestamp type new zone timestamp type timestamp merge array as list new timestamp type new local zone timestamp type new local zone timestamp type day time interval datetime array as list new day time interval type day time resolution day new date type new date type year month interval datetime array as list new year month interval type year month resolution month new date type new date type datetime interval array as list new time type new day time interval type day time resolution minute new time type datetime interval array as list new date type new day time interval type day time resolution day new date type exact numeric date array as list new int type new date type new date type time exact numeric array as list new time type new decimal type null timestamp exact numeric array as list new timestamp type new decimal type new timestamp type day time interval array as list new day time interval type day time resolution day to minute new day time interval type day time resolution second new day time interval type day time resolution day to second day time interval array as list new day time interval type day time resolution hour new day time interval type day time resolution second day time interval type default day precision new day time interval type day time resolution hour to second day time interval type default day precision year month interval array as list new year month interval type year month resolution month new year month interval type year month resolution year new year month interval type year month resolution year to month parameter public list logical type type parameter public logical type common type test public void test common type assert that logical type merge find common type type equal to optional of nullable common type 
logical type cast avoidance test run with parameterized class public class logical type cast avoidance test parameter name index compatible public static list object test datum return array as list new object new char type new char type false new var char type new var char type false new var char type new var char type true new char type new var char type true new binary type new var binary type true new char type false new var char type true new binary type false new var binary type true new var char type new char type false new var binary type new binary type false new boolean type new boolean type false false new binary type new binary type false new var binary type new var binary type true new var binary type new var binary type false new decimal type new decimal type false new tiny int type new tiny int type false false new small int type new small int type false false new int type new int type false false new int type false new int type true new big int type new big int type false false new float type new float type false false new double type new double type false false new date type new date type false false new time type new time type false new timestamp type new timestamp type false new zone timestamp type new zone timestamp type false new zone timestamp type false timestamp kind proctime new zone timestamp type false new year month interval type year month interval type year month resolution year to month new year month interval type year month interval type year month resolution month false new day time interval type day time interval type day time resolution day to second new day time interval type day time interval type day time resolution day to second false new array type new timestamp type new array type new small int type false new multiset type new timestamp type new multiset type new small int type false new map type new var char type new timestamp type new map type new var char type new timestamp type true new map type new var char type new timestamp type new map type new var char type new timestamp type false new row type array as list new row type row field a new var char type new row type row field b new var char type new row type row field c new var char type new row type row field d new timestamp type new row type array as list new row type row field a new var char type new row type row field b new var char type new row type row field c new var char type new row type row field d new timestamp type field name doesn t matter true new row type array as list new row field f1 new int type new row field f2 new var char type new row type array as list new row field f1 new int type new row field f2 new boolean type false new array type new row type array as list new row field f1 new int type new row field f2 new int type new array type new row type array as list new row field f3 new int type new row field f4 new int type true new map type new int type new row type array as list new row field f1 new int type new row field f2 new int type new map type new int type new row type array as list new row field f3 new int type new row field f4 new int type true new multiset type new row type array as list new row field f1 new int type new row field f2 new int type new multiset type new row type array as list new row field f1 new int type new row field f2 new int type true new type information raw type type generic logical type test class new type information raw type type generic object class false create user type user new int type new var char type create user type user new int type new var char type true create user type user new int type new var char type create user type user2 new int type new var char type false create distinct type money new decimal type create distinct type money new decimal type true create distinct type money new decimal type create distinct type money2 new decimal type true parameter public logical type source type parameter public logical type target type parameter public boolean equal test public void test support avoid cast assert that support avoid cast source type target type equal to equal assert true support avoid cast source type source type copy assert true support avoid cast target type target type copy private static distinct type create distinct type string name logical type source type return distinct type new builder object identifier of cat db name source type description money type desc build private static structure type create user type string name logical type child return structure type new builder object identifier of cat db name user class attribute array stream child map lt new structured type structure attribute field lt collect collector to list description user type desc set final true set instantiable true build private static final class user public int setting 
logical type cast test run with parameterized class public class logical type cast test parameter name index from to implicit explicit public static list object test datum return array as list new object new small int type new big int type true true nullability do not match new small int type false new small int type true true new small int type new small int type false false false new year month interval type year month interval type year month resolution year new small int type true true not a interval with single field new year month interval type year month interval type year month resolution year to month new small int type false false new int type new decimal type true true loss of precision new float type new int type false true new var char type integer max value new float type false true new float type new var char type integer max value false true new decimal type new var char type integer max value false true new type information raw type type generic logical type test class new type information raw type type generic logical type test class true true new type information raw type type generic logical type test class new type information raw type type generic object class false false new null type new int type true true new array type new int type new array type new big int type true true new array type new int type new array type new var char type integer max value false true new row type array as list new row field f1 new int type new row field f2 new int type new row type array as list new row field f1 new int type new row field f2 new big int type true true new row type array as list new row field f1 new int type description new row field f2 new int type new row type array as list new row field f1 new int type new row field f2 new big int type true true new row type array as list new row field f1 new int type new row field f2 new int type new row type array as list new row field f1 new int type new row field f2 new boolean type false true new row type array as list new row field f1 new int type new row field f2 new int type new var char type integer max value false false parameter public logical type source type parameter public logical type target type parameter public boolean support implicit parameter public boolean support explicit test public void test implicit casting assert that logical type cast support implicit cast source type target type equal to support implicit test public void test explicit casting assert that logical type cast support explicit cast source type target type equal to support explicit 
logical type duplicator test run with parameterized class public class logical type duplicator test private static final logical type duplicator duplicator new logical type duplicator private static final logical type duplicator int replacer new int replacer parameter name index public static list object test datum return array as list new object new char type new char type create multiset type new int type create multiset type new big int type create array type new int type create array type new big int type create map type new int type create map type new big int type create row type new int type create row type new big int type create distinct type new int type create distinct type new big int type create user type new int type create user type new big int type create human type create human type parameter public logical type logical type parameter public logical type replace logical type test public void test duplication assert that logical type accept duplicator equal to logical type test public void test replacement assert that logical type accept int replacer equal to replace logical type private static class int replacer extend logical type duplicator override public logical type visit int type int type return new big int type private static multiset type create multiset type logical type replace type return new multiset type new multiset type replace type private static array type create array type logical type replace type return new array type new array type replace type private static map type create map type logical type replace type return new map type replace type new small int type private static distinct type create distinct type logical type replace type return new distinct type builder object identifier of cat db money replace type description money type desc build private static row type create row type logical type replace type return new row type array as list new row type row field field1 new char type new row type row field field2 new boolean type new row type row field field3 replace type private static structure type create human type return structure type new builder object identifier of cat db human human class attribute collection singleton list new structured type structure attribute name new var char type description description human type desc set final false set instantiable false build private static structure type create user type logical type replace type return structure type new builder object identifier of cat db user user class attribute collection singleton list new structured type structure attribute set replace type description user type desc set final false set instantiable true super type create human type build private abstract static class human public string name private static final class user extend human public int setting 
logical type parser test run with parameterized class public class logical type parser test parameter name index from to public static list test spec test datum return array as list test spec for string char expect type new char type test spec for string char not null expect type new char type copy false test spec for string char not t n n u l l expect type new char type copy false test spec for string char not null expect type new char type copy false test spec for string char null expect type new char type test spec for string char expect type new char type test spec for string varchar expect type new var char type test spec for string varchar expect type new var char type test spec for string string expect type new var char type var char type max length test spec for string boolean expect type new boolean type test spec for string binary expect type new binary type test spec for string binary expect type new binary type test spec for string varbinary expect type new var binary type test spec for string varbinary expect type new var binary type test spec for string byte expect type new var binary type var binary type max length test spec for string decimal expect type new decimal type test spec for string dec expect type new decimal type test spec for string numeric expect type new decimal type test spec for string decimal expect type new decimal type test spec for string dec expect type new decimal type test spec for string numeric expect type new decimal type test spec for string decimal expect type new decimal type test spec for string dec expect type new decimal type test spec for string numeric expect type new decimal type test spec for string tinyint expect type new tiny int type test spec for string smallint expect type new small int type test spec for string integer expect type new int type test spec for string int expect type new int type test spec for string bigint expect type new big int type test spec for string float expect type new float type test spec for string double expect type new double type test spec for string double precision expect type new double type test spec for string date expect type new date type test spec for string time expect type new time type test spec for string time expect type new time type test spec for string time without time zone expect type new time type test spec for string time without time zone expect type new time type test spec for string timestamp expect type new timestamp type test spec for string timestamp expect type new timestamp type test spec for string timestamp without time zone expect type new timestamp type test spec for string timestamp without time zone expect type new timestamp type test spec for string timestamp with time zone expect type new zone timestamp type test spec for string timestamp with time zone expect type new zone timestamp type test spec for string timestamp with local time zone expect type new local zone timestamp type test spec for string timestamp with local time zone expect type new local zone timestamp type test spec for string interval year expect type new year month interval type year month resolution year test spec for string interval year expect type new year month interval type year month resolution year test spec for string interval month expect type new year month interval type year month resolution month test spec for string interval year to month expect type new year month interval type year month resolution year to month test spec for string interval year to month expect type new year month interval type year month resolution year to month test spec for string interval day to second expect type new day time interval type day time resolution day to second test spec for string interval hour to second expect type new day time interval type day time resolution hour to second day time interval type default day precision test spec for string interval minute expect type new day time interval type day time resolution minute test spec for string array timestamp with local time zone expect type new array type new local zone timestamp type test spec for string array int not null expect type new array type new int type false test spec for string int array expect type new array type new int type test spec for string int not null array expect type new array type new int type false test spec for string int array not null expect type new array type false new int type test spec for string multiset int not null expect type new multiset type new int type false test spec for string int multiset expect type new multiset type new int type test spec for string int not null multiset expect type new multiset type new int type false test spec for string int multiset not null expect type new multiset type false new int type test spec for string map bigint boolean expect type new map type new big int type new boolean type test spec for string row f0 int not null f1 boolean expect type new row type array as list new row type row field f0 new int type false new row type row field f1 new boolean type test spec for string row f0 int not null f1 boolean expect type new row type array as list new row type row field f0 new int type false new row type row field f1 new boolean type test spec for string row f0 int expect type new row type collection singleton list new row type row field f0 new int type test spec for string row f0 int expect type new row type collection singleton list new row type row field f0 new int type test spec for string row expect type new row type collection empty list test spec for string row expect type new row type collection empty list test spec for string row f0 int not null this be a comment f1 boolean this as well expect type new row type array as list new row type row field f0 new int type false this be a comment new row type row field f1 new boolean type this as well test spec for string null expect type new null type test spec for string create raw type logical type parser test class as serializable string expect type create raw type logical type parser test class test spec for string cat db my type expect type new unresolved user define type unresolved identifier of cat db my type test spec for string db my type expect type new unresolved user define type unresolved identifier of db my type test spec for string my type expect type new unresolved user define type unresolved identifier of my type test spec for string array my type expect type new array type new unresolved user define type unresolved identifier of my type test spec for string row f0 my type f1 c d t expect type row type of new unresolved user define type unresolved identifier of my type new unresolved user define type unresolved identifier of c d t test spec for string legacy structure type pojo org apache flink table type logical type parser test my pojo expect type create pojo legacy type test spec for string legacy decimal decimal expect type type conversion from legacy info to datum type type big dec get logical type test spec for string legacy raw any org apache flink table type logical type parser test expect type create generic legacy type error message testing test spec for string row f0 expect error message unexpected end test spec for string row f0 expect error message unexpected end test spec for string varchar test expect error message literal int expect test spec for string varchar expect error message invalid integer value test spec for string row field int field2 expect error message keyword expect test spec for string raw unknown class expect error message unable to restore the raw type parameter public test spec test spec rule public expect exception throw expect exception none test public void test parse if test spec expect type null assert that logical type parser parse test spec type string equal to test spec expect type test public void test serializable parse if test spec expect type null if have root test spec expect type unresolved test spec expect type get child stream none match t have root t unresolved assert that logical type parser parse test spec expect type as serializable string equal to test spec expect type test public void test error message if test spec expect error message null throw expect validation exception class throw expect message test spec expect error message logical type parser parse test spec type string private static class test spec private final string type string private nullable logical type expect type private nullable string expect error message private test spec string type string this type string type string static test spec for string string type string return new test spec type string test spec expect type logical type expect type this expect type expect type return this test spec expect error message string expect error message this expect error message expect error message return this private static t raw type t create raw type class t clazz return new raw type clazz new kryo serializer clazz new execution config suppress warning unchecked private static legacy type information type my pojo create pojo legacy type type information type info type extractor create type info my pojo class return legacy type information type type conversion from legacy info to datum type type info get logical type suppress warning unchecked private static legacy type information type my pojo create generic legacy type type information type info new generic type info logical type parser test class return legacy type information type type conversion from legacy info to datum type type info get logical type a testing pojo class public static class my pojo public string name public int age 
value datum type converter test run with parameterized class public class value datum type converter test parameterized parameter name index value type public static list object test datum return array as list new object hello world datum type char new atomic datum type char type of empty literal new byte datum type binary new byte new atomic datum type binary type of empty literal big decimal zero datum type decimal new big decimal 12.123 datum type decimal datum type int local time of datum type time local time of datum type time local time of datum type time local time of datum type time local date time of datum type timestamp zone date time of zone id system default datum type timestamp with time zone bridge to zone date time class offset date time of zone offset utc datum type timestamp with time zone bridge to offset date time class instant of epoch milli l datum type timestamp with local time zone bridge to instant class period of year datum type interval datum type year datum type month bridge to period class duration of millis datum type interval datum type day datum type second bridge to duration class duration of day datum type interval datum type day datum type second bridge to duration class timestamp value of 2018 - 01 01 12 13:14 datum type timestamp bridge to java sql timestamp class new integer datum type array datum type int new integer null datum type array datum type int new big decimal new big decimal 12.1234 new big decimal 42.4321 new big decimal 20.0000 datum type array datum type decimal new big decimal null new big decimal 42.4321 datum type array datum type decimal new integer datum type array datum type int new integer new integer null new integer new integer datum type array datum type array datum type int time point unit hour new atomic datum type new symbol type time point unit class new big decimal null parameterized parameter public object value parameterize parameter public nullable datum type datum type test public void test class to datum type conversion assert equal optional of nullable datum type map datum type not null value datum type converter extract datum type value 
path resolution test run with parameterized class public class path resolution test parameter name index public static list test spec test datum throw exception return as list test spec simple in default path with catalog manager simple catalog table api lookup path tab1 sql lookup path tab1 expect path builtin catalog name default tab1 test spec simple in change default catalog with catalog manager simple catalog with default path cat1 table api lookup path tab1 sql lookup path tab1 expect path cat1 db1 tab1 test spec simple in change default path with catalog manager simple catalog with default path cat1 db2 table api lookup path tab1 sql lookup path tab1 expect path cat1 db2 tab1 test spec qualify with database with catalog manager simple catalog with default path builtin catalog name default table api lookup path db1 tab1 sql lookup path db1 tab1 expect path builtin catalog name db1 tab1 test spec fully qualified name with catalog manager simple catalog with default path builtin catalog name default table api lookup path cat1 db1 tab1 sql lookup path cat1 db1 tab1 expect path cat1 db1 tab1 test spec dot in unqualified table name with catalog manager catalog with special character table api lookup path tab sql lookup path tab expect path builtin catalog name default tab test spec dot in database name with catalog manager catalog with special character table api lookup path default db tab1 sql lookup path default db tab1 expect path builtin catalog name default db tab1 test spec dot in default database name with catalog manager catalog with special character with default path builtin catalog name default db table api lookup path tab1 sql lookup path tab1 expect path builtin catalog name default db tab1 test spec space in name with catalog manager catalog with special character table api lookup path default db tab sql lookup path default db tab expect path builtin catalog name default db tab test spec shadow with temporary table with catalog manager catalog with temporary object table api lookup path cat1 db1 tab1 sql lookup path cat1 db1 tab1 expect temporary path cat1 db1 tab1 private static catalog manager simple catalog throw exception return root builtin database default table tab1 database db1 table tab1 catalog cat1 database db1 table tab1 database db2 table tab1 build private static catalog manager catalog with temporary object throw exception return root builtin database default catalog cat1 database db1 table tab1 temporary table object identifier of cat1 db1 tab1 build private static catalog manager catalog with special character throw exception return root builtin database default table tab database default db table tab1 table tab database default db table tab build parameter public test spec test spec test public void test table api path resolution list string lookup path test spec get table api lookup path catalog manager catalog manager test spec get catalog manager test spec get default catalog if present catalog manager set current catalog test spec get default database if present catalog manager set current database unresolved identifier unresolved identifier unresolved identifier of lookup path object identifier identifier catalog manager qualify identifier unresolved identifier assert that array as list identifier get catalog name identifier get database name identifier get object name core matcher equal to test spec get expect path optional catalog manager table lookup result table lookup catalog manager get table identifier assert that table lookup be present be true assert that table lookup get be temporary be test spec be temporary object test public void test stream sql path resolution stream table test util util new stream table test util new some test spec get catalog manager stream table environment impl t env util java table env test spec get default catalog if present t env use catalog test spec get default database if present t env use database util verify java sql format select from s test spec get sql path to lookup format stream table source scan table s field source be temporary s string join test spec get expect path test spec be temporary object static class test spec private string label private string sql path to lookup private list string table api lookup path private list string expect path private boolean be temporary object false private string default catalog private string default database private catalog manager catalog manager public test spec string label this label label public static test spec test spec string label return new test spec label public test spec with catalog manager catalog manager catalog manager this catalog manager catalog manager return this public test spec table api lookup path string path this table api lookup path as list path return this public test spec sql lookup path string path this sql path to lookup path return this public test spec expect path string expect path precondition check argument sql path to lookup null table api lookup path null both sql table api version of path lookup require remember expect path need to be call last precondition check argument catalog manager null a catalog manager need to provide remember expect path need to be call last this expected path as list expect path return this public test spec expect temporary path string expect path this be temporary object true return expect path expected path public test spec with default path string default catalog this default catalog default catalog return this public test spec with default path string default catalog string default database this default catalog default catalog this default database default database return this public string get sql path to lookup return sql path to lookup public list string get table api lookup path return table api lookup path public catalog manager get catalog manager return catalog manager public list string get expect path return expect path public optional string get default catalog return optional of nullable default catalog public optional string get default database return optional of nullable default database public boolean be temporary object return be temporary object override public string to string string builder string builder new string builder list string property new array list if default catalog null property add default catalog default catalog if default database null property add default database default database if be temporary object property add temporary true property add sql path sql path to lookup property add table api path table api lookup path property add expect path expect path string builder append format s s label string join property return string builder to string 
list view serializer upgrade test run with parameterized class public class list view serializer upgrade test extend type serializer upgrade test base list view string list view string private static final string spec name list view serializer public list view serializer upgrade test test specification list view string list view string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version list view serializer setup class list view serializer verifier class return test specification specification for list view serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class list view serializer setup implement type serializer upgrade test base pre upgrade setup list view string override public type serializer list view string create prior serializer return new list view serializer new list serializer string serializer instance override public list view string create test datum return mock test datum this class be only public to work with link org apache flink api common typeutil class relocator public static final class list view serializer verifier implement type serializer upgrade test base upgrade verifier list view string override public type serializer list view string create upgrade serializer return new list view serializer new list serializer string serializer instance override public matcher list view string test datum matcher list view serializer will not de serialize the type information so we have to create a list view without type information for comparison return be mock test datum without type info override public matcher type serializer schema compatibility list view string schema compatibility matcher migration version version return type serializer matcher be compatible as be public static list view string mock test datum list view string view new list view type information of string class try view add apache flink catch exception e throw new runtime exception e return view public static list view string mock test datum without type info list view string view new list view try view add apache flink catch exception e throw new runtime exception e return view 
map view serializer upgrade test run with parameterized class public class map view serializer upgrade test extend type serializer upgrade test base map view integer string map view integer string private static final string spec name map view serializer public map view serializer upgrade test test specification map view integer string map view integer string test specification super test specification parameterize parameter name test specification public static collection test specification test specification throw exception array list test specification test specification new array list for migration version migration version migration version test specification add new test specification spec name migration version map view serializer setup class map view serializer verifier class return test specification specification for map view serializer this class be only public to work with link org apache flink api common typeutil class relocator public static final class map view serializer setup implement type serializer upgrade test base pre upgrade setup map view integer string override public type serializer map view integer string create prior serializer return new map view serializer new map serializer int serializer instance string serializer instance override public map view integer string create test datum return mock test datum this class be only public to work with link org apache flink api common typeutil class relocator public static final class map view serializer verifier implement type serializer upgrade test base upgrade verifier map view integer string override public type serializer map view integer string create upgrade serializer return new map view serializer new map serializer int serializer instance string serializer instance override public matcher map view integer string test datum matcher return be mock test datum override public matcher type serializer schema compatibility map view integer string schema compatibility matcher migration version version return type serializer matcher be compatible as be public static map view integer string mock test datum map view integer string view new map view type information of integer class type information of string class try view put catch exception e throw new runtime exception e return view 
java table source i t case run with parameterized class public class java table source i t case extend table program collection test base public java table source i t case table config mode config mode super config mode test public void test batch table source table a p i throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config batch table source csv table common test datum get csv table source table environment internal table env register table source internal person csv table table result table env scan person select id first last score datum set row result set table env to datum set result row class list row result result set collect string expect mike smith 12.3 n bob taylor 45.6 n sam miller 7.89 n peter smith 0.12 n liz william 34.5 n sally miller 6.78 n alice smith 90.1 n kelly williams 2.34 n compare result as text result expected test public void test batch table source s q l throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config batch table source csv table common test datum get csv table source table environment internal table env register table source internal person csv table table result table env sql query select last floor id score from person where score datum set row result set table env to datum set result row class list row result result set collect string expect smith 1,24 n miller 3,15 n smith 4,0 n miller 6,13 n william 8,4 n compare result as text result expect 
grouping set i t case run with parameterized class public class grouping set i t case extend table program cluster test base private static final string table name my table private static final string table with null name my table with null private batch table environment table env public grouping set i t case test execution mode mode table config mode table config mode super mode table config mode before public void setup table execution environment env execution environment get execution environment table env batch table environment create env new table config datum set tuple3 integer long string datum set collection datum set get3 tuple datum set env table env create temporary view table name datum set map operator tuple3 integer long string tuple3 integer long string datum set with null datum set map new map function tuple3 integer long string tuple3 integer long string override public tuple3 integer long string map tuple3 integer long string value throw exception if value f2 to lower case contain world value f2 null return value table env create temporary view table with null name datum set with null test public void test grouping set throw exception string query select f1 f2 avg f0 as a group id as g grouping f1 as gf1 grouping f2 as gf2 grouping id f1 as gif1 grouping id f2 as gif2 grouping id f1 f2 as gid count as cnt from table name group by grouping set f1 f2 string expect null 1,0 1,0 1,0 2,1 n null 2,0 1,0 1,0 2,2 n null 5,0 1,0 1,0 2,3 n null 8,0 1,0 1,0 2,4 n null 13,0 1,0 1,0 2,5 n null 18,0 1,0 1,0 2,6 n null comment 1,7 0,0 1,0 1,1 n null comment 10,16 0,0 1,0 1,1 n null comment 11,17 0,0 1,0 1,1 n null comment 12,18 0,0 1,0 1,1 n null comment 13,19 0,0 1,0 1,1 n null comment 14,20 0,0 1,0 1,1 n null comment 15,21 0,0 1,0 1,1 n null comment 2,8 0,0 1,0 1,1 n null comment 3,9 0,0 1,0 1,1 n null comment 4,10 0,0 1,0 1,1 n null comment 5,11 0,0 1,0 1,1 n null comment 6,12 0,0 1,0 1,1 n null comment 7,13 0,0 1,0 1,1 n null comment 8,14 0,0 1,0 1,1 n null comment 9,15 0,0 1,0 1,1 n null hello world how be you 4,0 0,1 0,1 1,1 n null hello world 3,0 0,1 0,1 1,1 n null hello 2,0 0,1 0,1 1,1 n null hi 1,0 0,1 0,1 1,1 n null i be fine 5,0 0,1 0,1 1,1 n null luke skywalker 6,0 0,1 0,1 1,1 n null null 11,0 0,0 0,0 0,21 check sql query expect test public void test grouping set with null throw exception string query select f1 f2 avg f0 as a group id as g from table with null name group by grouping set f1 f2 string expect hi 1,0 n hello 2,0 n null 3,0 n i be fine 5,0 n luke skywalker 6,0 n null 4,0 n comment 1,7 n comment 2,8 n comment 3,9 n comment 4,10 n comment 5,11 n comment 6,12 n comment 7,13 n comment 8,14 n comment 9,15 n comment 10,16 n comment 11,17 n comment 12,18 n comment 13,19 n comment 14,20 n comment 15,21 check sql query expect test public void test cube as grouping set throw exception string cube query select f1 f2 avg f0 as a group id as g grouping f1 as gf1 grouping f2 as gf2 grouping id f1 as gif1 grouping id f2 as gif2 grouping id f1 f2 as gid from table name group by cube f1 f2 string grouping set query select f1 f2 avg f0 as a group id as g grouping f1 as gf1 grouping f2 as gf2 grouping id f1 as gif1 grouping id f2 as gif2 grouping id f1 f2 as gid from table name group by grouping set f1 f2 f1 f2 compare sql cube query grouping set query test public void test rollup as grouping set throw exception string rollup query select f1 f2 avg f0 as a group id as g grouping f1 as gf1 grouping f2 as gf2 grouping id f1 as gif1 grouping id f2 as gif2 grouping id f1 f2 as gid from table name group by rollup f1 f2 string grouping set query select f1 f2 avg f0 as a group id as g grouping f1 as gf1 grouping f2 as gf2 grouping id f1 as gif1 grouping id f2 as gif2 grouping id f1 f2 as gid from table name group by grouping set f1 f2 f1 compare sql rollup query grouping set query execute sql query and check result param query sql query param expect expected result private void check sql string query string expect throw exception table result table table env sql query query datum set row result datum set table env to datum set result table row class list row result result datum set collect test base util compare result as text result expect private void compare sql string query1 string query2 throw exception function to map row to string map function row string map function new map function row string override public string map row value throw exception return value null null value to string execute first query and store result table result table1 table env sql query query1 datum set row result datum set1 table env to datum set result table1 row class list string results1 result datum set1 map map function collect execute second query and store result table result table2 table env sql query query2 datum set row result datum set2 table env to datum set result table2 row class list string results2 result datum set2 map map function collect compare result test base util compare result collection results1 results2 new comparator string override public int compare string o1 string o2 return o2 null o1 null o1 compare to o2 
java sql i t case run with parameterized class public class java sql i t case extend table program collection test base public java sql i t case table config mode config mode super config mode test public void test value throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config string sql query value test true date 1944 - 02 12.4444444444444445 hello true date 1944 - 02 12.666666665 world false date 1944 - 12 12.54444445 table result table env sql query sql query datum set row result set table env to datum set result row class list row result result set collect string expect world false 1944 - 12 24,12 n hello true 1944 - 02 24,12 n calcite convert to decimal and string with equal length test true 1944 - 02 24,12 n compare result as text result expected test public void test select from table throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table in table env from datum set d a b c table env register table t in string sql query select a c from t table result table env sql query sql query datum set row result set table env to datum set result row class list row result result set collect string expect hi n hello n hello world n hello world how be you n i be fine n luke skywalker n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n compare result as text result expected test public void test filter from datum set throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table env create temporary view datum set table d x y z string sql query select x from datum set table where z like hello table result table env sql query sql query datum set row result set table env to datum set result row class list row result result set collect string expect n n compare result as text result expected test public void test aggregation throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table env create temporary view agg table d x y z string sql query select sum x min x max x count y avg x from agg table table result table env sql query sql query datum set row result set table env to datum set result row class list row result result set collect string expect 231,1 21,21 compare result as text result expected test public void test join throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env table env create temporary view t1 ds1 a b c table env create temporary view t2 ds2 d e f g h string sql query select c g from t1 t2 where b e table result table env sql query sql query datum set row result set table env to datum set result row class list row result result set collect string expect hi hallo n hello hallo welt n hello world hallo welt n compare result as text result expected test public void test map throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list tuple2 integer map string string row new array list row add new tuple2 collection singleton map foo bar row add new tuple2 collection singleton map foo spam type information tuple2 integer map string string ty new tuple type info basic type info int type info new map type info basic type info string type info basic type info string type info datum set tuple2 integer map string string ds1 env from collection row ty table env create temporary view t1 ds1 a b string sql query select b foo from t1 table result table env sql query sql query datum set row result set table env to datum set result row class list row result result set collect string expect bar n spam n compare result as text result expect 
java table environment i t case run with parameterized class public class java table environment i t case extend table program collection test base public java table environment i t case table config mode config mode super config mode parameterize parameter name table config public static collection object parameter return array as list new object table program test base default test expect validation exception class public void test illegal empty name throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table t table env from datum set d must fail table be empty table env create temporary view t test expect validation exception class public void test illegal whitespace only name throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table t table env from datum set d must fail table be empty table env create temporary view t test public void test simple register throw exception final string table name my table execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table env create temporary view table name d table t table env from table name table result t select f0 f1 datum set row result set table env to datum set result row class list row result result set collect string expect 1,1 n 2,2 n 3,2 n 4,3 n 5,3 n 6,3 n 7,4 n 8,4 n 9,4 n 10,4 n 11,5 n 12,5 n 13,5 n 14,5 n 15,5 n 16,6 n 17,6 n 18,6 n 19,6 n 20,6 n 21,6 n compare result as text result expected test public void test register with field throw exception final string table name my table execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table env create temporary view table name d a b c table t table env from table name table result t select a b c datum set row result set table env to datum set result row class list row result result set collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n compare result as text result expect test expect validation exception class public void test register exist dataset table throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table env create temporary view my table d datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env must fail name be already use for different table table env create temporary view my table ds2 test expect table exception class public void test scan unregistered table throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config must fail no table register under that name table env from non register table test public void test table register throw exception final string table name my table execution environment env execution environment get execution environment batch table environment table env batch table environment create env config datum set tuple3 integer long string d collection data set get3 tuple datum set env table t table env from datum set d table env create temporary view table name t table result table env scan table name select f0 f1 filter f0 be greater datum set row result set table env to datum set result row class list row result result set collect string expect 8,4 n 9,4 n 10,4 n 11,5 n 12,5 n 13,5 n 14,5 n 15,5 n 16,6 n 17,6 n 18,6 n 19,6 n 20,6 n 21,6 n compare result as text result expect test expect table exception class public void test register table from other env throw exception execution environment env execution environment get execution environment batch table environment table env1 batch table environment create env config batch table environment table env2 batch table environment create env config table t table env1 from datum set collection datum set get3 tuple datum set env must fail table be bind to different table environment table env2 create temporary view my table t test public void test as from tuple by position throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config table table table env from datum set collection datum set get3 tuple datum set env a b c select a b c datum set row d table env to datum set table row class list row result d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n compare result as text result expected test public void test as from tuple by name throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config table table table env from datum set collection datum set get3 tuple datum set env f2 datum set row d table env to datum set table row class list row result d collect string expect hi n hello n hello world n hello world how be you n i be fine n luke skywalker n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n compare result as text result expected test public void test as from and to tuple throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config table table table env from datum set collection datum set get3 tuple datum set env a b c select a b c type information ti new tuple type info tuple3 integer long string basic type info int type info basic type info long type info basic type info string type info datum set d table env to datum set table ti list result d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n compare result as text result expect ignore test public void test as from tuple to pojo throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list tuple4 string integer double string datum new array list datum add new tuple4 rofl 1.0 hi datum add new tuple4 lol 1.0 hi datum add new tuple4 test I 3.33 hello world table table table env from datum set env from collection datum q w e r select q as a w as b e as c r as d datum set small pojo2 d table env to datum set table small pojo2 class list small pojo2 result d collect string expect rofl 1,1 hi n lol 2,1 hi n test I 4,3 hello world n compare result as text result expected test public void test as from pojo throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list small pojo datum new array list datum add new small pojo peter 4000.00 sale new integer datum add new small pojo anna 10000.00 engineering new integer datum add new small pojo lucy 6000.00 hr new integer table table table env from datum set env from collection datum department as a age as b salary as c name as d role as e select a b c d e datum set row d table env to datum set table row class list row result d collect string expect sale 28,4000 peter n engineering 56,10000 anna n hr 42,6000 lucy n compare result as text result expected test public void test from non atomic and non composite throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list either string integer datum new array list datum add new either left hello datum add new either right datum add new either left world table table table env from datum set env from collection datum type information of new type hint either string integer either select either datum set row d table env to datum set table row class list row result d collect string expect left hello n leave world n right n compare result as text result expected test public void test as from pojo project throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list small pojo datum new array list datum add new small pojo peter 4000.00 sale new integer datum add new small pojo anna 10000.00 engineering new integer datum add new small pojo lucy 6000.00 hr new integer table table table env from datum set env from collection datum name as d select d datum set row d table env to datum set table row class list row result d collect string expect peter n anna n lucy n compare result as text result expected test public void test as from private field pojo throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list private small pojo datum new array list datum add new private small pojo peter 4000.00 sale datum add new private small pojo anna 10000.00 engineering datum add new private small pojo lucy 6000.00 hr table table table env from datum set env from collection datum department as a age as b salary as c name as d select a b c d datum set row d table env to datum set table row class list row result d collect string expect sale 28,4000 peter n engineering 56,10000 anna n hr 42,6000 lucy n compare result as text result expected test public void test as from and to pojo throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list small pojo datum new array list datum add new small pojo peter 4000.00 sale new integer datum add new small pojo anna 10000.00 engineering new integer datum add new small pojo lucy 6000.00 hr new integer table table table env from datum set env from collection datum department as a age as b salary as c name as d role as e select a b c d e datum set small pojo2 d table env to datum set table small pojo2 class list small pojo2 result d collect string expect sale 28,4000 peter n engineering 56,10000 anna n hr 42,6000 lucy n compare result as text result expected test public void test as from and to private field pojo throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list private small pojo datum new array list datum add new private small pojo peter 4000.00 sale datum add new private small pojo anna 10000.00 engineering datum add new private small pojo lucy 6000.00 hr table table table env from datum set env from collection datum department as a age as b salary as c name as d select a b c d datum set private small pojo2 d table env to datum set table private small pojo2 class list private small pojo2 result d collect string expect sale 28,4000 peter n engineering 56,10000 anna n hr 42,6000 lucy n compare result as text result expected test public void test as with pojo and generic type throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config list pojo with generic datum new array list datum add new pojo with generic peter new hash map string string new array list string hash map string string hm1 new hash map hm1 put test1 test1 datum add new pojo with generic anna hm1 new array list string hash map string string hm2 new hash map hm2 put abc cde datum add new pojo with generic lucy hm2 new array list string table table table env from datum set env from collection datum name as a age as b generic as c generic2 as d select a b c c as c2 d select a b c c be equal c2 d datum set row d table env to datum set table row class list row result d collect string expect peter true n anna test1 test1 true n lucy abc cde true n compare result as text result expected test public void test from value throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config table table table env from value 1 l 2 l 3 l select list row result table env to datum set table row class collect string expect n2 n3 n compare result as text result expect test expect validation exception class public void test generic row throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config use null value the enforce generic type datum set row datum set env from element row of 2 l hello null assert true datum set get type instanceof generic type info assert true datum set get type get type class equal row class must fail can not import datum set row with generic type info table env from datum set datum set test expect validation exception class public void test generic row with alias throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config use null value the enforce generic type datum set row datum set env from element row of integer null assert true datum set get type instanceof generic type info assert true datum set get type get type class equal row class must fail can not import datum set row with generic type info table env from datum set datum set null field test expect validation exception class public void test as with too many field throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config must fail too many field name specify table env from datum set collection datum set get3 tuple datum set env a b c d test expect validation exception class public void test as with ambiguous field throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config must fail specified field name be not unique table env from datum set collection datum set get3 tuple datum set env a b b test expect validation exception class public void test as with non field reference1 throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config must fail as do only allow field name expression table env from datum set collection datum set get3 tuple datum set env a plus b c test expect validation exception class public void test as with non field reference2 throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config must fail as do only allow field name expression table env from datum set collection datum set get3 tuple datum set env a as foo b c test expect validation exception class public void test non static class input throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config must fail since class be not static table env from datum set env from element new my non static name test expect validation exception class public void test non static class output throw exception execution environment env execution environment get execution environment batch table environment table env batch table environment create env config must fail since class be not static table t table env from datum set env from element number table env to datum set t my non static class test expect table exception class public void test custom calcite config execution environment env execution environment get execution environment batch table environment table env batch table environment create env config planner config cc new calcite config builder replace logical opt rule set rule set of list replace physical opt rule set rule set of list build table env get config set planner config cc datum set tuple3 integer long string d collection data set get3 tuple datum set env table t table env from datum set d table env to datum set t row class non static class public class my non static public int number small pojo suppress warning unused public static class small pojo public small pojo public small pojo string name int age double salary string department integer role this name name this age age this salary salary this department department this role role public string name public int age public double salary public string department public integer role pojo with generic field suppress warning unused public static class pojo with generic public string name public int age public hash map string string generic public array list string generic2 public pojo with generic default constructor public pojo with generic string name int age hash map string string generic array list string generic2 this name name this age age this generic generic this generic2 generic2 override public string to string return name age generic generic2 small pojo with private field suppress warning unused public static class private small pojo public private small pojo public private small pojo string name int age double salary string department this name name this age age this salary salary this department department private string name private int age private double salary private string department public string get name return name public void set name string name this name name public int get age return age public void set age int age this age age public double get salary return salary public void set salary double salary this salary salary public string get department return department public void set department string department this department department another small pojo suppress warning unused public static class small pojo2 public small pojo2 public small pojo2 string a int b double c string d integer e this a a this b b this c c this d d this e e public string a public int b public double c public string d public integer e override public string to string return a b c d array to string e another small pojo with private field suppress warning unused public static class private small pojo2 public private small pojo2 public private small pojo2 string a int b double c string d this a a this b b this c c this d d private string a private int b private double c private string d public string get a return a public void set a string a this a a public int get b return b public void set b int b this b b public double get c return c public void set c double c this c c public string get d return d public void set d string d this d d override public string to string return a b c d 
java catalog table test run with parameterized class public class java catalog table test extend table test base parameterize parameter name streaming mode public static collection boolean parameter return array as list true false parameterized parameter public boolean be stream mode private table test util get test util if be stream mode return stream test util new table config else return batch test util new table config test public void test resolve schema of custom catalog table sql throw exception table test util test util get test util table environment table environment test util get table env generic in memory catalog generic in memory catalog new generic in memory catalog in memory generic in memory catalog create table new object path default test table new custom catalog table be stream mode false table environment register catalog test catalog generic in memory catalog table environment execute sql create view test table2 as select from test catalog default test table test util verify plan select count from test table2 group by tumble rowtime interval minute test public void test resolve schema of custom catalog table table api throw exception table test util test util get test util table environment table environment test util get table env generic in memory catalog generic in memory catalog new generic in memory catalog in memory generic in memory catalog create table new object path default test table new custom catalog table be stream mode false table environment register catalog test catalog generic in memory catalog table table table environment from test catalog default test table window tumble over light minute on rowtime as w group by w select light count test util verify plan table test public void test resolve proctime of custom table sql throw exception if be stream mode proctime not support in batch return table test util test util get test util table environment table environment test util get table env generic in memory catalog generic in memory catalog new generic in memory catalog in memory generic in memory catalog create table new object path default test table new custom catalog table be stream mode false table environment register catalog test catalog generic in memory catalog test util verify plan select count from test catalog default test table group by tumble proctime interval minute test public void test resolve proctime of custom table table api throw exception if be stream mode proctime not support in batch return table test util test util get test util table environment table environment test util get table env generic in memory catalog generic in memory catalog new generic in memory catalog in memory generic in memory catalog create table new object path default test table new custom catalog table be stream mode false table environment register catalog test catalog generic in memory catalog table table table environment from test catalog default test table window tumble over light minute on proctime as w group by w select light count test util verify plan table private static class custom catalog table implement catalog table private final boolean be stream mode private custom catalog table boolean be stream mode this be stream mode be stream mode override public boolean be partition return false override public list string get partition key return collection empty list override public catalog table copy map string string option return this override public map string string to property return collection empty map override public map string string get property map string string map new hash map map put connector value map put bound boolean to string be stream mode return map override public table schema get schema return table schema builder field count datum type bigint field rowtime datum type timestamp field proctime datum type timestamp proctime watermark rowtime rowtime interval seconds datum type timestamp build override public string get comment return null override public catalog base table copy return this override public optional string get description return optional empty override public optional string get detailed description return optional empty 
build in function test base run with parameterized class public abstract class build in function test base class rule public static mini cluster with client resource mini cluster resource new mini cluster with client resource new mini cluster resource configuration builder set number task manager set number slot per task manager build parameter public test spec test spec test public void test function final table environment env table environment create environment setting new instance build final datum type factory datum type factory table environment internal env get catalog manager get datum type factory final table input table if test spec field datum type null input table env from value row of test spec field datum else final datum type unresolved field field int stream range test spec field datum type length map to obj i datum type field f i test spec field datum type i to array datum type unresolved field new input table env from value datum type row field row of test spec field datum for test item test item test spec test item try if test item instanceof table api result test item test table api result datum type factory input table table api result test item test item else if test item instanceof table api error test item test table api error input table table api error test item test item else if test item instanceof sql result test item test sql result datum type factory env input table sql result test item test item else if test item instanceof sql error test item test sql error env input table sql error test item test item catch throwable t throw new assertion error fail test item test item to string t test utility private static void test table api result datum type factory datum type factory table input table table api result test item test item test result datum type factory input table select test item expression test item private static void test table api error table input table table api error test item test item try input table select test item expression execute fail error expect test item error message catch throwable t assert that t contain cause new validation exception test item error message private static void test sql result datum type factory datum type factory table environment env table input table sql result test item test item test result datum type factory env sql query select test item expression from input table test item private static void test sql error table environment env table input table sql error test item test item try env sql query select test item expression from input table execute fail error expect test item error message catch throwable t assert true t instanceof validation exception assert that t get message contain string test item error message private static void test result datum type factory datum type factory table result table result test item test item final datum type expect datum type datum type factory create datum type test item datum type final table result result result table execute final iterator row iterator result collect assert true iterator have next final row row iterator next assert false no more row expect iterator have next assert equal only column expect row get arity assert equal logical type doesn t match expect datum type get logical type result get table schema get field datum type get logical type assert equal result doesn t match test item result row get field test specification for execute a link build in function definition with different parameter on a set of field protect static class test spec private final build in function definition definition private object field datum private nullable abstract datum type field datum type private list test item test item private test spec build in function definition definition this definition definition this test item new array list static test spec for function build in function definition definition return new test spec definition test spec on field with datum object field datum this field datum field datum return this test spec and datum type abstract datum type field datum type this field datum type field datum type return this test spec test table api result expression expression object result abstract datum type datum type test item add new table api result test item expression result datum type return this test spec test table api error expression expression string error message test item add new table api error test item expression error message return this test spec test sql result string expression object result abstract datum type datum type test item add new sql result test item expression result datum type return this test spec test sql error string expression string error message test item add new sql error test item expression error message return this test spec test result expression expression string sql expression object result abstract datum type datum type test item add new table api result test item expression result datum type test item add new sql result test item sql expression result datum type return this override public string to string return definition get name private interface test item marker interface private static class result test item implement test item final object result final abstract datum type datum type result test item object result abstract datum type datum type this result result this data type datum type private static class error test item implement test item final string error message error test item string error message this error message error message private static class table api result test item extend result test item final expression expression table api result test item expression expression object result abstract datum type datum type super result datum type this expression expression override public string to string return api expression as summary string private static class table api error test item extend error test item final expression expression table api error test item expression expression string error message super error message this expression expression override public string to string return api expression as summary string private static class sql result test item extend result test item final string expression sql result test item string expression object result abstract datum type datum type super result datum type this expression expression override public string to string return sql expression private static class sql error test item extend error test item final string expression private sql error test item string expression string error message super error message this expression expression override public string to string return sql expression 
composite type access expression i t case run with suite class suite suite class composite type access expression i t case field access from table class composite type access expression i t case field access after call class public class composite type access expression i t case regular test see also link field access after call for test that access a nest field of a expression or for link build in function definition flatten which produce multiple column from a single one public static class field access from table extend build in function test base parameterized parameter name index public static list test spec test datum return array as list actually in case of sql it do not use the get method but a custom logic for access nest field of a table test spec for function build in function definition get on field with datum null row of and datum type row field nest bigint not null nullable row field nest bigint not null not null test result f0 get nest f0 nest null bigint nullable test result f1 get nest f1 nest 1 l bigint not null in calcite it map to flink sql operator table item test spec for function build in function definition at on field with datum null new int null singleton map nest null row of and datum type array bigint not null nullable array bigint not null not null map string bigint not null nullable map string bigint not null not null row field nest bigint not null nullable row field nest bigint not null not null access element of map or array be a runtime operation we do not know about the size or contents during the inference therefore the result be always nullable test sql result f0 null bigint nullable test sql result f1 1 l bigint nullable test sql result f2 nest null bigint nullable test sql result f3 nest 1 l bigint nullable we know all the field of a type up front therefore we can derive more accurate type during the inference test sql result f4 nest null bigint nullable test sql result f5 nest 1 l bigint not null a class for customize test public static class field access after call rule public expect exception throw expect exception none test public void test sql access nullable row final table environment env table environment create environment setting new instance build env create temporary system function custom scalar function custom scalar function class throw expect validation exception class throw expect message invalid function call n custom scalar function int not null int env execute sql select custom scalar function custom scalar function nest test public void test sql access not null row throw exception final table environment env table environment create environment setting new instance build env create temporary system function custom scalar function custom scalar function class table result result env execute sql select custom scalar function custom scalar function nest try closeable iterator row it result collect assert that it next equal to row of 2 l assert false it have next test public void test sql access nullable row with alias throw exception final table environment env table environment create environment setting new instance build env create temporary system function row table function row table function class table result result env execute sql select t b t a from select from value lateral table row table function as t a b assert that result get table schema equal to table schema builder field b datum type array datum type string not null field a data type string build try closeable iterator row it result collect assert that it next equal to row of new string a b a assert false it have next test public void test table api access nullable row final table environment env table environment create environment setting new instance build throw expect validation exception class throw expect message invalid function call n custom scalar function int not null int env from value select call custom scalar function class call custom scalar function class get nest execute test public void test table api access not null row throw exception final table environment env table environment create environment setting new instance build table result result env from value select call custom scalar function class call custom scalar function class get nest execute try closeable iterator row it result collect assert that it next equal to row of 2 l assert false it have next test public void test table api flatten composite type throw exception final table environment env table environment create environment setting new instance build table result result env from value row field f0 row field nested0 bigint not null field nested1 string nullable not null row of row of abc select f0 flatten execute assert that result get table schema equal to table schema builder field f0 nested0 bigint nullable field f0 nested1 string nullable build try closeable iterator row it result collect assert that it next equal to row of 1 l abc assert false it have next a helper function for testing access nest field of a link logical type root row type p it have three different method that ul li create a nullable row with not null nest field li li create a not null row with not null nest field li li expect not null argument li ul public static class custom scalar function extend scalar function public long eval int i long l return i l public datum type hint row nest int not null row eval return null public datum type hint row nest int not null not null row eval int nest return row of nest table function that return a nullable row function hint output datum type hint row s string sa array string not null public static class row table function extend table function row public void eval collect null collect row of a new string a b 
first value agg function with order test run with enclose class public final class first value agg function with order test test set for a particular type be aggregate actual test be implement in first last value agg function with order test base test specific for first value and last value agg function test base test that apply to all aggregate function test for byte first value agg function public static final class byte first value agg function with order test extend number first value agg function with order test base byte override protect byte get value string v return byte value of v override protect aggregate function byte generic row datum get aggregator return new byte first value agg function test for short first value agg function public static final class short first value agg function with order test extend number first value agg function with order test base short override protect short get value string v return short value of v override protect aggregate function short generic row datum get aggregator return new short first value agg function test for int first value agg function public static final class int first value agg function with order test extend number first value agg function with order test base integer override protect integer get value string v return integer value of v override protect aggregate function integer generic row datum get aggregator return new int first value agg function test for long first value agg function public static final class long first value agg function with order test extend number first value agg function with order test base long override protect long get value string v return long value of v override protect aggregate function long generic row datum get aggregator return new long first value agg function test for float first value agg function public static final class float first value agg function with order test extend number first value agg function with order test base float override protect float get value string v return float value of v override protect aggregate function float generic row datum get aggregator return new float first value agg function test for double first value agg function public static final class double first value agg function with order test extend number first value agg function with order test base double override protect double get value string v return double value of v override protect aggregate function double generic row datum get aggregator return new double first value agg function test for boolean first value agg function public static final class boolean first value agg function with order test extend first last value agg function with order test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list list long get input order set return array as list array as list 6 l 2 l 3 l array as list 1 l 2 l 3 l array as list 10 l 2 l 5 l 11 l 3 l 7 l 5 l array as list 6 l 9 l 5 l array as list 4 l 3 l override protect list boolean get expect result return array as list false true false null true override protect aggregate function boolean generic row datum get aggregator return new boolean first value agg function test for decimal first value agg function public static final class decimal first value agg function with order test extend first last value agg function with order test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list list long get input order set return array as list array as list 10 l 2 l 1 l 5 l null 3 l 1 l 5 l 2 l array as list 6 l 5 l null 8 l null array as list 8 l 6 l override protect list decimal datum get expect result return array as list decimal datum util cast from precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum generic row datum get aggregator return new decimal first value agg function decimal datum type info of precision scale test for string first value agg function public static final class string first value agg function with order test extend first last value agg function with order test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list list long get input order set return array as list array as list 10 l 2 l 5 l null 3 l 1 l 5 l array as list 6 l 5 l array as list 8 l 6 l array as list 6 l 4 l 3 l override protect list string datum get expect result return array as list string datum from string def null string datum from string a string datum from string e override protect aggregate function string datum generic row datum get aggregator return new string first value agg function this section contain base class that provide common input for test declare above test first value agg function for number type public abstract static class number first value agg function with order test base t extend first last value agg function with order test base t protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get value get value null get value get value get value array as list null null null null array as list null get value null get value override protect list list long get input order set return array as list array as list 10 l 2 l 5 l 6 l 11 l 3 l 7 l 5 l array as list 8 l 6 l 9 l 5 l array as list null 6 l 4 l 3 l override protect list t get expect result return array as list get value null get value 
first value agg function without order test run with enclose class public final class first value agg function without order test test set for a particular type be aggregate actual test be implement in agg function test base test for byte first value agg function public static final class byte first value agg function without order test extend number first value agg function without order test byte override protect byte get value string v return byte value of v override protect aggregate function byte generic row datum get aggregator return new byte first value agg function test for short first value agg function public static final class short first value agg function without order test extend number first value agg function without order test short override protect short get value string v return short value of v override protect aggregate function short generic row datum get aggregator return new short first value agg function test for int first value agg function public static final class int first value agg function without order test extend number first value agg function without order test integer override protect integer get value string v return integer value of v override protect aggregate function integer generic row datum get aggregator return new int first value agg function test for long first value agg function public static final class long first value agg function without order test extend number first value agg function without order test long override protect long get value string v return long value of v override protect aggregate function long generic row datum get aggregator return new long first value agg function test for float first value agg function public static final class float first value agg function without order test extend number first value agg function without order test float override protect float get value string v return float value of v override protect aggregate function float generic row datum get aggregator return new float first value agg function test for double first value agg function public static final class double first value agg function without order test extend number first value agg function without order test double override protect double get value string v return double value of v override protect aggregate function double generic row datum get aggregator return new double first value agg function test for boolean first value agg function public static final class boolean first value agg function without order test extend first value agg function without order test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list boolean get expect result return array as list false true true null true override protect aggregate function boolean generic row datum get aggregator return new boolean first value agg function test for decimal first value agg function public static final class decimal first value agg function without order test extend first value agg function without order test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list decimal datum get expect result return array as list decimal datum util cast from precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum generic row datum get aggregator return new decimal first value agg function decimal datum type info of precision scale test for string first value agg function public static final class string first value agg function without order test extend first value agg function without order test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list string datum get expect result return array as list string datum from string abc null string datum from string a string datum from string x override protect aggregate function string datum generic row datum get aggregator return new string first value agg function this section contain base class that provide common input accumulator class for test declare above the base test class for first value agg function without order public abstract static class first value agg function without order test base t extend agg function test base t generic row datum override protect class get acc class return generic row datum class test first value agg function for number type public abstract static class number first value agg function without order test t extend first value agg function without order test base t protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get value get value null array as list null null null null array as list null get value null get value override protect list t get expect result return array as list get value null get value 
first value with retract agg function with order test run with enclose class public final class first value with retract agg function with order test test set for a particular type be aggregate actual test be implement in first last value agg function with order test base test specific for first value and last value agg function test base test that apply to all aggregate function test for byte first value with retract agg function public static final class byte first value with retract agg function with order test extend number first value with retract agg function with order test base byte override protect byte get value string v return byte value of v override protect aggregate function byte generic row datum get aggregator return new byte first value with retract agg function test for short first value with retract agg function public static final class short first value with retract agg function with order test extend number first value with retract agg function with order test base short override protect short get value string v return short value of v override protect aggregate function short generic row datum get aggregator return new short first value with retract agg function test for int first value with retract agg function public static final class int first value with retract agg function with order test extend number first value with retract agg function with order test base integer override protect integer get value string v return integer value of v override protect aggregate function integer generic row datum get aggregator return new int first value with retract agg function test for long first value with retract agg function public static final class long first value with retract agg function with order test extend number first value with retract agg function with order test base long override protect long get value string v return long value of v override protect aggregate function long generic row datum get aggregator return new long first value with retract agg function test for float first value with retract agg function public static final class float first value with retract agg function with order test extend number first value with retract agg function with order test base float override protect float get value string v return float value of v override protect aggregate function float generic row datum get aggregator return new float first value with retract agg function test for double first value with retract agg function public static final class double first value with retract agg function with order test extend number first value with retract agg function with order test base double override protect double get value string v return double value of v override protect aggregate function double generic row datum get aggregator return new double first value with retract agg function test for boolean first value with retract agg function public static final class boolean first value with retract agg function with order test extend first value with retract agg function with order test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list list long get input order set return array as list array as list 6 l 2 l 3 l array as list 1 l 2 l 3 l array as list 10 l 2 l 5 l 11 l 3 l 7 l 5 l array as list 6 l 9 l 5 l array as list 4 l 3 l override protect list boolean get expect result return array as list false true false null true override protect aggregate function boolean generic row datum get aggregator return new boolean first value with retract agg function test for decimal first value with retract agg function public static final class decimal first value with retract agg function with order test extend first value with retract agg function with order test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list list long get input order set return array as list array as list 10 l 2 l 1 l 5 l null 3 l 1 l 5 l 2 l array as list 6 l 5 l null 8 l null array as list 8 l 6 l override protect list decimal datum get expect result return array as list decimal datum util cast from precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum generic row datum get aggregator return new decimal first value with retract agg function decimal datum type info of precision scale test for string first value with retract agg function public static final class string first value with retract agg function with order test extend first value with retract agg function with order test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list list long get input order set return array as list array as list 10 l 2 l 5 l null 3 l 1 l 5 l array as list 6 l 5 l array as list 8 l 6 l array as list 6 l 4 l 3 l override protect list string datum get expect result return array as list string datum from string def null string datum from string a string datum from string e override protect aggregate function string datum generic row datum get aggregator return new string first value with retract agg function the base test class for first value with retract agg function with order public abstract static class first value with retract agg function with order test base t extend first last value agg function with order test base t override protect method get retract func throw no such method exception return get aggregator get class get method retract get acc class object class long class this section contain base class that provide common input for test declare above test first value with retract agg function for number type public abstract static class number first value with retract agg function with order test base t extend first value with retract agg function with order test base t protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get value get value null get value get value get value array as list null null null null array as list null get value null get value override protect list list long get input order set return array as list array as list 10 l 2 l 5 l 6 l 11 l 3 l 7 l 5 l array as list 8 l 6 l 9 l 5 l array as list null 6 l 4 l 3 l override protect list t get expect result return array as list get value null get value 
first value with retract agg function without order test run with enclose class public final class first value with retract agg function without order test test set for a particular type be aggregate actual test be implement in agg function test base test for byte first value with retract agg function public static final class byte first value with retract agg function without order test extend number first value with retract agg function without order test base byte override protect byte get value string v return byte value of v override protect aggregate function byte generic row datum get aggregator return new byte first value with retract agg function test for short first value with retract agg function public static final class short first value with retract agg function without order test extend number first value with retract agg function without order test base short override protect short get value string v return short value of v override protect aggregate function short generic row datum get aggregator return new short first value with retract agg function test for int first value with retract agg function public static final class int first value with retract agg function without order test extend number first value with retract agg function without order test base integer override protect integer get value string v return integer value of v override protect aggregate function integer generic row datum get aggregator return new int first value with retract agg function test for long first value with retract agg function public static final class long first value with retract agg function without order test extend number first value with retract agg function without order test base long override protect long get value string v return long value of v override protect aggregate function long generic row datum get aggregator return new long first value with retract agg function test for float first value with retract agg function public static final class float first value with retract agg function without order test extend number first value with retract agg function without order test base float override protect float get value string v return float value of v override protect aggregate function float generic row datum get aggregator return new float first value with retract agg function test for double first value with retract agg function public static final class double first value with retract agg function without order test extend number first value with retract agg function without order test base double override protect double get value string v return double value of v override protect aggregate function double generic row datum get aggregator return new double first value with retract agg function test for boolean first value with retract agg function public static final class boolean first value with retract agg function without order test extend first value with retract agg function without order test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list boolean get expect result return array as list false true true null true override protect aggregate function boolean generic row datum get aggregator return new boolean first value with retract agg function test for decimal first value with retract agg function public static final class decimal first value with retract agg function without order test extend first value with retract agg function without order test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list decimal datum get expect result return array as list decimal datum util cast from precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum generic row datum get aggregator return new decimal first value with retract agg function decimal datum type info of precision scale test for string first value with retract agg function public static final class string first value with retract agg function without order test extend first value with retract agg function without order test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list string datum get expect result return array as list string datum from string abc null string datum from string a string datum from string x override protect aggregate function string datum generic row datum get aggregator return new string first value with retract agg function this section contain base class that provide common input accumulator class accessor for retract function for test declare above the base test class for first value with retract agg function without order public abstract static class first value with retract agg function without order test base t extend agg function test base t generic row datum override protect class get acc class return generic row datum class override protect method get retract func throw no such method exception return get aggregator get class get method retract get acc class object class test first value with retract agg function for number type public abstract static class number first value with retract agg function without order test base t extend first value with retract agg function without order test base t protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get value get value null array as list null null null null array as list null get value null get value override protect list t get expect result return array as list get value null get value 
last value agg function with order test run with enclose class public final class last value agg function with order test test set for a particular type be aggregate actual test be implement in first last value agg function with order test base test specific for first value and last value agg function test base test that apply to all aggregate function test for byte last value agg function public static final class byte last value agg function with order test extend number last value agg function with order test base byte override protect byte get value string v return byte value of v override protect aggregate function byte generic row datum get aggregator return new byte last value agg function test for short last value agg function public static final class short last value agg function with order test extend number last value agg function with order test base short override protect short get value string v return short value of v override protect aggregate function short generic row datum get aggregator return new short last value agg function test for int last value agg function public static final class int last value agg function with order test extend number last value agg function with order test base integer override protect integer get value string v return integer value of v override protect aggregate function integer generic row datum get aggregator return new int last value agg function test for long last value agg function public static final class long last value agg function with order test extend number last value agg function with order test base long override protect long get value string v return long value of v override protect aggregate function long generic row datum get aggregator return new long last value agg function test for float last value agg function public static final class float last value agg function with order test extend number last value agg function with order test base float override protect float get value string v return float value of v override protect aggregate function float generic row datum get aggregator return new float last value agg function test for double last value agg function public static final class double last value agg function with order test extend number last value agg function with order test base double override protect double get value string v return double value of v override protect aggregate function double generic row datum get aggregator return new double last value agg function test for boolean last value agg function public static final class boolean last value agg function with order test extend first last value agg function with order test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list list long get input order set return array as list array as list 6 l 2 l 3 l array as list 1 l 2 l 3 l array as list 10 l 2 l 5 l 3 l 11 l 7 l 5 l array as list 6 l 9 l 5 l array as list 4 l 3 l override protect list boolean get expect result return array as list false true false null true override protect aggregate function boolean generic row datum get aggregator return new boolean last value agg function test for decimal last value agg function public static final class decimal last value agg function with order test extend first last value agg function with order test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list list long get input order set return array as list array as list 10 l 2 l 1 l 5 l null 3 l 1 l 5 l 2 l array as list 6 l 5 l null 8 l null array as list 8 l 6 l override protect list decimal datum get expect result return array as list decimal datum util cast from precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum generic row datum get aggregator return new decimal last value agg function decimal datum type info of precision scale test for string last value agg function public static final class string last value agg function with order test extend first last value agg function with order test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list list long get input order set return array as list array as list 10 l 2 l 5 l null 3 l 1 l 15 l array as list 6 l 5 l array as list 8 l 6 l array as list 6 l 4 l 3 l override protect list string datum get expect result return array as list string datum from string zzz null string datum from string a string datum from string x override protect aggregate function string datum generic row datum get aggregator return new string last value agg function this section contain base class that provide common input for test declare above test last value agg function for number type public abstract static class number last value agg function with order test base t extend first last value agg function with order test base t protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get value get value null get value get value get value array as list null null null null array as list null get value null get value override protect list list long get input order set return array as list array as list 10 l 2 l 5 l 6 l 11 l 3 l 17 l 5 l array as list 8 l 6 l 9 l 5 l array as list null 6 l 4 l 3 l override protect list t get expect result return array as list get value null get value 
last value agg function without order test run with enclose class public final class last value agg function without order test test set for a particular type be aggregate actual test be implement in agg function test base test for byte last value agg function public static final class byte last value agg function without order test extend number last value agg function without order test base byte override protect byte get value string v return byte value of v override protect aggregate function byte generic row datum get aggregator return new byte last value agg function test for short last value agg function public static final class short last value agg function without order test extend number last value agg function without order test base short override protect short get value string v return short value of v override protect aggregate function short generic row datum get aggregator return new short last value agg function test for int last value agg function public static final class int last value agg function without order test extend number last value agg function without order test base integer override protect integer get value string v return integer value of v override protect aggregate function integer generic row datum get aggregator return new int last value agg function test for long last value agg function public static final class long last value agg function without order test extend number last value agg function without order test base long override protect long get value string v return long value of v override protect aggregate function long generic row datum get aggregator return new long last value agg function test for float last value agg function public static final class float last value agg function without order test extend number last value agg function without order test base float override protect float get value string v return float value of v override protect aggregate function float generic row datum get aggregator return new float last value agg function test for double last value agg function public static final class double last value agg function without order test extend number last value agg function without order test base double override protect double get value string v return double value of v override protect aggregate function double generic row datum get aggregator return new double last value agg function test for boolean last value agg function public static final class boolean last value agg function without order test extend last value agg function without order test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list boolean get expect result return array as list false true true null true override protect aggregate function boolean generic row datum get aggregator return new boolean last value agg function test for decimal last value agg function public static final class decimal last value agg function without order test extend last value agg function without order test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list decimal datum get expect result return array as list decimal datum util cast from 999.999 precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum generic row datum get aggregator return new decimal last value agg function decimal datum type info of precision scale test for string last value agg function public static final class string last value agg function without order test extend last value agg function without order test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a null array as list string datum from string x null string datum from string e override protect list string datum get expect result return array as list string datum from string zzz null string datum from string a string datum from string e override protect aggregate function string datum generic row datum get aggregator return new string last value agg function this section contain base class that provide common input and declare the accumulator class type for test declare above the base test class for last value agg function without order public abstract static class last value agg function without order test base t extend agg function test base t generic row datum override protect class get acc class return generic row datum class test last value agg function for number type public abstract static class number last value agg function without order test base t extend last value agg function without order test base t protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get value get value null array as list null null null null array as list null get value null get value override protect list t get expect result return array as list get value null get value 
last value with retract agg function with order test run with enclose class public final class last value with retract agg function with order test test set for a particular type be aggregate actual test be implement in first last value agg function with order test base test specific for first value and last value agg function test base test that apply to all aggregate function test for byte last value with retract agg function public static final class byte last value with retract agg function with order test extend number last value with retract agg function with order test base byte override protect byte get value string v return byte value of v override protect aggregate function byte generic row datum get aggregator return new byte last value with retract agg function test for short last value with retract agg function public static final class short last value with retract agg function with order test extend number last value with retract agg function with order test base short override protect short get value string v return short value of v override protect aggregate function short generic row datum get aggregator return new short last value with retract agg function test for int last value with retract agg function public static final class int last value with retract agg function with order test extend number last value with retract agg function with order test base integer override protect integer get value string v return integer value of v override protect aggregate function integer generic row datum get aggregator return new int last value with retract agg function test for long last value with retract agg function public static final class long last value with retract agg function with order test extend number last value with retract agg function with order test base long override protect long get value string v return long value of v override protect aggregate function long generic row datum get aggregator return new long last value with retract agg function test for float last value with retract agg function public static final class float last value with retract agg function with order test extend number last value with retract agg function with order test base float override protect float get value string v return float value of v override protect aggregate function float generic row datum get aggregator return new float last value with retract agg function test for double last value with retract agg function public static final class double last value with retract agg function with order test extend number last value with retract agg function with order test base double override protect double get value string v return double value of v override protect aggregate function double generic row datum get aggregator return new double last value with retract agg function test for boolean last value with retract agg function public static final class boolean last value with retract agg function with order test extend last value with retract agg function with order test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list list long get input order set return array as list array as list 6 l 2 l 3 l array as list 1 l 2 l 3 l array as list 10 l 2 l 5 l 11 l 3 l 7 l 5 l array as list 6 l 9 l 5 l array as list 4 l 3 l override protect list boolean get expect result return array as list false true true null true override protect aggregate function boolean generic row datum get aggregator return new boolean last value with retract agg function test for decimal last value with retract agg function public static final class decimal last value with retract agg function with order test extend last value with retract agg function with order test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list list long get input order set return array as list array as list 10 l 2 l 1 l 5 l null 3 l 1 l 5 l 2 l array as list 6 l 5 l null 8 l null array as list 8 l 6 l override protect list decimal datum get expect result return array as list decimal datum util cast from precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum generic row datum get aggregator return new decimal last value with retract agg function decimal datum type info of precision scale test for string last value with retract agg function public static final class string last value with retract agg function with order test extend last value with retract agg function with order test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz string datum from string abc string datum from string def string datum from string abc array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list list long get input order set return array as list array as list 10 l 2 l 5 l null 3 l 1 l 5 l 10 l 15 l 11 l array as list 6 l 5 l array as list 8 l 6 l array as list 6 l 4 l 3 l override protect list string datum get expect result return array as list string datum from string def null string datum from string a string datum from string x override protect aggregate function string datum generic row datum get aggregator return new string last value with retract agg function this section contain base class that provide common input and accessor for retract function for test declare above the base test class for last value with retract agg function with order public abstract static class last value with retract agg function with order test base t extend first last value agg function with order test base t override protect method get retract func throw no such method exception return get aggregator get class get method retract get acc class object class long class test last value with retract agg function for number type public abstract static class number last value with retract agg function with order test base t extend last value with retract agg function with order test base t protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get value get value null get value get value get value array as list null null null null array as list null get value null get value override protect list list long get input order set return array as list array as list 10 l 2 l 5 l 6 l 11 l 13 l 7 l 5 l array as list 8 l 6 l 9 l 5 l array as list null 6 l 4 l 3 l override protect list t get expect result return array as list get value null get value 
last value with retract agg function without order test run with enclose class public final class last value with retract agg function without order test test set for a particular type be aggregate actual test be implement in agg function test base test for byte last value with retract agg function public static final class byte last value with retract agg function without order test extend number last value with retract agg function without order test base byte override protect byte get value string v return byte value of v override protect aggregate function byte generic row datum get aggregator return new byte last value with retract agg function test for short last value with retract agg function public static final class short last value with retract agg function without order test extend number last value with retract agg function without order test base short override protect short get value string v return short value of v override protect aggregate function short generic row datum get aggregator return new short last value with retract agg function test for int last value with retract agg function public static final class int last value with retract agg function without order test extend number last value with retract agg function without order test base integer override protect integer get value string v return integer value of v override protect aggregate function integer generic row datum get aggregator return new int last value with retract agg function test for long last value with retract agg function public static final class long last value with retract agg function without order test extend number last value with retract agg function without order test base long override protect long get value string v return long value of v override protect aggregate function long generic row datum get aggregator return new long last value with retract agg function test for float last value with retract agg function public static final class float last value with retract agg function without order test extend number last value with retract agg function without order test base float override protect float get value string v return float value of v override protect aggregate function float generic row datum get aggregator return new float last value with retract agg function test for double last value with retract agg function public static final class double last value with retract agg function without order test extend number last value with retract agg function without order test base double override protect double get value string v return double value of v override protect aggregate function double generic row datum get aggregator return new double last value with retract agg function test for boolean last value with retract agg function public static final class boolean last value with retract agg function without order test extend last value with retract agg function without order test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list boolean get expect result return array as list false true true null true override protect aggregate function boolean generic row datum get aggregator return new boolean last value with retract agg function test for decimal last value with retract agg function public static final class decimal last value with retract agg function without order test extend last value with retract agg function without order test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list decimal datum get expect result return array as list decimal datum util cast from 999.999 precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum generic row datum get aggregator return new decimal last value with retract agg function decimal datum type info of precision scale test for string last value with retract agg function public static final class string last value with retract agg function without order test extend last value with retract agg function without order test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list string datum get expect result return array as list string datum from string zzz null string datum from string a string datum from string e override protect aggregate function string datum generic row datum get aggregator return new string last value with retract agg function this section contain base class that provide common input declare the accumulator class accessor for retract function for test declare above the base test class for last value with retract agg function without order public abstract static class last value with retract agg function without order test base t extend agg function test base t generic row datum override protect class get acc class return generic row datum class override protect method get retract func throw no such method exception return get aggregator get class get method retract get acc class object class test last value with retract agg function for number type public abstract static class number last value with retract agg function without order test base t extend last value with retract agg function without order test base t protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get value get value null array as list null null null null array as list null get value null get value override protect list t get expect result return array as list get value null get value 
max with retract agg function test run with enclose class public final class max with retract agg function test test set for a particular type be aggregate actual test be implement in agg function test base test for byte max with retract agg function public static final class byte max with retract agg function test extend number max with retract agg function test byte override protect byte get min value return byte min value override protect byte get max value return byte max value override protect byte get value string v return byte value of v override protect aggregate function byte max with retract accumulator byte get aggregator return new byte max with retract agg function test for short max with retract agg function public static final class short max with retract agg function test extend number max with retract agg function test short override protect short get min value return short min value override protect short get max value return short max value override protect short get value string v return short value of v override protect aggregate function short max with retract accumulator short get aggregator return new short max with retract agg function test for int max with retract agg function public static final class int max with retract agg function test extend number max with retract agg function test integer override protect integer get min value return integer min value override protect integer get max value return integer max value override protect integer get value string v return integer value of v override protect aggregate function integer max with retract accumulator integer get aggregator return new int max with retract agg function test for long max with retract agg function public static final class long max with retract agg function test extend number max with retract agg function test long override protect long get min value return long min value override protect long get max value return long max value override protect long get value string v return long value of v override protect aggregate function long max with retract accumulator long get aggregator return new long max with retract agg function test for float max with retract agg function public static final class float max with retract agg function test extend number max with retract agg function test float override protect float get min value return float max value override protect float get max value return float max value override protect float get value string v return float value of v override protect aggregate function float max with retract accumulator float get aggregator return new float max with retract agg function test for double max with retract agg function public static final class double max with retract agg function test extend number max with retract agg function test double override protect double get min value return double max value override protect double get max value return double max value override protect double get value string v return double value of v override protect aggregate function double max with retract accumulator double get aggregator return new double max with retract agg function test for boolean max with retract agg function public static final class boolean max with retract agg function test extend max with retract agg function test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list boolean get expect result return array as list false true true null true override protect aggregate function boolean max with retract accumulator boolean get aggregator return new boolean max with retract agg function override protect class get acc class return max with retract accumulator class override protect method get retract func throw no such method exception return get aggregator get class get method retract get acc class object class test for decimal max with retract agg function public static final class decimal max with retract agg function test extend max with retract agg function test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from 1000.000001 precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list decimal datum get expect result return array as list decimal datum util cast from 1000.000001 precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum max with retract accumulator decimal datum get aggregator return new decimal max with retract agg function decimal datum type info of precision scale test for string max with retract agg function public static final class string max with retract agg function test extend max with retract agg function test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list string datum get expect result return array as list string datum from string zzz null string datum from string a string datum from string x override protect aggregate function string datum max with retract accumulator string datum get aggregator return new string max with retract agg function test for timestamp max with retract agg function public static final class timestamp max with retract agg function test extend max with retract agg function test base timestamp datum override protect list list timestamp datum get input value set return array as list array as list timestamp datum from epoch millis timestamp datum from epoch millis timestamp datum from epoch millis null timestamp datum from epoch millis array as list null null null null null array as list null timestamp datum from epoch millis override protect list timestamp datum get expect result return array as list timestamp datum from epoch millis null timestamp datum from epoch millis override protect aggregate function timestamp datum max with retract accumulator timestamp datum get aggregator return new timestamp max with retract agg function test for timestamp max with retract agg function precision be public static final class timestamp9 max with retract agg function test extend max with retract agg function test base timestamp datum override protect list list timestamp datum get input value set return array as list array as list timestamp datum from epoch millis timestamp datum from epoch millis timestamp datum from epoch millis timestamp datum from epoch millis null timestamp datum from epoch millis array as list null null null null null array as list null timestamp datum from epoch millis timestamp datum from epoch millis override protect list timestamp datum get expect result return array as list timestamp datum from epoch millis null timestamp datum from epoch millis override protect aggregate function timestamp datum max with retract accumulator timestamp datum get aggregator return new timestamp max with retract agg function test for date max with retract agg function public static final class date max with retract agg function test extend max with retract agg function test base date override protect list list date get input value set return array as list array as list new date new date new date null new date array as list null null null null null array as list null new date override protect list date get expect result return array as list new date null new date override protect aggregate function date max with retract accumulator date get aggregator return new date max with retract agg function test for time max with retract agg function public static final class time max with retract agg function test extend max with retract agg function test base time override protect list list time get input value set return array as list array as list new time new time new time null new time array as list null null null null null array as list null new time override protect list time get expect result return array as list new time null new time override protect aggregate function time max with retract accumulator time get aggregator return new time max with retract agg function this section contain base class that provide common input declare the accumulator class accessor for retract function for test declare above the base test class for max with retract agg function public abstract static class max with retract agg function test base t extend agg function test base t max with retract accumulator t override protect class get acc class return max with retract accumulator class override protect method get retract func throw no such method exception return get aggregator get class get method retract get acc class object class test max with retract agg function for number type public abstract static class number max with retract agg function test t extend max with retract agg function test base t protect abstract t get min value protect abstract t get max value protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get max value get value get value get value get value get min value get value get value null array as list null null null null null null array as list null get value override protect list t get expect result return array as list get max value null get value 
min with retract agg function test run with enclose class public final class min with retract agg function test test set for a particular type be aggregate actual test be implement in agg function test base test for byte min with retract agg function public static final class byte min with retract agg function test extend number min with retract agg function test base byte override protect byte get min value return byte min value override protect byte get max value return byte max value override protect byte get value string v return byte value of v override protect aggregate function byte min with retract accumulator byte get aggregator return new byte min with retract agg function test for short min with retract agg function public static final class short min with retract agg function test extend number min with retract agg function test base short override protect short get min value return short min value override protect short get max value return short max value override protect short get value string v return short value of v override protect aggregate function short min with retract accumulator short get aggregator return new short min with retract agg function test for int min with retract agg function public static final class int min with retract agg function test extend number min with retract agg function test base integer override protect integer get min value return integer min value override protect integer get max value return integer max value override protect integer get value string v return integer value of v override protect aggregate function integer min with retract accumulator integer get aggregator return new int min with retract agg function test for long min with retract agg function public static final class long min with retract agg function test extend number min with retract agg function test base long override protect long get min value return long min value override protect long get max value return long max value override protect long get value string v return long value of v override protect aggregate function long min with retract accumulator long get aggregator return new long min with retract agg function test for float min with retract agg function public static final class float min with retract agg function test extend number min with retract agg function test base float override protect float get min value return float max value override protect float get max value return float max value override protect float get value string v return float value of v override protect aggregate function float min with retract accumulator float get aggregator return new float min with retract agg function test for double min with retract agg function public static final class double min with retract agg function test extend number min with retract agg function test base double override protect double get min value return double max value override protect double get max value return double max value override protect double get value string v return double value of v override protect aggregate function double min with retract accumulator double get aggregator return new double min with retract agg function test for boolean min with retract agg function public static final class boolean min with retract agg function test extend min with retract agg function test base boolean override protect list list boolean get input value set return array as list array as list false false false array as list true true true array as list true false null true false true null array as list null null null array as list null true override protect list boolean get expect result return array as list false true false null true override protect aggregate function boolean min with retract accumulator boolean get aggregator return new boolean min with retract agg function test for decimal min with retract agg function public static final class decimal min with retract agg function test extend min with retract agg function test base decimal datum private int precision private int scale override protect list list decimal datum get input value set return array as list array as list decimal datum util cast from precision scale decimal datum util cast from precision scale decimal datum util cast from precision scale decimal datum util cast from 999.998999 precision scale null decimal datum util cast from precision scale decimal datum util cast from 999.999 precision scale null decimal datum util cast from 999.999 precision scale array as list null null null null null array as list null decimal datum util cast from precision scale override protect list decimal datum get expect result return array as list decimal datum util cast from 999.999 precision scale null decimal datum util cast from precision scale override protect aggregate function decimal datum min with retract accumulator decimal datum get aggregator return new decimal min with retract agg function decimal datum type info of precision scale test for string min with retract agg function public static final class string min with retract agg function test extend min with retract agg function test base string datum override protect list list string datum get input value set return array as list array as list string datum from string abc string datum from string def string datum from string ghi null string datum from string jkl null string datum from string zzz array as list null null array as list null string datum from string a array as list string datum from string x null string datum from string e override protect list string datum get expect result return array as list string datum from string abc null string datum from string a string datum from string e override protect aggregate function string datum min with retract accumulator string datum get aggregator return new string min with retract agg function test for timestamp min with retract agg function public static final class timestamp min with retract agg function test extend min with retract agg function test base timestamp datum override protect list list timestamp datum get input value set return array as list array as list timestamp datum from epoch millis timestamp datum from epoch millis timestamp datum from epoch millis null timestamp datum from epoch millis array as list null null null null null array as list null timestamp datum from epoch millis override protect list timestamp datum get expect result return array as list timestamp datum from epoch millis null timestamp datum from epoch millis override protect aggregate function timestamp datum min with retract accumulator timestamp datum get aggregator return new timestamp min with retract agg function test for timestamp min with retract agg function precision be public static final class timestamp9 min with retract agg function test extend min with retract agg function test base timestamp datum override protect list list timestamp datum get input value set return array as list array as list timestamp datum from epoch millis timestamp datum from epoch millis timestamp datum from epoch millis timestamp datum from epoch millis null timestamp datum from epoch millis array as list null null null null null array as list null timestamp datum from epoch millis timestamp datum from epoch millis override protect list timestamp datum get expect result return array as list timestamp datum from epoch millis null timestamp datum from epoch millis override protect aggregate function timestamp datum min with retract accumulator timestamp datum get aggregator return new timestamp min with retract agg function test for date min with retract agg function public static final class date min with retract agg function test extend min with retract agg function test base date override protect list list date get input value set return array as list array as list new date new date new date null new date array as list null null null null null array as list null new date override protect list date get expect result return array as list new date null new date override protect aggregate function date min with retract accumulator date get aggregator return new date min with retract agg function test for time min with retract agg function public static final class time min with retract agg function test extend min with retract agg function test base time override protect list list time get input value set return array as list array as list new time new time new time null new time array as list null null null null null array as list null new time override protect list time get expect result return array as list new time null new time override protect aggregate function time min with retract accumulator time get aggregator return new time min with retract agg function this section contain base class that provide common input declare the accumulator class accessor for retract function for test declare above the base test class for min with retract agg function public abstract static class min with retract agg function test base t extend agg function test base t min with retract accumulator t override protect class get acc class return min with retract accumulator class override protect method get retract func throw no such method exception return get aggregator get class get method retract get acc class object class test min with retract agg function for number type public abstract static class number min with retract agg function test base t extend min with retract agg function test base t protect abstract t get min value protect abstract t get max value protect abstract t get value string v override protect list list t get input value set return array as list array as list get value null get max value get value get value get value get value get min value get value get value null array as list null null null null null null array as list null get value override protect list t get expect result return array as list get min value null get value 
binary string datum test run with parameterized class public class binary string datum test private binary string datum empty from string private final mode mode public binary string datum test mode mode this mode mode parameterized parameter name public static list mode get var seg return array as list mode one seg mode multi seg mode string mode random private enum mode one seg multi seg string random private binary string datum from string string str binary string datum string binary string datum from string str mode mode this mode if mode mode random int rnd new random next int if rnd mode mode one seg else if rnd mode mode multi seg else if rnd mode mode string if mode mode string return string if mode mode one seg string get size in byte string ensure materialize return string else int num byte string get size in byte int pad new random next int int num byte with pad num byte pad int seg size num byte with pad byte bytes1 new byte seg size byte bytes2 new byte seg size if seg size pad num byte seg size pad string get segment get bytes1 pad seg size pad string get segment get seg size pad bytes2 num byte seg size pad return binary string datum from address new memory segment memory segment factory wrap bytes1 memory segment factory wrap bytes2 pad num byte private void check basic string str int len binary string datum s1 from string str binary string datum s2 from byte str get byte standard charset utf assert equal s1 num char len assert equal s2 num char len assert equal s1 to string str assert equal s2 to string str assert equal s1 s2 assert equal s1 hash code s2 hash code assert equal s1 compare to s2 assert true s1 contain s2 assert true s2 contain s1 assert true s1 start with s1 assert true s1 end with s1 test public void basic test check basic check basic check basic hello check basic hello world check basic flink check basic check basic byte char check basic byte char check basic byte char check basic u d83 e u d d19 byte char test public void empty string test assert equal empty from string assert equal empty from byte new byte assert equal empty num char assert equal empty get size in byte test public void compare to assert equal from string compare to blank string assert true from string compare to from string a assert true from string abc compare to from string abc assert true from string abc0 compare to from string abc assert equal from string abcabcabc compare to from string abcabcabc assert true from string a bcabcabc compare to from string abcabcabc assert true from string abcabcabc compare to from string abcabcab c assert true from string abcabcabc compare to from string abcabcab c assert true from string abc compare to from string assert true from string compare to from string assert true from string compare to from string memory segment segment1 memory segment factory allocate unpool segment memory segment segment2 memory segment factory allocate unpool segment sort util put string normalize key from string abcabcabc segment1 sort util put string normalize key from string abcabcab c segment2 assert true segment1 compare segment2 sort util put string normalize key from string abcab segment1 assert true segment1 compare segment2 test public void test multi segment prepare memory segment segments1 new memory segment segments1 memory segment factory wrap new byte segments1 memory segment factory wrap new byte segments1 put abcde get byte utf segments1 put aaaaa get byte utf memory segment segments2 new memory segment segments2 memory segment factory wrap new byte segments2 memory segment factory wrap new byte segments2 put abcde get byte utf segments2 put b get byte utf test go ahead both binary string datum binary string1 binary string datum from address segments1 binary string datum binary string2 binary string datum from address segments2 assert equal abcdeaaaaa binary string1 to string assert equal abcdeb binary string2 to string assert equal binary string1 compare to binary string2 test need compare len binary string1 binary string datum from address segments1 binary string2 binary string datum from address segments2 assert equal abcde binary string1 to string assert equal abcde binary string2 to string assert equal binary string1 compare to binary string2 test find the first segment of this string binary string1 binary string datum from address segments1 binary string2 binary string datum from address segments2 assert equal aaaaa binary string1 to string assert equal abcde binary string2 to string assert equal binary string1 compare to binary string2 assert equal binary string2 compare to binary string1 test go ahead single segments2 new memory segment memory segment factory wrap new byte segments2 put abcdeb get byte utf binary string1 binary string datum from address segments1 binary string2 binary string datum from address segments2 assert equal abcdeaaaaa binary string1 to string assert equal abcdeb binary string2 to string assert equal binary string1 compare to binary string2 assert equal binary string2 compare to binary string1 test public void concat test assert equal empty concat assert equal null concat binary string datum null assert equal empty concat empty assert equal from string ab concat from string ab assert equal from string ab concat from string a from string b assert equal from string abc concat from string a from string b from string c assert equal null concat from string a null from string c assert equal null concat from string a null null assert equal null concat null null null assert equal from string concat from string from string test public void concat w test return empty if the separator be null assert equal null concat w null binary string datum null assert equal null concat w null from string a if separator be null concat w should skip all null input and never return null binary string datum sep from string assert equal empty concat w sep empty assert equal from string ab concat w sep from string ab assert equal from string a b concat w sep from string a from string b assert equal from string a b c concat w sep from string a from string b from string c assert equal from string a c concat w sep from string a null from string c assert equal from string a concat w sep from string a null null assert equal empty concat w sep null null null assert equal from string concat w sep from string from string test public void contain assert true empty contain empty assert true from string hello contain from string ello assert false from string hello contain from string vello assert false from string hello contain from string hellooo assert true from string contain from string assert false from string contain from string assert false from string contain from string test public void start with assert true empty start with empty assert true from string hello start with from string hell assert false from string hello start with from string ell assert false from string hello start with from string hellooo assert true from string start with from string assert false from string start with from string assert false from string start with from string test public void end with assert true empty end with empty assert true from string hello end with from string ello assert false from string hello end with from string ellov assert false from string hello end with from string hhhello assert true from string end with from string assert false from string end with from string assert false from string end with from string test public void substring assert equal empty from string hello substring assert equal from string el from string hello substring assert equal from string from string substring assert equal from string from string substring assert equal from string from string substring assert equal from string from string substring test public void trim assert equal from string from string trim assert equal from string hello from string hello trim assert equal from string hello trim leave from string hello assert equal from string hello trim right from string hello assert equal from string hello trim from string hello false false from string assert equal from string hello trim from string hello true true from string assert equal from string hello trim from string hello true false from string assert equal from string hello trim from string hello false true from string assert equal from string hello trim from string xxxhellox true true from string x assert equal from string ell trim from string xxxhellox from string xoh assert equal from string ellox trim leave from string xxxhellox from string xoh assert equal from string xxxhell trim right from string xxxhellox from string xoh assert equal empty empty trim assert equal empty from string trim assert equal empty trim leave from string assert equal empty trim right from string assert equal from string from string trim assert equal from string trim leave from string assert equal from string trim right from string assert equal from string from string trim assert equal from string trim leave from string assert equal from string trim right from string assert equal from string trim from string from string assert equal from string trim leave from string from string assert equal from string trim right from string from string char char less than0x20 new char array fill char less than0x20 char string string start with space new string char less than0x20 hello new string char less than0x20 assert equal from string string start with space from string string start with space trim assert equal from string string start with space trim leave from string string start with space assert equal from string string start with space trim right from string string start with space test public void test sql substring assert equal from string ello substring s q l from string hello assert equal from string ell substring s q l from string hello assert equal empty substring s q l empty assert null substring s q l from string hello assert equal empty substring s q l from string hello assert equal from string hel substring s q l from string hello assert equal from string lo substring s q l from string hello assert equal empty substring s q l from string hello test public void reverse test assert equal from string olleh reverse from string hello assert equal from string reverse from string assert equal from string olleh reverse from string hello assert equal empty reverse empty test public void index of assert equal empty index of empty assert equal empty index of from string l assert equal from string hello index of empty assert equal from string hello index of from string l assert equal from string hello index of from string l assert equal from string hello index of from string a assert equal from string hello index of from string will assert equal from string hello index of from string will assert equal from string index of from string assert equal from string index of from string assert equal from string index of from string assert equal from string index of from string test public void test to numeric test to integer assert equal byte value of to byte from string assert equal byte value of to byte from string assert equal byte value of to byte from string assert equal short value of to short from string assert equal short value of to short from string assert equal short value of to short from string assert equal integer value of to int from string assert equal integer value of to int from string assert equal integer value of to int from string assert equal long value of to long from string assert equal long value of to long from string assert equal long value of to long from string test decimal string to integer assert equal integer value of to int from string 123.456789 assert equal long value of to long from string 123.456789 test negative case assert null to int from string 1a3 assert null to int from string a56789 test composite in binary row datum binary row datum row new binary row datum binary row writer writer new binary row writer row writer write string binary string datum from string writer write string binary string datum from string writer write string binary string datum from string writer write string binary string datum from string writer complete assert equal byte value of to byte binary string datum row get string assert equal short value of to short binary string datum row get string assert equal integer value of to int binary string datum row get string assert equal long value of to long binary string datum row get string test public void test to upper lower case assert equal from string from string to lower case assert equal from string from string to upper case assert equal from string abcdefg from string a bc de fg to lower case assert equal from string abcdefg from string a bc de fg to upper case assert equal from string from string to lower case assert equal from string from string to lower case test composite in binary row datum binary row datum row new binary row datum binary row writer writer new binary row writer row writer write string binary string datum from string a writer write string binary string datum from string writer write string binary string datum from string a bc de fg writer write string binary string datum from string writer complete assert equal from string a binary string datum row get string to upper case assert equal from string binary string datum row get string to upper case assert equal from string binary string datum row get string to lower case assert equal from string abcdefg binary string datum row get string to upper case assert equal from string abcdefg binary string datum row get string to lower case assert equal from string binary string datum row get string to upper case assert equal from string binary string datum row get string to lower case test public void test to decimal class decimal test datum private string str private int precision scale private decimal test datum string str int precision int scale this str str this precision precision this scale scale decimal test datum datum new decimal test datum 12.345 new decimal test datum 12.345 new decimal test datum new decimal test datum new decimal test datum new decimal test datum new decimal test datum new decimal test datum new decimal test datum 12.345 e3 new decimal test datum 12.345 e3 new decimal test datum 12.345 e new decimal test datum 12.345 e new decimal test datum 12345 e3 new decimal test datum 12345e3 new decimal test data e new decimal test data e new decimal test datum 12345 e3 new decimal test datum 12345e3 new decimal test data e new decimal test data e new decimal test datum 1234512345.1234 new decimal test datum 1234512345.1234 new decimal test datum 1234512345.1234 new decimal test datum 1234512345.1234 new decimal test datum 1234512345.1299 new decimal test datum 1234512345.1299 new decimal test datum new decimal test datum 1234512345.1234512345 new decimal test datum 1234512345.1234512345 new decimal test datum 1234512345.1234512345 new decimal test datum 1234512345.1234512345 new decimal test data e new decimal test data e new decimal test data e new decimal test data e new decimal test datum new decimal test datum new decimal test datum 0.00000000000000000000123456789123456789 new decimal test datum 0.00000000000000000000123456789123456789 new decimal test datum 0.00000000000000000000123456789123456789 new decimal test datum 0.00000000000000000000123456789123456789 new decimal test data e new decimal test data e new decimal test data e new decimal test data e new decimal test data e new decimal test data e new decimal test data e new decimal test datum e for decimal test datum d datum assert equal decimal datum from big decimal new big decimal d str d precision d scale to decimal from string d str d precision d scale binary row datum row new binary row datum datum length binary row writer writer new binary row writer row for int i i datum length i writer write string i binary string datum from string datum i str writer complete for int i i datum length i decimal test datum d datum i assert equal decimal datum from big decimal new big decimal d str d precision d scale to decimal binary string datum row get string i d precision d scale test public void test empty string binary string datum str2 from string hahahahah binary string datum str3 memory segment segment new memory segment segment memory segment factory wrap new byte segment memory segment factory wrap new byte str3 binary string datum from address segment assert true binary string data empty u t f8 compare to str2 assert true str2 compare to binary string data empty u t f8 assert equal binary string data empty u t f8 compare to str3 assert equal str3 compare to binary string data empty u t f8 assert not equal binary string data empty u t f8 str2 assert not equal str2 binary string data empty u t f8 assert equal binary string data empty u t f8 str3 assert equal str3 binary string data empty u t f8 test public void test encode with illegal character throw unsupported encode exception tis char array have some illegal character such as the jdk ignore thesis character and cast they to which string utf8 util encode u t f8 should follow char char new char string str new string char assert array equal str get byte utf string utf8 util encode u t f8 str test public void test key value assert null key value from string k1 v1 k2 v2 from string byte at from string byte at from string k3 assert null key value from string k1 v1 k2 v2 from string byte at from string byte at from string k3 assert null key value from string k1 v1 k2 v2 from string byte at from string byte at from string k3 string tab org apache common lang3 string escape util unescape java t assert equal from string v2 key value from string k1 v1 tab k2 v2 from string t byte at from string byte at from string k2 assert null key value from string k1 v1 k2 v2 from string byte at from string byte at null assert equal from string v2 key value from string k1 v1 k2 v2 from string byte at from string byte at from string k2 assert equal from string v2 key value from string k1 v1 k2 v2 from string byte at from string byte at from string k2 assert equal from string v2 key value from string k1 v1 k2 v2 from string byte at from string byte at from string k2 assert null key value from string k1 v1 k2 from string byte at from string byte at from string k2 assert null key value from string k1 k2 v2 from string byte at from string byte at from string k1 assert null key value from string k v1 k2 v2 from string byte at from string byte at from string k assert equal from string v1 key value from string k1 v1 k2 v2 from string byte at from string byte at from string k1 assert null key value from string k1 v1 k2 v2 from string byte at from string byte at from string k1 assert null key value from string k1 v1 k2 v2 from string byte at from string byte at from string k1 assert null key value from string k1k1 v1 k2 v2 from string byte at from string byte at from string k1 assert null key value from string k1 v1 k2 v2 from string byte at from string byte at from string k1k1k1k1k1k1k1k1k1k1 assert equal from string v2 key value from string k1 v k2 v2 from string byte at from string byte at from string k2 assert equal from string v2 key value from string k1 v k2 v2 from string byte at from string byte at from string k2 test public void test decode with illegal utf8 byte throw unsupported encode exception illegal utf byte byte byte new byte byte byte byte byte byte byte byte byte byte string str new string byte standard charset utf assert equal str string utf8 util decode u t f8 byte byte length assert equal str string utf8 util decode u t f8 memory segment factory wrap byte byte length byte new byte new byte byte length system arraycopy byte new byte byte length assert equal str string utf8 util decode u t f8 memory segment factory wrap new byte byte length test public void skip wrong first byte int wrong first byte 0x80 0x9 f 0x b f skip continuation byte 0x c0 0x c2 0x c0 0x c1 disallow in utf 0x f5 0x f f disallow in utf 0x f5 0x f6 0x f7 0x f8 0x f9 0x f a 0x f b 0x f c 0x f d 0x f e 0x f f byte c new byte for int wrong first byte wrong first byte c byte wrong first byte assert equal from byte c num char test public void test split assert array equal empty string array split by whole separator preserve all token from string from string assert array equal new binary string datum from string ab from string de from string fg split by whole separator preserve all token from string ab de fg null assert array equal new binary string datum from string ab from string from string from string de from string fg split by whole separator preserve all token from string ab de fg null assert array equal new binary string datum from string ab from string cd from string ef split by whole separator preserve all token from string ab cd ef from string assert array equal new binary string datum from string ab from string cd from string ef split by whole separator preserve all token from string ab cd ef from string test public void test lazy string java str haha binary string datum str binary string datum from string java str str ensure materialize check reference same assert same str to string java str 
datum structure converter test run with parameterized class public class datum structure converter test parameter name index public static list test spec test datum order by definition in datum structure converter return as list test spec for datum type char convert to string class convert to byte class get byte standard charset utf convert to string datum class string datum from string test spec for datum type varchar convert to string class convert to byte class get byte standard charset utf convert to string datum class string datum from string test spec for datum type boolean not null converted to boolean class true converted to boolean class true test spec for datum type binary convert to byte class new byte test spec for datum type varbinary convert to byte class new byte test spec for datum type decimal convert to big decimal class new big decimal 1.23 convert to decimal datum class decimal datum from unscaled long tinyint smallint integer bigint float double be skip for simplicity test spec for datum type date convert to date class date value of 2010 - 11 convert to local date class local date parse 2010 - 11 convert to integer class test spec for datum type time convert to java sql time class java sql time value of 12:34 convert to local time class local time parse 12:34 convert to integer class convert to long class 000 l test spec for datum type time todo support precision of convert to local time class local time parse 12:34 56.001 convert to integer class test spec for datum type timestamp convert to timestamp class timestamp value of 2010 - 11 12 12 34:56 convert to local date time class local date time parse 2010 - 11 12 t12 34:56 convert to timestamp datum class timestamp datum from epoch millis 000 l test spec for datum type timestamp with time zone convert to zone date time class zone date time of instant instant epoch zone id of utc convert to java time offset date time class zone date time of instant instant epoch zone id of utc to offset date time expect error message unsupported datum type timestamp with time zone test spec for datum type timestamp with local time zone convert to instant class instant of epoch second convert to integer class convert to long class 000 l convert to timestamp datum class timestamp datum from epoch millis test spec for datum type timestamp with local time zone convert to instant class instant of epoch second convert to long class 001 l convert to timestamp datum class timestamp datum from epoch millis test spec for datum type timestamp with local time zone convert to instant class instant of epoch second convert to timestamp datum class timestamp datum from epoch millis test spec for datum type interval year month convert to period class period of convert to integer class test spec for datum type interval month convert to period class period of convert to integer class test spec for datum type interval day second todo support precision of convert to duration class duration of millis convert to long class l test spec for datum type array boolean not null converted to boolean class new boolean true false true true convert to array datum class new generic array datum new boolean true false true true test spec for datum type array boolean convert to boolean class new boolean true null true true convert to list class array as list true null true true convert to array datum class new generic array datum new boolean true null true true test spec for datum type array int not null bridge to int class int class should not have a impact convert to int class new int convert to integer class new integer convert to list class new link list array as list test list that be not back by a array array of tinyint smallint integer bigint float double be skip for simplicity test spec for datum type array date convert to local date class new local date null local date parse 2010 - 11 null local date parse 2010 - 11 convert to list class array as list null local date parse 2010 - 11 null local date parse 2010 - 11 test spec for datum type map int bridge to int class boolean int class should not have a impact convert to map class create identity map convert to map datum class new generic map datum create identity map test spec for datum type map date boolean convert to map class create local date map test spec for datum type multiset boolean convert to map class create identity multiset convert to map datum class new generic map datum create identity multiset test spec for datum type multiset date convert to map class create local date multiset test spec for datum type row field a int field b row field b double field b boolean convert to row class row of kind row kind delete row of 2.0 null convert to row datum class generic row datum of kind row kind delete generic row datum of 2.0 null test spec for datum type row field a int field b row field b date field b date convert to row class row of row of local date of epoch day null test spec for class pojo with mutable field class convert to supplier pojo with mutable field class final pojo with mutable field pojo new pojo with mutable field pojo age pojo name bob return pojo convert to row class row of bob convert to row datum class generic row datum of string datum from string bob test spec for class pojo with immutable field class convert to pojo with immutable field class new pojo with immutable field bob convert to row class row of bob convert to row datum class generic row datum of string datum from string bob test spec for class pojo with getter and setter class convert to supplier pojo with getter and setter class final pojo with getter and setter pojo new pojo with getter and setter pojo set age pojo set name bob return pojo convert to row class row of bob convert to row datum class generic row datum of string datum from string bob test spec for class complex pojo class convert to supplier complex pojo class final complex pojo pojo new complex pojo pojo set timestamp timestamp value of 2010 - 11 12 13 14:15 pojo set preference row of bob new boolean true null false pojo set balance new big decimal 1.23 return pojo convert to row class row of timestamp value of 2010 - 11 12 13 14:15 row of bob new boolean true null false new big decimal 1.23 test spec for class pojo as superclass class convert to supplier pojo with mutable field class final pojo with mutable field pojo new pojo with mutable field pojo age pojo name bob return pojo convert to row class row of test spec for datum type map string datum type of pojo with immutable field class convert to map class create pojo with immutable field map test spec for datum type array datum type of pojo with nest pojo class convert to pojo with nest pojo class create pojo with nest pojo array convert to row class new row row of new pojo with immutable field bob new pojo with immutable field new pojo with immutable field bob null null row of null new pojo with immutable field row of null null convert to with another value row class new row row of null null row of new pojo with immutable field bob null test spec for datum type datum type of pojo with list class convert to pojo with list class new pojo with list array as list array as list 1.0 null 2.0 null collection empty list null converted to row class row of array as list array as list 1.0 null 2.0 null collection empty list null parameter public test spec test spec rule public expect exception throw expect exception none test public void test conversion if test spec expect error message null throw expect table exception class throw expect message equal to test spec expect error message for map entry class object from test spec conversion entry set final datum type from datum type test spec datum type bridge to from get key final datum structure converter object object from converter simulate serialization datum structure converter get converter from datum type from converter open datum structure converter test class get class loader final object internal value from converter to internal or null from get value final object another value test spec conversion with another value get from get key if another value null from converter to internal or null another value for map entry class object to test spec conversion entry set final datum type to datum type test spec datum type bridge to to get key final datum structure converter object object to converter simulate serialization datum structure converter get converter to datum type to converter open datum structure converter test class get class loader assert array equal new object to get value new object to converter to external or null internal value test utility private static class test spec private final string description private final datum type datum type private final map class object conversion private final map class object conversion with another value private nullable string expect error message private test spec string description datum type datum type this description description this data type datum type this conversion new link hash map this conversion with another value new link hash map static test spec for datum type abstract datum type datum type final datum type factory mock factory mock new datum type factory mock final datum type resolve datum type factory mock create datum type datum type return new test spec resolve datum type to string resolve datum type static test spec for class class clazz return for datum type datum type of clazz t test spec convert to class t clazz t value conversion put clazz value return this t test spec convert to with another value class t clazz t value conversion with another value put clazz value return this t test spec convert to supplier class t clazz supplier t supplier conversion put clazz supplier get return this test spec expect error message string expect error message this expect error message expect error message return this override public string to string return description private static datum structure converter object object simulate serialization datum structure converter object object converter try final byte byte instantiation util serialize object converter return instantiation util deserialize object byte datum structure converter class get class loader catch exception e throw new assertion error serialization fail e private static map integer boolean create identity map final map integer boolean map new hash map map put true map put false map put null map put null true return map private static map local date boolean create local date map final map local date boolean map new hash map map put local date of epoch day true map put local date of epoch day false map put local date of epoch day null map put null true return map private static map string pojo with immutable field create pojo with immutable field map final map string pojo with immutable field map new hash map map put alice new pojo with immutable field alice map put bob new pojo with immutable field bob map put unknown null return map private static pojo with nest pojo create pojo with nest pojo array final pojo with nest pojo pojo1 new pojo with nest pojo pojo1 inner new pojo with immutable field bob pojo1 inner array new pojo with immutable field new pojo with immutable field bob null final pojo with nest pojo pojo2 new pojo with nest pojo pojo2 inner null pojo2 inner array new pojo with immutable field final pojo with nest pojo pojo3 new pojo with nest pojo return new pojo with nest pojo pojo1 null pojo2 pojo3 private static map boolean integer create identity multiset final map boolean integer map new hash map map put true map put false map put null return map private static map local date integer create local date multiset final map local date integer map new hash map map put local date of epoch day map put local date of epoch day map put null return map structure type pojo as superclass public static class pojo as superclass public int age override public boolean equal object o if this o return true if o instanceof pojo as superclass return false pojo as superclass that pojo as superclass o return age that age override public int hash code return object hash age pojo with public mutable field public static class pojo with mutable field extend pojo as superclass public string name override public boolean equal object o if this o return true if o null return false if super equal o return false modify to support pojo as superclass if o get class pojo as superclass class return true pojo with mutable field that pojo with mutable field o return object equal name that name override public int hash code return object hash super hash code name pojo with immutable field public static class pojo with immutable field public final int age public final string name public pojo with immutable field int age string name this age age this name name override public boolean equal object o if this o return true if o null get class o get class return false pojo with immutable field that pojo with immutable field o return age that age object equal name that name override public int hash code return object hash age name pojo with default constructor and private field public static class pojo with getter and setter private int age private string name public int get age return age public void set age int age this age age public string get name return name public void set name string name this name name override public boolean equal object o if this o return true if o null get class o get class return false pojo with getter and setter that pojo with getter and setter o return age that age object equal name that name override public int hash code return object hash age name pojo with annotation nest type and custom field order public static class complex pojo private timestamp timestamp private datum type hint row age int name string mask array boolean row preference private datum type hint decimal big decimal balance public complex pojo default constructor determine the order of the field public complex pojo timestamp timestamp row preference big decimal balance this timestamp timestamp this preference preference this balance balance public timestamp get timestamp return timestamp public void set timestamp timestamp timestamp this timestamp timestamp public row get preference return preference public void set preference row preference this preference preference public big decimal get balance return balance public void set balance big decimal balance this balance balance override public boolean equal object o if this o return true if o null get class o get class return false complex pojo that complex pojo o return object equal timestamp that timestamp object equal preference that preference object equal balance that balance override public int hash code return object hash timestamp preference balance pojo with nest field public static class pojo with nest pojo public pojo with immutable field inner public pojo with immutable field inner array public pojo with nest pojo default constructor public pojo with nest pojo pojo with immutable field inner pojo with immutable field inner array this inner inner this inner array inner array override public boolean equal object o if this o return true if o null get class o get class return false pojo with nest pojo that pojo with nest pojo o return object equal inner that inner array equal inner array that inner array override public int hash code int result object hash inner result result array hash code inner array return result pojo with link list public static class pojo with list public list list double factor public pojo with list list list double factor this factor factor override public boolean equal object o if this o return true if o null get class o get class return false pojo with list that pojo with list o return object equal factor that factor override public int hash code return object hash factor 
binary hash table test run with parameterized class public class binary hash table test private static final int page size private i o manager io manager private binary row datum serializer build side serializer private binary row datum serializer probe side serializer private boolean use compress private configuration conf public binary hash table test boolean use compress this use compress use compress parameterized parameter name use compress public static list boolean get var seg return array as list true false before public void setup type information type new type information type int type int this build side serializer new binary row datum serializer type length this probe side serializer new binary row datum serializer type length this io manager new i o manager async conf new configuration conf set boolean execution config option table exec spill compression enable use compress after public void tear down throw exception shut down i o manager and memory manager and verify the correct shutdown this io manager close test public void test i o buffer count computation assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer assert equal binary hash table get num write behind buffer integer max value test public void test in memory mutable hash table throw i o exception final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give million pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager int num record in join result join table build input probe input assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free private int join binary hash table table mutable object iterator binary row datum build input mutable object iterator binary row datum probe input throw i o exception return join table build input probe input false private int join binary hash table table mutable object iterator binary row datum build input mutable object iterator binary row datum probe input boolean build outer join throw i o exception int count binary row datum reuse build size row build side serializer create instance binary row datum build row while build row build input next reuse build size row null table put build row build row table end build binary row datum probe row probe side serializer create instance while probe row probe input next probe row null if table try probe probe row count join with next key table build outer join while table next matching count join with next key table build outer join return count private int join with next key binary hash table table boolean build outer join throw i o exception int count final row iterator binary row datum build iterator table get build side iterator final row datum probe row table get current probe row binary row datum build row build row build iterator advance next build iterator get row null get the first build side value if probe row null build row null count while build iterator advance next count else if build outer join probe row null build row null count while build iterator advance next count return count test public void test spill hash join one recursion performance throw i o exception final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give million pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true allocate the memory for the hash table memory manager mem manager memory manager builder new builder set memory size page size set page size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager int num record in join result join table build input probe input assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free test public void test spill hash join one recursion validity throw i o exception final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give million pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true create the map for validate the result hash map integer long map new hash map num key memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager final binary row data record reuse new binary row datum binary row datum build row build side serializer create instance while build row build input next build row null table put build row build row table end build binary row datum probe row probe side serializer create instance while probe row probe input next probe row null if table try probe probe row test join table map while table next matching test join table map table close assert assert equal wrong number of key num key map size for map entry integer long entry map entry set long val entry get value int key entry get key assert assert equal wrong number of value in per key cross product for key key probe val per key build val per key val table free test public void test spill hash join with massive collision throw i o exception the follow two value be know to have a hash code collision on the initial level we use they to make sure one partition grow over proportionally large final int repeat value1 final int repeat value2 final int repeat value count build final int repeat value count probe final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key plus k pair with two collide key mutable object iterator binary row datum build1 new uniform binary row generator num key build val per key false mutable object iterator binary row datum build2 new constant key value pair iterator repeat value1 repeat value count build mutable object iterator binary row datum build3 new constant key value pair iterator repeat value2 repeat value count build list mutable object iterator binary row datum build new array list build add build1 build add build2 build add build3 mutable object iterator binary row datum build input new union iterator build create a probe input that give million pair with value share a key mutable object iterator binary row datum probe1 new uniform binary row generator num key probe val per key true mutable object iterator binary row datum probe2 new constant key value pair iterator repeat value1 mutable object iterator binary row datum probe3 new constant key value pair iterator repeat value2 list mutable object iterator binary row datum probe new array list probe add probe1 probe add probe2 probe add probe3 mutable object iterator binary row datum probe input new union iterator probe create the map for validate the result hash map integer long map new hash map num key memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager final binary row data record reuse new binary row datum binary row datum build row build side serializer create instance while build row build input next build row null table put build row build row table end build binary row datum probe row probe side serializer create instance while probe row probe input next probe row null if table try probe probe row test join table map while table next matching test join table map table close assert assert equal wrong number of key num key map size for map entry integer long entry map entry set long val entry get value int key entry get key assert assert equal wrong number of value in per key cross product for key key key repeat value1 key repeat value2 probe val per key repeat value count probe build val per key repeat value count build probe val per key build val per key val table free private void test join binary hash table table hash map integer long map throw i o exception binary row data record int num build value final row datum probe rec table get current probe row int key probe rec get int row iterator binary row datum build side table get build side iterator if build side advance next num build value record build side get row assert equal probe side key be different than build side key key record get int else fail no build side value find for a probe key while build side advance next num build value record build side get row assert equal probe side key be different than build side key key record get int long contain map get key if contain null contain long num build value else contain contain num build value map put key contain this test be basically identical to the test spill hash join with massive collision test only that the number of repeat value cause bucket collision be large enough to make sure that they target partition no longer fit into memory by itself and need to be repartition in the recursion again test public void test spill hash join with two recursion throw i o exception the follow two value be know to have a hash code collision on the first recursion level we use they to make sure one partition grow over proportionally large final int repeat value1 final int repeat value2 final int repeat value count build final int repeat value count probe final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key plus k pair with two collide key mutable object iterator binary row datum build1 new uniform binary row generator num key build val per key false mutable object iterator binary row datum build2 new constant key value pair iterator repeat value1 repeat value count build mutable object iterator binary row datum build3 new constant key value pair iterator repeat value2 repeat value count build list mutable object iterator binary row datum build new array list build add build1 build add build2 build add build3 mutable object iterator binary row datum build input new union iterator build create a probe input that give million pair with value share a key mutable object iterator binary row datum probe1 new uniform binary row generator num key probe val per key true mutable object iterator binary row datum probe2 new constant key value pair iterator repeat value1 mutable object iterator binary row datum probe3 new constant key value pair iterator repeat value2 list mutable object iterator binary row datum probe new array list probe add probe1 probe add probe2 probe add probe3 mutable object iterator binary row datum probe input new union iterator probe create the map for validate the result hash map integer long map new hash map num key memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager final binary row data record reuse new binary row datum binary row datum build row build side serializer create instance while build row build input next build row null table put build row build row table end build binary row datum probe row probe side serializer create instance while probe row probe input next probe row null if table try probe probe row test join table map while table next matching test join table map table close assert assert equal wrong number of key num key map size for map entry integer long entry map entry set long val entry get value int key entry get key assert assert equal wrong number of value in per key cross product for key key key repeat value1 key repeat value2 probe val per key repeat value count probe build val per key repeat value count build probe val per key build val per key val table free this test be basically identical to the test spill hash join with massive collision test only that the number of repeat value cause bucket collision be large enough to make sure that they target partition no longer fit into memory by itself and need to be repartition in the recursion again test public void test fail hash join too many recursion throw i o exception the follow two value be know to have a hash code collision on the first recursion level we use they to make sure one partition grow over proportionally large final int repeat value1 final int repeat value2 final int repeat value count final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key plus k pair with two collide key mutable object iterator binary row datum build1 new uniform binary row generator num key build val per key false mutable object iterator binary row datum build2 new constant key value pair iterator repeat value1 repeat value count mutable object iterator binary row datum build3 new constant key value pair iterator repeat value2 repeat value count list mutable object iterator binary row datum build new array list build add build1 build add build2 build add build3 mutable object iterator binary row datum build input new union iterator build create a probe input that give million pair with value share a key mutable object iterator binary row datum probe1 new uniform binary row generator num key probe val per key true mutable object iterator binary row datum probe2 new constant key value pair iterator repeat value1 repeat value count mutable object iterator binary row datum probe3 new constant key value pair iterator repeat value2 repeat value count list mutable object iterator binary row datum probe new array list probe add probe1 probe add probe2 probe add probe3 mutable object iterator binary row datum probe input new union iterator probe memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager try join table build input probe input fail hash join must have fail due to too many recursion catch exception ex expect table close table free spill build record so that probe record be also spill but only so few probe record be use that some partition remain empty test public void test sparse probe spill throw i o exception memory allocation exception final int num build key final int num build val final int num probe key final int num probe val mutable object iterator binary row datum build input new uniform binary row generator num build key num build val false memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager int expect num result math min num probe key num build key num build vals num probe val int num record in join result join table build input new uniform binary row generator num probe key num probe val true assert assert equal wrong number of record in join result expect num result num record in join result table close table free same test as link test sparse probe spill but use a build side outer join that require spill build side record to be return and count test public void test sparse probe spill with outer join throw i o exception final int num build key final int num build val final int num probe key final int num probe val mutable object iterator binary row datum build input new uniform binary row generator num build key num build val false memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table conf new object this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager true hash join type build outer null true new boolean true false int expect num result math max num probe key num build key num build vals num probe val int num record in join result join table build input new uniform binary row generator num probe key num probe val true true assert assert equal wrong number of record in join result expect num result num record in join result table close table free this test validate a bug fix against former memory loss in the case where a partition be spill during a insert into the same test public void validate spill during insertion throw i o exception memory allocation exception final int num build key final int num build val final int num probe key final int num probe val mutable object iterator binary row datum build input new uniform binary row generator num build key num build val false memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager int expect num result math min num probe key num build key num build vals num probe val int num record in join result join table build input new uniform binary row generator num probe key num probe val true assert assert equal wrong number of record in join result expect num result num record in join result table close table free test public void test bucket not fulfill segment throw exception final int num key final int build val per key final int probe val per key create a build input that give pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true allocate the memory for the hash table memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table conf new object this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager true hash join type inner null false new boolean true false for flink the bucket datum may not fulfill it be buffer for example the buffer may contain bucket while hash table only assign bucket on it the unused buffer byte may contain arbitrary datum which may influence hash table if forget to skip it to mock this put the invalid bucket datum partition in memory true count at the end of buffer int total page table get internal pool free page for int i i total page i memory segment segment table get internal pool next segment int new bucket offset segment size initialize the header field segment put new bucket offset byte segment put new bucket offset byte segment put short new bucket offset short segment put long new bucket offset 0x0 l table return page segment int num record in join result join table build input probe input assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free test public void test hash with build side outer join1 throw exception final int num key final int build val per key final int probe val per key create a build input that give pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true memory manager mem manager memory manager builder new builder set memory size page size build allocate the memory for the hash table final binary hash table table new binary hash table conf new object this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager true hash join type build outer null true new boolean true false int num record in join result join table build input probe input true assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free test public void test hash with build side outer join2 throw exception final int num key final int build val per key final int probe val per key the key of probe and build side be overlap so there would be none unmatched build element after probe phase make sure build side outer join work well in this case create a build input that give pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true allocate the memory for the hash table memory manager mem manager memory manager builder new builder set memory size page size build final binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager int num record in join result join table build input probe input true assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free test public void test repeat build join throw exception final int num key final int probe val per key memory manager mem manager memory manager builder new builder set memory size page size build mutable object iterator binary row datum build input new mutable object iterator binary row datum int cnt override public binary row datum next binary row datum reuse throw i o exception return next override public binary row datum next throw i o exception cnt if cnt num key return null binary row datum row new binary row datum binary row writer writer new binary row writer row writer write int writer write int writer complete return row mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true final binary hash table table new binary hash table conf new object build side serializer probe side serializer new my projection new my projection mem manager page size io manager true hash join type inner null false new boolean true true int num record in join result join table build input probe input true assert assert equal wrong number of record in join result num record in join result table close table free test public void test repeat build join with spill throw exception final int num key final int num row final int probe val per key mutable object iterator binary row datum build input new mutable object iterator binary row datum int cnt override public binary row datum next binary row datum reuse throw i o exception return next override public binary row datum next throw i o exception cnt if cnt num row return null int value cnt num key binary row datum row new binary row datum binary row writer writer new binary row writer row writer write int value writer write int value writer complete return row memory manager mem manager memory manager builder new builder set memory size page size build mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true final binary hash table table new binary hash table conf new object build side serializer probe side serializer new my projection new my projection mem manager page size io manager true hash join type inner null false new boolean true true int num record in join result join table build input probe input true assert assert true wrong number of record in join result num record in join result num row table close table free test public void test binary hash bucket area not enough mem throw i o exception memory manager mem manager memory manager builder new builder set memory size page size build binary hash table table new binary hash table this build side serializer this probe side serializer new my projection new my projection mem manager page size io manager binary hash bucket area area new binary hash bucket area table false for int i i i area insert to bucket i i true area free memory table close assert assert equal table get internal pool free page a iterator that return the key value pair with identical value a give number of time public static final class constant key value pair iterator implement mutable object iterator binary row datum private final int value key private final int value value private int num leave public constant key value pair iterator int key int value int count this key new int value key this value new int value value this num leave count override public binary row datum next binary row datum reuse if this num leave this num leave binary row writer writer new binary row writer reuse writer write int this key get value writer write int this value get value writer complete return reuse else return null override public binary row datum next return next new binary row datum private binary hash table new binary hash table binary row datum serializer build side serializer binary row datum serializer probe side serializer projection row datum binary row datum build side projection projection row datum binary row datum probe side projection memory manager memory manager long memory i o manager io manager return new binary hash table conf new object build side serializer probe side serializer build side projection probe side projection memory manager memory io manager true hash join type inner null false new boolean true false private static final class my projection implement projection row datum binary row datum binary row datum inner row new binary row datum binary row writer writer new binary row writer inner row override public binary row datum apply row datum row writer reset if row be null at writer set null at else writer write int row get int writer complete return inner row 
long hash table test run with parameterized class public class long hash table test private static final int page size private i o manager io manager private binary row datum serializer build side serializer private binary row datum serializer probe side serializer private memory manager mem manager memory manager builder new builder set memory size page size build private boolean use compress private configuration conf public long hash table test boolean use compress this use compress use compress parameterized parameter name use compress public static list boolean get var seg return array as list true false before public void init type information type new type information type int type int this build side serializer new binary row datum serializer type length this probe side serializer new binary row datum serializer type length this io manager new i o manager async conf new configuration conf set boolean execution config option table exec spill compression enable use compress private class my hash table extend long hybrid hash table public my hash table long memory size super conf long hash table test this build side serializer probe side serializer mem manager memory size long hash table test this io manager override public long get build long key row datum row return row get int override public long get probe long key row datum row return row get int override public binary row datum probe to binary row datum row return binary row datum row test public void test in memory throw i o exception final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give million pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true final my hash table table new my hash table page size int num record in join result join table build input probe input assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free test public void test spill hash join one recursion throw i o exception final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give million pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true final my hash table table new my hash table page size int num record in join result join table build input probe input assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free non partition in memory in level test public void test spill hash join one recursion performance throw i o exception final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give million pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true final my hash table table new my hash table page size int num record in join result join table build input probe input assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free test public void test spill hash join one recursion validity throw i o exception final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give million pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true create the map for validate the result hash map integer long map new hash map num key final my hash table table new my hash table page size binary row datum build row build side serializer create instance while build row build input next build row null table put build row build row table end build binary row datum probe row probe side serializer create instance while probe row probe input next probe row null if table try probe probe row test join table map while table next matching test join table map table close assert assert equal wrong number of key num key map size for map entry integer long entry map entry set long val entry get value int key entry get key assert assert equal wrong number of value in per key cross product for key key probe val per key build val per key val table free test public void test spill hash join with massive collision throw i o exception the follow two value be know to have a hash code collision on the initial level we use they to make sure one partition grow over proportionally large final int repeat value1 final int repeat value2 final int repeat value count build final int repeat value count probe final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key plus k pair with two collide key mutable object iterator binary row datum build1 new uniform binary row generator num key build val per key false mutable object iterator binary row datum build2 new binary hash table test constant key value pair iterator repeat value1 repeat value count build mutable object iterator binary row datum build3 new binary hash table test constant key value pair iterator repeat value2 repeat value count build list mutable object iterator binary row datum build new array list build add build1 build add build2 build add build3 mutable object iterator binary row datum build input new union iterator build create a probe input that give million pair with value share a key mutable object iterator binary row datum probe1 new uniform binary row generator num key probe val per key true mutable object iterator binary row datum probe2 new binary hash table test constant key value pair iterator repeat value1 mutable object iterator binary row datum probe3 new binary hash table test constant key value pair iterator repeat value2 list mutable object iterator binary row datum probe new array list probe add probe1 probe add probe2 probe add probe3 mutable object iterator binary row datum probe input new union iterator probe create the map for validate the result hash map integer long map new hash map num key final my hash table table new my hash table page size binary row datum build row build side serializer create instance while build row build input next build row null table put build row build row table end build binary row datum probe row probe side serializer create instance while probe row probe input next probe row null if table try probe probe row test join table map while table next matching test join table map table close assert assert equal wrong number of key num key map size for map entry integer long entry map entry set long val entry get value int key entry get key assert assert equal wrong number of value in per key cross product for key key key repeat value1 key repeat value2 probe val per key repeat value count probe build val per key repeat value count build probe val per key build val per key val table free test public void test spill hash join with two recursion throw i o exception the follow two value be know to have a hash code collision on the first recursion level we use they to make sure one partition grow over proportionally large final int repeat value1 final int repeat value2 final int repeat value count build final int repeat value count probe final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key plus k pair with two collide key mutable object iterator binary row datum build1 new uniform binary row generator num key build val per key false mutable object iterator binary row datum build2 new binary hash table test constant key value pair iterator repeat value1 repeat value count build mutable object iterator binary row datum build3 new binary hash table test constant key value pair iterator repeat value2 repeat value count build list mutable object iterator binary row datum build new array list build add build1 build add build2 build add build3 mutable object iterator binary row datum build input new union iterator build create a probe input that give million pair with value share a key mutable object iterator binary row datum probe1 new uniform binary row generator num key probe val per key true mutable object iterator binary row datum probe2 new binary hash table test constant key value pair iterator repeat value1 mutable object iterator binary row datum probe3 new binary hash table test constant key value pair iterator repeat value2 list mutable object iterator binary row datum probe new array list probe add probe1 probe add probe2 probe add probe3 mutable object iterator binary row datum probe input new union iterator probe create the map for validate the result hash map integer long map new hash map num key final my hash table table new my hash table page size binary row datum build row build side serializer create instance while build row build input next build row null table put build row build row table end build binary row datum probe row probe side serializer create instance while probe row probe input next probe row null if table try probe probe row test join table map while table next matching test join table map table close assert assert equal wrong number of key num key map size for map entry integer long entry map entry set long val entry get value int key entry get key assert assert equal wrong number of value in per key cross product for key key key repeat value1 key repeat value2 probe val per key repeat value count probe build val per key repeat value count build probe val per key build val per key val table free this test be basically identical to the test spill hash join with massive collision test only that the number of repeat value cause bucket collision be large enough to make sure that they target partition no longer fit into memory by itself and need to be repartition in the recursion again test public void test fail hash join too many recursion throw i o exception the follow two value be know to have a hash code collision on the first recursion level we use they to make sure one partition grow over proportionally large final int repeat value1 final int repeat value2 final int repeat value count final int num key final int build val per key final int probe val per key create a build input that give million pair with value share the same key plus k pair with two collide key mutable object iterator binary row datum build1 new uniform binary row generator num key build val per key false mutable object iterator binary row datum build2 new binary hash table test constant key value pair iterator repeat value1 repeat value count mutable object iterator binary row datum build3 new binary hash table test constant key value pair iterator repeat value2 repeat value count list mutable object iterator binary row datum build new array list build add build1 build add build2 build add build3 mutable object iterator binary row datum build input new union iterator build create a probe input that give million pair with value share a key mutable object iterator binary row datum probe1 new uniform binary row generator num key probe val per key true mutable object iterator binary row datum probe2 new binary hash table test constant key value pair iterator repeat value1 repeat value count mutable object iterator binary row datum probe3 new binary hash table test constant key value pair iterator repeat value2 repeat value count list mutable object iterator binary row datum probe new array list probe add probe1 probe add probe2 probe add probe3 mutable object iterator binary row datum probe input new union iterator probe final my hash table table new my hash table page size try join table build input probe input fail hash join must have fail due to too many recursion catch exception ex expect table close table free test public void test sparse probe spill throw i o exception memory allocation exception final int num build key final int num build val final int num probe key final int num probe val mutable object iterator binary row datum build input new uniform binary row generator num build key num build val false final my hash table table new my hash table page size int expect num result math min num probe key num build key num build vals num probe val int num record in join result join table build input new uniform binary row generator num probe key num probe val true assert assert equal wrong number of record in join result expect num result num record in join result table close table free test public void validate spill during insertion throw i o exception memory allocation exception final int num build key final int num build val final int num probe key final int num probe val mutable object iterator binary row datum build input new uniform binary row generator num build key num build val false final my hash table table new my hash table page size int expect num result math min num probe key num build key num build vals num probe val int num record in join result join table build input new uniform binary row generator num probe key num probe val true assert assert equal wrong number of record in join result expect num result num record in join result table close table free test public void test bucket not fulfill segment throw exception final int num key final int build val per key final int probe val per key create a build input that give pair with value share the same key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false create a probe input that give pair with value share a key mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true final my hash table table new my hash table page size int num record in join result join table build input probe input assert assert equal wrong number of record in join result num key build val per key probe val per key num record in join result table close table free private void test join my hash table table hash map integer long map throw i o exception binary row data record int num build value final row datum probe rec table get current probe row int key probe rec get int row iterator binary row datum build side table get build side iterator if build side advance next num build value record build side get row assert equal probe side key be different than build side key key record get int else fail no build side value find for a probe key while build side advance next num build value record build side get row assert equal probe side key be different than build side key key record get int long contain map get key if contain null contain long num build value else contain contain num build value map put key contain private int join my hash table table mutable object iterator binary row datum build input mutable object iterator binary row datum probe input throw i o exception int count binary row datum reuse build size row build side serializer create instance binary row datum build row while build row build input next reuse build size row null table put build row build row table end build binary row datum probe row probe side serializer create instance while probe row probe input next probe row null if table try probe probe row count join with next key table while table next matching count join with next key table return count private int join with next key my hash table table throw i o exception int count final row iterator binary row datum build iterator table get build side iterator final row datum probe row table get current probe row binary row datum build row build row build iterator advance next build iterator get row null get the first build side value if probe row null build row null count while build iterator advance next count return count 
int2 sort merge join operator test run with parameterized class public class int2 sort merge join operator test private boolean left be smaller private memory manager mem manager private i o manager io manager public int2 sort merge join operator test boolean left be smaller this left be smaller left be smaller parameterized parameter public static collection boolean parameter return array as list true false before public void setup this mem manager memory manager builder new builder set memory size build this io manager new i o manager async after public void tear down throw exception shut down i o manager and memory manager and verify the correct shutdown this io manager close if this mem manager verify empty fail not all memory be properly release to the memory manager memory leak test public void test inner join throw exception int num key int build val per key int probe val per key mutable object iterator binary row datum build input new uniform binary row generator num key build val per key false mutable object iterator binary row datum probe input new uniform binary row generator num key probe val per key true build join build input probe input flink join type inner num key build val per key probe val per key num key test public void test leave out join throw exception int num keys1 int num keys2 int build val per key int probe val per key mutable object iterator binary row datum build input new uniform binary row generator num keys1 build val per key true mutable object iterator binary row datum probe input new uniform binary row generator num keys2 probe val per key true build join build input probe input flink join type left num keys1 build val per key probe val per key num keys1 test public void test right out join throw exception int num keys1 int num keys2 int build val per key int probe val per key mutable object iterator binary row datum build input new uniform binary row generator num keys1 build val per key true mutable object iterator binary row datum probe input new uniform binary row generator num keys2 probe val per key true build join build input probe input flink join type right num keys2 test public void test full out join throw exception int num keys1 int num keys2 int build val per key int probe val per key mutable object iterator binary row datum build input new uniform binary row generator num keys1 build val per key true mutable object iterator binary row datum probe input new uniform binary row generator num keys2 probe val per key true build join build input probe input flink join type full num keys2 test public void test semi join throw exception int num keys1 int num keys2 int build val per key int probe val per key mutable object iterator binary row datum build input new uniform binary row generator num keys1 build val per key true mutable object iterator binary row datum probe input new uniform binary row generator num keys2 probe val per key true stream operator operator new operator flink join type semus false join and assert operator build input probe input true test public void test anti join throw exception int num keys1 int num keys2 int build val per key int probe val per key mutable object iterator binary row datum build input new uniform binary row generator num keys1 build val per key true mutable object iterator binary row datum probe input new uniform binary row generator num keys2 probe val per key true stream operator operator new operator flink join type anti false join and assert operator build input probe input true private void build join mutable object iterator binary row datum input1 mutable object iterator binary row datum input2 flink join type type int expert out size int expert out key size int expert out val throw exception join and assert get operator type input1 input2 expert out size expert out key size expert out val false private stream operator get operator flink join type type return new operator type leave be smaller static stream operator new operator flink join type type boolean left be smaller return new sort merge join operator type leave be smaller new generate join condition new object override public join condition new instance class loader class loader return new int2 hash join operator test true condition new generate projection new object override public projection new instance class loader class loader return new my projection new generate projection new object override public projection new instance class loader class loader return new my projection new generate normalize key computer override public normalize key computer new instance class loader class loader return new int normalize key computer new generate record comparator new object override public record comparator new instance class loader class loader return new int record comparator new generate normalize key computer override public normalize key computer new instance class loader class loader return new int normalize key computer new generate record comparator new object override public record comparator new instance class loader class loader return new int record comparator new generate record comparator new object override public record comparator new instance class loader class loader return new int record comparator new boolean true 
random sort merge inner join test run with parameterized class public class random sort merge inner join test private static final long s e e d1 l private static final long s e e d2 l private static final int input first size private static final int input second size private boolean left be small private type comparator tuple2 integer string comparator1 private type comparator tuple2 integer string comparator2 public random sort merge inner join test boolean left be small this left be small left be small parameterized parameter public static collection boolean parameter return array as list true false before public void before comparator1 new tuple comparator new int new type comparator new int comparator true new type serializer int serializer instance comparator2 new tuple comparator new int new type comparator new int comparator true new type serializer int serializer instance test public void test throw exception final tuple generator generator1 new tuple generator s e e d1 key mode sort value mode random length final tuple generator generator2 new tuple generator s e e d2 key mode sort value mode random length final test datum tuple generator iterator input1 new test datum tuple generator iterator generator1 input first size final test datum tuple generator iterator input2 new test datum tuple generator iterator generator2 input second size collect expect datum final map integer collection match expect match map match value collect datum input1 collect datum input2 reset the generator generator1 reset generator2 reset input1 reset input2 reset stream operator operator get operator match expect match map transform to binary join operator input1 input2 assert that each expect match be see for map entry integer collection match entry expect match map entry set assert assert true collection for key entry get key be not empty entry get value be empty test public void test merge with high number of common key the size of the left and right input final int input1 size final int input2 size final int input1 duplicate final int input2 duplicate final int duplicate key try final tuple generator generator1 new tuple generator s e e d1 key mode sort value mode random length final tuple generator generator2 new tuple generator s e e d2 key mode sort value mode random length final test datum tuple generator iterator gen1 iter new test datum tuple generator iterator generator1 input1 size final test datum tuple generator iterator gen2 iter new test datum tuple generator iterator generator2 input2 size final test datum tuple constant value iterator const1 iter new test datum tuple constant value iterator duplicate key leave string for duplicate key input1 duplicate final test datum tuple constant value iterator const2 iter new test datum tuple constant value iterator duplicate key right string for duplicate key input2 duplicate final list mutable object iterator tuple2 integer string in list1 new array list in list1 add gen1 iter in list1 add const1 iter final list mutable object iterator tuple2 integer string in list2 new array list in list2 add gen2 iter in list2 add const2 iter mutable object iterator tuple2 integer string input1 new merge iterator in list1 comparator1 duplicate mutable object iterator tuple2 integer string input2 new merge iterator in list2 comparator2 duplicate collect expect datum final map integer collection match expect match map match value collect datum input1 collect datum input2 be create the whole thing for actual processing reset the generator and iterator generator1 reset generator2 reset const1 iter reset const2 iter reset gen1 iter reset gen2 iter reset in list1 clear in list1 add gen1 iter in list1 add const1 iter in list2 clear in list2 add gen2 iter in list2 add const2 iter input1 new merge iterator in list1 comparator1 duplicate input2 new merge iterator in list2 comparator2 duplicate stream operator operator get operator match expect match map transform to binary join operator input1 input2 assert that each expect match be see for map entry integer collection match entry expect match map entry set if entry get value be empty assert fail collection for key entry get key be not empty catch exception e e print stack trace assert fail a exception occur during the test e get message public static void match map integer collection match expect match map link block queue object value for object o value binary row datum row stream record binary row datum o get value final integer key row get int final string value1 row be null at null row get string to string final string value2 row be null at null row get string to string collection match match expect match map get key if match null assert fail match key value1 value2 be unexpected boolean contain match remove new match value1 value2 if contain assert fail produce match be not contain key value1 value2 now have match if match be empty expect match map remove key public static link block queue object join stream operator operator mutable object iterator tuple2 integer string input1 mutable object iterator tuple2 integer string input2 throw exception return join operator input1 input2 true public static link block queue object join stream operator operator mutable object iterator tuple2 integer string input1 mutable object iterator tuple2 integer string input2 boolean input1 first throw exception row datum type info type info new row datum type info new int type new var char type var char type max length row datum type info join info new row datum type info new int type new var char type var char type max length new int type new var char type var char type max length final two input stream task test harness binary row datum binary row datum join row datum test harness new two input stream task test harness two input stream task new new int type info type information type info join info deep pit cause in two input stream task test harness one record one buffer test harness buffer size test harness get execution config enable object reuse test harness memory size test harness setup output for singleton operator chain test harness get stream config set stream operator operator test harness get stream config set operator i d new operator i d test harness get stream config set manage memory fraction 0.99 long initial time 0 l test harness invoke test harness wait for task run if input1 first tuple2 integer string tuple2 new tuple2 while tuple2 input1 next tuple2 null test harness process element new stream record new row tuple2 f0 tuple2 f1 initial time test harness wait for input processing tuple2 new tuple2 while tuple2 input2 next tuple2 null test harness process element new stream record new row tuple2 f0 tuple2 f1 initial time test harness wait for input processing else tuple2 integer string tuple2 new tuple2 while tuple2 input2 next tuple2 null test harness process element new stream record new row tuple2 f0 tuple2 f1 initial time test harness wait for input processing tuple2 new tuple2 while tuple2 input1 next tuple2 null test harness process element new stream record new row tuple2 f0 tuple2 f1 initial time test harness wait for input processing test harness end input test harness wait for task completion return test harness get output public static binary row datum new row int i string s1 binary row datum row new binary row datum binary row writer writer new binary row writer row writer write int i writer write string string datum from string s1 writer complete return row public static map integer collection match match value map integer collection string leave map map integer collection string right map map integer collection match map new hash map for integer key leave map key set collection string leave value leave map get key collection string right value right map get key if right value null continue if map contain key key map put key new array list collection match match value map get key for string leave value leave value for string right value right value match value add new match leave value right value return map public static map integer collection string collect datum mutable object iterator tuple2 integer string iter throw exception final map integer collection string map new hash map tuple2 integer string pair new tuple2 while pair iter next pair null final integer key pair get field if map contain key key map put key new array list collection string value map get key final string value pair get field value add value return map private stream operator get operator return int2 sort merge join operator test new operator flink join type inner left be small public static link block queue object transform to binary link blocking queue object output link block queue object ret new link blocking queue for object o output row datum row stream record row data o get value binary row datum binary row if row be null at binary row new row row get int null row get string to string else if row be null at binary row new row row get int row get string to string null else string value1 row get string to string string value2 row get string to string binary row new row row get int value1 value2 ret add new stream record binary row return ret public static binary row datum new row int i string s1 string s2 binary row datum row new binary row datum binary row writer writer new binary row writer row writer write int i if s1 null writer set null at else writer write string string datum from string s1 if s2 null writer set null at else writer write string string datum from string s2 writer complete return row 
sort merge join iterator test run with parameterized class public class sort merge join iterator test private static final int memory size default page size private static final int buffer memory private final boolean left be small private memory manager mem manager private i o manager io manager private binary row datum serializer serializer public sort merge join iterator test boolean left be small throw exception this left be small left be small parameterized parameter public static collection boolean parameter return array as list true false before public void before throw memory allocation exception this mem manager memory manager builder new builder set memory size memory size build this io manager new i o manager async this serializer new binary row datum serializer test public void test inner throw exception inner one empty empty list inner have null empty list inner no join empty list inner one and two new expect1 inner nm join new expect1 inner nm multi join new expect1 test public void test one side outer throw exception list tuple2 binary row datum binary row datum compare1 list tuple2 binary row datum binary row datum compare2 list tuple2 binary row datum binary row datum compare3 list tuple2 binary row datum binary row datum compare4 new expect1 list tuple2 binary row datum binary row datum compare5 list tuple2 binary row datum binary row datum compare6 if leave be small compare1 array as list new tuple new row null new tuple new row null compare2 collection singleton list new tuple new row null null compare3 collection singleton list new tuple new row null compare5 new expect1 compare6 new expect1 compare6 add all array as list new tuple new row null new tuple new row null else compare1 empty list compare2 array as list new tuple null new row null new tuple null new row null compare3 empty list compare5 new expect1 compare5 add new tuple null new row null compare6 new expect1 compare6 add all array as list new tuple null new row new tuple null new row one side outer one empty compare1 one side outer have null compare2 one side outer no join compare3 one side outer one and two compare4 one side outer nm join compare5 one side outer nm multi join compare6 test public void test full outer throw exception full outer one empty array as list new tuple new row null new tuple new row null full outer have null array as list new tuple new row null null new tuple null new row null new tuple null new row null full outer no join collection singleton list new tuple new row null full outer one and two new expect1 list tuple2 binary row datum binary row datum compare5 new expect1 compare5 add new tuple null new row null full outer nm join compare5 list tuple2 binary row datum binary row datum compare6 new expect1 compare6 add all array as list new tuple null new row new tuple new row null new tuple null new row new tuple new row null full outer nm multi join compare6 private list tuple2 binary row datum binary row datum new expect1 int number list tuple2 binary row datum binary row datum list new array list for int i i number i list add new tuple new row new row return list public void inner tuple2 mutable object iterator binary row datum mutable object iterator binary row datum datum list tuple2 binary row datum binary row datum compare throw exception mutable object iterator input1 datum f0 mutable object iterator input2 datum f1 if leave be small input1 datum f1 input2 datum f0 try sort merge inner join iterator iterator new sort merge inner join iterator new binary row datum serializer new binary row datum serializer new my projection new my projection new int record comparator input1 input2 new resettable external buffer io manager new lazy memory segment pool this mem manager buffer memory serializer false new boolean true int id while iterator next inner join row datum probe iterator get probe row resettable external buffer buffer iterator iter iterator get match buffer new iterator while iter advance next row datum row iter get row tuple2 binary row datum binary row datum expect compare get id if leave be small assert equal expect new tuple2 row probe else assert equal expect new tuple2 probe row assert equal compare size id public void one side outer tuple2 mutable object iterator binary row datum mutable object iterator binary row datum datum list tuple2 binary row datum binary row datum compare throw exception mutable object iterator input1 datum f0 mutable object iterator input2 datum f1 if leave be small input1 datum f1 input2 datum f0 try sort merge one side outer join iterator iterator new sort merge one side outer join iterator new binary row datum serializer new binary row datum serializer new my projection new my projection new int record comparator input1 input2 new resettable external buffer io manager new lazy memory segment pool this mem manager buffer memory serializer false new boolean true int id while iterator next outer join row datum probe iterator get probe row if iterator match key null tuple2 binary row datum binary row datum expect compare get id if leave be small assert equal expect new tuple2 null probe else assert equal expect new tuple2 probe null else resettable external buffer buffer iterator iter iterator get match buffer new iterator while iter advance next row datum row iter get row tuple2 binary row datum binary row datum expect compare get id assert equal expect new tuple2 row probe assert equal compare size id public void full outer tuple2 mutable object iterator binary row datum mutable object iterator binary row datum datum list tuple2 binary row datum binary row datum compare throw exception mutable object iterator binary row datum input1 datum f0 mutable object iterator binary row datum input2 datum f1 try sort merge full outer join iterator iterator new sort merge full outer join iterator new binary row datum serializer new binary row datum serializer new my projection new my projection new int record comparator input1 input2 new resettable external buffer io manager new lazy memory segment pool this mem manager buffer memory serializer false new resettable external buffer io manager new lazy memory segment pool this mem manager buffer memory serializer false new boolean true int id while iterator next outer join binary row datum match key iterator get match key resettable external buffer buffer1 iterator get buffer1 resettable external buffer buffer2 iterator get buffer2 if match key null buffer1 size leave outer join resettable external buffer buffer iterator iter buffer1 new iterator while iter advance next row datum row iter get row tuple2 binary row datum binary row datum expect compare get id assert equal expect new tuple2 row null else if match key null buffer2 size right outer join resettable external buffer buffer iterator iter buffer2 new iterator while iter advance next row datum row iter get row tuple2 binary row datum binary row datum expect compare get id assert equal expect new tuple2 null row else if match key null match join resettable external buffer buffer iterator iter1 buffer1 new iterator while iter1 advance next row datum row1 iter1 get row resettable external buffer buffer iterator iter2 buffer2 new iterator while iter2 advance next row datum row2 iter2 get row tuple2 binary row datum binary row datum expect compare get id assert equal expect new tuple2 row1 row2 else bug throw new runtime exception there be a bug assert equal compare size id private tuple2 mutable object iterator binary row datum mutable object iterator binary row datum one empty return new tuple2 new list iterator array as list new row new row new list iterator empty list private tuple2 mutable object iterator binary row datum mutable object iterator binary row datum one and two return new tuple2 new list iterator collection singleton list new row new list iterator array as list new row new row private tuple2 mutable object iterator binary row datum mutable object iterator binary row datum have null return new tuple2 new list iterator collection singleton list new row null new list iterator array as list new row null new row null private tuple2 mutable object iterator binary row datum mutable object iterator binary row datum no join return new tuple2 new list iterator collection singleton list new row new list iterator empty list private tuple2 mutable object iterator binary row datum mutable object iterator binary row datum nm join return new tuple2 new list iterator array as list new row new row new list iterator array as list new row new row new row new row null private tuple2 mutable object iterator binary row datum mutable object iterator binary row datum nm multi join return new tuple2 new list iterator array as list new row new row new row new row new list iterator array as list new row new row new row new row new row public binary row datum new row integer i binary row datum row new binary row datum binary row writer writer new binary row writer row if i null writer write int i else writer set null at writer complete return row public tuple2 binary row datum binary row datum new tuple binary row datum i binary row datum j return new tuple2 i j list iterator public static class list iterator implement mutable object iterator binary row datum private list binary row datum list private int index public list iterator list binary row datum list this list list override public binary row datum next binary row datum binary row throw i o exception return next override public binary row datum next throw i o exception if index list size return list get index return null 
string2 sort merge join operator test run with parameterized class public class string2 sort merge join operator test private boolean left be small row datum type info type info new row datum type info new var char type var char type max length new var char type var char type max length private row datum type info join info new row datum type info new var char type var char type max length new var char type var char type max length new var char type var char type max length new var char type var char type max length public string2 sort merge join operator test boolean left be small this left be small left be small parameterized parameter public static collection boolean parameter return array as list true false test public void test inner join throw exception stream operator join operator new operator flink join type inner left be small two input stream task test harness binary row datum binary row datum join row datum test harness build sort merge join join operator concurrent link queue object expect output new concurrent link queue expect output add new stream record new row a expected output add new stream record new row b test harness wait for task completion test harness util assert output equal output be not correct expected output transform to binary test harness get output test public void test leave outer join throw exception stream operator join operator new operator flink join type left left be small two input stream task test harness binary row datum binary row datum join row datum test harness build sort merge join join operator concurrent link queue object expect output new concurrent link queue expect output add new stream record new row a expected output add new stream record new row b expect output add new stream record new row d 0null test harness wait for task completion test harness util assert output equal output be not correct expected output transform to binary test harness get output test public void test right outer join throw exception stream operator join operator new operator flink join type right left be small two input stream task test harness binary row datum binary row datum join row datum test harness build sort merge join join operator concurrent link queue object expect output new concurrent link queue expect output add new stream record new row a expected output add new stream record new row b expect output add new stream record new row c 2null test harness wait for task completion test harness util assert output equal output be not correct expected output transform to binary test harness get output test public void test full join throw exception stream operator join operator new operator flink join type full left be small two input stream task test harness binary row datum binary row datum join row datum test harness build sort merge join join operator concurrent link queue object expect output new concurrent link queue expect output add new stream record new row a expected output add new stream record new row b expect output add new stream record new row c 2null expect output add new stream record new row d 0null test harness wait for task completion test harness util assert output equal output be not correct expected output transform to binary test harness get output private two input stream task test harness binary row datum binary row datum join row datum build sort merge join stream operator operator throw exception final two input stream task test harness binary row datum binary row datum join row datum test harness new two input stream task test harness two input stream task new new int type info type information type info join info test harness memory size test harness setup output for singleton operator chain test harness get stream config set stream operator operator test harness get stream config set operator i d new operator i d test harness get stream config set manage memory fraction 0.99 long initial time 0 l test harness invoke test harness wait for task run test harness process element new stream record new row a initial time test harness process element new stream record new row d initial time test harness process element new stream record new row a initial time test harness process element new stream record new row b initial time test harness process element new stream record new row c initial time test harness process element new stream record new row b initial time test harness wait for input processing test harness end input return test harness static stream operator new operator flink join type type boolean left be smaller return new sort merge join operator type leave be smaller new generate join condition new object override public join condition new instance class loader class loader return new int2 hash join operator test true condition new generate projection new object override public projection new instance class loader class loader return new my projection new generate projection new object override public projection new instance class loader class loader return new my projection new generate normalize key computer override public normalize key computer new instance class loader class loader return new string normalize key computer new generate record comparator new object override public record comparator new instance class loader class loader return new string record comparator new generate normalize key computer override public normalize key computer new instance class loader class loader return new string normalize key computer new generate record comparator new object override public record comparator new instance class loader class loader return new string record comparator new generate record comparator new object override public record comparator new instance class loader class loader return new string record comparator new boolean true 
binary external sorter test run with parameterized class public class binary external sorter test private static final int memory size private static final logger log logger factory get logger binary external sorter test class private i o manager io manager private memory manager memory manager private binary row datum serializer serializer private configuration conf public binary external sorter test boolean spill compress boolean async merge io manager new i o manager async conf new configuration if spill compress conf set boolean execution config option table exec spill compression enable false if async merge conf set boolean execution config option table exec sort async merge enable true parameterized parameter name spill compress async merge public static collection boolean parameter return array as list new boolean false false new boolean false true new boolean true false new boolean true true private static string get string int count string builder builder new string builder for int i i i builder append count return builder to string suppress warning unchecked before public void before test this memory manager memory manager builder new builder set memory size memory size build this serializer new binary row datum serializer this conf set integer execution config option table exec sort max num file handle after public void after test throw exception this io manager close if this memory manager null assert assert true memory leak not all segment have be return to the memory manager this memory manager verify empty this memory manager shutdown this memory manager null test public void test sort two buffer in memory throw exception int size mock binary row reader reader new mock binary row reader size log debug initialize sortmerger there be two sort buffer if sort memory memory manager memory manager memory manager builder new builder set memory size build long min memory size memory manager compute number of page memory manager default page size binary external sorter sorter new binary external sorter new object memory manager min memory size this io manager abstract row datum serializer serializer serializer int normalize key computer instance int record comparator instance conf 1f sorter start thread sorter write reader mutable object iterator binary row datum iterator sorter get iterator binary row datum next serializer create instance for int i i size i next iterator next next assert assert equal i next get int assert assert equal get string i next get string to string sorter close assert assert true memory manager verify empty memory manager shutdown test public void test sort throw exception int size mock binary row reader reader new mock binary row reader size log debug initialize sortmerger long min memory size memory manager compute number of page 0.9 memory manager default page size binary external sorter sorter new binary external sorter new object this memory manager min memory size this io manager abstract row datum serializer serializer serializer int normalize key computer instance int record comparator instance conf 0.7 f sorter start thread sorter write reader mutable object iterator binary row datum iterator sorter get iterator binary row datum next serializer create instance for int i i size i next iterator next next assert assert equal i next get int assert assert equal get string i next get string to string sorter close test public void test sort int string with repeat throw exception int size log debug initialize sortmerger long min memory size memory manager compute number of page 0.9 memory manager default page size binary external sorter sorter new binary external sorter new object this memory manager min memory size this io manager abstract row datum serializer serializer serializer new int normalize key computer override public boolean be key fully determine return false int record comparator instance conf 0.7 f sorter start thread sorter write new mock binary row reader size sorter write new mock binary row reader size sorter write new mock binary row reader size mutable object iterator binary row datum iterator sorter get iterator binary row datum next serializer create instance for int i i size i for int j j j next iterator next next assert assert equal i next get int assert assert equal get string i next get string to string sorter close test public void test spill throw exception int size mock binary row reader reader new mock binary row reader size log debug initialize sortmerger long min memory size memory manager compute number of page 0.1 memory manager default page size binary external sorter sorter new binary external sorter new object this memory manager min memory size this io manager abstract row datum serializer serializer serializer int normalize key computer instance int record comparator instance conf 0.7 f sorter start thread sorter write reader mutable object iterator binary row datum iterator sorter get iterator binary row datum next serializer create instance for int i i size i next iterator next next assert assert equal i next get int assert assert equal get string i next get string to string sorter close test public void test spill desc throw exception int size mock binary row reader reader new mock binary row reader size log debug initialize sortmerger long min memory size memory manager compute number of page 0.1 memory manager default page size binary external sorter sorter new binary external sorter new object this memory manager min memory size this io manager abstract row datum serializer serializer serializer new int normalize key computer override public boolean invert key return true new int record comparator override public int compare row datum o1 row datum o2 return super compare o1 o2 conf 0.7 f sorter start thread sorter write reader mutable object iterator binary row datum iterator sorter get iterator list tuple2 integer string datum new array list for int i i size i datum add new tuple2 i get string i datum sort o1 o2 o1 f0 compare to o2 f0 binary row datum next serializer create instance for int i i size i next iterator next next assert assert equal int datum get i f0 next get int assert assert equal datum get i f1 next get string to string sorter close test public void test merge many time throw exception int size mock binary row reader reader new mock binary row reader size log debug initialize sortmerger long min memory size memory manager compute number of page 0.01 memory manager default page size conf set integer execution config option table exec sort max num file handle binary external sorter sorter new binary external sorter new object this memory manager min memory size this io manager abstract row datum serializer serializer serializer int normalize key computer instance int record comparator instance conf 0.7 f sorter start thread sorter write reader mutable object iterator binary row datum iterator sorter get iterator binary row datum next serializer create instance for int i i size i next iterator next next assert assert equal i next get int assert assert equal get string i next get string to string sorter close test public void test spill random throw exception int size mock binary row reader reader new mock binary row reader size log debug initialize sortmerger long min memory size memory manager compute number of page 0.1 memory manager default page size binary external sorter sorter new binary external sorter new object this memory manager min memory size this io manager abstract row datum serializer serializer serializer int normalize key computer instance int record comparator instance conf 0.7 f sorter start thread list binary row datum datum new array list binary row datum row serializer create instance for int i i size i row reader next row datum add row copy collection shuffle datum for int i i size i sorter write datum get i mutable object iterator binary row datum iterator sorter get iterator datum sort comparator compare int o o get int binary row datum next serializer create instance for int i i size i next iterator next next assert assert equal datum get i get int next get int assert assert equal datum get i get string next get string sorter close mock reader for binary row public class mock binary row reader implement mutable object iterator binary row datum private int size private int count private binary row datum row private binary row writer writer public mock binary row reader int size this size size this row new binary row datum this writer new binary row writer row override public binary row datum next binary row datum reuse return next override public binary row datum next if count size return null writer reset writer write int count writer write string string datum from string get string count writer complete count return row 
buffer k v external sorter test run with parameterized class public class buffer k v external sorter test private static final int page size memory manager default page size private i o manager io manager private binary row datum serializer key serializer private binary row datum serializer value serializer private normalize key computer computer private record comparator comparator private int spill number private int record number per file private configuration conf public buffer k v external sorter test int spill number int record number per file boolean spill compress io manager new i o manager async conf new configuration conf set integer execution config option table exec sort max num file handle if spill compress conf set boolean execution config option table exec spill compression enable false this spill number spill number this record number per file record number per file parameterized parameter public static list object get datum size list object para new array list paras add new object true paras add new object false paras add new object true paras add new object false paras add new object true paras add new object false return paras before public void before test throw instantiation exception illegal access exception this io manager new i o manager async this key serializer new binary row datum serializer this value serializer new binary row datum serializer this computer int normalize key computer instance this comparator int record comparator instance after public void after test throw exception this io manager close test public void test throw exception buffer k v external sorter sorter new buffer k v external sorter io manager key serializer value serializer computer comparator page size conf test memory segment pool pool new test memory segment pool page size list integer expect new array list for int i i spill number i array list memory segment segment new array list simple collect output view out new simple collect output view segment pool page size write k v to buffer key serializer value serializer out expect record number per file sorter sort and spill segment record number per file pool collection sort expect mutable object iterator tuple2 binary row datum binary row datum iterator sorter get k v iterator tuple2 binary row datum binary row datum kv new tuple2 key serializer create instance value serializer create instance int count while kv iterator next kv null assert assert equal int expect get count kv f0 get int assert assert equal expect get count kv f1 get int count assert assert equal expect size count sorter close private void write k v to buffer binary row datum serializer key serializer binary row datum serializer value serializer simple collect output view out list integer expected int length throw i o exception random random new random int string length for int i i length i binary row datum key random row random string length binary row datum val key copy val set int val get int expected add key get int key serializer serialize to page key out value serializer serialize to page val out public static binary row datum random row random random int string length binary row datum row new binary row datum binary row writer writer new binary row writer row writer write int random next int writer write string string datum from string random string util random string length writer complete return row 
window operator test run with parameterized class public class window operator test parameterized parameter name be table aggregate public static collection object run mode return array as list new object false new object true private final boolean be table aggregate private static final sum and count agg time window sum and count agg time window new sum and count agg time window private static final sum and count table agg time window sum and count table agg time window new sum and count table agg time window private static final sum and count agg count window sum and count agg count window new sum and count agg count window private static final sum and count table agg count window sum and count table agg count window new sum and count table agg count window public window operator test boolean be table aggregate this be table aggregate be table aggregate private namespace agg handle function base get time window agg function return be table aggregate sum and count table agg time window sum and count agg time window private namespace agg handle function base get count window agg function return be table aggregate sum and count table agg count window sum and count agg count window for count if close be call the correct number of time on the sum reducer private static atomic integer close call new atomic integer private logical type input field type new logical type new var char type var char type max length new int type new big int type private row datum type info output type new row datum type info new var char type var char type max length new big int type new big int type new big int type new big int type new big int type private logical type agg result type new logical type new big int type new big int type private logical type acc type new logical type new big int type new big int type private logical type window type new logical type new big int type new big int type new big int type private generic row equaliser equaliser new generic row equaliser acc type window type private binary row datum key selector key selector new binary row datum key selector new int input field type private type information row datum key type key selector get produce type private row datum harness assertor assertor new row datum harness assertor output type get field type new generic row record sort comparator new var char type var char type max length private concurrent link queue object double record boolean be double stream record row data record concurrent link queue object result new concurrent link queue result add record if be double result add record return result test public void test event time slide window throw exception close call set window operator operator window operator builder builder with input field input field type slide duration of seconds duration of seconds with event time aggregate and build get time window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator test harness open process element concurrent link queue object expect output new concurrent link queue add element out of order test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key1 20 l test harness process element insert record key1 0 l test harness process element insert record key1 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process watermark new watermark expect output add all double record be table aggregate insert record key1 3 l 3 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add all double record be table aggregate insert record key1 3 l 3 l l l l expect output add all double record be table aggregate insert record key2 3 l 3 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add all double record be table aggregate insert record key1 3 l 3 l 0 l l l expect output add all double record be table aggregate insert record key2 3 l 3 l 0 l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output do a snapshot close and restore again operator subtask state snapshot test harness snapshot 0 l test harness close expect output clear test harness create test harness operator test harness setup test harness initialize state snapshot test harness open test harness process watermark new watermark expect output add all double record be table aggregate insert record key2 5 l 5 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add all double record be table aggregate insert record key2 2 l 2 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add all double record be table aggregate insert record key2 2 l 2 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output those don t have any effect test harness process watermark new watermark test harness process watermark new watermark expect output add new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness close we close once in the rest assert equal close be not call close call get test public void test processing time slide window throw throwable close call set window operator operator window operator builder builder with input field input field type slide duration of seconds duration of seconds with processing time aggregate and build get time window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open timestamp be ignore in processing time test harness set processing time test harness process element insert record key2 long max value test harness set processing time expect output add all double record be table aggregate insert record key2 1 l 1 l l l l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key2 long max value test harness process element insert record key2 long max value test harness set processing time expect output add all double record be table aggregate insert record key2 3 l 3 l l l l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key1 long max value test harness process element insert record key1 long max value test harness set processing time expect output add all double record be table aggregate insert record key2 3 l 3 l 0 l l l expect output add all double record be table aggregate insert record key1 2 l 2 l 0 l l l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key1 long max value test harness process element insert record key1 long max value test harness process element insert record key1 long max value test harness set processing time expect output add all double record be table aggregate insert record key2 2 l 2 l l l l expect output add all double record be table aggregate insert record key1 5 l 5 l l l l expect output add all double record be table aggregate insert record key1 5 l 5 l l l l expect output add all double record be table aggregate insert record key1 3 l 3 l l l l assertor assert output equal sort output be not correct expected output test harness get output test harness close test suppress warning unchecked public void test event time tumble window throw exception close call set window operator operator window operator builder builder with input field input field type tumble duration of seconds with event time aggregate and build get time window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open add element out of order test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key1 20 l test harness process element insert record key1 0 l test harness process element insert record key1 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output do a snapshot close and restore again operator subtask state snapshot test harness snapshot 0 l test harness close expect output clear test harness create test harness operator test harness setup test harness initialize state snapshot test harness open test harness process watermark new watermark expect output add all double record be table aggregate insert record key1 3 l 3 l 0 l l l expect output add all double record be table aggregate insert record key2 3 l 3 l 0 l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add all double record be table aggregate insert record key2 2 l 2 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output those don t have any effect test harness process watermark new watermark test harness process watermark new watermark expect output add new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness close we close once in the rest assert equal close be not call close call get test suppress warning unchecked public void test event time tumble window with early firing throw exception close call set window operator operator window operator builder builder with input field input field type tumble duration of seconds with event time trigger event time trigger after end of window with early firing process time trigger every duration of seconds produce update aggregate new sum and count agg time window equaliser acc type agg result type window type build one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open test harness set processing time 0 l add element out of order test harness process element insert record key2 l test harness process element insert record key2 l test harness set processing time 1 l test harness process element insert record key1 20 l test harness process element insert record key1 0 l test harness process element insert record key1 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness set processing time expect output add insert record key2 2 l 2 l l l l test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness set processing time expect output add insert record key1 3 l 3 l 0 l l l expect output add insert record key2 3 l 3 l 0 l l l test harness process watermark new watermark test harness set processing time expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output do a snapshot close and restore again operator subtask state snapshot test harness snapshot 0 l test harness close expect output clear new a test harness test harness create test harness operator test harness setup test harness initialize state snapshot test harness open test harness set processing time test harness process watermark new watermark on time fire key1 key2 window but because of early firing on time result be ignore expected output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key2 l test harness process watermark new watermark test harness set processing time expect output add new watermark expect output add update before record key2 2 l 2 l l l l expect output add update after record key2 3 l 3 l l l l assertor assert output equal sort output be not correct expected output test harness get output late arrival test harness process element insert record key2 l test harness process element insert record key1 l drop late element assertor assert output equal sort output be not correct expected output test harness get output test harness set processing time test harness process element insert record key2 l test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add update before record key2 3 l 3 l l l l expect output add update after record key2 4 l 4 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness set processing time assertor assert output equal sort output be not correct expected output test harness get output those don t have any effect test harness process watermark new watermark test harness process watermark new watermark expect output add new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output late arrival drop test harness process element insert record key2 l test harness process element insert record key1 l assertor assert output equal sort output be not correct expected output test harness get output test harness close we close once in the rest assert equal close be not call close call get test suppress warning unchecked public void test event time tumble window with early and late firing throw exception close call set window operator operator window operator builder builder with input field input field type tumble duration of seconds with event time trigger event time trigger after end of window with early firing process time trigger every duration of seconds with late firing element trigger every with allow lateness duration of seconds produce update aggregate new sum and count agg time window equaliser acc type agg result type window type build one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open test harness set processing time 0 l add element out of order test harness process element insert record key2 l test harness process element insert record key2 l test harness set processing time 1 l test harness process element insert record key1 20 l test harness process element insert record key1 0 l test harness process element insert record key1 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness set processing time expect output add insert record key2 2 l 2 l l l l test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness set processing time expect output add insert record key1 3 l 3 l 0 l l l expect output add insert record key2 3 l 3 l 0 l l l test harness process watermark new watermark test harness set processing time expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output do a snapshot close and restore again operator subtask state snapshot test harness snapshot 0 l test harness close expect output clear new a test harness test harness create test harness operator test harness setup test harness initialize state snapshot test harness open test harness set processing time test harness process watermark new watermark on time fire key1 key2 window but because of early firing on time result be ignore expected output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key2 l test harness process watermark new watermark test harness set processing time expect output add new watermark expect output add update before record key2 2 l 2 l l l l expect output add update after record key2 3 l 3 l l l l assertor assert output equal sort output be not correct expected output test harness get output late arrival test harness process element insert record key2 l expect output add update before record key2 3 l 3 l 0 l l l expect output add update after record key2 4 l 4 l 0 l l l assertor assert output equal sort output be not correct expected output test harness get output late arrival test harness process element insert record key1 l expect output add update before record key1 3 l 3 l 0 l l l expect output add update after record key1 4 l 4 l 0 l l l assertor assert output equal sort output be not correct expected output test harness get output test harness set processing time test harness process element insert record key2 l test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness process watermark new watermark expect output add update before record key2 3 l 3 l l l l expect output add update after record key2 4 l 4 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness set processing time assertor assert output equal sort output be not correct expected output test harness get output those don t have any effect test harness process watermark new watermark test harness process watermark new watermark expect output add new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output late arrival but too late drop test harness process element insert record key2 l test harness process element insert record key1 l assertor assert output equal sort output be not correct expected output test harness get output test harness close we close once in the rest assert equal close be not call close call get test suppress warning unchecked public void test processing time tumble window throw exception close call set window operator operator window operator builder builder with input field input field type tumble duration of seconds with processing time aggregate and build get time window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open test harness set processing time timestamp be ignore in processing time test harness process element insert record key2 long max value test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key1 l test harness process element insert record key1 l test harness set processing time expect output add all double record be table aggregate insert record key2 3 l 3 l 0 l l l expect output add all double record be table aggregate insert record key1 2 l 2 l 0 l l l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key1 l test harness process element insert record key1 l test harness process element insert record key1 l test harness set processing time expect output add all double record be table aggregate insert record key1 3 l 3 l l l l assert equal 0 l operator get watermark latency get value assertor assert output equal sort output be not correct expected output test harness get output test harness close test suppress warning unchecked public void test event time session window throw exception close call set window operator operator window operator builder builder with input field input field type session duration of seconds with event time aggregate and build get time window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open add element out of order test harness process element insert record key2 0 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key1 10 l test harness process element insert record key1 l do a snapshot close and restore again operator subtask state snapshot v2 test harness snapshot 0 l test harness close expect output clear test harness create test harness operator test harness setup test harness initialize state snapshot v2 test harness open assert equal 0 l operator get watermark latency get value test harness process element insert record key1 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process watermark new watermark expect output add all double record be table aggregate insert record key1 6 l 3 l 10 l l l expect output add all double record be table aggregate insert record key2 6 l 3 l 0 l l l expect output add all double record be table aggregate insert record key2 20 l 4 l l l l expect output add new watermark add a late datum test harness process element insert record key1 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process watermark new watermark expect output add all double record be table aggregate insert record key2 30 l 2 l l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness set processing time assert equal 1 l operator get watermark latency get value test harness close we close once in the rest assert equal close be not call close call get assert equal operator get num late record drop get count test public void test processing time session window throw throwable close call set window operator operator window operator builder builder with input field input field type session duration of seconds with processing time aggregate and build get time window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator row datum harness assertor assertor new row datum harness assertor output type get field type new generic row record sort comparator new var char type var char type max length concurrent link queue object expect output new concurrent link queue test harness open timestamp be ignore in processing time test harness set processing time test harness process element insert record key2 1 l test harness set processing time test harness process element insert record key2 l test harness set processing time expect output add all double record be table aggregate insert record key2 2 l 2 l 3 l l l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key1 l test harness process element insert record key1 l test harness process element insert record key1 l test harness set processing time expect output add all double record be table aggregate insert record key2 2 l 2 l l l l expect output add all double record be table aggregate insert record key1 3 l 3 l l l l assertor assert output equal sort output be not correct expected output test harness get output test harness close this test a custom session window assigner that assign some element to point window window that have the same timestamp for start and end p in this test element that have as the second tuple field will be put into a point window test suppress warning unchecked public void test point session throw exception close call set window operator operator window operator builder builder with input field input field type assigner new point session window assigner with event time aggregate and build get time window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open add element out of order test harness process element insert record key2 0 l test harness process element insert record key2 l do a snapshot close and restore again operator subtask state snapshot test harness snapshot 0 l test harness close test harness create test harness operator test harness setup test harness initialize state snapshot test harness open test harness process element insert record key2 l test harness process element insert record key1 10 l test harness process element insert record key1 l test harness process element insert record key1 l test harness process watermark new watermark expect output add all double record be table aggregate insert record key1 36 l 3 l 10 l l l expect output add all double record be table aggregate insert record key2 67 l 3 l 0 l l l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output test harness close we close once in the rest assert equal close be not call close call get test public void test lateness throw exception window operator operator window operator builder builder with input field input field type tumble duration of seconds with event time with allow lateness duration of millis produce update aggregate and build new sum and count agg time window equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open test harness process element insert record key2 l test harness process watermark new watermark expect output add new watermark test harness process element insert record key2 l test harness process watermark new watermark expect output add insert record key2 2 l 2 l 0 l l l expect output add new watermark this will not be drop because window max timestamp allow lateness current watermark test harness process element insert record key2 l test harness process watermark new watermark this be and not because the trigger fire and purge expected output add update before record key2 2 l 2 l 0 l l l expect output add update after record key2 3 l 3 l 0 l l l expect output add new watermark this will be drop because window max timestamp allow lateness current watermark test harness process element insert record key2 l test harness process watermark new watermark expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output assert equal operator get num late record drop get count test harness close test public void test cleanup time overflow throw exception long window size long lateness window operator operator window operator builder builder with input field input field type tumble duration of millis window size with event time with allow lateness duration of millis lateness produce update aggregate and build new sum and count agg time window equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness new keyed one input stream operator test harness row datum row datum row datum operator key selector key type test harness open concurrent link queue object expect new concurrent link queue window assigner time window window assigner tumble window assigner of duration of millis window size long timestamp long max value collection time window window window assigner assign window generic row datum of from string key2 timestamp time window window window iterator next test harness process element insert record key2 timestamp the garbage collection timer would wrap around assert true window max timestamp lateness window max timestamp and it would prematurely fire with watermark long max value assert true window max timestamp lateness long max value if we don t correctly prevent wrap around in the garbage collection timer this watermark will clean we window state for the just add element window test harness process watermark new watermark long max value this watermark be before the end timestamp of we only window assert true long max value window max timestamp assert true window max timestamp long max value push in a watermark that will trigger computation of we window test harness process watermark new watermark window max timestamp expect add new watermark long max value expect add insert record key2 1 l 1 l window get start window get end window max timestamp expect add new watermark window max timestamp assertor assert output equal sort output be not correct expected test harness get output test harness close test public void test cleanup timer with empty reduce state for tumble window throw exception final int window size final long lateness window operator operator window operator builder builder with input field input field type tumble duration of seconds window size with event time with allow lateness duration of millis lateness produce update aggregate and build new sum and count agg time window equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator test harness open concurrent link queue object expect new concurrent link queue normal element test harness process element insert record key2 l test harness process watermark new watermark test harness process watermark new watermark test harness process watermark new watermark test harness process watermark new watermark expect add new watermark expect add insert record key2 1 l 1 l 0 l l l expect add new watermark here it fire and purge expect add new watermark here be the cleanup timer expect add new watermark assertor assert output equal sort output be not correct expected test harness get output test harness close test public void test tumble count window throw exception close call set final int window size logical type window type new logical type new big int type window operator operator window operator builder builder with input field input field type count window window size aggregate and build get count window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open test harness process element insert record key2 0 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key1 10 l test harness process element insert record key1 l test harness process watermark new watermark test harness set processing time l expect output add all double record be table aggregate insert record key2 6 l 3 l 0 l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output do a snapshot close and restore again operator subtask state snapshot v2 test harness snapshot 0 l test harness close expect output clear test harness create test harness operator test harness setup test harness initialize state snapshot v2 test harness open test harness process element insert record key1 l expect output add all double record be table aggregate insert record key1 5 l 3 l 0 l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l expect output add all double record be table aggregate insert record key2 14 l 3 l 1 l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key1 l test harness process element insert record key2 l test harness process element insert record key2 l expect output add all double record be table aggregate insert record key2 36 l 3 l 2 l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key1 l test harness process element insert record key1 l expect output add all double record be table aggregate insert record key1 7 l 3 l 1 l assertor assert output equal sort output be not correct expected output test harness get output test harness close we close once in the rest assert equal close be not call close call get test public void test slide count window throw exception close call set final int window size final int window slide logical type window type new logical type new big int type window operator operator window operator builder builder with input field input field type count window window size window slide aggregate and build get count window agg function equaliser acc type agg result type window type one input stream operator test harness row datum row datum test harness create test harness operator concurrent link queue object expect output new concurrent link queue test harness open test harness process element insert record key2 0 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key1 10 l test harness process element insert record key1 l test harness process watermark new watermark test harness set processing time l expect output add all double record be table aggregate insert record key2 15 l 5 l 0 l expect output add new watermark assertor assert output equal sort output be not correct expected output test harness get output do a snapshot close and restore again operator subtask state snapshot v2 test harness snapshot 0 l test harness close expect output clear test harness create test harness operator test harness setup test harness initialize state snapshot v2 test harness open test harness process element insert record key1 l test harness process element insert record key1 l test harness process element insert record key1 l expect output add all double record be table aggregate insert record key1 15 l 5 l 0 l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l test harness process element insert record key2 l expect output add all double record be table aggregate insert record key2 30 l 5 l 1 l assertor assert output equal sort output be not correct expected output test harness get output test harness process element insert record key1 l test harness process element insert record key1 l test harness process element insert record key1 l test harness process element insert record key2 l test harness process element insert record key2 l expect output add all double record be table aggregate insert record key1 30 l 5 l 1 l expect output add all double record be table aggregate insert record key2 45 l 5 l 2 l assertor assert output equal sort output be not correct expected output test harness get output test harness close we close once in the rest assert equal close be not call close call get private static class point session window assigner extend session window assigner private static final long serial version u i d 1 l private final long session timeout private point session window assigner long session timeout super session timeout true this session timeout session timeout private point session window assigner long session timeout boolean be event time super session timeout be event time this session timeout session timeout override suppress warning unchecked public collection time window assign window row datum element long timestamp int second element get int if second return collection singleton list new time window timestamp timestamp return collection singleton list new time window timestamp timestamp session timeout override public session window assigner with event time return new point session window assigner session timeout true override public session window assigner with processing time return new point session window assigner session timeout false sum count window start window end private static class sum and count agg time window extend sum and count agg base time window implement namespace agg handle function time window private static final long serial version u i d l override public row datum get value time window namespace throw exception if open call fail open be not call generic row datum row new generic row datum if sum be null row set field sum if count be null row set field count row set field namespace get start row set field namespace get end row set field namespace max timestamp return row sum count window id private static class sum and count agg count window extend sum and count agg base count window implement namespace agg handle function count window private static final long serial version u i d l override public row datum get value count window namespace throw exception if open call fail open be not call generic row datum row new generic row datum if sum be null row set field sum if count be null row set field count row set field namespace get id return row table aggregate sum count window start window end private static class sum and count table agg time window extend sum and count agg base time window implement namespace table agg handle function time window private static final long serial version u i d l override public void emit value time window namespace row datum key collector row datum out throw exception if open call fail open be not call generic row datum row new generic row datum if sum be null row set field sum if count be null row set field count row set field namespace get start row set field namespace get end row set field namespace max timestamp result replace key row simply output two line out collect result out collect result table aggregate sum count window id private static class sum and count table agg count window extend sum and count agg base count window implement namespace table agg handle function count window private static final long serial version u i d l override public void emit value count window namespace row datum key collector row datum out throw exception if open call fail open be not call generic row datum row new generic row datum if sum be null row set field sum if count be null row set field count row set field namespace get id result replace key row simply output two line out collect result out collect result private static class sum and count agg base w extend window boolean open call long sum boolean sum be null long count boolean count be null protected transient join row datum result public void open state datum view store store throw exception open call true result new join row datum public void set accumulator w namespace row datum acc throw exception if open call fail open be not call sum be null acc be null at if sum be null sum acc get long count be null acc be null at if count be null count acc get long public void accumulate row datum input row throw exception if open call fail open be not call boolean input be null input row be null at if input be null sum input row get int count public void retract row datum input row throw exception if open call fail open be not call boolean input be null input row be null at if input be null sum input row get int count public void merge w w row datum other acc throw exception if open call fail open be not call boolean sum be null2 other acc be null at if sum be null2 sum other acc get long boolean count be null2 other acc be null at if count be null2 count other acc get long public row datum create accumulator if open call fail open be not call generic row datum acc new generic row datum acc set field 0 l acc set field 0 l return acc public row datum get accumulator throw exception if open call fail open be not call generic row datum row new generic row datum if sum be null row set field sum if count be null row set field count return row public void cleanup w window public void close close call increment and get private static class generic row equaliser implement record equaliser private final logical type field type generic row equaliser logical type agg result type logical type window type int size agg result type length window type length this field type new logical type size for int i i size i if i agg result type length field type i agg result type i else field type i window type i agg result type length override public boolean equal row datum row1 row datum row2 generic row datum leave row datum util to generic row row1 field type generic row datum right row datum util to generic row row2 field type return leave equal right private one input stream operator test harness row datum row datum create test harness window operator operator throw exception return new keyed one input stream operator test harness row datum row datum row datum operator key selector key type 
datum type precision fixer test run with parameterized class public class datum type precision fixer test parameterized parameter name index from to public static list test spec test datum return array as list test spec fix type big dec logical type new decimal type expect datum type decimal test spec fix type sql timestamp logical type new timestamp type expect datum type timestamp bridge to timestamp class test spec fix type sql time logical type new time type expect datum type time bridge to time class test spec fix type sql date logical type new date type expect datum type date bridge to date class test spec fix type local date time logical type new timestamp type expect datum type timestamp test spec fix type local time logical type new time type expect datum type time test spec fix type local date logical type new date type expect datum type date test spec fix type instant logical type new local zone timestamp type expect datum type timestamp with local time zone test spec fix type string logical type new var char type var char type max length expect datum type string nest test spec fix type row name new string field1 field2 type map type big dec type sql timestamp type object array type sql time logical type new row type array as list new row type row field field1 new map type new decimal type new timestamp type new row type row field field2 new array type new time type expect datum type row field field1 datum type map datum type decimal datum type timestamp bridge to timestamp class field field2 datum type array datum type time bridge to time class parameterize parameter public test spec test spec rule public expect exception throw expect exception none test public void test precision fix datum type datum type from legacy info to datum type test spec type info data type new datum type datum type accept new datum type precision fixer test spec logical type assert equal test spec expect type new datum type private static class test spec private final type information type info private final logical type logical type private final datum type expect type private test spec type information type info logical type logical type datum type expect type this type info check not null type info this logical type check not null logical type this expect type check not null expect type private static class test spec private type information type info private logical type logical type static test spec fix type information type info test spec test spec new test spec test spec type info type info return test spec test spec logical type logical type logical type this logical type logical type return this test spec expect datum type expect type return new test spec type info logical type expect type 
logical type assignable test run with parameterized class public class logical type assignable test parameter name index compatible public static list object test datum return array as list new object new char type new char type true new char type new var char type true new var char type new var char type true new boolean type new boolean type false true new binary type new binary type true new var binary type new var binary type true new decimal type new decimal type true new tiny int type new tiny int type false true new small int type new small int type false true new int type new int type false true new big int type new big int type false true new float type new float type false true new double type new double type false true new date type new date type false true new time type new time type false new timestamp type new timestamp type true new zone timestamp type new zone timestamp type false new zone timestamp type false timestamp kind proctime new zone timestamp type false new year month interval type year month interval type year month resolution year to month new year month interval type year month interval type year month resolution month false new day time interval type day time interval type day time resolution day to second new day time interval type day time interval type day time resolution day to second false new array type new timestamp type new array type new small int type false new multiset type new timestamp type new multiset type new small int type false new map type new var char type new timestamp type new map type new var char type new timestamp type true new row type array as list new row type row field a new var char type new row type row field b new var char type new row type row field c new var char type new row type row field d new timestamp type new row type array as list new row type row field a new var char type new row type row field b new var char type new row type row field c new var char type new row type row field d new timestamp type field name doesn t matter true new row type array as list new row field f1 new int type new row field f2 new var char type new row type array as list new row field f1 new int type new row field f2 new boolean type false new array type new row type array as list new row field f1 new int type new row field f2 new int type new array type new row type array as list new row field f3 new int type new row field f4 new int type true new map type new int type new row type array as list new row field f1 new int type new row field f2 new int type new map type new int type new row type array as list new row field f3 new int type new row field f4 new int type true new multiset type new row type array as list new row field f1 new int type new row field f2 new int type new multiset type new row type array as list new row field f1 new int type new row field f2 new int type true new type information raw type type generic planner type util class new type information raw type type generic object class false create user type new int type new var char type create user type new int type new var char type true create distinct type new decimal type create distinct type new decimal type true parameter public logical type source type parameter public logical type target type parameter public boolean equal test public void test be type compatible assert that planner type util be assignable source type target type equal to equal assert true planner type util be assignable source type source type copy assert true planner type util be assignable target type target type copy private static distinct type create distinct type logical type source type return distinct type new builder object identifier of cat db uuid random u u i d to string source type description money type desc build private static structure type create user type logical type child return structure type new builder object identifier of cat db user user class attribute array stream child map lt new structured type structure attribute uuid random u u i d to string lt collect collector to list description user type desc set final true set instantiable true build private static final class user public int setting 
row datum serializer test run with parameterized class public class row datum serializer test extend serializer test instance row datum rule public expect exception throw expect exception none private final row datum serializer serializer private final row datum test datum public row datum serializer test row datum serializer serializer row datum test datum super new deeply equal checker with custom check o1 o2 o1 instanceof row datum o2 instanceof row datum o1 o2 checker deep equal row datum row datum o1 row datum o2 row datum serializer serializer duplicate row datum serializer serializer duplicate serializer row datum class test datum this serializer serializer this test datum test datum parameterized parameter public static collection object parameter return array as list test row datum serializer test large row datum serializer test row datum serializer with complex type test row datum serializer with kryo private static object test row datum serializer row datum type info type info new row datum type info new int type new var char type var char type max length generic row datum row1 new generic row datum row1 set field row1 set field from string a generic row datum row2 new generic row datum row2 set field row2 set field null row datum serializer serializer type info create serializer new execution config return new object serializer new row datum row1 row2 private static object test large row datum serializer row datum type info type info new row datum type info new int type new int type new int type new int type new int type new int type new int type new int type new int type new int type new int type new int type new var char type var char type max length generic row datum row new generic row datum row set field row set field null row set field null row set field null row set field null row set field null row set field null row set field null row set field null row set field null row set field null row set field from string test row datum serializer serializer type info create serializer new execution config return new object serializer new row datum row private static object test row datum serializer with complex type row datum type info type info new row datum type info new int type new double type new var char type var char type max length new array type new int type new map type new int type new int type generic row datum datum new generic row datum create row null null null null null create row null null null null create row 0.0 null null null create row 0.0 from string a null null create row 0.0 from string a null null create row 1.0 from string a null null create row 1.0 from string b null null create row 1.0 from string b create array create map new int new int create row 1.0 from string b create array create map new int new int create row 1.0 from string b create array create map new int new int create row 1.0 from string b create array create map new int new int create row 1.0 from string b create array create map new int new int create row 1.0 from string b create array create map new int new int row datum serializer serializer type info create serializer new execution config return new object serializer datum private static object test row datum serializer with kryo raw value datum serializer wrap string raw value serializer new raw value datum serializer new kryo serializer wrap string class new execution config row datum serializer serializer new row datum serializer new logical type new raw type raw value datum class raw value serializer new type serializer raw value serializer generic row datum row new generic row datum row set field raw value datum from object new wrap string a return new object serializer new generic row datum row private static binary array datum create array int int binary array data array new binary array datum binary array writer writer new binary array writer array int length for int i i int length i writer write int i int i writer complete return array private static binary map datum create map int key int value return binary map datum value of create array key create array value private static generic row datum create row object f0 object f1 object f2 object f3 object f4 generic row datum row new generic row datum row set field f0 row set field f1 row set field f2 row set field f3 row set field f4 return row private static boolean deep equal row datum row datum should row datum be row datum serializer serializer1 row datum serializer serializer2 if should get arity be get arity return false binary row datum row1 serializer1 to binary row should binary row datum row2 serializer2 to binary row be return object equal row1 row2 private void check deep equal row datum should row datum be boolean equal deep equal row datum should be row datum serializer serializer duplicate row datum serializer serializer duplicate assert assert true equal test public void test copy for row datum row test datum check deep equal row serializer copy row for row datum row test datum check deep equal row serializer copy row new generic row datum row get arity for row datum row test datum check deep equal row serializer copy serializer to binary row row new generic row datum row get arity for row datum row test datum check deep equal row serializer copy serializer to binary row row for row datum row test datum check deep equal row serializer copy serializer to binary row row new binary row datum row get arity test public void test wrong copy throw expect illegal argument exception class serializer copy new generic row datum serializer get arity test public void test wrong copy reuse throw expect illegal argument exception class for row datum row test datum check deep equal row serializer copy row new generic row datum row get arity class use for concurrent testing with kryo serializer private static class wrap string private final string content wrap string string content this content content 
timestamp datum serializer test run with parameterized class public class timestamp datum serializer test extend serializer test base timestamp datum parameterized parameter public static collection object datum return array as list new object private int precision public timestamp datum serializer test int precision super this precision precision override protect type serializer timestamp datum create serializer return new timestamp datum serializer precision override protect int get length return precision override protect class timestamp datum get type class return timestamp datum class override protect timestamp datum get test datum return new timestamp datum timestamp datum from epoch millis timestamp datum from epoch millis timestamp datum from epoch millis timestamp datum from epoch milli 
count collect i t case run with parameterized class public class count collect i t case extend multiple program test base public count collect i t case test execution mode mode super mode test public void test simple throw exception execution environment env execution environment get execution environment integer input datum set integer datum env from element input count long num entry datum count assert equal num entry collect array list integer list array list integer datum collect assert array equal input list to array test public void test advance throw exception execution environment env execution environment get execution environment env get config disable object reuse datum set integer datum env from element datum set integer data2 env from element datum set tuple2 integer integer data3 datum cross data2 count long num entry data3 count assert equal num entry collect array list tuple2 integer integer list array list tuple2 integer integer data3 collect set expect entry in a hash map to true hash map tuple2 integer integer boolean expect new hash map tuple2 integer integer boolean for int i i i for int j j j expect put new tuple2 integer integer i j true check if all entry be contain in the hash map for int i i i tuple2 integer integer element list get i assert equal expect get element true expect remove element 
event time window checkpoint i t case suppress warning serial run with parameterized class public class event time window checkpoint i t case extend test logger private static final int max mem state size private static final int parallelism private static final int num of task manager private testing server zk server public mini cluster with client resource mini cluster resource class rule public static temporary folder temp folder new temporary folder rule public test name name new test name private abstract state backend state backend parameterized parameter public state backend enum state backend enum enum state backend enum mem file rocksdb fully async rocksdb incremental rocksdb incremental zk mem async file async parameterized parameter name statebackend type public static collection state backend enum parameter return array as list state backend enum value protect state backend enum get state backend return this state backend enum protect final mini cluster with client resource get mini cluster resource return new mini cluster with client resource new mini cluster resource configuration builder set configuration get configuration safe set number task manager num of task manager set number slot per task manager parallelism num of task manager build private configuration get configuration safe try return get configuration catch exception e throw new assertion error could not initialize test e private configuration get configuration throw exception print a message when start a test method to avoid travis tt maven produce no output for xxx seconds tt message system out println start get class get canonical name name get method name testing ha scenario z k complete checkpoint store with incremental checkpoint state backend enum state backend enum get state backend if rocksdb incremental zk equal state backend enum zk server new testing server zk server start configuration config create cluster config switch state backend enum case mem this state backend new memory state backend max mem state size false break case file string backup temp folder new folder get absolute path this state backend new f state backend file backup false break case mem async this state backend new memory state backend max mem state size true break case file async string backup temp folder new folder get absolute path this state backend new f state backend file backup true break case rocksdb fully async setup rock d b config false break case rocksdb incremental test rock d b base timer service as well config set rock d b option timer service factory rock d b state backend priority queue state type rocksdb setup rock d b config true break case rocksdb incremental zk setup rock d b config true break default throw new illegal state exception no backend select return config private void setup rock d b configuration config int file size threshold boolean incremental checkpoint throw i o exception configure the manage memory size as 64 m b per slot for rock d b state backend config set task manager option manage memory size memory size of mebi byte parallelism num of task manager string rock db temp folder new folder get absolute path string backup temp folder new folder get absolute path we use the f backend with small threshold here to test the behaviour with file reference not self contain byte handle rock d b state backend rdb new rock d b state backend new f state backend new path file backup to uri file size threshold incremental checkpoint rdb set db storage path rock db this state backend rdb protect configuration create cluster config throw i o exception temporary folder temporary folder new temporary folder temporary folder create final file ha dir temporary folder new folder configuration config new configuration config set string akka option framesize string value of max mem state size b if zk server null config set string high availability option ha mode zookeeper config set string high availability option ha zookeeper quorum zk server get connect string config set string high availability option ha storage path ha dir to u be i to string return config before public void setup test cluster throw exception mini cluster resource get mini cluster resource mini cluster resource before after public void stop test cluster throw i o exception if mini cluster resource null mini cluster resource after mini cluster resource null if zk server null zk server stop zk server null print a message when finish a test method to avoid travis tt maven produce no output for xxx seconds tt message system out println finish get class get canonical name name get method name test public void test tumble time window final int num element per key num element per key final int window size window size final int num key num key try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env set stream time characteristic time characteristic event time env enable checkpoint env set restart strategy restart strategy fix delay restart env set state backend this state backend env get config set use snapshot compression true env add source new fail source new keyed event time generator num key window size num element per key rebalance key by time window time of window size millisecond apply new rich window function tuple2 long int type tuple4 long long long int type tuple time window private boolean open false override public void open configuration parameter assert equal parallelism get runtime context get number of parallel subtask open true override public void apply tuple tuple time window window iterable tuple2 long int type value collector tuple4 long long long int type out validate that the function have be open properly assert true open int sum long key for tuple2 long int type value value sum value f1 value key value f0 final tuple4 long long long int type result new tuple4 key window get start window get end new int type sum out collect result add sink new validate sink new sink validator update fun num element per key new sink validator check fun num key num element per key window size set parallelism env execute tumble window test catch exception e e print stack trace fail e get message test public void test tumble time window with k v state min max parallelism do test tumble time window with k v state parallelism test public void test tumble time window with k v state max max parallelism do test tumble time window with k v state public void do test tumble time window with k v state int max parallelism final int num element per key num element per key final int window size window size final int num key num key try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env set max parallelism max parallelism env set stream time characteristic time characteristic event time env enable checkpoint env set restart strategy restart strategy fix delay restart env set state backend this state backend env get config set use snapshot compression true env add source new fail source new keyed event time generator num key window size num element per key rebalance key by time window time of window size millisecond apply new rich window function tuple2 long int type tuple4 long long long int type tuple time window private boolean open false private value state integer count override public void open configuration parameter assert equal parallelism get runtime context get number of parallel subtask open true count get runtime context get state new value state descriptor count integer class override public void apply tuple tuple time window window iterable tuple2 long int type value collector tuple4 long long long int type out throw exception the window count state start with the key so that we get different count result for each key if count value count update tuple long get field int value validate that the function have be open properly assert true open count update count value out collect new tuple4 tuple long get field window get start window get end new int type count value add sink new validate sink new counting sink validator update fun new sink validator check fun num key num element per key window size set parallelism env execute tumble window test catch exception e e print stack trace fail e get message test public void test slide time window final int num element per key num element per key final int window size window size final int window slide window slide final int num key num key try stream execution environment env stream execution environment get execution environment env set max parallelism parallelism env set parallelism parallelism env set stream time characteristic time characteristic event time env enable checkpoint env set restart strategy restart strategy fix delay restart env set state backend this state backend env get config set use snapshot compression true env add source new fail source new keyed event time generator num key window slide num element per key rebalance key by time window time of window size millisecond time of window slide millisecond apply new rich window function tuple2 long int type tuple4 long long long int type tuple time window private boolean open false override public void open configuration parameter assert equal parallelism get runtime context get number of parallel subtask open true override public void apply tuple tuple time window window iterable tuple2 long int type value collector tuple4 long long long int type out validate that the function have be open properly assert true open int sum long key for tuple2 long int type value value sum value f1 value key value f0 final tuple4 long long long int type output new tuple4 key window get start window get end new int type sum out collect output add sink new validate sink new sink validator update fun num element per key new sink validator check fun num key num element per key window slide set parallelism env execute tumble window test catch exception e e print stack trace fail e get message test public void test pre aggregate tumble time window final int num element per key num element per key final int window size window size final int num key num key try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env set stream time characteristic time characteristic event time env enable checkpoint env set restart strategy restart strategy fix delay restart env set state backend this state backend env get config set use snapshot compression true env add source new fail source new keyed event time generator num key window size num element per key rebalance key by time window time of window size millisecond reduce new reduce function tuple2 long int type override public tuple2 long int type reduce tuple2 long int type a tuple2 long int type b return new tuple2 a f0 new int type a f1 value b f1 value new rich window function tuple2 long int type tuple4 long long long int type tuple time window private boolean open false override public void open configuration parameter assert equal parallelism get runtime context get number of parallel subtask open true override public void apply tuple tuple time window window iterable tuple2 long int type input collector tuple4 long long long int type out validate that the function have be open properly assert true open for tuple2 long int type in input final tuple4 long long long int type output new tuple4 in f0 window get start window get end in f1 out collect output add sink new validate sink new sink validator update fun num element per key new sink validator check fun num key num element per key window size set parallelism env execute tumble window test catch exception e e print stack trace fail e get message test public void test pre aggregate slide time window final int num element per key num element per key final int window size window size final int window slide window slide final int num key num key try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env set stream time characteristic time characteristic event time env enable checkpoint env set restart strategy restart strategy fix delay restart env set state backend this state backend env get config set use snapshot compression true env add source new fail source new keyed event time generator num key window slide num element per key rebalance key by time window time of window size millisecond time of window slide millisecond reduce new reduce function tuple2 long int type override public tuple2 long int type reduce tuple2 long int type a tuple2 long int type b validate that the function have be open properly return new tuple2 a f0 new int type a f1 value b f1 value new rich window function tuple2 long int type tuple4 long long long int type tuple time window private boolean open false override public void open configuration parameter assert equal parallelism get runtime context get number of parallel subtask open true override public void apply tuple tuple time window window iterable tuple2 long int type input collector tuple4 long long long int type out validate that the function have be open properly assert true open for tuple2 long int type in input out collect new tuple4 in f0 window get start window get end in f1 add sink new validate sink new sink validator update fun num element per key new sink validator check fun num key num element per key window slide set parallelism env execute tumble window test catch exception e e print stack trace fail e get message utility for validate the stateful window count static class count sink validator update fun implement validate sink count updater tuple4 long long long int type override public void update count tuple4 long long long int type value map long integer window count window count merge value f0 a b a b verify the contents of that window the contents should be key num window so far assert equal window count don t match for key value f0 value f0 int value window count get value f0 value f3 value static class sink validator update fun implement validate sink count updater tuple4 long long long int type private final int element per key sink validator update fun int element per key this element per key element per key override public void update count tuple4 long long long int type value map long integer window count verify the contents of that window tuple4 f1 and f2 be the window start end the sum should be sum start end int expect sum we shorten the range if it go beyond element per key because those be incomplete slide window long count until math min value f2 element per key for long i value f1 i count until i only sum up positive val to filter out the negative start of the first slide window if i expect sum i assert equal window start value f1 end value f2 expect sum value f3 value window count merge value f0 val increment val increment static class sink validator check fun implement validate sink result checker private final int num key private final int num window expect sink validator check fun int num key int element per key int element per window this num key num key this num window expect element per key element per window override public boolean check result map long integer window count if window count size num key for integer window count window count value if window count num window expect return false return true return false static class key event time generator implement fail source event emit generator private final int key universe size private final int watermark trail public key event time generator int key universe size int num element per window this key universe size key universe size we let the watermark a bit behind so that there can be in flight timer that require checkpoint to include correct timer snapshot in we testing this watermark trail num element per window override public void emit event source function source context tuple2 long int type ctx int event sequence no final int type int type next new int type event sequence no for long i i key universe size i final tuple2 long int type generate event new tuple2 i int type next ctx collect with timestamp generate event event sequence no ctx emit watermark new watermark event sequence no watermark trail private int num element per key switch this state backend enum case rocksdb fully async case rocksdb incremental case rocksdb incremental zk return default return private int window size switch this state backend enum case rocksdb fully async case rocksdb incremental case rocksdb incremental zk return default return private int window slide return private int num key switch this state backend enum case rocksdb fully async case rocksdb incremental case rocksdb incremental zk return default return 
local recovery i t case run with parameterized class public class local recovery i t case extend test logger private final boolean local recovery enable true rule public test name test name new test name parameterized parameter public state backend enum backend enum parameterized parameter name statebackend type public static collection state backend enum parameter return array as list rocksdb fully async rocksdb incremental zk file async test public final void execute test throw exception event time window checkpoint i t case temp folder create event time window checkpoint i t case window chk i t case new event time window checkpoint i t case override protect state backend enum get state backend return backend enum override protect configuration create cluster config throw i o exception configuration config super create cluster config config set boolean checkpoint option local recovery local recovery enable return config execute test window chk i t case private void execute test event time window checkpoint i t case delegate throw exception delegate name test name delegate state backend enum backend enum try delegate setup test cluster try delegate test tumble time window delegate stop test cluster catch exception e delegate stop test cluster throw new runtime exception e delegate setup test cluster try delegate test slide time window delegate stop test cluster catch exception e delegate stop test cluster throw new runtime exception e finally event time window checkpoint i t case temp folder delete 
notify checkpoint abort i t case run with parameterized class public class notify checkpoint abort i t case extend test logger private static final long decline checkpoint id 2 l private static final long test timeout private static final string decline sink name decline sink private static mini cluster with client resource cluster private static path checkpoint path parameterize parameter public boolean unaligned checkpoint enable parameterized parameter name unaligned checkpoint enable public static collection boolean parameter return array as list true false class rule public static final temporary folder temporary folder new temporary folder before public void setup throw exception configuration configuration new configuration configuration set boolean checkpoint option local recovery true configuration set string high availability option ha mode testing h a factory class get name checkpoint path new path temporary folder new folder to u be i cluster new mini cluster with client resource new mini cluster resource configuration builder set configuration configuration set number task manager set number slot per task manager build cluster before normal map reset decline sink reset testing complete checkpoint store reset after public void shutdown if cluster null cluster after cluster null verify operator would be notify as checkpoint abort p the job would run with at least two checkpoint the 1st checkpoint would fail due to add checkpoint to store and the 2nd checkpoint would decline by async checkpoint phase of decline sink p the job graph look like normal source key by normal map decline sink test timeout test timeout public void test notify checkpoint abort throw exception final stream execution environment env stream execution environment get execution environment env enable checkpoint checkpoint mode exactly once env get checkpoint config enable unaligned checkpoint unaligned checkpoint enable env get checkpoint config set tolerable checkpoint failure number env disable operator chain env set parallelism final state backend fail state backend new decline sink fail state backend checkpoint path env set state backend fail state backend env add source new normal source name normal source key by key selector tuple2 integer integer integer value value f0 transform normal map type information of integer class new normal map transform decline sink name type information of object class new decline sink final cluster client cluster client cluster get cluster client job graph job graph env get stream graph get job graph job i d job i d job graph get job i d client util submit job cluster client job graph testing complete checkpoint store add checkpoint latch await test complete checkpoint store abort checkpoint latch trigger verify all operator notify aborted reset all operator notify abort latch verify all operator notify aborted time decline sink wait latch trigger verify all operator notify aborted verify all operator notify aborted time cluster client cancel job i would get private void verify all operator notify abort throw interrupted exception normal map notify abort latch await decline sink notify abort latch await private void reset all operator notify abort latch normal map notify abort latch reset decline sink notify abort latch reset private void verify all operator notify aborted time int expect time assert equal expect time normal map notify aborted time get assert equal expect time decline sink notify aborted time get normal source function private static class normal source implement source function tuple2 integer integer private static final long serial version u i d 1 l protect volatile boolean running normal source this running true override public void run source context tuple2 integer integer ctx throw exception while run synchronize ctx get checkpoint lock ctx collect tuple2 of thread local random current next int thread local random current next int thread sleep override public void cancel this run false private static class normal map extend stream map tuple2 integer integer integer private static final long serial version u i d 1 l private static final one shot latch notify aborted latch new one shot latch private static final atomic integer notify aborted time new atomic integer public normal map super new normal map function override public void notify checkpoint aborted long checkpoint id notify aborted time increment and get notify abort latch trigger static void reset notify abort latch reset notify aborted time set normal map function private static class normal map function implement map function tuple2 integer integer integer checkpoint function private static final long serial version u i d 1 l private value state integer value state override public integer map tuple2 integer integer value throw exception value state update value f1 return value f1 override public void snapshot state function snapshot context context override public void initialize state function initialization context context throw exception value state context get key state store get state new value state descriptor value integer class a decline sink private static class decline sink extend stream sink integer private static final long serial version u i d 1 l private static final one shot latch notify aborted latch new one shot latch private static final one shot latch wait latch new one shot latch private static final atomic integer notify aborted time new atomic integer public decline sink super new sink function integer private static final long serial version u i d 1 l override public void snapshot state state snapshot context context throw exception if context get checkpoint id decline checkpoint id decline sink wait latch await super snapshot state context override public void notify checkpoint aborted long checkpoint id notify aborted time increment and get notify abort latch trigger static void reset notify abort latch reset wait latch reset notify aborted time set the snapshot strategy to create fail runnable future at the checkpoint to decline private static class decline sink fail snapshot strategy extend abstract snapshot strategy operator state handle protect decline sink fail snapshot strategy super stick async snapshot strategy override public runnable future snapshot result operator state handle snapshot long checkpoint id long timestamp nonnull checkpoint stream factory stream factory nonnull checkpoint option checkpoint option if checkpoint id decline checkpoint id return exceptionally do future of new expected test exception else return do future of snapshot result empty the operator statebackend to create link decline sink fail snapshot strategy at link decline sink private static class decline sink fail operator state backend extend default operator state backend public decline sink fail operator state backend execution config execution config closeable registry close stream on cancel registry abstract snapshot strategy operator state handle snapshot strategy super execution config close stream on cancel registry new hash map new hash map new hash map new hash map snapshot strategy the state backend to create link decline sink fail operator state backend at link decline sink private static class decline sink fail state backend extend f state backend private static final long serial version u i d 1 l public decline sink fail state backend path checkpoint datum uri super checkpoint datum uri override public decline sink fail state backend configure readable config config class loader class loader return new decline sink fail state backend checkpoint path override public operator state backend create operator state backend environment env string operator identifier nonnull collection operator state handle state handle closeable registry cancel stream registry throw backend building exception if operator identifier contain decline sink name return new decline sink fail operator state backend env get execution config cancel stream registry new decline sink fail snapshot strategy else return new default operator state backend builder env get user class loader env get execution config false state handle cancel stream registry build private static class testing ha service extend embed ha service private final checkpoint recovery factory checkpoint recovery factory testing ha service checkpoint recovery factory checkpoint recovery factory executor executor super executor this checkpoint recovery factory checkpoint recovery factory override public checkpoint recovery factory get checkpoint recovery factory return checkpoint recovery factory a extension of link standalone complete checkpoint store private static class testing complete checkpoint store extend standalone complete checkpoint store private static final one shot latch add checkpoint latch new one shot latch private static final one shot latch abort checkpoint latch new one shot latch testing complete checkpoint store super override public void add checkpoint complete checkpoint checkpoint throw exception if abort checkpoint latch be trigger super add checkpoint checkpoint else tell main thread that all checkpoint on task side have be finish add checkpoint latch trigger wait for the main thread to throw exception so that the checkpoint would be notify as abort abort checkpoint latch await throw new expected test exception static void reset add checkpoint latch reset abort checkpoint latch reset testing ha factory which need to be public in order to be instantiatable public static class testing h a factory implement high availability service factory override public high availability service create h a service configuration configuration executor executor return new testing ha service new testing checkpoint recovery factory new testing complete checkpoint store new standalone checkpoint i d counter executor 
rescale i t case run with parameterized class public class rescale i t case extend test logger private static final int num task manager private static final int slot per task manager private static final int num slot num task manager slot per task manager parameterize parameter name backend public static object datum return new object filesystem rocksdb parameterized parameter public string backend private string current backend null enum operator checkpoint method non partition checkpointed function checkpoint function broadcast list checkpointed private static mini cluster with client resource cluster class rule public static temporary folder temporary folder new temporary folder before public void setup throw exception detect parameter change if current backend backend shut down exist cluster current backend backend configuration config new configuration final file checkpoint dir temporary folder new folder final file savepoint dir temporary folder new folder config set string checkpointing option state backend current backend config set string checkpointing option checkpoint directory checkpoint dir to u be i to string config set string checkpointing option savepoint directory savepoint dir to u be i to string cluster new mini cluster with client resource new mini cluster resource configuration builder set configuration config set number task manager num task manager set number slot per task manager num slot build cluster before after class public static void shut down exist cluster if cluster null cluster after cluster null test public void test savepoint rescale in key state throw exception test savepoint rescale key state false false test public void test savepoint rescale out key state throw exception test savepoint rescale key state true false test public void test savepoint rescale in key state derive max parallelism throw exception test savepoint rescale key state false true test public void test savepoint rescale out key state derive max parallelism throw exception test savepoint rescale key state true true test that a job with purely key state can be restart from a savepoint with a different parallelism public void test savepoint rescale key state boolean scale out boolean derive max parallelism throw exception final int number key final int number element final int number elements2 final int parallelism scale out num slot num slot final int parallelism2 scale out num slot num slot final int max parallelism duration timeout duration of minute deadline deadline deadline now plus timeout cluster client client cluster get cluster client try job graph job graph create job graph with key state parallelism max parallelism number key number element false final job i d job i d job graph get job i d client util submit job client job graph wait til the source have emit number element for each key and complete a checkpoint assert true subtask index flat mapper work complete latch await deadline time leave to millis time unit millisecond verify the current state set tuple2 integer integer actual result collection sink get element set set tuple2 integer integer expect result new hash set for int key key number key key int key group index key group range assignment assign to key group key max parallelism expect result add tuple2 of key group range assignment compute operator index for key group max parallelism parallelism key group index number element key assert equal expected result actual result clear the collection sink set for the restart job collection sink clear element set completable future string savepoint path future client trigger savepoint job i d null final string savepoint path savepoint path future get deadline time leave to millis time unit millisecond client cancel job i would get while get run job client be empty thread sleep int restore max parallelism derive max parallelism execution job vertex value not set max parallelism job graph scale job graph create job graph with key state parallelism2 restore max parallelism number key number elements2 true scaled job graph set savepoint restore setting savepoint restore setting for path savepoint path client util submit job and wait for result client scale job graph rescale i t case class get class loader set tuple2 integer integer actual result2 collection sink get element set set tuple2 integer integer expect result2 new hash set for int key key number key key int key group index key group range assignment assign to key group key max parallelism expect result2 add tuple2 of key group range assignment compute operator index for key group max parallelism parallelism2 key group index key number element number elements2 assert equal expect result2 actual result2 finally clear the collection sink set for the restart job collection sink clear element set test that a job can not be restart from a savepoint with a different parallelism if the rescale operator have non partition state throw exception test public void test savepoint rescale non partition state cause exception throw exception final int parallelism num slot final int parallelism2 num slot final int max parallelism duration timeout duration of minute deadline deadline deadline now plus timeout cluster client client cluster get cluster client try job graph job graph create job graph with operator state parallelism max parallelism operator checkpoint method non partition final job i d job i d job graph get job i d client util submit job client job graph wait until the operator be start state source base work start latch await completable future string savepoint path future client trigger savepoint job i d null final string savepoint path savepoint path future get deadline time leave to millis time unit millisecond client cancel job i would get while get run job client be empty thread sleep job successfully remove job graph scale job graph create job graph with operator state parallelism2 max parallelism operator checkpoint method non partition scale job graph set savepoint restore setting savepoint restore setting for path savepoint path client util submit job and wait for result client scale job graph rescale i t case class get class loader catch job execution exception exception if exception get cause instanceof illegal state exception we expect a illegal state exception wrap in a job execution exception because the job contain non partition state be be rescale else throw exception test that a job with non partition state can be restart from a savepoint with a different parallelism if the operator with non partition state be not rescale throw exception test public void test savepoint rescale with key and non partition state throw exception int number key int number element int number elements2 int parallelism num slot int parallelism2 num slot int max parallelism duration timeout duration of minute deadline deadline deadline now plus timeout cluster client client cluster get cluster client try job graph job graph create job graph with key and non partition operator state parallelism max parallelism parallelism number key number element false final job i d job i d job graph get job i d client util submit job client job graph wait til the source have emit number element for each key and complete a checkpoint assert true subtask index flat mapper work complete latch await deadline time leave to millis time unit millisecond verify the current state set tuple2 integer integer actual result collection sink get element set set tuple2 integer integer expect result new hash set for int key key number key key int key group index key group range assignment assign to key group key max parallelism expect result add tuple2 of key group range assignment compute operator index for key group max parallelism parallelism key group index number element key assert equal expected result actual result clear the collection sink set for the restart job collection sink clear element set completable future string savepoint path future client trigger savepoint job i d null final string savepoint path savepoint path future get deadline time leave to millis time unit millisecond client cancel job i would get while get run job client be empty thread sleep job graph scale job graph create job graph with key and non partition operator state parallelism2 max parallelism parallelism number key number element number elements2 true scaled job graph set savepoint restore setting savepoint restore setting for path savepoint path client util submit job and wait for result client scale job graph rescale i t case class get class loader set tuple2 integer integer actual result2 collection sink get element set set tuple2 integer integer expect result2 new hash set for int key key number key key int key group index key group range assignment assign to key group key max parallelism expect result2 add tuple2 of key group range assignment compute operator index for key group max parallelism parallelism2 key group index key number element number elements2 assert equal expect result2 actual result2 finally clear the collection sink set for the restart job collection sink clear element set test public void test savepoint rescale in partition operator state throw exception test savepoint rescale partitioned operator state false operator checkpoint method checkpoint function test public void test savepoint rescale out partition operator state throw exception test savepoint rescale partitioned operator state true operator checkpoint method checkpoint function test public void test savepoint rescaling in broadcast operator state throw exception test savepoint rescale partitioned operator state false operator checkpoint method checkpoint function broadcast test public void test savepoint rescale out broadcast operator state throw exception test savepoint rescale partitioned operator state true operator checkpoint method checkpoint function broadcast test public void test savepoint rescale in partition operator state list throw exception test savepoint rescale partitioned operator state false operator checkpoint method list checkpointed test public void test savepoint rescale out partition operator state list throw exception test savepoint rescale partitioned operator state true operator checkpoint method list checkpoint test rescale of partition operator state more specific we test the mechanism with link list checkpoint as it subsume link org apache flink streaming api checkpoint checkpoint function public void test savepoint rescale partitioned operator state boolean scale out operator checkpoint method checkpoint method throw exception final int parallelism scale out num slot num slot final int parallelism2 scale out num slot num slot final int max parallelism duration timeout duration of minute deadline deadline deadline now plus timeout cluster client client cluster get cluster client int counter size math max parallelism parallelism2 if checkpoint method operator checkpoint method checkpoint function checkpoint method operator checkpoint method checkpoint function broadcast partition state source check correct snapshot new int counter size partition state source check correct restore new int counter size else partition state source list checkpointed check correct snapshot new int counter size partition state source list checkpointed check correct restore new int counter size try job graph job graph create job graph with operator state parallelism max parallelism checkpoint method final job i d job i d job graph get job i d client util submit job client job graph wait until the operator be start state source base work start latch await completable future string savepoint path future future util retry with delay client trigger savepoint job i d null int deadline time leave get seconds time seconds throwable true testing util default schedule executor final string savepoint path savepoint path future get deadline time leave to millis time unit millisecond client cancel job i would get while get run job client be empty thread sleep job graph scale job graph create job graph with operator state parallelism2 max parallelism checkpoint method scale job graph set savepoint restore setting savepoint restore setting for path savepoint path client util submit job and wait for result client scale job graph rescale i t case class get class loader int sum exp int sum act if checkpoint method operator checkpoint method checkpoint function for int c partition state source check correct snapshot sum exp c for int c partition state source check correct restore sum act c else if checkpoint method operator checkpoint method checkpoint function broadcast for int c partition state source check correct snapshot sum exp c for int c partition state source check correct restore sum act c sum exp parallelism2 else for int c partition state source list checkpointed check correct snapshot sum exp c for int c partition state source list checkpointed check correct restore sum act c assert equal sum exp sum act finally private static job graph create job graph with operator state int parallelism int max parallelism operator checkpoint method checkpoint method stream execution environment env stream execution environment get execution environment env set parallelism parallelism env get config set max parallelism max parallelism env enable checkpoint long max value env set restart strategy restart strategy no restart state source base work start latch new count down latch parallelism source function integer src switch checkpoint method case checkpoint function src new partition state source false break case checkpoint function broadcast src new partition state source true break case list checkpointed src new partition state source list checkpoint break case non partitioned src new non partition state source break default throw new illegal argument exception datum stream integer input env add source src input add sink new discard sink integer return env get stream graph get job graph private static job graph create job graph with key state int parallelism int max parallelism int number key int number element boolean terminate after emission int checkpoint interval stream execution environment env stream execution environment get execution environment env set parallelism parallelism if max parallelism env get config set max parallelism max parallelism env enable checkpoint checkpoint interval env set restart strategy restart strategy no restart env get config set use snapshot compression true datum stream integer input env add source new subtask index source number key number element terminate after emission key by new key selector integer integer private static final long serial version u i d l override public integer get key integer value throw exception return value subtask index flat mapper work complete latch new count down latch number key datum stream tuple2 integer integer result input flat map new subtask index flat mapper number element result add sink new collection sink tuple2 integer integer return env get stream graph get job graph private static job graph create job graph with key and non partition operator state int parallelism int max parallelism int fix parallelism int number key int number element boolean terminate after emission int checkpoint interval stream execution environment env stream execution environment get execution environment env set parallelism parallelism env get config set max parallelism max parallelism env enable checkpoint checkpoint interval env set restart strategy restart strategy no restart datum stream integer input env add source new subtask index non partition state source number key number element terminate after emission set parallelism fix parallelism key by new key selector integer integer private static final long serial version u i d l override public integer get key integer value throw exception return value subtask index flat mapper work complete latch new count down latch number key datum stream tuple2 integer integer result input flat map new subtask index flat mapper number element result add sink new collection sink tuple2 integer integer return env get stream graph get job graph private static class subtask index source extend rich parallel source function integer private static final long serial version u i d l private final int number key private final int number element private final boolean terminate after emission protect int counter private boolean running true subtask index source int number key int number element boolean terminate after emission this number key number key this number element number element this terminate after emission terminate after emission override public void run source context integer ctx throw exception final object lock ctx get checkpoint lock final int subtask index get runtime context get index of this subtask while run if counter number element synchronize lock for int value subtask index value number key value get runtime context get number of parallel subtask ctx collect value counter else if terminate after emission run false else thread sleep override public void cancel run false private static class subtask index non partition state source extend subtask index source implement list checkpointed integer private static final long serial version u i d l subtask index non partition state source int number key int number element boolean terminate after emission super number key number element terminate after emission override public list integer snapshot state long checkpoint id long timestamp throw exception return collection singleton list this counter override public void restore state list integer state throw exception if state be empty state size throw new runtime exception test fail due to unexpected recover state size state size this counter state get private static class subtask index flat mapper extend rich flat map function integer tuple2 integer integer implement checkpoint function private static final long serial version u i d l private static volatile count down latch work complete latch new count down latch private transient value state integer counter private transient value state integer sum private final int number element subtask index flat mapper int number element this number element number element override public void flat map integer value collector tuple2 integer integer out throw exception int count counter value counter update count int s sum value value sum update s if count number element out collect tuple2 of get runtime context get index of this subtask s work complete latch count down override public void snapshot state function snapshot context context throw exception all manage nothing to do override public void initialize state function initialization context context throw exception counter context get key state store get state new value state descriptor counter integer class sum context get key state store get state new value state descriptor sum integer class private static class collection sink in implement sink function in private static set object element collection new set from map new concurrent hash map object boolean private static final long serial version u i d l public static in set in get element set return set in element public static void clear element set element clear override public void invoke in value throw exception element add value private static class state source base extend rich parallel source function integer private static final long serial version u i d l private static volatile count down latch work start latch new count down latch protect volatile int counter protect volatile boolean running true override public void run source context integer ctx throw exception final object lock ctx get checkpoint lock while run synchronize lock counter ctx collect thread sleep if counter work start latch count down if counter break override public void cancel run false private static class non partition state source extend state source base implement list checkpointed integer private static final long serial version u i d l override public list integer snapshot state long checkpoint id long timestamp throw exception return collection singleton list this counter override public void restore state list integer state throw exception if state be empty this counter state get private static class partition state source list checkpoint extend state source base implement list checkpointed integer private static final long serial version u i d l private static final int num partition private static int check correct snapshot private static int check correct restore override public list integer snapshot state long checkpoint id long timestamp throw exception check correct snapshot get runtime context get index of this subtask counter int div counter num partition int mod counter num partition list integer split new array list for int i i num partition i int partition value div if mod mod partition value split add partition value return split override public void restore state list integer state throw exception for integer v state counter v check correct restore get runtime context get index of this subtask counter private static class partition state source extend state source base implement checkpoint function private static final long serial version u i d l private static final int num partition private transient list state integer counter partition private boolean broadcast private static int check correct snapshot private static int check correct restore public partition state source boolean broadcast this broadcast broadcast override public void snapshot state function snapshot context context throw exception counter partition clear check correct snapshot get runtime context get index of this subtask counter int div counter num partition int mod counter num partition for int i i num partition i int partition value div if mod mod partition value counter partition add partition value override public void initialize state function initialization context context throw exception if broadcast this counter partition context get operator state store get union list state new list state descriptor counter partition int serializer instance else this counter partition context get operator state store get list state new list state descriptor counter partition int serializer instance if context be restore for int v counter partition get counter v check correct restore get runtime context get index of this subtask counter private static list job i d get run job cluster client client throw exception collection job status message status message client list job get return status message stream filter status status get job state be globally terminal state map job status message get job id collect collector to list 
stream fault tolerance test base run with parameterized class public abstract class stream fault tolerance test base extend test logger parameterize parameter name failover strategy public static collection failover strategy parameter return array as list failover strategy restart all failover strategy failover strategy restart pipelined region failover strategy the failover strategy to use public enum failover strategy restart all failover strategy restart pipelined region failover strategy parameterize parameter public failover strategy failover strategy protect static final int num task manager protect static final int num task slot protect static final int parallelism num task manager num task slot private static mini cluster with client resource cluster before public void setup throw exception configuration configuration new configuration switch failover strategy case restart pipelined region failover strategy configuration set string job manager option execution failover strategy region break case restart all failover strategy configuration set string job manager option execution failover strategy full cluster new mini cluster with client resource new mini cluster resource configuration builder set configuration configuration set number task manager num task manager set number slot per task manager num task slot build cluster before after public void shut down exist cluster if cluster null cluster after cluster null implementation be expect to assemble the test topology in this function use the provide link stream execution environment public abstract void test program stream execution environment env implementation be expect to provide test here to verify the correct behavior public abstract void post submit throw exception run the follow program the test program define in link test program stream execution environment follow by the check in link post submit test public void run checkpointed program throw exception try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env enable checkpoint env set restart strategy restart strategy fix delay restart integer max value 0 l test program env job graph job graph env get stream graph get job graph try client util submit job and wait for result cluster get cluster client job graph get class get class loader get job execution result catch program invocation exception root throwable cause root get cause search for nest success exception int depth while cause instanceof success exception if cause null depth root print stack trace fail test fail root get message else cause cause get cause post submit catch exception e e print stack trace assert fail e get message frequently use utility pojo store prefix value and count suppress warning serial public static class prefix count implement serializable public string prefix public string value public long count public prefix count public prefix count string prefix string value long count this prefix prefix this value value this count count override public string to string return prefix value 
unaligned checkpoint compatibility i t case run with parameterized class public class unaligned checkpoint compatibility i t case rule public temporary folder temporary folder new temporary folder private static final int total element private static final int first run el count total element private static final int first run backpressure ms per element private static final int parallelism private final boolean start align private final checkpoint type type parameterized parameter name type start align public static object parameter return new object checkpoint true checkpoint false savepoint true savepoint false public unaligned checkpoint compatibility i t case checkpoint type type boolean start align this start align start align this type type test suppress warning unchecked public void test throw exception tuple2 string map string object path and accumulator type be savepoint run and take savepoint run and take external checkpoint string savepoint path path and accumulator f0 map string object accumulator before barrier path and accumulator f1 map string object accumulator after barrier run from savepoint savepoint path start align total element if type be savepoint consistency can only be check for savepoint because output be lose for ext checkpoint assert equal int range total element extract and concat accumulator before barrier accumulator after barrier private tuple2 string map string object run and take savepoint throw exception job client job client submit job initially env start align empty map thread sleep first run el count first run backpressure ms wait for all task to run and some backpressure from sink future map string object acc future job client get accumulator get class get class loader future string savepoint future job client stop with savepoint false temp folder to u be i to string return new tuple2 savepoint future get acc future get private tuple2 string map string object run and take external checkpoint throw exception file folder temp folder job client job client submit job initially external checkpoint env start align folder file metadata wait for child wait for child wait for child folder structure root attempt checkpoint metadata cancel job job client return new tuple2 metadata get parent file to string empty map private static job client submit job initially stream execution environment env throw exception return env execute async dag first run el count true first run backpressure ms env private map string object run from savepoint string path boolean be align int total count throw exception stream execution environment env env be align collection singleton map savepoint path path return env execute dag total count false env get job execution result get all accumulator result suppress warning optional get without be present constant condition private static file wait for child file dir throw interrupted exception while dir list file length thread sleep return array stream dir list file max comparator natural order get private void cancel job job client job client throw interrupted exception java util concurrent execution exception job client cancel get try job client get job execution result get class get class loader wait for cancellation catch exception e ignore cancellation exception private stream execution environment external checkpoint env boolean be align file dir int checkpoint interval map config option string cfg new hash map cfg put checkpoint directory dir to u be i to string cfg put max retain checkpoint integer to string integer max value prevent deletion of checkpoint file while it be be check and use stream execution environment env env be align checkpoint interval cfg env get checkpoint config enable externalized checkpoint retain on cancellation return env suppress warning unchecked private stream execution environment env boolean be align int checkpoint interval map config option string cfg configuration configuration new configuration for map entry config option string e cfg entry set configuration set string config option string e get key e get value stream execution environment env create local environment parallelism configuration env set restart strategy new restart strategy no restart strategy configuration env get checkpoint config enable unaligned checkpoint be align if checkpoint interval env enable checkpoint checkpoint interval return env private static stream graph dag int num element boolean continue after num element reach int sink delay millis stream execution environment env env add source cancel integer source up to num element continue after num element reach add sink new accumulate integer sink sink delay millis return env get stream graph private static list integer int range int from int to return int stream range from to box collect collector to list private static list integer extract and concat map string object accumulator return stream of accumulator map accumulate integer sink get output peek l check state l be empty flat map collection stream collect collector to list private file temp folder throw i o exception return temporary folder new folder 
legacy stateful job savepoint migration i t case run with parameterized class public class legacy stateful job savepoint migration i t case extend savepoint migration test base private static final int num source element parameterize parameter name migrate savepoint backend public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name todo to generate savepoint for a specific flink version backend type todo change these value accordingly e g to generate for 1.3 with rock d b todo set as migration version v1 state backend loader rocksdb state backend name todo note you should generate the savepoint base on the release branch instead of the master private final migration version flink generate savepoint version migration version v1 private final string flink generate savepoint backend type state backend loader rocksdb state backend name private final migration version test migrate version private final string test state backend public legacy stateful job savepoint migration i t case tuple2 migration version string test migrate version and backend throw exception this test migrate version test migrate version and backend f0 this test state backend test migrate version and backend f1 manually run this to write binary snapshot datum test ignore public void write savepoint throw exception final stream execution environment env stream execution environment get execution environment env set stream time characteristic time characteristic event time switch flink generate savepoint backend type case state backend loader rocksdb state backend name env set state backend new rock d b state backend new memory state backend break case state backend loader memory state backend name env set state backend new memory state backend break default throw new unsupported operation exception env enable checkpoint env set parallelism env set max parallelism env add source new legacy checkpoint source num source element set max parallelism uid legacy checkpoint source flat map new legacy checkpoint flat map start new chain uid legacy checkpoint flat map key by flat map new legacy checkpoint flat map with key state start new chain uid legacy checkpoint flat map with key state key by flat map new key state set flat map start new chain uid key state set flat map key by transform custom operator new type hint tuple2 long long get type info new checkpointed udf operator new legacy checkpoint flat map with key state uid legacy checkpoint operator key by transform timely stateful operator new type hint tuple2 long long get type info new timely stateful operator uid timely stateful operator add sink new accumulator count sink tuple2 long long execute and savepoint env src test resource get savepoint path flink generate savepoint version flink generate savepoint backend type new tuple2 accumulator count sink num element accumulator num source element test public void test savepoint restore throw exception final stream execution environment env stream execution environment get execution environment env set restart strategy restart strategy no restart env set stream time characteristic time characteristic event time switch test state backend case state backend loader rocksdb state backend name env set state backend new rock d b state backend new memory state backend break case state backend loader memory state backend name env set state backend new memory state backend break default throw new unsupported operation exception env enable checkpoint env set parallelism env set max parallelism env add source new checking restore source num source element set max parallelism uid legacy checkpoint source flat map new checking restore flat map start new chain uid legacy checkpoint flat map key by flat map new checking restore flat map with key state start new chain uid legacy checkpoint flat map with key state key by flat map new checking key state flat map start new chain uid key state set flat map key by transform custom operator new type hint tuple2 long long get type info new checking restore udf operator new checking restore flat map with key state in operator uid legacy checkpoint operator key by transform timely stateful operator new type hint tuple2 long long get type info new checking timely stateful operator uid timely stateful operator add sink new accumulator count sink tuple2 long long restore and execute env get resource filename get savepoint path test migrate version test state backend new tuple2 check restore source successful restore check accumulator new tuple2 check restore flat map successful restore check accumulator num source element new tuple2 check restore flat map with key state successful restore check accumulator num source element new tuple2 check key state flat map successful restore check accumulator num source element new tuple2 check restore udf operator successful restore check accumulator num source element new tuple2 check restore flat map with key state in operator successful restore check accumulator num source element new tuple2 check timely stateful operator successful process check accumulator num source element new tuple2 check timely stateful operator successful event time check accumulator num source element new tuple2 check timely stateful operator successful processing time check accumulator num source element new tuple2 accumulator count sink num element accumulator num source element private string get savepoint path migration version savepoint version string backend type switch backend type case state backend loader rocksdb state backend name return stateful udf migration itcase flink savepoint version rocksdb savepoint case state backend loader memory state backend name return stateful udf migration itcase flink savepoint version savepoint default throw new unsupported operation exception private static class legacy checkpoint source implement source function tuple2 long long public static string checkpoint string here be dragon private static final long serial version u i d 1 l private volatile boolean be run true private final int num element public legacy checkpoint source int num element this num element num element override public void run source context tuple2 long long ctx throw exception ctx emit watermark new watermark synchronize ctx get checkpoint lock for long i i num element i ctx collect new tuple2 i i don t emit a final watermark so that we don t trigger the register event time timer while be run thread sleep override public void cancel be run false private static class check restore source extend rich source function tuple2 long long private static final long serial version u i d 1 l public static final string successful restore check accumulator check restore source class restore check private volatile boolean be run true private final int num element private string restore state public checking restore source int num element this num element num element override public void open configuration parameter throw exception super open parameter get runtime context add accumulator successful restore check accumulator new int counter override public void run source context tuple2 long long ctx throw exception get runtime context get accumulator successful restore check accumulator add immediately trigger any set timer ctx emit watermark new watermark synchronize ctx get checkpoint lock for long i i num element i ctx collect new tuple2 i i while be run thread sleep override public void cancel be run false private static class legacy checkpoint flat map extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l public static tuple2 string long checkpointed tuple new tuple2 hello 42 l override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value private static class check restore flat map extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l public static final string successful restore check accumulator check restore flat map class restore check private transient tuple2 string long restore state override public void open configuration parameter throw exception super open parameter get runtime context add accumulator successful restore check accumulator new int counter override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value get runtime context get accumulator successful restore check accumulator add private static class legacy checkpoint flat map with key state extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l public static tuple2 string long checkpointed tuple new tuple2 hello 42 l private final value state descriptor long state descriptor new value state descriptor long state name long serializer instance override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value get runtime context get state state descriptor update value f1 assert equal value f1 get runtime context get state state descriptor value private static class check restore flat map with key state extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l public static final string successful restore check accumulator check restore flat map with key state class restore check private transient tuple2 string long restore state private final value state descriptor long state descriptor new value state descriptor long state name long serializer instance override public void open configuration parameter throw exception super open parameter get runtime context add accumulator successful restore check accumulator new int counter override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value value state long state get runtime context get state state descriptor if state null throw new runtime exception miss key value state for value assert equal value f1 state value get runtime context get accumulator successful restore check accumulator add private static class check restore flat map with key state in operator extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l public static final string successful restore check accumulator check restore flat map with key state in operator class restore check private transient tuple2 string long restore state private final value state descriptor long state descriptor new value state descriptor long state name long serializer instance override public void open configuration parameter throw exception super open parameter get runtime context add accumulator successful restore check accumulator new int counter override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value value state long state get runtime context get state state descriptor if state null throw new runtime exception miss key value state for value assert equal value f1 state value get runtime context get accumulator successful restore check accumulator add private static class key state set flat map extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l private final value state descriptor long state descriptor new value state descriptor long state name long serializer instance override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value get runtime context get state state descriptor update value f1 private static class check key state flat map extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l public static final string successful restore check accumulator check key state flat map class restore check private final value state descriptor long state descriptor new value state descriptor long state name long serializer instance override public void open configuration parameter throw exception super open parameter get runtime context add accumulator successful restore check accumulator new int counter override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value value state long state get runtime context get state state descriptor if state null throw new runtime exception miss key value state for value assert equal value f1 state value get runtime context get accumulator successful restore check accumulator add private static class checkpoint udf operator extend abstract udf stream operator tuple2 long long flat map function tuple2 long long tuple2 long long implement one input stream operator tuple2 long long tuple2 long long private static final long serial version u i d 1 l private static final string checkpoint string oh my that be nice public checkpointed udf operator flat map function tuple2 long long tuple2 long long user function super user function override public void process element stream record tuple2 long long element throw exception user function flat map element get value new timestamped collector output override public void process watermark watermark mark throw exception output emit watermark mark private static class check restore udf operator extend abstract udf stream operator tuple2 long long flat map function tuple2 long long tuple2 long long implement one input stream operator tuple2 long long tuple2 long long private static final long serial version u i d 1 l public static final string successful restore check accumulator check restore udf operator class restore check private string restore state public checking restore udf operator flat map function tuple2 long long tuple2 long long user function super user function override public void open throw exception super open get runtime context add accumulator successful restore check accumulator new int counter override public void process element stream record tuple2 long long element throw exception user function flat map element get value new timestamped collector output get runtime context get accumulator successful restore check accumulator add override public void process watermark watermark mark throw exception output emit watermark mark private static class timely stateful operator extend abstract stream operator tuple2 long long implement one input stream operator tuple2 long long tuple2 long long triggerable long long private static final long serial version u i d 1 l private final value state descriptor long state descriptor new value state descriptor long state name long serializer instance private transient internal timer service long timer service override public void open throw exception super open timer service get internal timer service timer long serializer instance this override public void process element stream record tuple2 long long element throw exception value state long state get key state backend get partition state element get value f0 long serializer instance state descriptor state update element get value f1 timer service register event time timer element get value f0 timer service current watermark timer service register processing time timer element get value f0 timer service current processing time output collect element override public void on event time internal timer long long timer throw exception override public void on processing time internal timer long long timer throw exception override public void process watermark watermark mark throw exception output emit watermark mark private static class check timely stateful operator extend abstract stream operator tuple2 long long implement one input stream operator tuple2 long long tuple2 long long triggerable long long private static final long serial version u i d 1 l public static final string successful process check accumulator check timely stateful operator class process check public static final string successful event time check accumulator check timely stateful operator class et check public static final string successful processing time check accumulator check timely stateful operator class pt check private final value state descriptor long state descriptor new value state descriptor long state name long serializer instance private transient internal timer service long timer service override public void open throw exception super open timer service get internal timer service timer long serializer instance this get runtime context add accumulator successful process check accumulator new int counter get runtime context add accumulator successful event time check accumulator new int counter get runtime context add accumulator successful processing time check accumulator new int counter override public void process element stream record tuple2 long long element throw exception value state long state get key state backend get partition state element get value f0 long serializer instance state descriptor assert equal state value element get value f1 get runtime context get accumulator successful process check accumulator add output collect element override public void on event time internal timer long long timer throw exception value state long state get key state backend get partition state timer get namespace long serializer instance state descriptor assert equal state value timer get namespace get runtime context get accumulator successful event time check accumulator add override public void on processing time internal timer long long timer throw exception value state long state get key state backend get partition state timer get namespace long serializer instance state descriptor assert equal state value timer get namespace get runtime context get accumulator successful processing time check accumulator add private static class accumulator count sink t extend rich sink function t private static final long serial version u i d 1 l public static final string num element accumulator accumulator count sink class num element int count override public void open configuration parameter throw exception super open parameter get runtime context add accumulator num element accumulator new int counter override public void invoke t value throw exception count get runtime context get accumulator num element accumulator add 
stateful job savepoint migration i t case run with parameterized class public class stateful job savepoint migration i t case extend savepoint migration test base private static final int num source element this test run in either of two mode we want to generate the binary savepoint i e we have to run the checkpointing function we want to verify restore so we have to run the checking function public enum execution mode perform savepoint verify savepoint todo change this to perform savepoint to regenerate binary savepoint todo note you should generate the savepoint base on the release branch instead of the master private final execution mode execution mode execution mode verify savepoint parameterized parameter name migrate savepoint backend public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name private final migration version test migrate version private final string test state backend public stateful job savepoint migration i t case tuple2 migration version string test migrate version and backend throw exception this test migrate version test migrate version and backend f0 this test state backend test migrate version and backend f1 test public void test savepoint throw exception final int parallelism final stream execution environment env stream execution environment get execution environment env set restart strategy restart strategy no restart env set stream time characteristic time characteristic event time switch test state backend case state backend loader rocksdb state backend name env set state backend new rock d b state backend new memory state backend break case state backend loader memory state backend name env set state backend new memory state backend break default throw new unsupported operation exception env enable checkpoint env set parallelism parallelism env set max parallelism parallelism source function tuple2 long long non parallel source source function tuple2 long long parallel source rich flat map function tuple2 long long tuple2 long long flat map one input stream operator tuple2 long long tuple2 long long timely operator if execution mode execution mode perform savepoint non parallel source new migration test util checkpoint non parallel source with list state num source element parallel source new migration test util checkpoint parallel source with union list state num source element flat map new checkpoint key state flat map timely operator new checkpoint timely stateful operator else if execution mode execution mode verify savepoint non parallel source new migration test util check non parallel source with list state num source element parallel source new migration test util check parallel source with union list state num source element flat map new check key state flat map timely operator new checking timely stateful operator else throw new illegal state exception unknown execution mode execution mode env add source non parallel source uid checkpointing source1 key by flat map flat map start new chain uid checkpoint key state flat map1 key by transform timely stateful operator new type hint tuple2 long long get type info timely operator uid checkpoint timely stateful operator1 add sink new migration test util accumulator count sink env add source parallel source uid checkpointing source2 key by flat map flat map start new chain uid checkpoint key state flat map2 key by transform timely stateful operator new type hint tuple2 long long get type info timely operator uid checkpoint timely stateful operator2 add sink new migration test util accumulator count sink if execution mode execution mode perform savepoint execute and savepoint env src test resource get savepoint path test migrate version test state backend new tuple2 migration test util accumulator count sink num element accumulator num source element else restore and execute env get resource filename get savepoint path test migrate version test state backend new tuple2 migration test util check non parallel source with list state successful restore check accumulator new tuple2 migration test util check parallel source with union list state successful restore check accumulator parallelism new tuple2 check key state flat map successful restore check accumulator num source element new tuple2 check timely stateful operator successful process check accumulator num source element new tuple2 check timely stateful operator successful event time check accumulator num source element new tuple2 check timely stateful operator successful processing time check accumulator num source element new tuple2 migration test util accumulator count sink num element accumulator num source element private string get savepoint path migration version savepoint version string backend type switch backend type case state backend loader rocksdb state backend name return new stateful udf migration itcase flink savepoint version rocksdb savepoint case state backend loader memory state backend name return new stateful udf migration itcase flink savepoint version savepoint default throw new unsupported operation exception private static class checkpoint key state flat map extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l private final value state descriptor long state descriptor new value state descriptor state name long serializer instance override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value get runtime context get state state descriptor update value f1 private static class check key state flat map extend rich flat map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l static final string successful restore check accumulator check key state flat map class restore check private final value state descriptor long state descriptor new value state descriptor state name long serializer instance override public void open configuration parameter throw exception super open parameter get runtime context add accumulator successful restore check accumulator new int counter override public void flat map tuple2 long long value collector tuple2 long long out throw exception out collect value value state long state get runtime context get state state descriptor if state null throw new runtime exception miss key value state for value assert equal value f1 state value get runtime context get accumulator successful restore check accumulator add private static class checkpoint timely stateful operator extend abstract stream operator tuple2 long long implement one input stream operator tuple2 long long tuple2 long long triggerable long long private static final long serial version u i d 1 l private final value state descriptor long state descriptor new value state descriptor state name long serializer instance private transient internal timer service long timer service override public void open throw exception super open timer service get internal timer service timer long serializer instance this override public void process element stream record tuple2 long long element throw exception value state long state get key state backend get partition state element get value f0 long serializer instance state descriptor state update element get value f1 timer service register event time timer element get value f0 timer service current watermark timer service register processing time timer element get value f0 timer service current processing time output collect element override public void on event time internal timer long long timer override public void on processing time internal timer long long timer override public void process watermark watermark mark output emit watermark mark private static class check timely stateful operator extend abstract stream operator tuple2 long long implement one input stream operator tuple2 long long tuple2 long long triggerable long long private static final long serial version u i d 1 l static final string successful process check accumulator check timely stateful operator class process check static final string successful event time check accumulator check timely stateful operator class et check static final string successful processing time check accumulator check timely stateful operator class pt check private final value state descriptor long state descriptor new value state descriptor state name long serializer instance override public void open throw exception super open have to be register to ensure that we on event time be call get internal timer service timer long serializer instance this get runtime context add accumulator successful process check accumulator new int counter get runtime context add accumulator successful event time check accumulator new int counter get runtime context add accumulator successful processing time check accumulator new int counter override public void process element stream record tuple2 long long element throw exception value state long state get key state backend get partition state element get value f0 long serializer instance state descriptor assert equal state value element get value f1 get runtime context get accumulator successful process check accumulator add output collect element override public void on event time internal timer long long timer throw exception value state long state get key state backend get partition state timer get namespace long serializer instance state descriptor assert equal state value timer get namespace get runtime context get accumulator successful event time check accumulator add override public void on processing time internal timer long long timer throw exception value state long state get key state backend get partition state timer get namespace long serializer instance state descriptor assert equal state value timer get namespace get runtime context get accumulator successful processing time check accumulator add 
stateful job w broadcast state migration i t case run with parameterized class public class stateful job w broadcast state migration i t case extend savepoint migration test base private static final int num source element todo change this to perform savepoint to regenerate binary savepoint todo note you should generate the savepoint base on the release branch instead of the master private final stateful job savepoint migration i t case execution mode execution mode stateful job savepoint migration i t case execution mode verify savepoint parameterized parameter name migrate savepoint backend public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name private final migration version test migrate version private final string test state backend public stateful job w broadcast state migration i t case tuple2 migration version string test migrate version and backend throw exception this test migrate version test migrate version and backend f0 this test state backend test migrate version and backend f1 test public void test savepoint throw exception final int parallelism final stream execution environment env stream execution environment get execution environment env set restart strategy restart strategy no restart env set stream time characteristic time characteristic event time switch test state backend case state backend loader rocksdb state backend name env set state backend new rock d b state backend new memory state backend break case state backend loader memory state backend name env set state backend new memory state backend break default throw new unsupported operation exception env enable checkpoint env set parallelism parallelism env set max parallelism parallelism source function tuple2 long long non parallel source source function tuple2 long long non parallel source b source function tuple2 long long parallel source source function tuple2 long long parallel source b key broadcast process function long tuple2 long long tuple2 long long tuple2 long long first broadcast function key broadcast process function long tuple2 long long tuple2 long long tuple2 long long second broadcast function final map long long expect first state new hash map expect first state put 0 l 0 l expect first state put 1 l 1 l expect first state put 2 l 2 l expect first state put 3 l 3 l final map string long expect second state new hash map expect second state put 0 l expect second state put 1 l expect second state put 2 l expect second state put 3 l final map long string expect third state new hash map expect third state put 0 l expect third state put 1 l expect third state put 2 l expect third state put 3 l if execution mode stateful job savepoint migration i t case execution mode perform savepoint non parallel source new migration test util checkpoint non parallel source with list state num source element non parallel source b new migration test util checkpoint non parallel source with list state num source element parallel source new migration test util checkpoint parallel source with union list state num source element parallel source b new migration test util checkpoint parallel source with union list state num source element first broadcast function new checkpoint keyed broadcast function second broadcast function new checkpoint keyed single broadcast function else if execution mode stateful job savepoint migration i t case execution mode verify savepoint non parallel source new migration test util check non parallel source with list state num source element non parallel source b new migration test util check non parallel source with list state num source element parallel source new migration test util check parallel source with union list state num source element parallel source b new migration test util check parallel source with union list state num source element first broadcast function new check keyed broadcast function expect first state expect second state second broadcast function new check keyed single broadcast function expect third state else throw new illegal state exception unknown execution mode execution mode key stream tuple2 long long long np stream env add source non parallel source uid checkpointing source1 key by new key selector tuple2 long long long private static final long serial version u i d l override public long get key tuple2 long long value throw exception return value f0 key stream tuple2 long long long p stream env add source parallel source uid checkpointing source2 key by new key selector tuple2 long long long private static final long serial version u i d l override public long get key tuple2 long long value throw exception return value f0 final map state descriptor long long first broadcast state desc new map state descriptor broadcast state basic type info long type info basic type info long type info final map state descriptor string long second broadcast state desc new map state descriptor broadcast state basic type info string type info basic type info long type info final map state descriptor long string third broadcast state desc new map state descriptor broadcast state basic type info long type info basic type info string type info broadcast stream tuple2 long long np broadcast stream env add source non parallel source b uid br checkpoint source1 broadcast first broadcast state desc second broadcast state desc broadcast stream tuple2 long long p broadcast stream env add source parallel source b uid br checkpoint source2 broadcast third broadcast state desc np stream connect np broadcast stream process first broadcast function uid br process1 add sink new migration test util accumulator count sink p stream connect p broadcast stream process second broadcast function uid br process2 add sink new migration test util accumulator count sink if execution mode stateful job savepoint migration i t case execution mode perform savepoint execute and savepoint env src test resource get broadcast savepoint path test migrate version test state backend new tuple2 migration test util accumulator count sink num element accumulator num source element else restore and execute env get resource filename get broadcast savepoint path test migrate version test state backend new tuple2 migration test util check non parallel source with list state successful restore check accumulator we have source new tuple2 migration test util check parallel source with union list state successful restore check accumulator parallelism we have source new tuple2 migration test util accumulator count sink num element accumulator num source element private string get broadcast savepoint path migration version savepoint version string backend type switch backend type case state backend loader rocksdb state backend name return new stateful broadcast udf migration itcase flink savepoint version rocksdb savepoint case state backend loader memory state backend name return new stateful broadcast udf migration itcase flink savepoint version savepoint default throw new unsupported operation exception a simple link key broadcast process function that put everything on the broadcast side in the state private static class checkpoint keyed broadcast function extend keyed broadcast process function long tuple2 long long tuple2 long long tuple2 long long private static final long serial version u i d l private map state descriptor long long first state desc private map state descriptor string long second state desc override public void open configuration parameter throw exception super open parameter first state desc new map state descriptor broadcast state basic type info long type info basic type info long type info second state desc new map state descriptor broadcast state basic type info string type info basic type info long type info override public void process element tuple2 long long value read only context ctx collector tuple2 long long out throw exception out collect value override public void process broadcast element tuple2 long long value context ctx collector tuple2 long long out throw exception ctx get broadcast state first state desc put value f0 value f1 ctx get broadcast state second state desc put long to string value f0 value f1 a simple link key broadcast process function that put everything on the broadcast side in the state private static class checkpoint keyed single broadcast function extend keyed broadcast process function long tuple2 long long tuple2 long long tuple2 long long private static final long serial version u i d l private map state descriptor long string state desc override public void open configuration parameter throw exception super open parameter state desc new map state descriptor broadcast state basic type info long type info basic type info string type info override public void process element tuple2 long long value read only context ctx collector tuple2 long long out throw exception out collect value override public void process broadcast element tuple2 long long value context ctx collector tuple2 long long out throw exception ctx get broadcast state state desc put value f0 long to string value f1 a simple link key broadcast process function that verify the contents of the broadcast state after recovery private static class check keyed broadcast function extend keyed broadcast process function long tuple2 long long tuple2 long long tuple2 long long private static final long serial version u i d l private final map long long expect first state private final map string long expect second state private map state descriptor long long first state desc private map state descriptor string long second state desc check keyed broadcast function map long long first state map string long second state this expect first state first state this expect second state second state override public void open configuration parameter throw exception super open parameter first state desc new map state descriptor broadcast state basic type info long type info basic type info long type info second state desc new map state descriptor broadcast state basic type info string type info basic type info long type info override public void process element tuple2 long long value read only context ctx collector tuple2 long long out throw exception final map long long actual first state new hash map for map entry long long entry ctx get broadcast state first state desc immutable entry actual first state put entry get key entry get value assert assert equal expect first state actual first state final map string long actual second state new hash map for map entry string long entry ctx get broadcast state second state desc immutable entry actual second state put entry get key entry get value assert assert equal expect second state actual second state out collect value override public void process broadcast element tuple2 long long value context ctx collector tuple2 long long out throw exception now we do nothing as we just want to verify the contents of the broadcast state a simple link key broadcast process function that verify the contents of the broadcast state after recovery private static class check keyed single broadcast function extend keyed broadcast process function long tuple2 long long tuple2 long long tuple2 long long private static final long serial version u i d l private final map long string expect state private map state descriptor long string state desc check keyed single broadcast function map long string state this expect state state override public void open configuration parameter throw exception super open parameter state desc new map state descriptor broadcast state basic type info long type info basic type info string type info override public void process element tuple2 long long value read only context ctx collector tuple2 long long out throw exception final map long string actual state new hash map for map entry long string entry ctx get broadcast state state desc immutable entry actual state put entry get key entry get value assert assert equal expect state actual state out collect value override public void process broadcast element tuple2 long long value context ctx collector tuple2 long long out throw exception now we do nothing as we just want to verify the contents of the broadcast state 
window checkpoint i t case suppress warning serial run with parameterized class public class window checkpoint i t case extend test logger private time characteristic time characteristic public window checkpoint i t case time characteristic time characteristic this time characteristic time characteristic private static final int parallelism class rule public static final mini cluster with client resource mini cluster resource new mini cluster with client resource new mini cluster resource configuration builder set configuration get configuration set number task manager set number slot per task manager parallelism build private static configuration get configuration configuration config new configuration config set task manager option manage memory size memory size parse 48m return config test public void test tumble processing time window final int num element try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env set stream time characteristic time characteristic env get config set auto watermark interval env enable checkpoint env set restart strategy restart strategy fix delay restart sink validator updater and checker updater and checker new sink validator updater and checker num element env add source new fail source new generator num element time characteristic rebalance key by time window time of millisecond apply new rich window function tuple2 long int type tuple2 long int type tuple time window private boolean open false override public void open configuration parameter assert equal parallelism get runtime context get number of parallel subtask open true override public void apply tuple tuple time window window iterable tuple2 long int type value collector tuple2 long int type out validate that the function have be open properly assert true open for tuple2 long int type value value assert equal value f0 int value value f1 value out collect new tuple2 value f0 new int type add sink new validate sink updater and checker updater and checker time characteristic set parallelism try execute env tumble window test catch exception e e print stack trace fail e get message test public void test slide processing time window final int num element try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env set stream time characteristic time characteristic env get config set auto watermark interval env enable checkpoint env set restart strategy restart strategy fix delay restart sink validator updater and checker updater and checker new sink validator updater and checker num element env add source new fail source new generator num element time characteristic rebalance key by time window time of millisecond time of millisecond apply new rich window function tuple2 long int type tuple2 long int type tuple time window private boolean open false override public void open configuration parameter assert equal parallelism get runtime context get number of parallel subtask open true override public void apply tuple tuple time window window iterable tuple2 long int type value collector tuple2 long int type out validate that the function have be open properly assert true open for tuple2 long int type value value assert equal value f0 int value value f1 value out collect new tuple2 value f0 new int type add sink new validate sink updater and checker updater and checker time characteristic set parallelism try execute env slide window test catch exception e e print stack trace fail e get message test public void test aggregate tumble processing time window final int num element try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env set stream time characteristic time characteristic env get config set auto watermark interval env enable checkpoint env set restart strategy restart strategy fix delay restart sink validator updater and checker updater and checker new sink validator updater and checker num element env add source new fail source new generator num element time characteristic map new map function tuple2 long int type tuple2 long int type override public tuple2 long int type map tuple2 long int type value value f1 value return value rebalance key by time window time of millisecond reduce new reduce function tuple2 long int type override public tuple2 long int type reduce tuple2 long int type a tuple2 long int type b return new tuple2 a f0 new int type add sink new validate sink updater and checker updater and checker time characteristic set parallelism try execute env aggregating tumble window test catch exception e e print stack trace fail e get message test public void test aggregate slide processing time window final int num element try stream execution environment env stream execution environment get execution environment env set parallelism parallelism env set stream time characteristic time characteristic env get config set auto watermark interval env enable checkpoint env set restart strategy restart strategy fix delay restart sink validator updater and checker updater and checker new sink validator updater and checker num element env add source new fail source new generator num element time characteristic map new map function tuple2 long int type tuple2 long int type override public tuple2 long int type map tuple2 long int type value value f1 value return value rebalance key by time window time of millisecond time of millisecond reduce new reduce function tuple2 long int type override public tuple2 long int type reduce tuple2 long int type a tuple2 long int type b return new tuple2 a f0 new int type add sink new validate sink updater and checker updater and checker time characteristic set parallelism try execute env aggregating slide window test catch exception e e print stack trace fail e get message utility static class generator implement fail source event emit generator override public void emit event source function source context tuple2 long int type ctx int event sequence no ctx collect new tuple2 long event sequence no new int type event sequence no static class sink validator updater and checker implement validate sink count updater tuple2 long int type validate sink result checker private final int element count expect private final int count per element expect sink validator updater and checker int element count expect int count per element expect this element count expect element count expect this count per element expect count per element expect override public void update count tuple2 long int type value map long integer window count window count merge value f0 value f1 value a b a b override public boolean check result map long integer window count int agg count for integer i window count value agg count i if agg count element count expect count per element expect element count expect window count size return false for int i window count value if count per element expect i return false return true parametrization for test different time characteristic parameterize parameter name time characteristic suppress warning unchecked rawtype public static collection time characteristic time characteristic return array as list new time characteristic time characteristic processing time new time characteristic time characteristic ingestion time 
job submission fail i t case run with parameterized class public class job submission fail i t case extend test logger private static final int num tm private static final int num slot class rule public static final mini cluster with client resource mini cluster resource new mini cluster with client resource new mini cluster resource configuration builder set configuration get configuration set number task manager num tm set number slot per task manager num slot num tm build private static configuration get configuration configuration config new configuration config set task manager option manage memory size memory size parse 4m to accommodate for netty arena num slot num tm x 16 mb netty buffer pool arena size config set task manager option network memory min memory size parse m return config private static job graph get work job graph final job vertex job vertex new job vertex work job vertex job vertex set invokable class no op invokable class return new job graph work testing job job vertex private final boolean detach public job submission fail i t case boolean detach this detach detach parameterized parameter name detach mode public static collection boolean execution mode return array as list new boolean false new boolean true test public void test exception in initialize on master throw exception final job vertex fail job vertex new fail job vertex fail job vertex fail job vertex set invokable class no op invokable class final job graph fail job graph new job graph fail testing job fail job vertex run job submission test fail job graph e exception util find throwable e candidate test exception equal candidate get message be present test public void test submit empty job graph throw exception final job graph job graph new job graph testing job run job submission test job graph e exception util find throwable e throwable throwable get message null throwable get message contain empty be present test public void test miss jar blob throw exception final job graph job graph get job graph with miss blob key run job submission test job graph e exception util find throwable e i o exception class be present private void run job submission test job graph job graph predicate exception failure predicate throw org apache flink client program program invocation exception cluster client client mini cluster resource get cluster client try if detach client util submit job client job graph else client util submit job and wait for result client job graph job submission fail i t case class get class loader fail job submission should have throw a exception catch exception e if failure predicate test e throw e client util submit job and wait for result client get work job graph job submission fail i t case class get class loader nonnull private static job graph get job graph with miss blob key final job graph job graph get work job graph job graph add user jar blob key new permanent blob key return job graph private static class fail job vertex extend job vertex private static final long serial version u i d l public fail job vertex final string msg super msg override public void initialize on master class loader loader throw exception throw new exception test exception 
page rank i t case run with parameterized class public class page rank i t case extend multiple program test base public page rank i t case test execution mode mode super mode private string vertex path private string edge path private string result path private string expect rule public temporary folder temp folder new temporary folder before public void before throw exception final file folder temp folder new folder final file result file new file folder uuid random u u i d to string result path result file to u be i to string file vertex file temp folder new file file util write file utf8 vertex file page rank datum vertex file edge file temp folder new file file util write file utf8 edge file page rank datum edge vertex path vertex file to u be i to string edge path edge file to u be i to string after public void after throw exception compare key value pair with delta expect result path 0.01 test public void test page rank small number of iteration throw exception page rank main new string page vertex path link edge path output result path num page page rank datum num vertex iteration expect page rank datum rank after iteration test public void test page rank with convergence criterion throw exception page rank main new string page vertex path link edge path output result path num page page rank datum num vertex vertex expect page rank datum rank after epsilon convergence 
page rank i t case run with parameterized class public class page rank i t case extend multiple program test base public page rank i t case test execution mode mode super mode private string vertex path private string edge path private string result path private string expect rule public temporary folder temp folder new temporary folder before public void before throw exception file result file temp folder new file delete file because the scala api do not respect write mode set by the configuration result file delete result path result file to u be i to string file vertex file temp folder new file file util write file utf8 vertex file page rank datum vertex file edge file temp folder new file file util write file utf8 edge file page rank datum edge vertex path vertex file to u be i to string edge path edge file to u be i to string after public void after throw exception compare key value pair with delta expect result path 0.01 test public void test page rank with small number of iteration throw exception page rank basic main new string page vertex path link edge path output result path num page page rank datum num vertex iteration expect page rank datum rank after iteration test public void test page rank with convergence throw exception start with a very high number of iteration such that the dynamic convergence criterion must handle termination page rank basic main new string page vertex path link edge path output result path num page page rank datum num vertex iteration expect page rank datum rank after epsilon convergence 
csv reader i t case run with parameterized class public class csv reader i t case extend multiple program test base private string expect rule public temporary folder temp folder new temporary folder public csv reader i t case test execution mode mode super mode private string create input datum string datum throw exception file file temp folder new file input file util write file utf8 file datum return file to u be i to string test public void test p o j o type throw exception final string input datum abc 2.20 n d e f 5.1 n d e f 3.30 n g h i 3.30 final string datum path create input datum input datum final execution environment env execution environment get execution environment datum set p o j o item datum env read csv file datum path pojo type p o j o item class new string f1 f3 f2 list p o j o item result datum collect expect abc 3,2 n d e f 5,5 n d e f 1,3 n g h i 10,3 compare result as text result expect test public void test p o j o type with field order throw exception final string input datum 2.20 abc n5 def n3 def n3 ghus final string datum path create input datum input datum final execution environment env execution environment get execution environment datum set p o j o item datum env read csv file datum path pojo type p o j o item class new string f3 f1 f2 list p o j o item result datum collect expect abc 3,2 n d e f 5,5 n d e f 1,3 n g h i 10,3 compare result as text result expect test expect null pointer exception class public void test p o j o type without field order throw exception final string input datum final string datum path create input datum input datum final execution environment env execution environment get execution environment env read csv file datum path pojo type p o j o item class null test public void test p o j o type with field order and field selection throw exception final string input datum 3,2 abc n5 5.1 def n1 3.30 def n10 3.30 ghi final string datum path create input datum input datum final execution environment env execution environment get execution environment datum set p o j o item datum env read csv file datum path include field true false true pojo type p o j o item class new string f2 f1 list p o j o item result datum collect expect abc 3,0 n d e f 5,0 n d e f 1,0 n g h i 10,0 compare result as text result expect test public void test value type throw exception final string input datum abc true 1,2 3,4 5.0 6.0 n b c d false 1,2 3,4 5.0 6.0 final string datum path create input datum input datum final execution environment env execution environment get execution environment datum set tuple8 string value boolean value byte value short value int value long value float value double value datum env read csv file datum path type string value class boolean value class byte value class short value class int value class long value class float value class double value class list tuple8 string value boolean value byte value short value int value long value float value double value result datum collect expect input datum compare result as tuple result expect pojo public static class p o j o item public string f1 private int f2 public double f3 public int get f2 return f2 public void set f2 int f2 this f2 f2 override public string to string return string format locale we be d 02f f1 f2 f3 
aggregator convergence i t case run with parameterized class suppress warning serial public class aggregator convergence i t case extend multiple program test base public aggregator convergence i t case test execution mode mode super mode final list tuple2 long long vertice input array as list new tuple2 1 l 1 l new tuple2 2 l 2 l new tuple2 3 l 3 l new tuple2 4 l 4 l new tuple2 5 l 5 l new tuple2 6 l 6 l new tuple2 7 l 7 l new tuple2 8 l 8 l new tuple2 9 l 9 l final list tuple2 long long edge input array as list new tuple2 1 l 2 l new tuple2 1 l 3 l new tuple2 2 l 3 l new tuple2 2 l 4 l new tuple2 2 l 1 l new tuple2 3 l 1 l new tuple2 3 l 2 l new tuple2 4 l 2 l new tuple2 4 l 6 l new tuple2 5 l 6 l new tuple2 6 l 4 l new tuple2 6 l 5 l new tuple2 7 l 8 l new tuple2 7 l 9 l new tuple2 8 l 7 l new tuple2 8 l 9 l new tuple2 9 l 7 l new tuple2 9 l 8 l final list tuple2 long long expect result array as list new tuple2 1 l 1 l new tuple2 2 l 1 l new tuple2 3 l 1 l new tuple2 4 l 1 l new tuple2 5 l 2 l new tuple2 6 l 1 l new tuple2 7 l 7 l new tuple2 8 l 7 l new tuple2 9 l 7 l test public void test connect component with parametrizable convergence throw exception name of the aggregator that check for convergence final string update element update element aggr the iteration stop if less than this number of element change value final long convergence threshold final execution environment env execution environment get execution environment datum set tuple2 long long initial solution set env from collection vertex input datum set tuple2 long long edge env from collection edge input iterative datum set tuple2 long long iteration initial solution set iterate register the convergence criterion iteration register aggregation convergence criterion update element new long sum aggregator new update element convergence criterion convergence threshold datum set tuple2 long long vertex with new component iteration join edge where equal to with new neighbor with component i d join group by min datum set tuple2 long long update component id vertex with new component join iteration where equal to flat map new minimum id filter update element list tuple2 long long result iteration close with update component id collect collection sort result new test base util tuple comparator tuple2 long long assert equal expected result result test public void test delta connect component with parametrizable convergence throw exception name of the aggregator that check for convergence final string update element update element aggr the iteration stop if less than this number of element change value final long convergence threshold final execution environment env execution environment get execution environment datum set tuple2 long long initial solution set env from collection vertex input datum set tuple2 long long edge env from collection edge input delta iteration tuple2 long long tuple2 long long iteration initial solution set iterate delta initial solution set register the convergence criterion iteration register aggregation convergence criterion update element new long sum aggregator new update element convergence criterion convergence threshold datum set tuple2 long long vertex with new component iteration get workset join edge where equal to with new neighbor with component i d join group by min datum set tuple2 long long update component id vertex with new component join iteration get solution set where equal to flat map new minimum id filter update element list tuple2 long long result iteration close with update component id update component id collect collection sort result new test base util tuple comparator tuple2 long long assert equal expected result result test public void test parameterizable aggregator throw exception final int max iteration final string aggregator name element in component aggregator final long component id 1 l final execution environment env execution environment get execution environment datum set tuple2 long long initial solution set env from collection vertex input datum set tuple2 long long edge env from collection edge input iterative datum set tuple2 long long iteration initial solution set iterate max iteration register the aggregator iteration register aggregator aggregator name new long sum aggregator with parameter component id datum set tuple2 long long vertex with new component iteration join edge where equal to with new neighbor with component i d join group by min datum set tuple2 long long update component id vertex with new component join iteration where equal to flat map new minimum id filter count aggregator name list tuple2 long long result iteration close with update component id collect collection sort result new test base util tuple comparator tuple2 long long list tuple2 long long expect result array as list new tuple2 1 l 1 l new tuple2 2 l 1 l new tuple2 3 l 1 l new tuple2 4 l 1 l new tuple2 5 l 1 l new tuple2 6 l 1 l new tuple2 7 l 7 l new tuple2 8 l 7 l new tuple2 9 l 7 l check program result assert equal expected result result check aggregator long aggr value minimum id filter count aggr value note that position have the end result from superstep retrieve at the start of iteration position one as superstep retrieve at the start of iteration the result from iteration be not available because no iteration happen assert equal aggr value assert equal aggr value assert equal aggr value assert equal aggr value test function private static final class neighbor with component i d join extend rich join function tuple2 long long tuple2 long long tuple2 long long private static final long serial version u i d 1 l override public tuple2 long long join tuple2 long long vertex with comp id tuple2 long long edge vertex with comp id f0 edge f1 return vertex with comp id private static class minimum id filter extend rich flat map function tuple2 tuple2 long long tuple2 long long tuple2 long long private final string agg name private long sum aggregator aggr public minimum id filter string agg name this agg name agg name override public void open configuration conf aggr get iteration runtime context get iteration aggregator agg name override public void flat map tuple2 tuple2 long long tuple2 long long vertex with new and old id collector tuple2 long long out if vertex with new and old id f0 f1 vertex with new and old id f1 f1 out collect vertex with new and old id f0 aggr aggregate 1 l else out collect vertex with new and old id f1 private static final class minimum id filter count extend rich flat map function tuple2 tuple2 long long tuple2 long long tuple2 long long private static final long aggr value new long private final string agg name private long sum aggregator with parameter aggr public minimum id filter count string agg name this agg name agg name override public void open configuration conf final int superstep get iteration runtime context get superstep number aggr get iteration runtime context get iteration aggregator agg name if superstep get iteration runtime context get index of this subtask long value val get iteration runtime context get previous iteration aggregate agg name aggr value superstep val get value override public void flat map tuple2 tuple2 long long tuple2 long long vertex with new and old id collector tuple2 long long out if vertex with new and old id f0 f1 vertex with new and old id f1 f1 out collect vertex with new and old id f0 if vertex with new and old id f0 f1 aggr get component id aggr aggregate 1 l else out collect vertex with new and old id f1 if vertex with new and old id f1 f1 aggr get component id aggr aggregate 1 l a convergence criterion with one parameter private static class update element convergence criterion implement convergence criterion long value private final long threshold public update element convergence criterion long u threshold this threshold u threshold override public boolean be converge int iteration long value value return value get value this threshold private static final class long sum aggregator with parameter extend long sum aggregator private long component id public long sum aggregator with parameter long comp id this component id comp id public long get component id return this component id 
aggregator i t case run with parameterized class public class aggregator i t case extend multiple program test base private static final int max iteration private static final int parallelism private static final string negative element aggr count negative element public aggregator i t case test execution mode mode super mode class rule public static temporary folder temp folder new temporary folder test public void test distribute cache with iteration throw exception final string test string et tu brute final string test name testing caesar final file folder temp folder new folder final file result file new file folder uuid random u u i d to string string test path result file to string string result path result file to u be i to string file temp file new file test path try file writer writer new file writer temp file writer write test string final execution environment env execution environment get execution environment env register cache file result path test name iterative datum set long solution env from element 1 l iterate solution close with env generate sequence filter new rich filter function long override public void open configuration parameter throw exception file file get runtime context get distribute cache get file test name buffer reader reader new buffer reader new file reader file string output reader read line reader close assert equal output test string override public boolean filter long value throw exception return false with broadcast set solution solution output new discard output format long env execute test public void test aggregator without parameter for iterate throw exception test aggregator without parameter for iterate final execution environment env execution environment get execution environment env set parallelism parallelism datum set integer initial solution set collection data set get integer datum set env iterative datum set integer iteration initial solution set iterate max iteration register aggregator long sum aggregator aggr new long sum aggregator iteration register aggregator negative element aggr aggr register convergence criterion iteration register aggregation convergence criterion negative element aggr aggr new negative element convergence criterion datum set integer update d iteration map new subtract one map list integer result iteration close with update d collect collection sort result list integer expect array as list assert equal expected result test public void test aggregator with parameter for iterate throw exception test aggregator with parameter for iterate final execution environment env execution environment get execution environment env set parallelism parallelism datum set integer initial solution set collection data set get integer datum set env iterative datum set integer iteration initial solution set iterate max iteration register aggregator long sum aggregator with parameter aggr new long sum aggregator with parameter iteration register aggregator negative element aggr aggr register convergence criterion iteration register aggregation convergence criterion negative element aggr aggr new negative element convergence criterion datum set integer update d iteration map new subtract one map with param list integer result iteration close with update d collect collection sort result list integer expect array as list assert equal expected result test public void test convergence criterion with parameter for iterate throw exception test convergence criterion with parameter for iterate final execution environment env execution environment get execution environment env set parallelism parallelism datum set integer initial solution set collection data set get integer datum set env iterative datum set integer iteration initial solution set iterate max iteration register aggregator long sum aggregator aggr new long sum aggregator iteration register aggregator negative element aggr aggr register convergence criterion iteration register aggregation convergence criterion negative element aggr aggr new negative element convergence criterion with param datum set integer update d iteration map new subtract one map list integer result iteration close with update d collect collection sort result list integer expect array as list assert equal expected result test public void test aggregator without parameter for iterate delta throw exception test aggregator without parameter for iterate delta final execution environment env execution environment get execution environment env set parallelism parallelism datum set tuple2 integer integer initial solution set collection data set get integer datum set env map new tuple maker map delta iteration tuple2 integer integer tuple2 integer integer iteration initial solution set iterate delta initial solution set max iteration register aggregator long sum aggregator aggr new long sum aggregator iteration register aggregator negative element aggr aggr datum set tuple2 integer integer update d iteration get workset map new aggregate map delta datum set tuple2 integer integer new element update d join iteration get solution set where equal to flat map new update filter datum set tuple2 integer integer iteration re iteration close with new element new element list integer result iteration re map new project second mapper collect collection sort result list integer expect array as list assert equal expected result test public void test aggregator with parameter for iterate delta throw exception test aggregator with parameter for iterate delta final execution environment env execution environment get execution environment env set parallelism parallelism datum set tuple2 integer integer initial solution set collection data set get integer datum set env map new tuple maker map delta iteration tuple2 integer integer tuple2 integer integer iteration initial solution set iterate delta initial solution set max iteration register aggregator long sum aggregator aggr new long sum aggregator with parameter iteration register aggregator negative element aggr aggr datum set tuple2 integer integer update d iteration get workset map new aggregate map delta datum set tuple2 integer integer new element update d join iteration get solution set where equal to flat map new update filter datum set tuple2 integer integer iteration re iteration close with new element new element list integer result iteration re map new project second mapper collect collection sort result list integer expect array as list assert equal result expect test public void test convergence criterion with parameter for iterate delta throw exception test convergence criterion with parameter for iterate delta final execution environment env execution environment get execution environment env set parallelism parallelism datum set tuple2 integer integer initial solution set collection data set get integer datum set env map new tuple maker map delta iteration tuple2 integer integer tuple2 integer integer iteration initial solution set iterate delta initial solution set max iteration register aggregator long sum aggregator aggr new long sum aggregator iteration register aggregator negative element aggr aggr register convergence criterion iteration register aggregation convergence criterion negative element aggr aggr new negative element convergence criterion with param datum set tuple2 integer integer update d iteration get workset map new aggregate and subtract one delta datum set tuple2 integer integer new element update d join iteration get solution set where equal to project first datum set tuple2 integer integer iteration re iteration close with new element new element list integer result iteration re map new project second mapper collect collection sort result list integer expect array as list assert equal expected result suppress warning serial private static final class negative element convergence criterion implement convergence criterion long value override public boolean be converge int iteration long value value return value get value suppress warning serial private static final class negative element convergence criterion with param implement convergence criterion long value private int value public negative element convergence criterion with param int val this value val public int get value return this value override public boolean be converge int iteration long value value return value get value this value suppress warning serial private static final class subtract one map extend rich map function integer integer private long sum aggregator aggr override public void open configuration conf aggr get iteration runtime context get iteration aggregator negative element aggr override public integer map integer value integer new value value count negative number if new value aggr aggregate 1 l return new value suppress warning serial private static final class subtract one map with param extend rich map function integer integer private long sum aggregator with parameter aggr override public void open configuration conf aggr get iteration runtime context get iteration aggregator negative element aggr override public integer map integer value integer new value value count number less than the aggregator parameter if new value aggr get value aggr aggregate 1 l return new value suppress warning serial private static class long sum aggregator with parameter extend long sum aggregator private int value public long sum aggregator with parameter int val this value val public int get value return this value suppress warning serial private static final class tuple maker map extend rich map function integer tuple2 integer integer private random rnd override public void open configuration parameter rnd new random 0x c0 f f e b a d b e e f d e a d l get runtime context get index of this subtask override public tuple2 integer integer map integer value integer node id rnd next int return new tuple2 node id value suppress warning serial private static final class aggregate map delta extend rich map function tuple2 integer integer tuple2 integer integer private long sum aggregator aggr private long value previous aggr private int superstep override public void open configuration conf aggr get iteration runtime context get iteration aggregator negative element aggr superstep get iteration runtime context get superstep number if superstep previous aggr get iteration runtime context get previous iteration aggregate negative element aggr check previous aggregator value assert assert equal superstep previous aggr get value override public tuple2 integer integer map tuple2 integer integer value count the element that be equal to the superstep number if value f1 superstep aggr aggregate 1 l return value suppress warning serial private static final class update filter extend rich flat map function tuple2 tuple2 integer integer tuple2 integer integer tuple2 integer integer private int superstep override public void open configuration conf superstep get iteration runtime context get superstep number override public void flat map tuple2 tuple2 integer integer tuple2 integer integer value collector tuple2 integer integer out if value f0 f1 superstep out collect value f0 suppress warning serial private static final class project second mapper extend rich map function tuple2 integer integer integer override public integer map tuple2 integer integer value return value f1 suppress warning serial private static final class aggregate and subtract one delta extend rich map function tuple2 integer integer tuple2 integer integer private long sum aggregator aggr private long value previous aggr private int superstep override public void open configuration conf aggr get iteration runtime context get iteration aggregator negative element aggr superstep get iteration runtime context get superstep number if superstep previous aggr get iteration runtime context get previous iteration aggregate negative element aggr check previous aggregator value assert assert equal superstep previous aggr get value override public tuple2 integer integer map tuple2 integer integer value count the one if value f1 aggr aggregate 1 l value f1 return value 
connected component with defer update i t case run with parameterized class public class connect component with defer update i t case extend java program test base private static final long seed 0x b a d c0 f f e e b e e f l private static final int num vertex private static final int num edge private final boolean extra mapper protect string vertex path protect string edge path protect string result path public connected component with defer update i t case boolean extra mapper this extra mapper extra mapper override protect void pre submit throw exception vertex path create temp file vertex txt connected component datum get enumerate vertex num vertex edge path create temp file edge txt connect component datum get random odd even edge num edge num vertex seed result path get temp file path result override protect void test program throw exception set up execution environment execution environment env execution environment get execution environment read vertex and edge datum datum set tuple1 long vertex env read csv file vertex path type long class datum set tuple2 long long edge env read csv file edge path field delimiter type long class long class flat map new connected component undirect edge assign the initial component equal to the vertex id datum set tuple2 long long vertex with initial id vertex map new connected component i t case duplicate value long open a delta iteration delta iteration tuple2 long long tuple2 long long iteration vertex with initial id iterate delta vertex with initial id apply the step logic join with the edge select the minimum neighbor update if the component of the candidate be smaller datum set tuple2 long long change iteration get workset join edge where equal to with new connected component neighbor with component i d join group by aggregate aggregation min join iteration get solution set where equal to with new update component id match non preserve datum set tuple2 long long delta if extra mapper delta change map id mapper new map function tuple2 long long tuple2 long long private static final long serial version u i d l override public tuple2 long long map tuple2 long long v throw exception return v else delta change close the delta iteration delta and new workset be identical datum set tuple2 long long result iteration close with delta change result write as csv result path n execute program env execute connected component example override protect void post submit throw exception for buffer reader reader get result reader result path connected component datum check odd even result reader parameter public static collection object get configuration return array as list new object false new object true private static final class update component id match non preserve implement flat join function tuple2 long long tuple2 long long tuple2 long long private static final long serial version u i d 1 l override public void join tuple2 long long candidate tuple2 long long current collector tuple2 long long out throw exception if candidate f1 current f1 out collect candidate 
dangling page rank i t case run with parameterized class suppress warning serial unchecked public class dangle page rank i t case extend multiple program test base private static final string aggregator name pagerank aggregator public dangling page rank i t case test execution mode mode super mode test public void test dangle page rank try final int num iteration final execution environment env execution environment get execution environment datum set tuple2 long boolean vertex env from element new tuple2 1 l false new tuple2 2 l false new tuple2 5 l false new tuple2 3 l true new tuple2 4 l false datum set page with link edge env from element new page with link 2 l new long new page with link 5 l new long new page with link 4 l new long new page with link 1 l new long final long num vertex vertex count final long num dangle vertex vertex filter new filter function tuple2 long boolean override public boolean filter tuple2 long boolean value return value f1 count datum set page with rank and dangling vertex with initial rank vertex map new map function tuple2 long boolean page with rank and dangling override public page with rank and dangling map tuple2 long boolean value return new page with rank and dangling value f0 1.0 num vertex value f1 iterative datum set page with rank and dangling iteration vertex with initial rank iterate num iteration iteration get aggregator register aggregation convergence criterion aggregator name new page rank stats aggregator new diff l1 norm convergence criterion datum set page with rank partial rank iteration join edge where page id equal to page id with new flat join function page with rank and dangling page with link page with rank override public void join page with rank and dangling page page with link link collector page with rank out double rank to distribute page rank double link target length page with rank output new page with rank 0 l rank to distribute for long target link target output page id target out collect output datum set page with rank and dangling new rank iteration co group partial rank where page id equal to page id with new rich co group function page with rank and dangling page with rank page with rank and dangling private static final double beta 0.85 private final double random jump 1.0 beta num vertex private page rank stats aggregator aggregator private double dangling rank factor override public void open configuration parameter throw exception int current iteration get iteration runtime context get superstep number aggregator get iteration runtime context get iteration aggregator aggregator name if current iteration dangle rank factor beta double num dangle vertex double num vertex double num vertex else page rank stats previous aggregate get iteration runtime context get previous iteration aggregate aggregator name dangle rank factor beta previous aggregate dangling rank double num vertex override public void co group iterable page with rank and dangling current page iterable page with rank partial rank collector page with rank and dangle out compute the next rank long edge double sum rank for page with rank partial partial rank sum rank partial rank edge double rank beta sum rank random jump dangle rank factor current rank for stats and convergence page with rank and dangling current page current page iterator next double current rank current page rank boolean be dangling current page dangle maintain statistics to compensate for probability loss on dangling node double dangling rank to aggregate be dangling rank long dangle vertex to aggregate be dangling double diff math abs current rank rank aggregator aggregate diff rank dangle rank to aggregate dangling vertex to aggregate edge current page rank rank out collect current page list page with rank and dangling result iteration close with new rank collect double total rank 0.0 for page with rank and dangling r result total rank r rank assert true r page id r page id assert true r page id be dangling assert equal 1.0 total rank 0.001 catch exception e e print stack trace fail e get message custom type pojo for page id and rank value public static class page with rank public long page id public double rank public page with rank public page with rank long page id double rank this page id page id this rank rank pojo for page id rank value and whether a dangling vertex with out degree public static class page with rank and dangling public long page id public double rank public boolean dangling public page with rank and dangling public page with rank and dangling long page id double rank boolean dangle this page id page id this rank rank this dangling dangling override public string to string return page with rank and dangling page id page id rank rank dangle dangling pojo for page id and list of target i d public static class page with link public long page id public long target public page with link public page with link long page id long target this page id page id this target target statistics page rank statistics public static class page rank stats implement value private double diff private double rank private double dangling rank private long num dangle vertex private long num vertex private long edge public page rank stats public page rank stats double diff double rank double dangling rank long num dangling vertex long num vertex long edge this diff diff this rank rank this dangling rank dangle rank this num dangling vertex num dangling vertex this num vertex num vertex this edge edge public double diff return diff public double rank return rank public double dangling rank return dangle rank public long num dangle vertex return num dangling vertex public long num vertex return num vertex public long edge return edge override public void write datum output view out throw i o exception out write double diff out write double rank out write double dangling rank out write long num dangle vertex out write long num vertice out write long edge override public void read datum input view in throw i o exception diff in read double rank in read double dangling rank in read double num dangle vertex in read long num vertex in read long edge in read long override public string to string return page rank stats diff diff rank rank dangle rank dangling rank num dangling vertex num dangling vertex num vertex num vertex edge edge private static class page rank stats aggregator implement aggregator page rank stats private double diff private double rank private double dangling rank private long num dangle vertex private long num vertex private long edge override public page rank stats get aggregate return new page rank stats diff rank dangling rank num dangle vertex num vertex edge public void aggregate double diff delta double rank delta double dangling rank delta long dangle vertex delta long vertice delta long edge delta diff diff delta rank rank delta dangle rank dangling rank delta num dangle vertex dangle vertex delta num vertex vertex delta edge edge delta override public void aggregate page rank stats page rank stats diff page rank stats diff rank page rank stats rank dangling rank page rank stats dangle rank num dangle vertex page rank stats num dangling vertex num vertex page rank stats num vertex edge page rank stats edge override public void reset diff rank dangle rank num dangle vertex num vertex edge private static class diff l1 norm convergence criterion implement convergence criterion page rank stats private static final double epsilon 0.00005 override public boolean be converge int iteration page rank stats page rank stats return page rank stats diff epsilon 
solution set duplicate i t case suppress warning serial run with parameterized class public class solution set duplicate i t case extend multiple program test base public solution set duplicate i t case test execution mode mode super mode test public void test program try execution environment env execution environment get execution environment datum set tuple2 long long datum env generate sequence flat map new flat map function long tuple2 long long override public void flat map long value collector tuple2 long long out out collect new tuple2 long long value value out collect new tuple2 long long value value out collect new tuple2 long long value value rebalance delta iteration tuple2 long long tuple2 long long iter datum iterate delta datum list integer result iter close with iter get workset iter get workset map new map function tuple2 long long integer override public integer map tuple2 long long value return value f0 int value collect assert equal result size collection sort result assert equal array as list result catch exception e e print stack trace fail e get message 
type serializer snapshot migration i t case run with parameterized class public class type serializer snapshot migration i t case extend savepoint migration test base private static final int num source element this test run in either of two mode we want to generate the binary savepoint i e we have to run the checkpointing function we want to verify restore so we have to run the checking function public enum execution mode perform savepoint verify savepoint todo change this to perform savepoint to regenerate binary savepoint todo note you should generate the savepoint base on the release branch instead of the master private final execution mode execution mode execution mode verify savepoint parameterized parameter name migrate savepoint backend public static collection tuple2 migration version string parameter return array as list tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name tuple2 of migration version v1 state backend loader memory state backend name tuple2 of migration version v1 state backend loader rocksdb state backend name private final migration version test migrate version private final string test state backend public type serializer snapshot migration i t case tuple2 migration version string test migrate version and backend throw exception this test migrate version test migrate version and backend f0 this test state backend test migrate version and backend f1 test public void test savepoint throw exception final int parallelism final stream execution environment env stream execution environment get execution environment env set restart strategy restart strategy no restart env set stream time characteristic time characteristic event time switch test state backend case state backend loader rocksdb state backend name env set state backend new rock d b state backend new memory state backend break case state backend loader memory state backend name env set state backend new memory state backend break default throw new unsupported operation exception env enable checkpoint env set parallelism parallelism env set max parallelism parallelism source function tuple2 long long non parallel source new migration test util checkpoint non parallel source with list state num source element env add source non parallel source key by map new test map function add sink new migration test util accumulator count sink if execution mode execution mode perform savepoint execute and savepoint env src test resource get savepoint path test migrate version test state backend new tuple2 migration test util accumulator count sink num element accumulator num source element else restore and execute env get resource filename get savepoint path test migrate version test state backend new tuple2 migration test util accumulator count sink num element accumulator num source element private string get savepoint path migration version savepoint version string backend type switch backend type case rocksdb return type serializer snapshot migration itcase flink savepoint version rocksdb savepoint case jobmanager return type serializer snapshot migration itcase flink savepoint version savepoint default throw new unsupported operation exception private static class test map function extend rich map function tuple2 long long tuple2 long long private static final long serial version u i d 1 l override public tuple2 long long map tuple2 long long value throw exception value state long state get runtime context get state new value state descriptor test state new test serializer state update value f1 return value private static class test serializer extend type serializer long private static final long serial version u i d 1 l private long serializer serializer new long serializer private string config payload config payload override public type serializer snapshot long snapshot configuration return new test serializer snapshot config payload override public type serializer long duplicate return this simple forward serializer method override public void serialize long record datum output view target throw i o exception serializer serialize record target override public long deserialize long reuse datum input view source throw i o exception return serializer deserialize reuse source override public long deserialize datum input view source throw i o exception return serializer deserialize source override public void copy datum input view source datum output view target throw i o exception serializer copy source target override public long copy long from return serializer copy from override public long copy long from long reuse return serializer copy from reuse override public long create instance return serializer create instance override public boolean be immutable type return serializer be immutable type override public int get length return serializer get length override public int hash code return get class hash code override public boolean equal object obj return obj instanceof test serializer test serializer snapshot the version write in savepoint extend a link type serializer config snapshot public static class test serializer snapshot implement type serializer snapshot long private string config payload public test serializer snapshot public test serializer snapshot string config payload this config payload config payload override public int get current version return override public type serializer schema compatibility long resolve schema compatibility type serializer long new serializer return new serializer instanceof test serializer type serializer schema compatibility compatible as be type serializer schema compatibility incompatible override public type serializer long restore serializer return new test serializer override public void write snapshot datum output view out throw i o exception out write u t f config payload override public void read snapshot int read version datum input view in class loader user code class loader throw i o exception if read version throw new illegal state exception can not recognize read version read version this config payload in read u t f this be the implementation of link test serializer snapshot when the savepoint be write public static class test serializer snapshot extend type serializer config snapshot private string config payload public test serializer snapshot public test serializer snapshot string config payload this config payload config payload override public int get version return override public void write datum output view out throw i o exception super write out out write u t f config payload override public void read datum input view in throw i o exception super read in this config payload in read u t f override public int hash code return get class hash code override public boolean equal object obj return obj instanceof test serializer snapshot 
aggregate i t case run with parameterized class public class aggregate i t case extend multiple program test base public aggregate i t case test execution mode mode super mode test public void test full aggregate throw exception full aggregate final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 integer long aggregate d d aggregate aggregation sum and aggregation max project list tuple2 integer long result aggregate d collect string expect 231,6 n compare result as tuple result expect test public void test full aggregate of mutable value type throw exception full aggregate of mutable value type final execution environment env execution environment get execution environment datum set tuple3 int value long value string value d value collection data set get3 tuple datum set env datum set tuple2 int value long value aggregate d d aggregate aggregation sum and aggregation max project list tuple2 int value long value result aggregate d collect string expect 231,6 n compare result as tuple result expect test public void test group aggregate throw exception group aggregate final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 long integer aggregate d d group by aggregate aggregation sum project list tuple2 long integer result aggregate d collect string expect 1,1 n 2,5 n 3,15 n 4,34 n 5,65 n 6,111 n compare result as tuple result expect test public void test group aggregate of mutable value type throw exception group aggregate of mutable value type final execution environment env execution environment get execution environment datum set tuple3 int value long value string value d value collection data set get3 tuple datum set env datum set tuple2 int value long value aggregate d d group by aggregate aggregation sum project list tuple2 int value long value result aggregate d collect string expect 1,1 n 2,5 n 3,15 n 4,34 n 5,65 n 6,111 n compare result as tuple result expect test public void test nest aggregate throw exception nest aggregate final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple1 integer aggregate d d group by aggregate aggregation min aggregate aggregation min project list tuple1 integer result aggregate d collect string expect n compare result as tuple result expect test public void test nest aggregate of mutable value type throw exception nest aggregate of mutable value type final execution environment env execution environment get execution environment datum set tuple3 int value long value string value d value collection data set get3 tuple datum set env datum set tuple1 int value aggregate d d group by aggregate aggregation min aggregate aggregation min project list tuple1 int value result aggregate d collect string expect n compare result as tuple result expect 
co group i t case run with parameterized class public class co group i t case extend multiple program test base public co group i t case test execution mode mode super mode co group on tuple with key field selector test public void test co group tuple with key field selector throw exception final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple2 integer integer co group d d co group ds2 where equal to with new tuple5 co group list tuple2 integer integer result co group d collect string expect 1,0 n 2,6 n 3,24 n 4,60 n 5,120 n compare result as tuple result expect test public void test co group on two custom type input with key extractor throw exception co group on two custom type input with key extractor final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type ds2 collection datum set get custom type datum set env datum set custom type co group d d co group ds2 where new key selector4 equal to new key selector5 with new custom type co group list custom type result co group d collect string expect 1,0 test n 2,6 test n 3,24 test n 4,60 test n 5,120 test n 6,210 test n compare result as text result expect private static class key selector4 implement key selector custom type integer private static final long serial version u i d 1 l override public integer get key custom type in return in my int private static class key selector5 implement key selector custom type integer private static final long serial version u i d 1 l override public integer get key custom type in return in my int test public void test correctness of co group if u d f return left input object throw exception check correctness of cogroup if udf return leave input object final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string ds2 collection data set get3 tuple datum set env datum set tuple3 integer long string co group d d co group ds2 where equal to with new tuple3 return leave list tuple3 integer long string result co group d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n compare result as tuple result expect test public void test correctness of co group if u d f return right input object throw exception check correctness of cogroup if udf return right input object final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple5 integer long integer string long co group d d co group ds2 where equal to with new tuple5 return right list tuple5 integer long integer string long result co group d collect string expect 1,1 hallo n 2,2 hallo welt n 2,3 hallo welt wie n 3,4 hallo welt wie geht n 3,5 abc n 3,6 bcd n compare result as tuple result expect test public void test co group with broadcast set throw exception reduce with broadcast set final execution environment env execution environment get execution environment datum set integer int d collection data set get integer datum set env datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple3 integer integer integer co group d d co group ds2 where equal to with new tuple5 co group b c with broadcast set int d int list tuple3 integer integer integer result co group d collect string expect 1,0 n 2,6 n 3,24 n 4,60 n 5,120 n compare result as tuple result expect test public void test co group on a tuple input with key field selector and a custom type input with key extractor throw exception co group on a tuple input with key field selector and a custom type input with key extractor final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set custom type ds2 collection datum set get custom type datum set env datum set tuple3 integer long string co group d d co group ds2 where equal to new key selector2 with new mixed co group list tuple3 integer long string result co group d collect string expect 0,1 test n 1,2 test n 2,5 test n 3,15 test n 4,33 test n 5,63 test n 6,109 test n 7,4 test n 8,4 test n 9,4 test n 10,5 test n 11,5 test n 12,5 test n 13,5 test n 14,5 test n compare result as tuple result expect private static class key selector2 implement key selector custom type integer private static final long serial version u i d 1 l override public integer get key custom type in return in my int test public void test co group on a custom type with key extractor and a tuple input with key field selector throw exception co group on a tuple input with key field selector and a custom type input with key extractor final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set custom type ds2 collection datum set get custom type datum set env datum set custom type co group d ds2 co group d where new key selector3 equal to with new mixed co group2 list custom type result co group d collect string expect 0,1 test n 1,2 test n 2,5 test n 3,15 test n 4,33 test n 5,63 test n 6,109 test n 7,4 test n 8,4 test n 9,4 test n 10,5 test n 11,5 test n 12,5 test n 13,5 test n 14,5 test n compare result as text result expect private static class key selector3 implement key selector custom type integer private static final long serial version u i d 1 l override public integer get key custom type in return in my int test public void test co group with multiple key field with field selector throw exception co group with multiple key field final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long ds1 collection data set get5 tuple datum set env datum set tuple3 integer long string ds2 collection data set get3 tuple datum set env datum set tuple3 integer long string co group ds1 co group ds2 where equal to with new tuple5 tuple3 co group list tuple3 integer long string result co group collect string expect 1,1 hallo n 2,2 hallo welt n 3,2 hallo welt wie geht n 3,2 abc n 5,3 hij n 5,3 ijk n compare result as tuple result expect test public void test co group with multiple key field with static class key extractor throw exception co group with multiple key field final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long ds1 collection data set get5 tuple datum set env datum set tuple3 integer long string ds2 collection data set get3 tuple datum set env datum set tuple3 integer long string co group ds1 co group ds2 where new key selector7 equal to new key selector8 with new tuple5 tuple3 co group list tuple3 integer long string result co group collect string expect 1,1 hallo n 2,2 hallo welt n 3,2 hallo welt wie geht n 3,2 abc n 5,3 hij n 5,3 ijk n compare result as tuple result expect test public void test co group with multiple key field with inner class key extractor with closure cleaner throw exception co group with multiple key field test work closure cleaner for inner class final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long ds1 collection data set get5 tuple datum set env datum set tuple3 integer long string ds2 collection data set get3 tuple datum set env datum set tuple3 integer long string co group ds1 co group ds2 where new key selector tuple5 integer long integer string long tuple2 integer long override public tuple2 integer long get key tuple5 integer long integer string long t throw exception return new tuple2 integer long t f0 t f4 equal to new key selector tuple3 integer long string tuple2 integer long override public tuple2 integer long get key tuple3 integer long string t return new tuple2 t f0 t f1 with new co group function tuple5 integer long integer string long tuple3 integer long string tuple3 integer long string override public void co group iterable tuple5 integer long integer string long first iterable tuple3 integer long string second collector tuple3 integer long string out list string str new array list for tuple5 integer long integer string long t first str add t f3 for tuple3 integer long string t second for string s str out collect new tuple3 integer long string t f0 t f1 s list tuple3 integer long string result co group collect string expect 1,1 hallo n 2,2 hallo welt n 3,2 hallo welt wie geht n 3,2 abc n 5,3 hij n 5,3 ijk n compare result as tuple result expect test public void test co group with multiple key field with inner class key extractor without closure cleaner throw exception co group with multiple key field test that disable closure cleaner lead to a exception when use inner class final execution environment env execution environment get execution environment env get config disable closure cleaner datum set tuple5 integer long integer string long ds1 collection data set get5 tuple datum set env datum set tuple3 integer long string ds2 collection data set get3 tuple datum set env boolean correct exception trigger false try datum set tuple3 integer long string co group ds1 co group ds2 where new key selector tuple5 integer long integer string long tuple2 integer long override public tuple2 integer long get key tuple5 integer long integer string long t throw exception return new tuple2 integer long t f0 t f4 equal to new key selector tuple3 integer long string tuple2 integer long override public tuple2 integer long get key tuple3 integer long string t return new tuple2 integer long t f0 t f1 with new co group function tuple5 integer long integer string long tuple3 integer long string tuple3 integer long string override public void co group iterable tuple5 integer long integer string long first iterable tuple3 integer long string second collector tuple3 integer long string out list string str new array list string for tuple5 integer long integer string long t first str add t f3 for tuple3 integer long string t second for string s str out collect new tuple3 integer long string t f0 t f1 s catch invalid program exception ex correct exception trigger ex get cause instanceof java io not serializable exception assert assert true correct exception trigger private static class key selector7 implement key selector tuple5 integer long integer string long tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple5 integer long integer string long t return new tuple2 integer long t f0 t f4 private static class key selector8 implement key selector tuple3 integer long string tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple3 integer long string t return new tuple2 integer long t f0 t f1 test public void test co group two custom type input with expression key throw exception co group on two custom type input use expression key final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type ds2 collection datum set get custom type datum set env datum set custom type co group d d co group ds2 where my int equal to my int with new custom type co group list custom type result co group d collect string expect 1,0 test n 2,6 test n 3,24 test n 4,60 test n 5,120 test n 6,210 test n compare result as text result expect test public void test co group on two custom type input with expression key and field selector throw exception co group on two custom type input use expression key final execution environment env execution environment get execution environment datum set pojo d collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set custom type co group d d co group ds2 where nest pojo long number equal to with new co group1 list custom type result co group d collect string expect 1,20000 flink n 1,10000 flink n 1,30000 flink n compare result as text result expect private static class co group1 implement co group function pojo tuple7 integer string integer integer long string long custom type private static final long serial version u i d 1 l override public void co group iterable pojo first iterable tuple7 integer string integer integer long string long second collector custom type out throw exception for pojo p first for tuple7 integer string integer integer long string long t second assert assert true p nest pojo long number t f6 out collect new custom type p nest pojo long number flink test public void test co group field selector and complicated key selector throw exception co group field selector expression key key selector function the key selector be unnecessary complicated tuple1 final execution environment env execution environment get execution environment datum set pojo d collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set custom type co group d d co group ds2 where new key selector6 equal to with new co group3 list custom type result co group d collect string expect 1,20000 flink n 1,10000 flink n 1,30000 flink n compare result as text result expect private static class key selector6 implement key selector pojo tuple1 long private static final long serial version u i d 1 l override public tuple1 long get key pojo value throw exception return new tuple1 long value nest pojo long number private static class co group3 implement co group function pojo tuple7 integer string integer integer long string long custom type private static final long serial version u i d 1 l override public void co group iterable pojo first iterable tuple7 integer string integer integer long string long second collector custom type out throw exception for pojo p first for tuple7 integer string integer integer long string long t second assert assert true p nest pojo long number t f6 out collect new custom type p nest pojo long number flink test public void test co group field selector and key selector throw exception co group field selector expression key key selector function the key selector be simple here final execution environment env execution environment get execution environment datum set pojo d collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set custom type co group d d co group ds2 where new key selector1 equal to with new co group2 list custom type result co group d collect string expect 1,20000 flink n 1,10000 flink n 1,30000 flink n compare result as text result expect test public void test co group with atomic type1 throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set integer ds2 env from element datum set tuple3 integer long string co group d ds1 co group ds2 where equal to with new co group atomic1 list tuple3 integer long string result co group d collect string expect 1,1 hi n 2,2 hello compare result as text result expect test public void test co group with atomic type2 throw exception final execution environment env execution environment get execution environment datum set integer ds1 env from element datum set tuple3 integer long string ds2 collection data set get small3 tuple datum set env datum set tuple3 integer long string co group d ds1 co group ds2 where equal to with new co group atomic2 list tuple3 integer long string result co group d collect string expect 1,1 hi n 2,2 hello compare result as text result expect test public void test co group with range partitioning throw exception test co group on tuple with multiple key field position and same customized distribution final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long ds1 collection data set get5 tuple datum set env datum set tuple3 integer long string ds2 collection data set get3 tuple datum set env env set parallelism test distribution test di new test distribution datum set tuple3 integer long string co group datum set util partition by range ds1 test dis co group data set util partition by range ds2 test dis where equal to with new tuple5 tuple3 co group list tuple3 integer long string result co group collect string expect 1,1 hallo n 2,2 hallo welt n 3,2 hallo welt wie geht n 3,2 abc n 5,3 hij n 5,3 ijk n compare result as tuple result expect test public void test co group lambda throw exception final execution environment env execution environment get execution environment datum set tuple2 integer string leave env from element new tuple2 hello new tuple2 what be new tuple2 up datum set tuple2 integer string right env from element new tuple2 not new tuple2 much new tuple2 really data set integer join left co group right where equal to with iterable tuple2 integer string values1 iterable tuple2 integer string values2 collector integer out int sum for tuple2 integer string next values1 sum next f0 for tuple2 integer string next values2 sum next f0 out collect sum return integer class list integer result join collect string expect n3 n compare result as text result expect udf class private static class key selector1 implement key selector pojo long private static final long serial version u i d 1 l override public long get key pojo value throw exception return value nest pojo long number private static class co group2 implement co group function pojo tuple7 integer string integer integer long string long custom type private static final long serial version u i d 1 l override public void co group iterable pojo first iterable tuple7 integer string integer integer long string long second collector custom type out throw exception for pojo p first for tuple7 integer string integer integer long string long t second assert assert true p nest pojo long number t f6 out collect new custom type p nest pojo long number flink private static class tuple5 co group implement co group function tuple5 integer long integer string long tuple5 integer long integer string long tuple2 integer integer private static final long serial version u i d 1 l override public void co group iterable tuple5 integer long integer string long first iterable tuple5 integer long integer string long second collector tuple2 integer integer out int sum int id for tuple5 integer long integer string long element first sum element f2 id element f0 for tuple5 integer long integer string long element second sum element f2 id element f0 out collect new tuple2 integer integer id sum private static class custom type co group implement co group function custom type custom type custom type private static final long serial version u i d 1 l override public void co group iterable custom type first iterable custom type second collector custom type out custom type o new custom type test for custom type element first o my int element my int o my long element my long for custom type element second o my int element my int o my long element my long out collect o private static class mixed co group implement co group function tuple5 integer long integer string long custom type tuple3 integer long string private static final long serial version u i d 1 l override public void co group iterable tuple5 integer long integer string long first iterable custom type second collector tuple3 integer long string out throw exception long sum int id for tuple5 integer long integer string long element first sum element f0 id element f2 for custom type element second id element my int sum element my long out collect new tuple3 integer long string id sum test private static class mixed co group2 implement co group function custom type tuple5 integer long integer string long custom type private static final long serial version u i d 1 l override public void co group iterable custom type first iterable tuple5 integer long integer string long second collector custom type out custom type o new custom type test for custom type element first o my int element my int o my long element my long for tuple5 integer long integer string long element second o my int element f2 o my long element f0 out collect o private static class tuple3 return leave implement co group function tuple3 integer long string tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void co group iterable tuple3 integer long string first iterable tuple3 integer long string second collector tuple3 integer long string out for tuple3 integer long string element first if element f0 out collect element private static class tuple5 return right implement co group function tuple5 integer long integer string long tuple5 integer long integer string long tuple5 integer long integer string long private static final long serial version u i d 1 l override public void co group iterable tuple5 integer long integer string long first iterable tuple5 integer long integer string long second collector tuple5 integer long integer string long out for tuple5 integer long integer string long element second if element f0 out collect element private static class tuple5 co group b c extend rich co group function tuple5 integer long integer string long tuple5 integer long integer string long tuple3 integer integer integer private static final long serial version u i d 1 l private int broadcast override public void open configuration config collection integer int this get runtime context get broadcast variable int int sum for integer i int sum i broadcast sum override public void co group iterable tuple5 integer long integer string long first iterable tuple5 integer long integer string long second collector tuple3 integer integer integer out int sum int id for tuple5 integer long integer string long element first sum element f2 id element f0 for tuple5 integer long integer string long element second sum element f2 id element f0 out collect new tuple3 integer integer integer id sum broadcast private static class tuple5 tuple3 co group implement co group function tuple5 integer long integer string long tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void co group iterable tuple5 integer long integer string long first iterable tuple3 integer long string second collector tuple3 integer long string out list string str new array list string for tuple5 integer long integer string long t first str add t f3 for tuple3 integer long string t second for string s str out collect new tuple3 integer long string t f0 t f1 s private static class co group atomic1 implement co group function tuple3 integer long string integer tuple3 integer long string private static final long serial version u i d 1 l override public void co group iterable tuple3 integer long string first iterable integer second collector tuple3 integer long string out throw exception list integer int new array list integer for integer i second int add i for tuple3 integer long string t first for integer i int if t f0 equal i out collect t private static class co group atomic2 implement co group function integer tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void co group iterable integer first iterable tuple3 integer long string second collector tuple3 integer long string out throw exception list integer int new array list integer for integer i first int add i for tuple3 integer long string t second for integer i int if t f0 equal i out collect t test link datum distribution public static class test distribution implement datum distribution public object boundary new object new object 2 l new object 4 l new object 12 l new object 6 l public test distribution override public object get bucket boundary int bucket num int total num bucket return boundary bucket num override public int get number of field return override public type information get key type return new type information basic type info int type info basic type info long type info override public void write datum output view out throw i o exception override public void read datum input view in throw i o exception override public boolean equal object obj return obj instanceof test distribution 
cross i t case run with parameterized class public class cross i t case extend multiple program test base public cross i t case test execution mode mode super mode test public void test corretness of cross on two tuple input throw exception check correctness of cross on two tuple input final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get small5 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 integer string cross d d cross ds2 with new tuple5 cross list tuple2 integer string result cross d collect string expect hallo hallo n hallo hallo welt n hallo hallo welt wie n hallo welt hallo n hallo welt hallo welt n hallo welt hallo welt wie n hallo welt wie hallo n hallo welt wie hallo welt n hallo welt wie hallo welt wie n compare result as tuple result expect test public void test correctness of cross if u d f return left input object throw exception check correctness of cross if udf return leave input object final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple3 integer long string cross d d cross ds2 with new tuple3 return leave list tuple3 integer long string result cross d collect string expect 1,1 hi n 1,1 hi n 1,1 hi n 2,2 hello n 2,2 hello n 2,2 hello n 3,2 hello world n 3,2 hello world n 3,2 hello world n compare result as tuple result expect test public void test correctness of cross if u d f return right input object throw exception check correctness of cross if udf return right input object final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple5 integer long integer string long cross d d cross ds2 with new tuple5 return right list tuple5 integer long integer string long result cross d collect string expect 1,1 hallo n 1,1 hallo n 1,1 hallo n 2,2 hallo welt n 2,2 hallo welt n 2,2 hallo welt n 2,3 hallo welt wie n 2,3 hallo welt wie n 2,3 hallo welt wie n compare result as tuple result expect test public void test correctness of cross with broadcast set throw exception check correctness of cross with broadcast set final execution environment env execution environment get execution environment datum set integer int d collection data set get integer datum set env datum set tuple5 integer long integer string long d collection data set get small5 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple3 integer integer integer cross d d cross ds2 with new tuple5 cross b c with broadcast set int d int list tuple3 integer integer integer result cross d collect string expect 2,0 n 3,0 n 3,0 n 3,0 n 4,1 n 4,2 n 3,0 n 4,2 n 4,4 n compare result as tuple result expect test public void test correctness of cross with huge throw exception check correctness of cross with huge only correctness of result should be the same as with normal cross final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get small5 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 integer string cross d d cross with huge ds2 with new tuple5 cross list tuple2 integer string result cross d collect string expect hallo hallo n hallo hallo welt n hallo hallo welt wie n hallo welt hallo n hallo welt hallo welt n hallo welt hallo welt wie n hallo welt wie hallo n hallo welt wie hallo welt n hallo welt wie hallo welt wie n compare result as tuple result expect test public void test correctness of cross with tiny throw exception check correctness of cross with tiny only correctness of result should be the same as with normal cross final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get small5 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 integer string cross d d cross with tiny ds2 with new tuple5 cross list tuple2 integer string result cross d collect string expect hallo hallo n hallo hallo welt n hallo hallo welt wie n hallo welt hallo n hallo welt hallo welt n hallo welt hallo welt wie n hallo welt wie hallo n hallo welt wie hallo welt n hallo welt wie hallo welt wie n compare result as tuple result expect test public void test project cross on a tuple input1 throw exception project cross on a tuple input final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple6 string long string integer long long cross d d cross ds2 project first project second project first project second list tuple6 string long string integer long long result cross d collect string expect hi hallo 1,1 n hi hallo welt 1,2 n hi hallo welt wie 1,1 n hello hallo 2,1 n hello hallo welt 2,2 n hello hallo welt wie 2,1 n hello world hallo 3,1 n hello world hallo welt 3,2 n hello world hallo welt wie 3,1 n compare result as tuple result expect test public void test project cross on a tuple input2 throw exception project cross on a tuple input final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple6 string string long long long integer cross d d cross ds2 project second project first project second project first list tuple6 string string long long long integer result cross d collect string expect hallo hi 1,1 1,1 n hallo welt hi 1,2 2,1 n hallo welt wie hi 1,1 3,1 n hallo hello 2,1 1,2 n hallo welt hello 2,2 2,2 n hallo welt wie hello 2,1 3,2 n hallo hello world 2,1 1,3 n hallo welt hello world 2,2 2,3 n hallo welt wie hello world 2,1 3,3 n compare result as tuple result expect test public void test correctness of default cross throw exception check correctness of default cross final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 tuple3 integer long string tuple5 integer long integer string long cross d d cross ds2 list tuple2 tuple3 integer long string tuple5 integer long integer string long result cross d collect string expect 1,1 hi 2,2 hallo welt n 1,1 hi 1,1 hallo n 1,1 hi 2,3 hallo welt wie n 2,2 hello 2,2 hallo welt n 2,2 hello 1,1 hallo n 2,2 hello 2,3 hallo welt wie n 3,2 hello world 2,2 hallo welt n 3,2 hello world 1,1 hallo n 3,2 hello world 2,3 hallo welt wie n compare result as tuple result expect test public void test correctness of cross on two custom type input throw exception check correctness of cross on two custom type input final execution environment env execution environment get execution environment datum set custom type d collection data set get small custom type datum set env datum set custom type ds2 collection datum set get small custom type datum set env datum set custom type cross d d cross ds2 with new custom type cross list custom type result cross d collect string expect 1,0 hi hi n 2,1 hi hello n 2,2 hi hello world n 2,1 hello hi n 4,2 hello hello n 4,3 hello hello world n 2,2 hello world hi n 4,3 hello world hello n 4,4 hello world hello world compare result as text result expect test public void test correctness of cross a tuple input and a custom type input throw exception check correctness of cross a tuple input and a custom type input final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get small5 tuple datum set env datum set custom type ds2 collection datum set get small custom type datum set env datum set tuple3 integer long string cross d d cross ds2 with new mixed cross list tuple3 integer long string result cross d collect string expect 2,0 hallo hi n 3,0 hallo hello n 3,0 hallo hello world n 3,0 hallo welt hi n 4,1 hallo welt hello n 4,2 hallo welt hello world n 3,0 hallo welt wie hi n 4,2 hallo welt wie hello n 4,4 hallo welt wie hello world n compare result as tuple result expect private static class tuple5 cross implement cross function tuple5 integer long integer string long tuple5 integer long integer string long tuple2 integer string private static final long serial version u i d 1 l override public tuple2 integer string cross tuple5 integer long integer string long first tuple5 integer long integer string long second throw exception return new tuple2 integer string first f2 second f2 first f3 second f3 private static class custom type cross implement cross function custom type custom type custom type private static final long serial version u i d 1 l override public custom type cross custom type first custom type second throw exception return new custom type first my int second my int first my long second my long first my string second my string private static class mix cross implement cross function tuple5 integer long integer string long custom type tuple3 integer long string private static final long serial version u i d 1 l override public tuple3 integer long string cross tuple5 integer long integer string long first custom type second throw exception return new tuple3 integer long string first f0 second my int first f2 second my long first f3 second my string private static class tuple3 return leave implement cross function tuple3 integer long string tuple5 integer long integer string long tuple3 integer long string private static final long serial version u i d 1 l override public tuple3 integer long string cross tuple3 integer long string first tuple5 integer long integer string long second throw exception return first private static class tuple5 return right implement cross function tuple3 integer long string tuple5 integer long integer string long tuple5 integer long integer string long private static final long serial version u i d 1 l override public tuple5 integer long integer string long cross tuple3 integer long string first tuple5 integer long integer string long second throw exception return second private static class tuple5 cross b c extend rich cross function tuple5 integer long integer string long tuple5 integer long integer string long tuple3 integer integer integer private static final long serial version u i d 1 l private int broadcast override public void open configuration config collection integer int this get runtime context get broadcast variable int int sum for integer i int sum i broadcast sum override public tuple3 integer integer integer cross tuple5 integer long integer string long first tuple5 integer long integer string long second throw exception return new tuple3 integer integer integer first f0 second f0 first f2 second f2 broadcast 
datum sink i t case suppress warning serial run with parameterized class public class datum sink i t case extend multiple program test base public datum sink i t case test execution mode mode super mode private string result path rule public temporary folder temp folder new temporary folder before public void before throw exception final file folder temp folder new folder final file result file new file folder uuid random u u i d to string result path result file to u be i to string test public void test int sort parallelism1 throw exception final execution environment env execution environment get execution environment datum set integer d collection data set get integer datum set env d write as text result path sort local output order descend set parallelism env execute string expect n5 n5 n5 n5 n4 n4 n4 n4 n3 n3 n3 n2 n2 n1 n compare result by line in memory with strict order expect result path test public void test string sort parallelism1 throw exception final execution environment env execution environment get execution environment datum set string d collection data set get string datum set env d write as text result path sort local output order ascend set parallelism env execute string expect hello n hello world n hello world how be you n hi n i be fine n lol n luke skywalker n random comment n compare result by line in memory with strict order expect result path test public void test tuple sort single asc parallelism1 throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env d write as csv result path sort local output order ascend set parallelism env execute string expect 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n compare result by line in memory with strict order expect result path test public void test tuple sort single desc parallelism1 throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env d write as csv result path sort local output order descend set parallelism env execute string expect 21,6 comment n 20,6 comment n 19,6 comment n 18,6 comment n 17,6 comment n 16,6 comment n 15,5 comment n 14,5 comment n 13,5 comment n 12,5 comment n 11,5 comment n 10,4 comment n 9,4 comment n 8,4 comment n 7,4 comment n 6,3 luke skywalker n 5,3 i be fine n 4,3 hello world how be you n 3,2 hello world n 2,2 hello n 1,1 hi n compare result by line in memory with strict order expect result path test public void test tuple sort dual parallelism1 throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env d write as csv result path sort local output order descend sort local output order ascend set parallelism env execute string expect 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 2,2 hello n 3,2 hello world n 1,1 hi n compare result by line in memory with strict order expect result path test public void test tuple sort nest parallelism1 throw exception final execution environment env execution environment get execution environment datum set tuple3 tuple2 integer integer string integer d collection data set get group sort nest tuple datum set2 env d write as text result path sort local output f0 f1 order ascend sort local output f1 order descend set parallelism env execute string expect 2,1 a n 2,2 b n 1,2 a n 3,3 c n 1,3 a n 3,6 c n 4,9 c n compare result by line in memory with strict order expect result path test public void test tuple sort nest parallelism1 throw exception final execution environment env execution environment get execution environment datum set tuple3 tuple2 integer integer string integer d collection data set get group sort nest tuple datum set2 env d write as text result path sort local output order ascend sort local output order descend set parallelism env execute string expect 2,1 a n 1,3 a n 1,2 a n 2,2 b n 4,9 c n 3,6 c n 3,3 c n compare result by line in memory with strict order expect result path test public void test pojo sort single parallelism1 throw exception final execution environment env execution environment get execution environment datum set collection datum set pojo d collection data set get mixed pojo datum set env d write as text result path sort local output number order ascend set parallelism env execute string expect first 10,100 one n first 10,105 one n first 11,102 one n first 11,106 one n first 11,102 one n second 20,200 two n third 31,301 three n third 30,300 three n compare result by line in memory with strict order expect result path test public void test pojo sort dual parallelism1 throw exception final execution environment env execution environment get execution environment datum set collection datum set pojo d collection data set get mixed pojo datum set env d write as text result path sort local output str order ascend sort local output number order descend set parallelism env execute string expect first 11,102 one n first 11,102 one n first 10,100 one n first 11,106 one n first 10,105 one n second 20,200 two n third 31,301 three n third 30,300 three n compare result by line in memory with strict order expect result path test public void test pojo sort nest parallelism1 throw exception final execution environment env execution environment get execution environment datum set collection datum set pojo d collection data set get mixed pojo datum set env d write as text result path sort local output nest tuple with custom f0 order ascend sort local output nest tuple with custom f1 my int order descend sort local output nest pojo long number order ascend set parallelism env execute string expect first 10,105 one n first 10,100 one n first 11,106 one n first 11,102 one n first 11,102 one n second 20,200 two n third 30,300 three n third 31,301 three n compare result by line in memory with strict order expect result path test public void test sort parallelism4 throw exception final execution environment env execution environment get execution environment datum set long d env generate sequence randomize d map new map function long long random rand new random l override public long map long value throw exception return rand next long write as text result path sort local output order ascend set parallelism env execute buffer reader re reader get result reader result path for buffer reader br re reader long cmp long min value while br ready long cur long parse long br read line assert true invalid order of sort output cmp cur cmp cur br close 
distinct i t case suppress warning serial run with parameterized class public class distinct i t case extend multiple program test base public distinct i t case test execution mode mode super mode test public void test correctness of distinct on tuple with key field selector throw exception check correctness of distinct on tuple with key field selector final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get small3 tuple datum set env datum set tuple3 integer long string distinct d d union d distinct list tuple3 integer long string result distinct d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n compare result as tuple result expect test public void test correctness of distinct on tuple with key field selector with not all field select throw exception check correctness of distinct on tuple with key field selector with not all field select final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get small5 tuple datum set env datum set tuple1 integer distinct d d union d distinct project list tuple1 integer result distinct d collect string expect n n compare result as tuple result expect test public void test correctness of distinct on tuple with key extractor function throw exception check correctness of distinct on tuple with key extractor function final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get small5 tuple datum set env datum set tuple1 integer reduce d d union d distinct new key selector1 project list tuple1 integer result reduce d collect string expect n n compare result as tuple result expect private static class key selector1 implement key selector tuple5 integer long integer string long integer private static final long serial version u i d 1 l override public integer get key tuple5 integer long integer string long in return in f0 test public void test correctness of distinct on custom type with type extractor throw exception check correctness of distinct on custom type with type extractor final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set tuple1 integer reduce d d distinct new key selector3 map new mapper3 list tuple1 integer result reduce d collect string expect n n n n n n compare result as tuple result expect private static class mapper3 extend rich map function custom type tuple1 integer override public tuple1 integer map custom type value throw exception return new tuple1 integer value my int private static class key selector3 implement key selector custom type integer private static final long serial version u i d 1 l override public integer get key custom type in return in my int test public void test correctness of distinct on tuple throw exception check correctness of distinct on tuple final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get small3 tuple datum set env datum set tuple3 integer long string distinct d d union d distinct list tuple3 integer long string result distinct d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n compare result as tuple result expect test public void test correctness of distinct on custom type with tuple return type extractor throw exception check correctness of distinct on custom type with tuple return type extractor final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple2 integer long reduce d d distinct new key selector2 project list tuple2 integer long result reduce d collect string expect 1,1 n 2,1 n 2,2 n 3,2 n 3,3 n 4,1 n 4,2 n 5,1 n 5,2 n 5,3 n compare result as tuple result expect private static class key selector2 implement key selector tuple5 integer long integer string long tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple5 integer long integer string long t return new tuple2 integer long t f0 t f4 test public void test correctness of distinct on tuple with field expression throw exception check correctness of distinct on tuple with field expression final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get small5 tuple datum set env datum set tuple1 integer reduce d d union d distinct f0 project list tuple1 integer result reduce d collect string expect n n compare result as tuple result expect test public void test correctness of distinct on pojo throw exception check correctness of distinct on pojo final execution environment env execution environment get execution environment datum set pojo d collection data set get duplicate pojo datum set env datum set integer reduce d d distinct nest pojo long number map new mapper2 list integer result reduce d collect string expect n20000 n30000 n compare result as text result expect private static class mapper2 implement map function collection datum set pojo integer override public integer map pojo value throw exception return int value nest pojo long number test public void test distinct on full pojo throw exception distinct on full pojo final execution environment env execution environment get execution environment datum set pojo d collection data set get duplicate pojo datum set env datum set integer reduce d d distinct map new mapper1 list integer result reduce d collect string expect n20000 n30000 n compare result as text result expect private static class mapper1 implement map function collection datum set pojo integer override public integer map pojo value throw exception return int value nest pojo long number test public void test correctness of distinct on atomic throw exception check correctness of distinct on integer final execution environment env execution environment get execution environment datum set integer d collection data set get integer datum set env datum set integer reduce d d distinct list integer result reduce d collect string expect n2 n3 n4 n5 compare result as text result expect test public void test correctness of distinct on atomic with select all char throw exception check correctness of distinct on string use key expression key select all char final execution environment env execution environment get execution environment datum set string d collection data set get string datum set env datum set string reduce d d union d distinct list string result reduce d collect string expect i be fine n luke skywalker n lol n hello world how be you n hi n hello world n hello n random comment n compare result as text result expect 
filter i t case run with parameterized class public class filter i t case extend multiple program test base public filter i t case test execution mode mode super mode test public void test all reject filter throw exception test all reject filter final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string filter d d filter new filter1 list tuple3 integer long string result filter d collect string expect n compare result as tuple result expect private static class filter1 implement filter function tuple3 integer long string private static final long serial version u i d 1 l override public boolean filter tuple3 integer long string value throw exception return false test public void test all pass filter throw exception test all pass filter final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string filter d d filter new filter2 list tuple3 integer long string result filter d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n compare result as tuple result expect private static class filter2 implement filter function tuple3 integer long string private static final long serial version u i d 1 l override public boolean filter tuple3 integer long string value throw exception return true test public void test filter on string tuple field throw exception test filter on string tuple field final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string filter d d filter new filter3 list tuple3 integer long string result filter d collect string expect 3,2 hello world n 4,3 hello world how be you n compare result as tuple result expect private static class filter3 implement filter function tuple3 integer long string private static final long serial version u i d 1 l override public boolean filter tuple3 integer long string value throw exception return value f2 contain world test public void test filter on integer tuple field throw exception test filter on integer tuple field final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string filter d d filter new filter4 list tuple3 integer long string result filter d collect string expect 2,2 hello n 4,3 hello world how be you n 6,3 luke skywalker n 8,4 comment n 10,4 comment n 12,5 comment n 14,5 comment n 16,6 comment n 18,6 comment n 20,6 comment n compare result as tuple result expect private static class filter4 implement filter function tuple3 integer long string private static final long serial version u i d 1 l override public boolean filter tuple3 integer long string value throw exception return value f0 test public void test filter basic type throw exception test filter on basic type final execution environment env execution environment get execution environment datum set string d collection data set get string datum set env datum set string filter d d filter new filter5 list string result filter d collect string expect hi n hello n hello world n hello world how be you n compare result as text result expect private static class filter5 implement filter function string private static final long serial version u i d 1 l override public boolean filter string value throw exception return value start with h test public void test filter on custom type throw exception test filter on custom type final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type filter d d filter new filter6 list custom type result filter d collect string expect 3,3 hello world how be you n 3,4 i be fine n 3,5 luke skywalker n compare result as text result expect private static class filter6 implement filter function custom type private static final long serial version u i d 1 l override public boolean filter custom type value throw exception return value my string contain a test public void test rich filter on string tuple field throw exception test filter on string tuple field final execution environment env execution environment get execution environment datum set integer int collection data set get integer datum set env datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string filter d d filter new rich filter1 with broadcast set int int list tuple3 integer long string result filter d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n compare result as tuple result expect private static class rich filter1 extend rich filter function tuple3 integer long string private static final long serial version u i d 1 l int literal override public void open configuration config collection integer int this get runtime context get broadcast variable int for int i int literal literal i i literal override public boolean filter tuple3 integer long string value throw exception return value f0 literal test public void test filter with broadcast variable throw exception test filter with broadcast variable final execution environment env execution environment get execution environment datum set integer int d collection data set get integer datum set env datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string filter d d filter new rich filter2 with broadcast set int d int list tuple3 integer long string result filter d collect string expect 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n compare result as tuple result expect private static class rich filter2 extend rich filter function tuple3 integer long string private static final long serial version u i d 1 l private int broadcast sum override public void open configuration config collection integer int this get runtime context get broadcast variable int for integer i int broadcast sum i override public boolean filter tuple3 integer long string value throw exception return value f1 broadcast sum 
first n i t case run with parameterized class public class first n i t case extend multiple program test base public first n i t case test execution mode mode super mode test public void test first n on ungrouped d s throw exception first n on ungrouped datum set final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple1 integer seven d first map new one mapper sum list tuple1 integer result seven collect string expect n compare result as text result expect test public void test first n on group d s throw exception first n on group datum set final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 long integer first d group by first map new one mapper2 group by sum list tuple2 long integer result first collect string expect 1,1 n 2,2 n 3,3 n 4,4 n 5,4 n 6,4 n compare result as text result expect test public void test first n on group and sort d s throw exception first n on group and sort datum set final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 long integer first d group by sort group order descend first project list tuple2 long integer result first collect string expect 1,1 n 2,3 n 2,2 n 3,6 n 3,5 n 3,4 n 4,10 n 4,9 n 4,8 n 5,15 n 5,14 n 5,13 n 6,21 n 6,20 n 6,19 n compare result as text result expect test for flink test public void test faulty cast throw exception execution environment ee execution environment get execution environment datum set string b ee from element a b group reduce operator string string a b group by new key selector string long override public long get key string value throw exception return 1 l sort group new key selector string double override public double get key string value throw exception return 1.0 order descend first list string result b collect string expect a nb compare result as text result expect private static class one mapper implement map function tuple3 integer long string tuple1 integer private static final long serial version u i d 1 l private final tuple1 integer one new tuple1 integer override public tuple1 integer map tuple3 integer long string value return one private static class one mapper2 implement map function tuple3 integer long string tuple2 long integer private static final long serial version u i d 1 l private final tuple2 long integer one new tuple2 0 l override public tuple2 long integer map tuple3 integer long string value one f0 value f1 return one 
flat map i t case run with parameterized class public class flat map i t case extend multiple program test base public flat map i t case test execution mode mode super mode test public void test non pass flat map throw exception test non pass flatmap final execution environment env execution environment get execution environment datum set string d collection data set get string datum set env datum set string non pass flat map d d flat map new flat mapper1 list string result non pass flat map d collect string expect n compare result as text result expect private static class flat mapper1 implement flat map function string string private static final long serial version u i d 1 l override public void flat map string value collector string out throw exception if value contain banana out collect value test public void test datum duplicate flat map throw exception test datum duplicate flatmap final execution environment env execution environment get execution environment datum set string d collection data set get string datum set env datum set string duplicate flat map d d flat map new flat mapper2 list string result duplicate flat map d collect string expect hi n hi n hello n hello n hello world n hello world n hello world how be you n hello world how be you n i be fine n i be fine n luke skywalker n luke skywalker n random comment n random comment n lol n lol n compare result as text result expect private static class flat mapper2 implement flat map function string string private static final long serial version u i d 1 l override public void flat map string value collector string out throw exception out collect value out collect value to upper case test public void test flat map with vary number of emit tuple throw exception test flatmap with vary number of emit tuple final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string vary tuple map d d flat map new flat mapper3 list tuple3 integer long string result vary tuple map d collect string expect 1,1 hi n 2,2 hello n 2,2 hello n 4,3 hello world how be you n 5,3 i be fine n 5,3 i be fine n 7,4 comment n 8,4 comment n 8,4 comment n 10,4 comment n 11,5 comment n 11,5 comment n 13,5 comment n 14,5 comment n 14,5 comment n 16,6 comment n 17,6 comment n 17,6 comment n 19,6 comment n 20,6 comment n 20,6 comment n compare result as tuple result expect private static class flat mapper3 implement flat map function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void flat map tuple3 integer long string value collector tuple3 integer long string out throw exception final int num tuples value f0 for int i i num tuple i out collect value test public void test type conversion flat mapper custom to tuple throw exception test type conversion flatmapper custom tuple final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set tuple3 integer long string type conversion flat map d d flat map new flat mapper4 list tuple3 integer long string result type conversion flat map d collect string expect 1,0 hi n 2,1 hello n 2,2 hello world n 3,3 hello world how be you n 3,4 i be fine n 3,5 luke skywalker n 4,6 comment n 4,7 comment n 4,8 comment n 4,9 comment n 5,10 comment n 5,11 comment n 5,12 comment n 5,13 comment n 5,14 comment n 6,15 comment n 6,16 comment n 6,17 comment n 6,18 comment n 6,19 comment n 6,20 comment n compare result as tuple result expect private static class flat mapper4 implement flat map function custom type tuple3 integer long string private static final long serial version u i d 1 l private final tuple3 integer long string out tuple new tuple3 integer long string override public void flat map custom type value collector tuple3 integer long string out throw exception out tuple set field value my int out tuple set field value my long out tuple set field value my string out collect out tuple test public void test type conversion flat mapper tuple to basic throw exception test type conversion flatmapper tuple basic final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set string type conversion flat map d d flat map new flat mapper5 list string result type conversion flat map d collect string expect hi n hello n hello world n hello world how be you n i be fine n luke skywalker n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n compare result as text result expect private static class flat mapper5 implement flat map function tuple3 integer long string string private static final long serial version u i d 1 l override public void flat map tuple3 integer long string value collector string out throw exception out collect value f2 test public void test flat mapper if u d f return input object multiple time while change it throw exception test flatmapper if udf return input object multiple time and change it in between final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string input obj flat map d d flat map new flat mapper6 list tuple3 integer long string result input obj flat map d collect string expect 0,1 hi n 0,2 hello n 1,2 hello n 0,2 hello world n 1,2 hello world n 2,2 hello world n 0,3 i be fine n 0,3 luke skywalker n 1,3 luke skywalker n 0,4 comment n 1,4 comment n 2,4 comment n 0,4 comment n 0,4 comment n 1,4 comment n 0,5 comment n 1,5 comment n 2,5 comment n 0,5 comment n 0,5 comment n 1,5 comment n 0,5 comment n 1,5 comment n 2,5 comment n 0,6 comment n 0,6 comment n 1,6 comment n 0,6 comment n 1,6 comment n 2,6 comment n 0,6 comment n compare result as tuple result expect private static class flat mapper6 implement flat map function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void flat map tuple3 integer long string value collector tuple3 integer long string out throw exception final int num tuples value f0 for int i i num tuple i value set field i out collect value test public void test flat map with broadcast set throw exception test flatmap with broadcast set final execution environment env execution environment get execution environment datum set integer int collection data set get integer datum set env datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string bc flat map d d flat map new rich flat mapper1 with broadcast set int int list tuple3 integer long string result bc flat map d collect string expect 55,1 hi n 55,2 hello n 55,2 hello world n 55,3 hello world how be you n 55,3 i be fine n 55,3 luke skywalker n 55,4 comment n 55,4 comment n 55,4 comment n 55,4 comment n 55,5 comment n 55,5 comment n 55,5 comment n 55,5 comment n 55,5 comment n 55,6 comment n 55,6 comment n 55,6 comment n 55,6 comment n 55,6 comment n 55,6 comment n compare result as tuple result expect private static class rich flat mapper1 extend rich flat map function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l private final tuple3 integer long string out tuple new tuple3 integer long string private integer f2 replace override public void open configuration config collection integer int this get runtime context get broadcast variable int int sum for integer i int sum i f2 replace sum override public void flat map tuple3 integer long string value collector tuple3 integer long string out throw exception out tuple set field f2 replace value f1 value f2 out collect out tuple 
group combine i t case suppress warning serial run with parameterized class public class group combine i t case extend multiple program test base public group combine i t case test execution mode mode super mode private static string identity result 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n test public void test all group combine identity throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d combine combine group new identity function fully reduce reduce group new identity function list tuple3 integer long string result reduce d collect compare result as tuple result identity result test public void test identity throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d combine combine group new identity function fully reduce reduce group new identity function list tuple3 integer long string result reduce d collect compare result as tuple result identity result test public void test identity with group by throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by combine combine group new identity function fully reduce reduce group new identity function list tuple3 integer long string result reduce d collect compare result as tuple result identity result test public void test identity with group by and sort throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by sort group order descend reduce partially combine group new identity function group by sort group order descend fully reduce reduce group new identity function list tuple3 integer long string result reduce d collect compare result as tuple result identity result test public void test partial reduce with identical input output type throw exception final execution environment env execution environment get execution environment datum datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 long tuple3 integer long string d wrap d wrap value as kv pair with the grouping key as key map new tuple3 kv wrapper list tuple3 integer long string result d wrap group by reduce partially combine group new tuple3to tuple3 group reduce group by reduce fully to check result reduce group new tuple3to tuple3 group reduce unwrap map new map function tuple2 long tuple3 integer long string tuple3 integer long string override public tuple3 integer long string map tuple2 long tuple3 integer long string value throw exception return value f1 collect string expect 1,1 combine n 5,4 combine n 15,9 combine n 34,16 combine n 65,25 combine n 111,36 combine n compare result as tuple result expect test public void test partial reduce with different input output type throw exception final execution environment env execution environment get execution environment datum datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 long tuple3 integer long string d wrap d wrap value as kv pair with the grouping key as key map new tuple3 kv wrapper list tuple2 integer long result d wrap group by reduce partially combine group new tuple3to tuple2 group reduce group by reduce fully to check result reduce group new tuple2to tuple2 group reduce unwrap map new map function tuple2 long tuple2 integer long tuple2 integer long override public tuple2 integer long map tuple2 long tuple2 integer long value throw exception return value f1 collect string expect 1,3 n 5,20 n 15,58 n 34,52 n 65,70 n 111,96 n compare result as tuple result expect test check if no shuffle be be execute public void test check partition shuffle group by throw exception org junit assume assume true mode test execution mode collection final execution environment env execution environment get execution environment datum datum set tuple3 integer long string d collection data set get3 tuple datum set env partition and group datum unsorted grouping tuple3 integer long string partition d s ds partition by hash group by list tuple2 long integer result partition d s combine group new group combine function tuple3 integer long string tuple2 long integer override public void combine iterable tuple3 integer long string value collector tuple2 long integer out throw exception int count long key for tuple3 integer long string value value key value f1 count out collect new tuple2 key count collect string local expect new string 6,6 5,5 4,4 3,3 2,2 1,1 string result as string array new string result size for int i i result as string array length i result as string array i result get i to string array sort result as string array assert assert equal the two array be identical false array equal local expected result as string array test check if parallelism of result in the same datum like a shuffle public void test check partition shuffle d o p1 throw exception final execution environment env execution environment get execution environment env set parallelism datum datum set tuple3 integer long string d collection data set get3 tuple datum set env partition and group datum unsorted grouping tuple3 integer long string partition d s ds partition by hash group by list tuple2 long integer result partition d s combine group new group combine function tuple3 integer long string tuple2 long integer override public void combine iterable tuple3 integer long string value collector tuple2 long integer out throw exception int count long key for tuple3 integer long string value value key value f1 count out collect new tuple2 key count collect string expect 6,6 n 5,5 n 4,4 n 3,3 n 2,2 n 1,1 n compare result as tuple result expect test check if all api method be callable public void test a p i throw exception final execution environment env execution environment get execution environment datum set tuple1 string d collection data set get string datum set env map new map function string tuple1 string override public tuple1 string map string value throw exception return new tuple1 value all method on datum set d combine group new group combine function example output new discard output format tuple1 string all method on unsorted grouping d group by combine group new group combine function example output new discard output format tuple1 string all method on sort grouping d group by sort group order ascend combine group new group combine function example output new discard output format tuple1 string env execute private static class group combine function example implement group combine function tuple1 string tuple1 string override public void combine iterable tuple1 string value collector tuple1 string out throw exception for tuple1 string value value out collect value for scala group combine i t case public static class scala group combine function example implement group combine function scala tuple1 string scala tuple1 string override public void combine iterable scala tuple1 string value collector scala tuple1 string out throw exception for scala tuple1 string value value out collect value private static class identity function implement group combine function tuple3 integer long string tuple3 integer long string group reduce function tuple3 integer long string tuple3 integer long string override public void combine iterable tuple3 integer long string value collector tuple3 integer long string out throw exception for tuple3 integer long string value value out collect new tuple3 value f0 value f1 value f2 override public void reduce iterable tuple3 integer long string value collector tuple3 integer long string out throw exception for tuple3 integer long string value value out collect new tuple3 value f0 value f1 value f2 private static class tuple3to tuple3 group reduce implement kv group reduce long tuple3 integer long string tuple3 integer long string tuple3 integer long string override public void combine iterable tuple2 long tuple3 integer long string value collector tuple2 long tuple3 integer long string out throw exception int i long l long key collapse group for tuple2 long tuple3 integer long string value value key value f0 tuple3 integer long string extract value f1 i extract f0 l extract f1 tuple3 integer long string result new tuple3 i l combine out collect new tuple2 key result override public void reduce iterable tuple2 long tuple3 integer long string value collector tuple2 long tuple3 integer long string out throw exception combine value out private static class tuple3to tuple2 group reduce implement kv group reduce long tuple3 integer long string tuple2 integer long tuple2 integer long override public void combine iterable tuple2 long tuple3 integer long string value collector tuple2 long tuple2 integer long out throw exception int i long l long key collapse group for tuple2 long tuple3 integer long string value value key value f0 tuple3 integer long string extract value f1 i extract f0 l extract f1 extract f2 length tuple2 integer long result new tuple2 i l out collect new tuple2 key result override public void reduce iterable tuple2 long tuple2 integer long value collector tuple2 long tuple2 integer long out throw exception new tuple2to tuple2 group reduce reduce value out private static class tuple2to tuple2 group reduce implement kv group reduce long tuple2 integer long tuple2 integer long tuple2 integer long override public void combine iterable tuple2 long tuple2 integer long value collector tuple2 long tuple2 integer long out throw exception int i long l long key collapse group for tuple2 long tuple2 integer long value value key value f0 tuple2 integer long extract value f1 i extract f0 l extract f1 tuple2 integer long result new tuple2 i l out collect new tuple2 key result override public void reduce iterable tuple2 long tuple2 integer long value collector tuple2 long tuple2 integer long out throw exception combine value out private class tuple3 kv wrapper implement map function tuple3 integer long string tuple2 long tuple3 integer long string override public tuple2 long tuple3 integer long string map tuple3 integer long string value throw exception return new tuple2 value f1 value private interface combine and reduce group in int out extend group combine function in int group reduce function int out private interface kv group reduce k v int out extend combine and reduce group tuple2 k v tuple2 k int tuple2 k out 
group reduce i t case suppress warning serial unchecked unused declaration run with parameterized class public class group reduce i t case extend multiple program test base public group reduce i t case test execution mode mode super mode test public void test correctnessof group reduce on tuple contain primitive byte array with key field selector throw exception final execution environment env execution environment get execution environment datum set tuple2 byte integer d collection data set get tuple2 with byte array datum set env datum set integer reduce d d group by reduce group new byte array group reduce list integer result reduce d collect string expect n n n n n compare result as text result expect private static class byte array group reduce implement group reduce function tuple2 byte integer integer override public void reduce iterable tuple2 byte integer value collector integer out throw exception int sum for tuple2 byte integer value value sum value f1 out collect sum test public void test correctness of group reduce on tuple with key field selector throw exception check correctness of group reduce on tuple with key field selector final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 integer long reduce d d group by reduce group new tuple3 group reduce list tuple2 integer long result reduce d collect string expect 1,1 n 5,2 n 15,3 n 34,4 n 65,5 n 111,6 n compare result as tuple result expect test public void test correctness of group reduce on tuple with multiple key field selector throw exception check correctness of group reduce on tuple with multiple key field selector final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long reduce d d group by reduce group new tuple5 group reduce list tuple5 integer long integer string long result reduce d collect string expect 1,1 p n 2,3 p n 2,2 p n 3,9 p n 3,6 p n 4,17 p n 4,17 p n 5,11 p n 5,29 p n 5,25 p n compare result as tuple result expect test public void test correctness of group reduce on tuple with key field selector and group sorting throw exception check correctness of group reduce on tuple with key field selector and group sort final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by sort group order ascend reduce group new tuple3 sort group reduce list tuple3 integer long string result reduce d collect string expect 1,1 hi n 5,2 hello hello world n 15,3 hello world how be you i be fine luke skywalker n 34,4 comment comment comment comment n 65,5 comment comment comment comment comment n 111,6 comment comment comment comment comment comment n compare result as tuple result expect test public void test correctness of group reduce on tuple with key extractor throw exception check correctness of group reduce on tuple with key extractor final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 integer long reduce d d group by new key selector1 reduce group new tuple3 group reduce list tuple2 integer long result reduce d collect string expect 1,1 n 5,2 n 15,3 n 34,4 n 65,5 n 111,6 n compare result as tuple result expect private static class key selector1 implement key selector tuple3 integer long string long private static final long serial version u i d 1 l override public long get key tuple3 integer long string in return in f1 test public void test correctness of group reduce on custom type with type extractor throw exception check correctness of group reduce on custom type with type extractor final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type reduce d d group by new key selector2 reduce group new custom type group reduce list custom type result reduce d collect string expect 1,0 hello n 2,3 hello n 3,12 hello n 4,30 hello n 5,60 hello n 6,105 hello n compare result as text result expect private static class key selector2 implement key selector custom type integer private static final long serial version u i d 1 l override public integer get key custom type in return in my int test public void test correctness of all group reduce for tuple throw exception check correctness of all groupreduce for tuple final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d reduce group new all add tuple3 group reduce list tuple3 integer long string result reduce d collect string expect 231,91 hello world n compare result as tuple result expect test public void test correctness of all group reduce for custom type throw exception check correctness of all groupreduce for custom type final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type reduce d d reduce group new all add custom type group reduce list custom type result reduce d collect string expect 91,210 hello compare result as text result expect test public void test correctness of group reduce with broadcast set throw exception check correctness of group reduce with broadcast set final execution environment env execution environment get execution environment datum set integer int d collection data set get integer datum set env datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by reduce group new b c tuple3 group reduce with broadcast set int d int list tuple3 integer long string result reduce d collect string expect 1,1 n 5,2 n 15,3 n 34,4 n 65,5 n 111,6 n compare result as tuple result expect test public void test correctness of group reduce if u d f return input object multiple time while change they throw exception check correctness of group reduce if udf return input object multiple time and change it in between final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by reduce group new input return tuple3 group reduce list tuple3 integer long string result reduce d collect string expect 11,1 hi n 21,1 hi again n 12,2 hi n 22,2 hi again n 13,2 hi n 23,2 hi again n compare result as tuple result expect test public void test correctness of group reduce on custom type with key extractor and combine throw exception check correctness of group reduce on custom type with key extractor and combine org junit assume assume true mode test execution mode collection final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type reduce d d group by new key selector3 reduce group new custom type group reduce with combine list custom type result reduce d collect string expect 1,0 test1 n 2,3 test2 n 3,12 test3 n 4,30 test4 n 5,60 test5 n 6,105 test6 n compare result as text result expect private static class key selector3 implement key selector custom type integer private static final long serial version u i d 1 l override public integer get key custom type in return in my int test public void test correctness of group reduce on tuple with combine throw exception check correctness of group reduce on tuple with combine org junit assume assume true mode test execution mode collection final execution environment env execution environment get execution environment env set parallelism important because it determine how often the combiner be call datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 integer string reduce d d group by reduce group new tuple3 group reduce with combine list tuple2 integer string result reduce d collect string expect test1 n test2 n test3 n test4 n test5 n test6 n compare result as tuple result expect test public void test correctness of all group reduce for tuple with combine throw exception check correctness of all groupreduce for tuple with combine org junit assume assume true mode test execution mode collection final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env map new identity mapper tuple3 integer long string set parallelism configuration cfg new configuration cfg set string optimizer hint ship strategy optimizer hint ship strategy repartition datum set tuple2 integer string reduce d d reduce group new tuple3 all group reduce with combine with parameter cfg list tuple2 integer string result reduce d collect string expect testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest n compare result as tuple result expect test public void test correctness of groupreduce with descend group sort throw exception check correctness of group reduce with descend group sort final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by sort group order descend reduce group new tuple3 sort group reduce list tuple3 integer long string result reduce d collect string expect 1,1 hi n 5,2 hello world hello n 15,3 luke skywalker i be fine hello world how be you n 34,4 comment comment comment comment n 65,5 comment comment comment comment comment n 111,6 comment comment comment comment comment comment n compare result as tuple result expect test public void test correctness of group reduce on tuple with tuple return key selector throw exception check correctness of group reduce on tuple with tuple return key selector final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long reduce d d group by new key selector4 reduce group new tuple5 group reduce list tuple5 integer long integer string long result reduce d collect string expect 1,1 p n 2,3 p n 2,2 p n 3,9 p n 3,6 p n 4,17 p n 4,17 p n 5,11 p n 5,29 p n 5,25 p n compare result as tuple result expect private static class key selector4 implement key selector tuple5 integer long integer string long tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple5 integer long integer string long t return new tuple2 t f0 t f4 test public void test input of combiner be sort for combinable group reduce with group sorting throw exception check that input of combiner be also sort for combinable group reduce with group sort final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by sort group order ascend reduce group new order check combinable reduce list tuple3 integer long string result reduce d collect string expect 1,1 hi n 2,2 hello n 4,3 hello world how be you n 7,4 comment n 11,5 comment n 16,6 comment n compare result as tuple result expect test public void test deep nest throw exception deep nesting test null value in pojo final execution environment env execution environment get execution environment datum set crazy nest d collection data set get crazy nest datum set env datum set tuple2 string integer reduce d d group by nest lvl1 nest lvl2 nest lvl3 nest lvl4 f1nal reduce group new group reducer1 list tuple2 string integer result reduce d collect string expect aa nbb ncc n compare result as tuple result expect private static class group reducer1 implement group reduce function collection data set crazy nest tuple2 string integer private static final long serial version u i d 1 l override public void reduce iterable crazy nest value collector tuple2 string integer out throw exception int c string n null for crazy nest v value c haha n v nest lvl1 nest lvl2 nest lvl3 nest lvl4 f1nal out collect new tuple2 n c test public void test pojo extend from tuple with custom field throw exception test pojo extend from tuple with custom field final execution environment env execution environment get execution environment datum set from tuple with c tor d collection data set get pojo extend from tuple env datum set integer reduce d d group by special f2 reduce group new group reducer2 list integer result reduce d collect string expect n2 n compare result as text result expect private static class group reducer2 implement group reduce function from tuple with c tor integer override public void reduce iterable from tuple with c tor value collector integer out out collect count element value test public void test pojo containig writable and tuple throw exception test pojo contain a writable and tuple final execution environment env execution environment get execution environment datum set pojo contain tuple and writable d collection data set get pojo contain tuple and writable env datum set integer reduce d d group by hadoop fan the tuple full tuple selection reduce group new group reducer3 list integer result reduce d collect string expect n5 n compare result as text result expect private static class group reducer3 implement group reduce function pojo contain tuple and writable integer override public void reduce iterable pojo contain tuple and writable value collector integer out out collect count element value test public void test tuple contain pojo and regular field throw exception test tuple contain pojo and regular field final execution environment env execution environment get execution environment datum set tuple3 integer crazy nest pojo d collection data set get tuple contain pojos env datum set integer reduce d d group by f0 f1 nest full tuple selection reduce group new group reducer4 list integer result reduce d collect string expect n1 n compare result as text result expect private static class group reducer4 implement group reduce function tuple3 integer crazy nest pojo integer private static final long serial version u i d 1 l override public void reduce iterable tuple3 integer crazy nest pojo value collector integer out out collect count element value test public void test string base definition on group sort throw exception test string base definition on group sort base on test check correctness of group reduce with descend group sort final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by sort group f2 order descend reduce group new tuple3 sort group reduce list tuple3 integer long string result reduce d collect string expect 1,1 hi n 5,2 hello world hello n 15,3 luke skywalker i be fine hello world how be you n 34,4 comment comment comment comment n 65,5 comment comment comment comment comment n 111,6 comment comment comment comment comment comment n compare result as tuple result expect test public void test int base definition on group sort for full nest tuple throw exception test int base definition on group sort for full nest tuple final execution environment env execution environment get execution environment env set parallelism datum set tuple2 tuple2 integer integer string d collection data set get group sort nest tuple datum set env datum set string reduce d d group by f1 sort group order descend reduce group new nest tuple reducer list string result reduce d collect string expect a 2,1 1,3 1,2 n b 2,2 n c 4,9 3,6 3,3 n compare result as text result expect test public void test int base definition on group sort for partial nest tuple throw exception test int base definition on group sort for partial nest tuple asc final execution environment env execution environment get execution environment env set parallelism datum set tuple2 tuple2 integer integer string d collection data set get group sort nest tuple datum set env f0 f0 be first integer datum set string reduce d d group by f1 sort group f0 f0 order ascend sort group f0 f1 order ascend reduce group new nest tuple reducer list string result reduce d collect string expect a 1,2 1,3 2,1 n b 2,2 n c 3,3 3,6 4,9 n compare result as text result expect test public void test string base definition on group sort for partial nest tuple throw exception test string base definition on group sort for partial nest tuple desc final execution environment env execution environment get execution environment env set parallelism datum set tuple2 tuple2 integer integer string d collection data set get group sort nest tuple datum set env f0 f0 be first integer datum set string reduce d d group by f1 sort group f0 f0 order descend reduce group new nest tuple reducer list string result reduce d collect string expect a 2,1 1,3 1,2 n b 2,2 n c 4,9 3,3 3,6 n compare result as text result expect test public void test string base definition on group sort for two grouping key throw exception test string base definition on group sort for two grouping key final execution environment env execution environment get execution environment env set parallelism datum set tuple2 tuple2 integer integer string d collection data set get group sort nest tuple datum set env f0 f0 be first integer datum set string reduce d d group by f1 sort group f0 f0 order descend sort group f0 f1 order descend reduce group new nest tuple reducer list string result reduce d collect string expect a 2,1 1,3 1,2 n b 2,2 n c 4,9 3,6 3,3 n compare result as text result expect test public void test string base definition on group sort for two grouping key with pojo throw exception test string base definition on group sort for two grouping key with pojo final execution environment env execution environment get execution environment env set parallelism datum set pojo contain tuple and writable d collection data set get group sort pojo contain tuple and writable env f0 f0 be first integer datum set string reduce d d group by hadoop fan sort group the tuple f0 order descend sort group the tuple f1 order descend reduce group new group reducer5 list string result reduce d collect string expect 10,100 n 30,600 30,400 30,200 20,201 20,200 n compare result as text result expect test public void test tuple key selector group sort throw exception check correctness of sort group reduce on tuple with keyselector sort final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by new long field extractor tuple3 integer long string sort group new string field extractor tuple3 integer long string order descend reduce group new tuple3 sort group reduce list tuple3 integer long string result reduce d collect string expect 1,1 hi n 5,2 hello world hello n 15,3 luke skywalker i be fine hello world how be you n 34,4 comment comment comment comment n 65,5 comment comment comment comment comment n 111,6 comment comment comment comment comment comment n compare result as tuple result expect private static class two tuple pojo extractor implement key selector custom type tuple2 integer integer private static final long serial version u i d 1 l override public tuple2 integer integer get key custom type value throw exception return new tuple2 value my int value my int private static class string pojo extractor implement key selector custom type string private static final long serial version u i d 1 l override public string get key custom type value throw exception return value my string test public void test pojo key selector group sort throw exception check correctness of sort group reduce on custom type with keyselector sort final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type reduce d d group by new two tuple pojo extractor sort group new string pojo extractor order descend reduce group new custom type sort group reduce list custom type result reduce d collect string expect 1,0 hi n 2,3 hello world hello n 3,12 luke skywalker i be fine hello world how be you n 4,30 comment comment comment comment n 5,60 comment comment comment comment comment n 6,105 comment comment comment comment comment comment n compare result as text result expect private static class long field extractor t extend tuple implement key selector t long private static final long serial version u i d 1 l private int field public long field extractor public long field extractor int field this field field override public long get key t t throw exception return tuple t get field field private static class int field extractor t extend tuple implement key selector t integer private static final long serial version u i d 1 l private int field public int field extractor public int field extractor int field this field field override public integer get key t t throw exception return tuple t get field field private static class string field extractor t extend tuple implement key selector t string private static final long serial version u i d 1 l private int field public string field extractor public string field extractor int field this field field override public string get key t t throw exception return t get field field test public void test tuple key selector sort with combine throw exception check correctness of sort group reduce with combine on tuple with keyselector sort final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 integer string reduce d d group by new long field extractor tuple3 integer long string sort group new string field extractor tuple3 integer long string order descend reduce group new tuple3 sort group reduce with combine list tuple2 integer string result reduce d collect if super mode test execution mode collection string expect hi n hello world hello n luke skywalker i be fine hello world how be you n comment comment comment comment n comment comment comment comment comment n comment comment comment comment comment comment n compare result as tuple result expect private static class five to two tuple extractor implement key selector tuple5 integer long integer string long tuple2 long integer private static final long serial version u i d 1 l override public tuple2 long integer get key tuple5 integer long integer string long in return new tuple2 in f4 in f2 test public void test tuple key selector sort combine on tuple throw exception check correctness of sort group reduceon with tuple2 keyselector sort final execution environment env execution environment get execution environment env set parallelism datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long reduce d d group by new int field extractor tuple5 integer long integer string long sort group new five to two tuple extractor order descend reduce group new tuple5 sort group reduce list tuple5 integer long integer string long result reduce d collect string expect 1,1 hallo n 2,5 hallo welt hallo welt wie n 3,15 bcd abc hallo welt wie geht n 4,34 fgh cde efg def n 5,65 ijk hij klm jkl ghi n compare result as tuple result expect private static class group reducer5 implement group reduce function collection datum set pojo contain tuple and writable string override public void reduce iterable pojo contain tuple and writable value collector string out throw exception boolean once false string builder concat new string builder for pojo contain tuple and writable value value if once concat append value hadoop fan get concat append once true concat append value the tuple concat append out collect concat to string test public void test grouping with pojo contain multiple pojo throw exception test grouping with pojo contain multiple pojo be a bug final execution environment env execution environment get execution environment env set parallelism datum set collection datum set pojo with multiple pojo d collection data set get pojo with multiple pojos env f0 f0 be first integer datum set string reduce d d group by p2 a2 reduce group new group reducer6 list string result reduce d collect string expect b nccc nee n compare result as text result expect private static class group reducer6 implement group reduce function collection datum set pojo with multiple pojo string override public void reduce iterable collection datum set pojo with multiple pojos value collector string out throw exception string builder concat new string builder for collection datum set pojo with multiple pojos value value concat append value p2 a2 out collect concat to string test public void test java collection within pojo throw exception test java collection within pojo test kryo final execution environment env execution environment get execution environment env set parallelism datum set collection datum set pojo with collection d collection data set get pojo with collection env f0 f0 be first integer datum set string reduce d d group by key reduce group new group reducer7 list string result reduce d collect string expect call for key we get pojo a apojo a b for key we get pojo a a2pojo a b2 n compare result as text result expect private static class group reducer7 implement group reduce function collection datum set pojo with collection string override public void reduce iterable collection datum set pojo with collection value collector string out string builder concat new string builder concat append call for collection datum set pojo with collection value value concat append for key append value key append we get for collection datum set pojo1 p value pojo concat append pojo a append p a out collect concat to string test public void test group by generic type throw exception group by generic type final execution environment env execution environment get execution environment env set parallelism datum set collection datum set pojo with collection d collection data set get pojo with collection env f0 f0 be first integer datum set string reduce d d group by big int reduce group new group reducer8 list string result reduce d collect execution config ec env get config check if automatic type registration with kryo work assert assert true ec get register kryo type contain big int class assert assert false ec get register kryo type contain java sql date class string expect null string local expect call n for key we get n pojo with collection pojo size key sql date 2033 - 05 big int big decimal keep it null null scala big int mix some key this be wrong uhlala n for key we get n pojo with collection pojo size key sql date 1976 - 05 big int big decimal keep it null null scala big int mix null assert assert equal local expected result to string test public void test group reduce selector key with sem prop throw exception test that semantic property be correctly adapt when use selector key final execution environment env execution environment get execution environment env set parallelism datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple2 integer long reduce d d group by selector key group by new key selector tuple5 integer long integer string long long override public long get key tuple5 integer long integer string long v throw exception return v f0 v f1 v f2 v f4 reduce group new group reduce function tuple5 integer long integer string long tuple5 integer long integer string long override public void reduce iterable tuple5 integer long integer string long value collector tuple5 integer long integer string long out throw exception for tuple5 integer long integer string long v value out collect v add forward field information with forward field group again and reduce group by reduce group new group reduce function tuple5 integer long integer string long tuple2 integer long override public void reduce iterable tuple5 integer long integer string long value collector tuple2 integer long out throw exception int k long s for tuple5 integer long integer string long v value k v f0 s v f1 out collect new tuple2 k s list tuple2 integer long result reduce d collect string expect 1,1 n 2,5 n 3,15 n 4,34 n 5,65 n compare result as tuple result expect test public void test group reduce with atomic value throw exception final execution environment env execution environment get execution environment datum set integer d env from element datum set integer reduce d d group by reduce group new group reduce function integer integer override public void reduce iterable integer value collector integer out throw exception out collect value iterator next list integer result reduce d collect string expect n n n compare result as text result expect fix for flink throw exception test public void test jodatime date time with kryo throw exception final execution environment env execution environment get execution environment datum set tuple2 integer date time d env from element new tuple2 date time now datum set tuple2 integer date time reduce d d group by f1 sum project list tuple2 integer date time result reduce d collect string expect n compare result as tuple result expect fix for flink throw exception test public void test date null exception throw exception final execution environment env execution environment get execution environment datum set tuple2 integer date in env from element new tuple2 new date new tuple2 integer date null new tuple2 new date datum set string r in group by reduce group new group reduce function tuple2 integer date string override public void reduce iterable tuple2 integer date value collector string out throw exception for tuple2 integer date e value out collect integer to string e f0 list string result r collect string expect n1 n2 n compare result as text result expect private static class group reducer8 implement group reduce function collection datum set pojo with collection string override public void reduce iterable collection datum set pojo with collection value collector string out string builder concat new string builder concat append call for collection datum set pojo with collection value value concat append n for key append value big int append we get n append value out collect concat to string private static class nest tuple reducer implement group reduce function tuple2 tuple2 integer integer string string override public void reduce iterable tuple2 tuple2 integer integer string value collector string out boolean once false string builder concat new string builder for tuple2 tuple2 integer integer string value value if once concat append value f1 append once true concat append value f0 the tuple with the sort group concat append out collect concat to string private static class tuple3 group reduce implement group reduce function tuple3 integer long string tuple2 integer long private static final long serial version u i d 1 l override public void reduce iterable tuple3 integer long string value collector tuple2 integer long out int i long l 0 l for tuple3 integer long string t value i t f0 l t f1 out collect new tuple2 i l private static class tuple3 sort group reduce implement group reduce function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void reduce iterable tuple3 integer long string value collector tuple3 integer long string out int sum long key string builder concat new string builder for tuple3 integer long string next value sum next f0 key next f1 concat append next f2 append if concat length concat set length concat length out collect new tuple3 sum key concat to string private static class tuple5 group reduce implement group reduce function tuple5 integer long integer string long tuple5 integer long integer string long private static final long serial version u i d 1 l override public void reduce iterable tuple5 integer long integer string long value collector tuple5 integer long integer string long out int i long l 0 l long l2 0 l for tuple5 integer long integer string long t value i t f0 l t f1 l2 t f4 out collect new tuple5 i l p l2 private static class tuple5 sort group reduce implement group reduce function tuple5 integer long integer string long tuple5 integer long integer string long private static final long serial version u i d 1 l override public void reduce iterable tuple5 integer long integer string long value collector tuple5 integer long integer string long out int i long l 0 l long l2 0 l string builder concat new string builder for tuple5 integer long integer string long t value i t f0 l t f1 concat append t f3 append l2 t f4 if concat length concat set length concat length out collect new tuple5 i l concat to string l2 private static class custom type group reduce implement group reduce function custom type custom type private static final long serial version u i d 1 l override public void reduce iterable custom type value collector custom type out final iterator custom type iter value iterator custom type o new custom type custom type c iter next o my string hello o my int c my int o my long c my long while iter have next custom type next iter next o my long next my long out collect o private static class custom type sort group reduce implement group reduce function custom type custom type private static final long serial version u i d 1 l override public void reduce iterable custom type value collector custom type out final iterator custom type iter value iterator custom type o new custom type custom type c iter next string builder concat new string builder c my string o my int c my int o my long c my long while iter have next custom type next iter next concat append append next my string o my long next my long o my string concat to string out collect o private static class input return tuple3 group reduce implement group reduce function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void reduce iterable tuple3 integer long string value collector tuple3 integer long string out for tuple3 integer long string t value if t f0 t f2 hi t f0 out collect t t f0 t f2 hi again out collect t private static class all add tuple3 group reduce implement group reduce function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void reduce iterable tuple3 integer long string value collector tuple3 integer long string out int i long l 0 l for tuple3 integer long string t value i t f0 l t f1 out collect new tuple3 i l hello world private static class all add custom type group reduce implement group reduce function custom type custom type private static final long serial version u i d 1 l override public void reduce iterable custom type value collector custom type out custom type o new custom type hello for custom type next value o my int next my int o my long next my long out collect o private static class b c tuple3 group reduce extend rich group reduce function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l private string f2 replace override public void open configuration config collection integer int this get runtime context get broadcast variable int int sum for integer i int sum i f2 replace sum override public void reduce iterable tuple3 integer long string value collector tuple3 integer long string out int i long l 0 l for tuple3 integer long string t value i t f0 l t f1 out collect new tuple3 i l this f2 replace private static class tuple3 group reduce with combine implement group reduce function tuple3 integer long string tuple2 integer string group combine function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void combine iterable tuple3 integer long string value collector tuple3 integer long string out tuple3 integer long string o new tuple3 0 l for tuple3 integer long string t value o f0 t f0 o f1 t f1 o f2 test o f1 out collect o override public void reduce iterable tuple3 integer long string value collector tuple2 integer string out int i string s for tuple3 integer long string t value i t f0 s t f2 out collect new tuple2 i be private static class tuple3 sort group reduce with combine implement group reduce function tuple3 integer long string tuple2 integer string group combine function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void combine iterable tuple3 integer long string value collector tuple3 integer long string out int sum long key string builder concat new string builder for tuple3 integer long string next value sum next f0 key next f1 concat append next f2 append if concat length concat set length concat length out collect new tuple3 sum key concat to string override public void reduce iterable tuple3 integer long string value collector tuple2 integer string out int i string s for tuple3 integer long string t value i t f0 s t f2 out collect new tuple2 i be private static class tuple3 all group reduce with combine implement group reduce function tuple3 integer long string tuple2 integer string group combine function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void combine iterable tuple3 integer long string value collector tuple3 integer long string out tuple3 integer long string o new tuple3 0 l for tuple3 integer long string t value o f0 t f0 o f1 t f1 o f2 test out collect o override public void reduce iterable tuple3 integer long string value collector tuple2 integer string out int i string s for tuple3 integer long string t value i t f0 t f1 s t f2 out collect new tuple2 i be private static class custom type group reduce with combine implement group reduce function custom type custom type group combine function custom type custom type private static final long serial version u i d 1 l override public void combine iterable custom type value collector custom type out throw exception custom type o new custom type for custom type c value o my int c my int o my long c my long o my string test c my int out collect o override public void reduce iterable custom type value collector custom type out custom type o new custom type for custom type c value o my int c my int o my long c my long o my string c my string out collect o private static class order check combinable reduce implement group reduce function tuple3 integer long string tuple3 integer long string group combine function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void reduce iterable tuple3 integer long string value collector tuple3 integer long string out throw exception iterator tuple3 integer long string it value iterator tuple3 integer long string t it next int i t f0 out collect t while it have next t it next if i t f0 t f2 equal invalid order t f2 invalid order out collect t override public void combine iterable tuple3 integer long string value collector tuple3 integer long string out iterator tuple3 integer long string it value iterator tuple3 integer long string t it next int i t f0 out collect t while it have next t it next if i t f0 t f2 invalid order out collect t private static final class identity mapper t extend rich map function t t override public t map t value return value private static int count element iterable iterable int c for suppress warning unused object o iterable c return c 
join i t case suppress warning serial run with parameterized class public class join i t case extend multiple program test base public join i t case test execution mode mode super mode test public void test u d f join on tuple with key field position throw exception udf join on tuple with key field position final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple2 string string join d ds1 join ds2 where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello world hallo welt n compare result as tuple result expect test public void teste u d f join on tuple with multiple key field position throw exception udf join on tuple with multiple key field position final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple2 string string join d ds1 join ds2 where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello world hallo welt wie geht n hello world abc n i be fine hij n i be fine ijk n compare result as tuple result expect test public void test default join on tuple throw exception default join on tuple final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple2 tuple3 integer long string tuple5 integer long integer string long join d ds1 join ds2 where equal to list tuple2 tuple3 integer long string tuple5 integer long integer string long result join d collect string expect 1,1 hi 2,2 hallo welt n 2,2 hello 2,3 hallo welt wie n 3,2 hello world 3,4 hallo welt wie geht n compare result as tuple result expect test public void test join with huge throw exception join with huge final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple2 string string join d ds1 join with huge ds2 where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello world hallo welt n compare result as tuple result expect test public void test join with tiny throw exception join with tiny final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple2 string string join d ds1 join with tiny ds2 where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello world hallo welt n compare result as tuple result expect test public void test join that return the left input object throw exception join that return the left input object final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple3 integer long string join d ds1 join ds2 where equal to with new left return join list tuple3 integer long string result join d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n compare result as tuple result expect test public void test join that return the right input object throw exception join that return the right input object final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple5 integer long integer string long join d ds1 join ds2 where equal to with new right return join list tuple5 integer long integer string long result join d collect string expect 1,1 hallo n 2,2 hallo welt n 2,2 hallo welt n compare result as tuple result expect test public void test join with broadcast set throw exception join with broadcast set final execution environment env execution environment get execution environment datum set integer int d collection data set get integer datum set env datum set tuple3 integer long string ds1 collection data set get3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple3 string string integer join d ds1 join ds2 where equal to with new t3 t5 b c join with broadcast set int d int list tuple3 string string integer result join d collect string expect hi hallo n hi hallo welt wie n hello hallo welt n hello world hallo welt n compare result as tuple result expect test public void test join on a custom type input with key extractor and a tuple input with key field selector throw exception join on a tuple input with key field selector and a custom type input with key extractor final execution environment env execution environment get execution environment datum set custom type ds1 collection datum set get small custom type datum set env datum set tuple3 integer long string ds2 collection data set get3 tuple datum set env datum set tuple2 string string join d ds1 join ds2 where new key selector1 equal to with new cust t3 join list tuple2 string string result join d collect string expect hi hi n hello hello n hello world hello n compare result as tuple result expect private static class key selector1 implement key selector custom type integer override public integer get key custom type value return value my int test public void test project on a tuple1 input throw exception project join on a tuple input final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple6 string long string integer long long join d ds1 join ds2 where equal to project first project second project first project second list tuple6 string long string integer long long result join d collect string expect hi hallo 1,1 n hello hallo welt 2,2 n hello world hallo welt 3,2 n compare result as tuple result expect test public void test project join on a tuple2 input throw exception project join on a tuple input final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple6 string string long long long integer join d ds1 join ds2 where equal to project second project first project second project first list tuple6 string string long long long integer result join d collect string expect hallo hi 1,1 1,1 n hallo welt hello 2,2 2,2 n hallo welt hello world 2,2 2,3 n compare result as tuple result expect test public void test join on a tuple input with key field selector and a custom type input with key extractor throw exception join on a tuple input with key field selector and a custom type input with key extractor final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set custom type ds2 collection datum set get custom type datum set env datum set tuple2 string string join d ds1 join ds2 where equal to new key selector2 with new t3 cust join list tuple2 string string result join d collect string expect hi hello n hello hello world n hello world hello world n compare result as tuple result expect private static class key selector2 implement key selector custom type long override public long get key custom type value return value my long test public void test default join on two custom type input with key extractor throw exception default join on two custom type input with key extractor final execution environment env execution environment get execution environment datum set custom type ds1 collection datum set get custom type datum set env datum set custom type ds2 collection datum set get small custom type datum set env datum set tuple2 custom type custom type join d ds1 join ds2 where new key selector5 equal to new key selector6 list tuple2 custom type custom type result join d collect string expect 1,0 hi 1,0 hi n 2,1 hello 2,1 hello n 2,1 hello 2,2 hello world n 2,2 hello world 2,1 hello n 2,2 hello world 2,2 hello world n compare result as tuple result expect test public void test default join on two custom type input with inner class key extractor closure cleaner throw exception default join on two custom type input with key extractor implement as inner class to test closure clean final execution environment env execution environment get execution environment datum set custom type ds1 collection datum set get custom type datum set env datum set custom type ds2 collection datum set get small custom type datum set env datum set tuple2 custom type custom type join d ds1 join ds2 where new key selector custom type integer override public integer get key custom type value return value my int equal to new key selector custom type integer override public integer get key custom type value throw exception return value my int list tuple2 custom type custom type result join d collect string expect 1,0 hi 1,0 hi n 2,1 hello 2,1 hello n 2,1 hello 2,2 hello world n 2,2 hello world 2,1 hello n 2,2 hello world 2,2 hello world n compare result as tuple result expect test public void test default join on two custom type input with inner class key extractor disabled closure cleaner throw exception default join on two custom type input with key extractor check if disable closure cleaning work final execution environment env execution environment get execution environment env get config disable closure cleaner datum set custom type ds1 collection datum set get custom type datum set env datum set custom type ds2 collection datum set get small custom type datum set env boolean correct exception trigger false try datum set tuple2 custom type custom type join d ds1 join ds2 where new key selector custom type integer override public integer get key custom type value return value my int equal to new key selector custom type integer override public integer get key custom type value throw exception return value my int catch invalid program exception ex correct exception trigger ex get cause instanceof java io not serializable exception assert assert true correct exception trigger private static class key selector5 implement key selector custom type integer override public integer get key custom type value return value my int private static class key selector6 implement key selector custom type integer override public integer get key custom type value return value my int test public void test u d f join on tuple with tuple return key selector throw exception udf join on tuple with tuple return key selector final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env datum set tuple2 string string join d ds1 join ds2 where new key selector3 equal to new key selector4 with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello world hallo welt wie geht n hello world abc n i be fine hij n i be fine ijk n compare result as tuple result expect private static class key selector3 implement key selector tuple3 integer long string tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple3 integer long string t return new tuple2 integer long t f0 t f1 private static class key selector4 implement key selector tuple5 integer long integer string long tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple5 integer long integer string long t return new tuple2 integer long t f0 t f4 test public void test join nest pojo against tuple select use string throw exception join nest pojo against tuple select use a string final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 join ds2 where nest pojo long number equal to f6 list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test join nest pojo against tuple select use integer throw exception join nest pojo against tuple select as a integer final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 join ds2 where nest pojo long number equal to difference list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test select multiple field use expression language throw exception select multiple field use expression language final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 join ds2 where nest pojo long number number str equal to f6 f0 f1 env set parallelism list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test nest into tuple throw exception nest into tuple final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 join ds2 where nest pojo long number number nest tuple with custom f0 equal to f6 f0 f2 env set parallelism list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test nest into tuple into pojo throw exception nest into tuple into pojo final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 join ds2 where nest tuple with custom f0 nest tuple with custom f1 my int nest tuple with custom f1 my long equal to f2 f3 f4 env set parallelism list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test non pojo to verify full tuple key throw exception non pojo test to verify that full tuple key be work final execution environment env execution environment get execution environment datum set tuple2 tuple2 integer integer string ds1 collection data set get small nest tuple datum set env datum set tuple2 tuple2 integer integer string ds2 collection data set get small nest tuple datum set env datum set tuple2 tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string join d ds1 join ds2 where equal to f0 f0 f0 f1 key be now tuple2 integer integer env set parallelism list tuple2 tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string result join d collect string expect 1,1 one 1,1 one n 2,2 two 2,2 two n 3,3 three 3,3 three n compare result as tuple result expect test public void test non pojo to verify nest tuple element selection throw exception non pojo test to verify nest tuple element selection final execution environment env execution environment get execution environment datum set tuple2 tuple2 integer integer string ds1 collection data set get small nest tuple datum set env datum set tuple2 tuple2 integer integer string ds2 collection data set get small nest tuple datum set env datum set tuple2 tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string join d ds1 join ds2 where f0 f0 equal to f0 f0 key be now integer from tuple2 integer integer env set parallelism list tuple2 tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string result join d collect string expect 1,1 one 1,1 one n 2,2 two 2,2 two n 3,3 three 3,3 three n compare result as tuple result expect test public void test full pojo with full tuple throw exception full pojo with full tuple final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 long integer integer long string integer string ds2 collection data set get small tuplebase datum set match pojo env datum set tuple2 pojo tuple7 long integer integer long string integer string join d ds1 join ds2 where equal to env set parallelism list tuple2 pojo tuple7 long integer integer long string integer string result join d collect string expect first 10,100 one 10000,10 100,1000 one first n second 20,200 two 20000,20 200,2000 two second n third 30,300 three 30000,30 300,3000 three third n compare result as tuple result expect test public void test non pojo to verify nest tuple element selection with first key field greater than zero throw exception non pojo test to verify nest tuple element selection with the first key field greater than final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple2 tuple3 integer long string tuple3 integer long string ds2 ds1 join ds1 where equal to datum set tuple2 tuple2 tuple3 integer long string tuple3 integer long string tuple2 tuple3 integer long string tuple3 integer long string join d ds2 join ds2 where f1 f0 equal to f0 f0 env set parallelism list tuple2 tuple2 tuple3 integer long string tuple3 integer long string tuple2 tuple3 integer long string tuple3 integer long string result join d collect string expect 1,1 hi 1,1 hi 1,1 hi 1,1 hi n 2,2 hello 2,2 hello 2,2 hello 2,2 hello n 3,2 hello world 3,2 hello world 3,2 hello world 3,2 hello world n compare result as tuple result expect test public void test join with atomic type1 throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set integer ds2 env from element datum set tuple2 tuple3 integer long string integer join d ds1 join ds2 where equal to list tuple2 tuple3 integer long string integer result join d collect string expect 1,1 hi n 2,2 hello compare result as tuple result expect test public void test join with atomic type2 throw exception final execution environment env execution environment get execution environment datum set integer ds1 env from element datum set tuple3 integer long string ds2 collection data set get small3 tuple datum set env datum set tuple2 integer tuple3 integer long string join d ds1 join ds2 where equal to list tuple2 integer tuple3 integer long string result join d collect string expect 1,1 hi n 2,2 hello compare result as tuple result expect test public void test join with range partitioning throw exception test join on tuple with multiple key field position and same customized distribution final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get5 tuple datum set env env set parallelism test distribution test di new test distribution datum set tuple2 string string join d datum set util partition by range ds1 test dis join datum set util partition by range ds2 test dis where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello world hallo welt wie geht n hello world abc n i be fine hij n i be fine ijk n compare result as tuple result expect private static class t3 t5 flat join implement flat join function tuple3 integer long string tuple5 integer long integer string long tuple2 string string override public void join tuple3 integer long string first tuple5 integer long integer string long second collector tuple2 string string out out collect new tuple2 string string first f2 second f3 private static class leave return join implement join function tuple3 integer long string tuple5 integer long integer string long tuple3 integer long string override public tuple3 integer long string join tuple3 integer long string first tuple5 integer long integer string long second return first private static class right return join implement join function tuple3 integer long string tuple5 integer long integer string long tuple5 integer long integer string long override public tuple5 integer long integer string long join tuple3 integer long string first tuple5 integer long integer string long second return second private static class t3 t5 b c join extend rich flat join function tuple3 integer long string tuple5 integer long integer string long tuple3 string string integer private int broadcast override public void open configuration config collection integer int this get runtime context get broadcast variable int int sum for integer i int sum i broadcast sum override public tuple3 string string integer join tuple3 integer long string first tuple5 integer long integer string long second return new tuple3 string string integer first f2 second f3 broadcast override public void join tuple3 integer long string first tuple5 integer long integer string long second collector tuple3 string string integer out throw exception out collect new tuple3 string string integer first f2 second f3 broadcast private static class t3 cust join implement join function tuple3 integer long string custom type tuple2 string string override public tuple2 string string join tuple3 integer long string first custom type second return new tuple2 string string first f2 second my string private static class cust t3 join implement join function custom type tuple3 integer long string tuple2 string string override public tuple2 string string join custom type first tuple3 integer long string second return new tuple2 string string first my string second f2 test datum distribution public static class test distribution implement datum distribution public object boundary new object new object 2 l new object 4 l new object 12 l new object 6 l public test distribution override public object get bucket boundary int bucket num int total num bucket return boundary bucket num override public int get number of field return override public type information get key type return new type information basic type info int type info basic type info long type info override public void write datum output view out throw i o exception override public void read datum input view in throw i o exception override public boolean equal object obj return obj instanceof test distribution 
map i t case run with parameterized class public class map i t case extend multiple program test base public map i t case test execution mode mode super mode test public void test identity map with basic type throw exception test identity map with basic type final execution environment env execution environment get execution environment datum set string d collection data set get string datum set env datum set string identity map d d map new mapper1 list string result identity map d collect string expect hi n hello n hello world n hello world how be you n i be fine n luke skywalker n random comment n lol n compare result as text result expect test public void test runtime context and execution config param throw exception test identity map with basic type final execution environment env execution environment get execution environment env get config set number of execution retry env get config set task cancellation interval datum set string d collection data set get string datum set env datum set string identity map d d map new rich map function string string override public string map string value throw exception assert assert true get runtime context get execution config get number of execution retry assert assert true get runtime context get execution config get task cancellation interval return value list string result identity map d collect string expect hi n hello n hello world n hello world how be you n i be fine n luke skywalker n random comment n lol n compare result as text result expect private static class mapper1 implement map function string string private static final long serial version u i d 1 l override public string map string value throw exception return value test public void test identity map with tuple throw exception test identity map with a tuple final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string identity map d d map new mapper2 list tuple3 integer long string result identity map d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n compare result as tuple result expect private static class mapper2 implement map function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public tuple3 integer long string map tuple3 integer long string value throw exception return value test public void test type conversion mapper custom to tuple throw exception test type conversion mapper custom tuple final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set tuple3 integer long string type conversion map d d map new mapper3 list tuple3 integer long string result type conversion map d collect string expect 1,0 hi n 2,1 hello n 2,2 hello world n 3,3 hello world how be you n 3,4 i be fine n 3,5 luke skywalker n 4,6 comment n 4,7 comment n 4,8 comment n 4,9 comment n 5,10 comment n 5,11 comment n 5,12 comment n 5,13 comment n 5,14 comment n 6,15 comment n 6,16 comment n 6,17 comment n 6,18 comment n 6,19 comment n 6,20 comment n compare result as tuple result expect private static class mapper3 implement map function custom type tuple3 integer long string private static final long serial version u i d 1 l private final tuple3 integer long string out new tuple3 integer long string override public tuple3 integer long string map custom type value throw exception out set field value my int out set field value my long out set field value my string return out test public void test type conversion mapper tuple to basic throw exception test type conversion mapper tuple basic final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set string type conversion map d d map new mapper4 list string result type conversion map d collect string expect hi n hello n hello world n hello world how be you n i be fine n luke skywalker n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n compare result as text result expect private static class mapper4 implement map function tuple3 integer long string string private static final long serial version u i d 1 l override public string map tuple3 integer long string value throw exception return value get field test public void test mapper on tuple increment integer field reorder second and third field throw exception test mapper on tuple increment integer field reorder second and third field final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer string long tuple map d d map new mapper5 list tuple3 integer string long result tuple map d collect string expect hi n hello n hello world n hello world how be you n i be fine n luke skywalker n comment 1,4 n comment 2,4 n comment 3,4 n comment 4,4 n comment 5,5 n comment 6,5 n comment 7,5 n comment 8,5 n comment 9,5 n comment 10,6 n comment 11,6 n comment 12,6 n comment 13,6 n comment 14,6 n comment 15,6 n compare result as tuple result expect private static class mapper5 implement map function tuple3 integer long string tuple3 integer string long private static final long serial version u i d 1 l private final tuple3 integer string long out new tuple3 integer string long override public tuple3 integer string long map tuple3 integer long string value throw exception integer incr integer value of value f0 int value out set field incr value f2 value f1 return out test public void test mapper on custom lowercase string throw exception test mapper on custom lowercase my string final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type custom map d d map new mapper6 list custom type result custom map d collect string expect 1,0 hi n 2,1 hello n 2,2 hello world n 3,3 hello world how be you n 3,4 i be fine n 3,5 luke skywalker n 4,6 comment n 4,7 comment n 4,8 comment n 4,9 comment n 5,10 comment n 5,11 comment n 5,12 comment n 5,13 comment n 5,14 comment n 6,15 comment n 6,16 comment n 6,17 comment n 6,18 comment n 6,19 comment n 6,20 comment n compare result as text result expect private static class mapper6 implement map function custom type custom type private static final long serial version u i d 1 l private final custom type out new custom type override public custom type map custom type value throw exception out my int value my int out my long value my long out my string value my string to lower case return out test public void test throw exception test mapper if udf return input object increment first field of a tuple final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string input obj map d d map new mapper7 list tuple3 integer long string result input obj map d collect string expect 2,1 hi n 3,2 hello n 4,2 hello world n 5,3 hello world how be you n 6,3 i be fine n 7,3 luke skywalker n 8,4 comment n 9,4 comment n 10,4 comment n 11,4 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,5 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n 22,6 comment n compare result as tuple result expect private static class mapper7 implement map function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public tuple3 integer long string map tuple3 integer long string value throw exception integer incr integer value of value f0 int value value set field incr return value test public void test map with broadcast set throw exception test map with broadcast set final execution environment env execution environment get execution environment datum set integer int collection data set get integer datum set env datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string bc map d d map new rich mapper1 with broadcast set int int list tuple3 integer long string result bc map d collect string expect 55,1 hi n 55,2 hello n 55,2 hello world n 55,3 hello world how be you n 55,3 i be fine n 55,3 luke skywalker n 55,4 comment n 55,4 comment n 55,4 comment n 55,4 comment n 55,5 comment n 55,5 comment n 55,5 comment n 55,5 comment n 55,5 comment n 55,6 comment n 55,6 comment n 55,6 comment n 55,6 comment n 55,6 comment n 55,6 comment n compare result as tuple result expect private static class rich mapper1 extend rich map function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l private final tuple3 integer long string out new tuple3 integer long string private integer f2 replace override public void open configuration config collection integer int this get runtime context get broadcast variable int int sum for integer i int sum i f2 replace sum override public tuple3 integer long string map tuple3 integer long string value throw exception out set field f2 replace value f1 value f2 return out static final string test key test variable static final int test value test public void test pass configuration object throw exception test pass configuration object final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get small3 tuple datum set env configuration conf new configuration conf set integer test key test value datum set tuple3 integer long string bc map d d map new rich mapper2 with parameter conf list tuple3 integer long string result bc map d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world compare result as tuple result expect private static class rich mapper2 extend rich map function tuple3 integer long string tuple3 integer long string private static final long serial version u i d 1 l override public void open configuration config int val config get integer test key assert assert equal test value val override public tuple3 integer long string map tuple3 integer long string value return value test public void test map with lambda throw exception final execution environment env execution environment get execution environment datum set integer string d env from element datum set string map d string d map object to string map s s replace map trade new map trade to string list string result map d collect string expect n n n n compare result as text result expect private static class trade public string v public trade string v this v v override public string to string return v 
object reuse i t case suppress warning serial run with parameterized class public class object reuse i t case extend multiple program test base private static final list tuple2 string integer reduce datum array as list new tuple2 a new tuple2 a new tuple2 a new tuple2 a new tuple2 a private static final list tuple2 string integer group reduce datum array as list new tuple2 a new tuple2 a new tuple2 a new tuple2 a new tuple2 a private final boolean object reuse public object reuse i t case boolean object reuse super test execution mode cluster this object reuse object reuse test public void test key reduce throw exception final execution environment env execution environment get execution environment if object reuse env get config enable object reuse else env get config disable object reuse datum set tuple2 string integer input env from collection reduce datum datum set tuple2 string integer result input group by reduce new reduce function tuple2 string integer override public tuple2 string integer reduce tuple2 string integer value1 tuple2 string integer value2 value2 f1 value1 f1 return value2 tuple2 string integer re result collect get assert equal new tuple2 a res test public void test global reduce throw exception final execution environment env execution environment get execution environment if object reuse env get config enable object reuse else env get config disable object reuse datum set tuple2 string integer input env from collection reduce datum datum set tuple2 string integer result input reduce new reduce function tuple2 string integer override public tuple2 string integer reduce tuple2 string integer value1 tuple2 string integer value2 if value1 f1 value1 f1 value2 f1 return value1 else value2 f1 value1 f1 return value2 tuple2 string integer re result collect get assert equal new tuple2 a res test public void test key group reduce throw exception final execution environment env execution environment get execution environment if object reuse env get config enable object reuse else env get config disable object reuse datum set tuple2 string integer input env from collection group reduce datum datum set tuple2 string integer result input group by reduce group new group reduce function tuple2 string integer tuple2 string integer override public void reduce iterable tuple2 string integer value collector tuple2 string integer out list tuple2 string integer list new array list for tuple2 string integer val value list add val for tuple2 string integer val list out collect val list tuple2 string integer be result collect collection sort be new tuple comparator tuple2 string integer list tuple2 string integer expect env get config be object reuse enable array as list new tuple2 a new tuple2 a new tuple2 a new tuple2 a new tuple2 a array as list new tuple2 a new tuple2 a new tuple2 a new tuple2 a new tuple2 a assert equal expect be test public void test global group reduce throw exception final execution environment env execution environment get execution environment if object reuse env get config enable object reuse else env get config disable object reuse datum set tuple2 string integer input env from collection group reduce datum datum set tuple2 string integer result input reduce group new group reduce function tuple2 string integer tuple2 string integer override public void reduce iterable tuple2 string integer value collector tuple2 string integer out list tuple2 string integer list new array list for tuple2 string integer val value list add val for tuple2 string integer val list out collect val list tuple2 string integer be result collect collection sort be new tuple comparator tuple2 string integer list tuple2 string integer expect env get config be object reuse enable array as list new tuple2 a new tuple2 a new tuple2 a new tuple2 a new tuple2 a array as list new tuple2 a new tuple2 a new tuple2 a new tuple2 a new tuple2 a assert equal expect be parameterized parameter name execution mode cluster reuse public static collection object execution mode return array as list new object false new object true 
outer join i t case suppress warning serial run with parameterized class public class outer join i t case extend multiple program test base public outer join i t case test execution mode mode super mode test public void test leave outer join1 throw exception test leave outer join on tuple with key position join hint repartition sort merge test public void test leave outer join2 throw exception test leave outer join on tuple with key position join hint repartition hash first test public void test leave outer join3 throw exception test leave outer join on tuple with key position join hint repartition hash second test public void test leave outer join4 throw exception test leave outer join on tuple with key position join hint broadcast hash second test expect invalid program exception class public void test leave outer join5 throw exception test leave outer join on tuple with key position join hint broadcast hash first private void test leave outer join on tuple with key position join hint hint throw exception udf join on tuple with key field position final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 string string join d ds1 leave outer join ds2 hint where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello hallo welt wie n hello world null n compare result as tuple result expect test public void test right outer join1 throw exception test right outer join on tuple with key position join hint repartition sort merge test public void test right outer join2 throw exception test right outer join on tuple with key position join hint repartition hash first test public void test right outer join3 throw exception test right outer join on tuple with key position join hint repartition hash second test public void test right outer join4 throw exception test right outer join on tuple with key position join hint broadcast hash first test expect invalid program exception class public void test right outer join5 throw exception test right outer join on tuple with key position join hint broadcast hash second private void test right outer join on tuple with key position join hint hint throw exception udf join on tuple with key field position final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 string string join d ds1 right outer join ds2 hint where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n null hallo welt wie n hello world hallo welt n compare result as tuple result expect test public void test full outer join1 throw exception test full outer join on tuple with key position join hint repartition sort merge test public void test full outer join2 throw exception test full outer join on tuple with key position join hint repartition hash first test public void test full outer join3 throw exception test full outer join on tuple with key position join hint repartition hash second test expect invalid program exception class public void test full outer join4 throw exception test full outer join on tuple with key position join hint broadcast hash first test expect invalid program exception class public void test full outer join5 throw exception test full outer join on tuple with key position join hint broadcast hash second private void test full outer join on tuple with key position join hint hint throw exception udf join on tuple with key field position final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 string string join d ds1 full outer join ds2 hint where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect null hallo n hi hallo welt n hello hallo welt wie n hello world null n compare result as tuple result expect test public void test join on tuple with composite key position throw exception udf join on tuple with multiple key field position final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 string string join d ds1 full outer join ds2 where equal to with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello world null n null hallo welt wie n compare result as tuple result expect test public void test join with broadcast set throw exception join with broadcast set final execution environment env execution environment get execution environment datum set integer int d collection data set get integer datum set env datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple3 string string integer join d ds1 full outer join ds2 where equal to with new t3 t5 b c join with broadcast set int d int list tuple3 string string integer result join d collect string expect hi hallo n hi hallo welt wie n hello hallo welt n hello world hallo welt n compare result as tuple result expect test public void test join with mixed key types1 throw exception join on a tuple input with key field selector and a custom type input with key extractor final execution environment env execution environment get execution environment datum set custom type ds1 collection datum set get small custom type datum set env datum set tuple3 integer long string ds2 collection data set get small3 tuple datum set env datum set tuple2 string string join d ds1 full outer join ds2 where new key selector1 equal to with new cust t3 join list tuple2 string string result join d collect string expect hi hi n hello hello n hello world hello n null hello world n compare result as tuple result expect private static class key selector1 implement key selector custom type integer override public integer get key custom type value return value my int test public void test join with mixed key types2 throw exception join on a tuple input with key field selector and a custom type input with key extractor final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set custom type ds2 collection datum set get small custom type datum set env datum set tuple2 string string join d ds1 full outer join ds2 where equal to new key selector2 with new t3 cust join list tuple2 string string result join d collect string expect null hi n hi hello n hello hello world n hello world hello world n compare result as tuple result expect private static class key selector2 implement key selector custom type long override public long get key custom type value return value my long test public void test join with tuple return key selector throw exception udf join on tuple with tuple return key selector final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set tuple5 integer long integer string long ds2 collection data set get small5 tuple datum set env datum set tuple2 string string join d ds1 full outer join ds2 where new key selector3 equal to new key selector4 with new t3 t5 flat join list tuple2 string string result join d collect string expect hi hallo n hello hallo welt n hello world null n null hallo welt wie n compare result as tuple result expect private static class key selector3 implement key selector tuple3 integer long string tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple3 integer long string t return new tuple2 t f0 t f1 private static class key selector4 implement key selector tuple5 integer long integer string long tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple5 integer long integer string long t return new tuple2 t f0 t f4 test public void test join with nest key expression1 throw exception join nest pojo against tuple select use a string final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 full outer join ds2 where nest pojo long number equal to f6 with new project both function pojo tuple7 integer string integer integer long string long list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test join with nest key expression2 throw exception join nest pojo against tuple select as a integer final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 full outer join ds2 where nest pojo long number equal to difference with new project both function pojo tuple7 integer string integer integer long string long list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test join with composite key expression throw exception select multiple field use expression language final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 full outer join ds2 where nest pojo long number number str equal to f6 f0 f1 with new project both function pojo tuple7 integer string integer integer long string long env set parallelism list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test nest into tuple throw exception nest into tuple final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 full outer join ds2 where nest pojo long number number nest tuple with custom f0 equal to f6 f0 f2 with new project both function pojo tuple7 integer string integer integer long string long env set parallelism list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test nest into tuple into pojo throw exception nest into tuple into pojo final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 integer string integer integer long string long ds2 collection data set get small tuplebase datum set env datum set tuple2 pojo tuple7 integer string integer integer long string long join d ds1 full outer join ds2 where nest tuple with custom f0 nest tuple with custom f1 my int nest tuple with custom f1 my long equal to f2 f3 f4 with new project both function pojo tuple7 integer string integer integer long string long env set parallelism list tuple2 pojo tuple7 integer string integer integer long string long result join d collect string expect first 10,100 one first 10,100 one n second 20,200 two second 20,200 two n third 30,300 three third 30,300 three n compare result as tuple result expect test public void test non pojo to verify full tuple key throw exception non pojo test to verify that full tuple key be work final execution environment env execution environment get execution environment datum set tuple2 tuple2 integer integer string ds1 collection data set get small nest tuple datum set env datum set tuple2 tuple2 integer integer string ds2 collection data set get small nest tuple datum set env datum set tuple2 tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string join d ds1 full outer join ds2 where equal to f0 f0 f0 f1 key be now tuple2 integer integer with new project both function tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string env set parallelism list tuple2 tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string result join d collect string expect 1,1 one 1,1 one n 2,2 two 2,2 two n 3,3 three 3,3 three n compare result as tuple result expect test public void test non pojo to verify nest tuple element selection throw exception non pojo test to verify nest tuple element selection final execution environment env execution environment get execution environment datum set tuple2 tuple2 integer integer string ds1 collection data set get small nest tuple datum set env datum set tuple2 tuple2 integer integer string ds2 collection data set get small nest tuple datum set env datum set tuple2 tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string join d ds1 full outer join ds2 where f0 f0 equal to f0 f0 key be now integer from tuple2 integer integer with new project both function tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string env set parallelism list tuple2 tuple2 tuple2 integer integer string tuple2 tuple2 integer integer string result join d collect string expect 1,1 one 1,1 one n 2,2 two 2,2 two n 3,3 three 3,3 three n compare result as tuple result expect test public void test full pojo with full tuple throw exception full pojo with full tuple final execution environment env execution environment get execution environment datum set pojo ds1 collection data set get small pojo datum set env datum set tuple7 long integer integer long string integer string ds2 collection data set get small tuplebase datum set match pojo env datum set tuple2 pojo tuple7 long integer integer long string integer string join d ds1 full outer join ds2 where equal to with new project both function pojo tuple7 long integer integer long string integer string env set parallelism list tuple2 pojo tuple7 long integer integer long string integer string result join d collect string expect first 10,100 one 10000,10 100,1000 one first n second 20,200 two 20000,20 200,2000 two second n third 30,300 three 30000,30 300,3000 three third n compare result as tuple result expect test public void test join with atomic type1 throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string ds1 collection data set get small3 tuple datum set env datum set integer ds2 env from element datum set tuple2 tuple3 integer long string integer join d ds1 full outer join ds2 where equal to with new project both function tuple3 integer long string integer return new generic type info tuple2 class list tuple2 tuple3 integer long string integer result join d collect string expect 1,1 hi n 2,2 hello n 3,2 hello world null n compare result as tuple result expect test public void test join with atomic type2 throw exception final execution environment env execution environment get execution environment datum set integer ds1 env from element datum set tuple3 integer long string ds2 collection data set get small3 tuple datum set env datum set tuple2 integer tuple3 integer long string join d ds1 full outer join ds2 where equal to with new project both function integer tuple3 integer long string return new generic type info tuple2 class list tuple2 integer tuple3 integer long string result join d collect string expect 1,1 hi n 2,2 hello n null 3,2 hello world n compare result as tuple result expect private static class t3 t5 flat join implement flat join function tuple3 integer long string tuple5 integer long integer string long tuple2 string string override public void join tuple3 integer long string first tuple5 integer long integer string long second collector tuple2 string string out out collect new tuple2 first null null first f2 second null null second f3 private static class t3 t5 b c join extend rich flat join function tuple3 integer long string tuple5 integer long integer string long tuple3 string string integer private int broadcast override public void open configuration config collection integer int this get runtime context get broadcast variable int int sum for integer i int sum i broadcast sum override public void join tuple3 integer long string first tuple5 integer long integer string long second collector tuple3 string string integer out throw exception out collect new tuple3 first null null first f2 second null null second f3 broadcast private static class t3 cust join implement join function tuple3 integer long string custom type tuple2 string string override public tuple2 string string join tuple3 integer long string first custom type second return new tuple2 first null null first f2 second null null second my string private static class cust t3 join implement join function custom type tuple3 integer long string tuple2 string string override public tuple2 string string join custom type first tuple3 integer long string second return new tuple2 first null null first my string second null null second f2 deliberately untyped join function which emit a tuple2 of the left and right side private static class project both function i n1 i n2 implement join function i n1 i n2 tuple2 i n1 i n2 override public tuple2 i n1 i n2 join i n1 first i n2 second throw exception return new tuple2 first second 
partition i t case run with parameterized class suppress warning serial public class partition i t case extend multiple program test base public partition i t case test execution mode mode super mode test public void test hash partition by key field throw exception test hash partition by key field final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set long uniq long d partition by hash map partition new unique tuple long mapper list long result uniq long collect string expect n n n n n n compare result as text result expect test public void test range partition by key field throw exception test range partition by key field final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set long uniq long d partition by range map partition new unique tuple long mapper list long result uniq long collect string expect n n n n n n compare result as text result expect test public void test hash partition by key field2 throw exception test hash partition by key field final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env aggregate operator tuple3 integer long string sum d map new prefix mapper partition by hash group by sum list tuple3 integer long string result sum collect string expect 1,1 hi n 5,2 hello n 4,3 hello n 5,3 i be n 6,3 luke n 34,4 comme n 65,5 comme n 111,6 comme compare result as text result expect test public void test range partition by key field2 throw exception test range partition by key field final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env aggregate operator tuple3 integer long string sum d map new prefix mapper partition by range group by sum list tuple3 integer long string result sum collect string expect 1,1 hi n 5,2 hello n 4,3 hello n 5,3 i be n 6,3 luke n 34,4 comme n 65,5 comme n 111,6 comme compare result as text result expect test public void test hash partition of atomic type throw exception test hash partition of atomic type final execution environment env execution environment get execution environment datum set long uniq long env generate sequence union env generate sequence rebalance partition by hash map partition new unique long mapper list long result uniq long collect string expect n n n n n n compare result as text result expect test public void test range partition of atomic type throw exception test range partition of atomic type final execution environment env execution environment get execution environment datum set long uniq long env generate sequence union env generate sequence rebalance partition by range map partition new unique long mapper list long result uniq long collect string expect n n n n n n compare result as text result expect test public void test hash partition by key selector throw exception test hash partition by key selector final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set long uniq long d partition by hash new key selector1 map partition new unique tuple long mapper list long result uniq long collect string expect n n n n n n compare result as text result expect private static class prefix mapper implement map function tuple3 integer long string tuple3 integer long string override public tuple3 integer long string map tuple3 integer long string value throw exception if value f2 length value f2 value f2 substring return value test public void test range partition by key selector throw exception test range partition by key selector final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set long uniq long d partition by range new key selector1 map partition new unique tuple long mapper list long result uniq long collect string expect n n n n n n compare result as text result expect private static class key selector1 implement key selector tuple3 integer long string long private static final long serial version u i d 1 l override public long get key tuple3 integer long string value throw exception return value f1 test public void test force rebalancing throw exception test force rebalancing final execution environment env execution environment get execution environment generate some number in parallel datum set long d env generate sequence datum set tuple2 integer integer uniq long d introduce some partition skew by filter filter new filter1 rebalance rebalance count value in each partition map new partition index mapper group by reduce new reducer1 round count to mitigate runtime scheduling effect lazy split assignment map new mapper1 list tuple2 integer integer result uniq long collect string builder expect new string builder int num per partition env get parallelism for int i i env get parallelism i expect append append i append append num per partition append n compare result as text result expect to string private static class filter1 implement filter function long private static final long serial version u i d 1 l override public boolean filter long value throw exception return value private static class reducer1 implement reduce function tuple2 integer integer private static final long serial version u i d 1 l override public tuple2 integer integer reduce tuple2 integer integer v1 tuple2 integer integer v2 return new tuple2 v1 f0 v1 f1 v2 f1 private static class mapper1 implement map function tuple2 integer integer tuple2 integer integer private static final long serial version u i d 1 l override public tuple2 integer integer map tuple2 integer integer value throw exception value f1 value f1 return value test public void test hash partition by key field and different parallelism throw exception test hash partition by key field and different parallelism final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set long uniq long d partition by hash set parallelism map partition new unique tuple long mapper list long result uniq long collect string expect n n n n n n compare result as text result expect test public void test range partition by key field and different parallelism throw exception test range partition by key field and different parallelism final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set long uniq long d partition by range set parallelism map partition new unique tuple long mapper list long result uniq long collect string expect n n n n n n compare result as text result expect test public void test hash partition with key expression throw exception test hash partition with key expression final execution environment env execution environment get execution environment env set parallelism datum set pojo d collection data set get duplicate pojo datum set env datum set long uniq long d partition by hash nest pojo long number set parallelism map partition new unique nest pojo long mapper list long result uniq long collect string expect n n n compare result as text result expect test public void test range partition with key expression throw exception test range partition with key expression final execution environment env execution environment get execution environment env set parallelism datum set pojo d collection data set get duplicate pojo datum set env datum set long uniq long d partition by range nest pojo long number set parallelism map partition new unique nest pojo long mapper list long result uniq long collect string expect n n n compare result as text result expect private static class unique tuple long mapper implement map partition function tuple3 integer long string long private static final long serial version u i d 1 l override public void map partition iterable tuple3 integer long string record collector long out throw exception hash set long uniq new hash set for tuple3 integer long string t record uniq add t f1 for long l uniq out collect l private static class unique long mapper implement map partition function long long private static final long serial version u i d 1 l override public void map partition iterable long long collector long out throw exception hash set long uniq new hash set for long l long uniq add l for long l uniq out collect l private static class unique nest pojo long mapper implement map partition function pojo long private static final long serial version u i d 1 l override public void map partition iterable pojo record collector long out throw exception hash set long uniq new hash set for pojo t record uniq add t nest pojo long number for long l uniq out collect l private static class partition index mapper extend rich map function long tuple2 integer integer private static final long serial version u i d 1 l override public tuple2 integer integer map long value throw exception return new tuple2 this get runtime context get index of this subtask test public void test range partitioner on sequence datum throw exception final execution environment env execution environment get execution environment datum source long datum source env generate sequence key selector long long key extractor new object self key selector map partition function long tuple2 long long min max selector new min max selector new long comparator true comparator tuple2 long long tuple2 comparator new tuple2 comparator new long comparator true list tuple2 long long collect datum source partition by range key extractor map partition min max selector collect collection sort collect tuple2 comparator long previous max for tuple2 long long tuple2 collect if previous max previous max tuple2 f1 else long current min tuple2 f0 assert true tuple2 f0 tuple2 f1 assert equal previous max current min previous max tuple2 f1 test expect invalid program exception class public void test range partition in iteration throw exception do not apply for collection execution if super mode test execution mode collection throw new invalid program exception do not apply for collection execution final execution environment env execution environment get execution environment datum source long source env generate sequence datum set tuple2 long string tuple source map new map function long tuple2 long string override public tuple2 long string map long v throw exception return new tuple2 v long to string v delta iteration tuple2 long string tuple2 long string it tuple iterate delta tuple datum set tuple2 long string body it get workset partition by range verify that range partition be not allow in iteration join it get solution set where equal to project first project second datum set tuple2 long string result it close with body body result collect should fail test public void test range partitioner on sequence datum with order throw exception final execution environment env execution environment get execution environment datum set tuple2 long long datum set env generate sequence map new map function long tuple2 long long override public tuple2 long long map long value throw exception return new tuple2 value value final tuple2 comparator long tuple2 comparator new tuple2 comparator new long comparator true new long comparator false min max selector tuple2 long long min max selector new min max selector tuple2 comparator final list tuple2 tuple2 long long tuple2 long long collect datum set partition by range with order order ascend order descend map partition min max selector collect collection sort collect new tuple2 comparator tuple2 comparator tuple2 long long previous max null for tuple2 tuple2 long long tuple2 long long tuple2 collect assert true min element in each partition should be smaller than max tuple2 comparator compare tuple2 f0 tuple2 f1 if previous max null previous max tuple2 f1 else assert true partition overlap previous max should be smaller than current min tuple2 comparator compare previous max tuple2 f0 if previous max f0 equal tuple2 f0 f0 check that order on the second key be correct assert equal order on the second field should be continous previous max f1 tuple2 f0 f1 long value previous max tuple2 f1 test public void test range partitioner on sequence nest datum with order throw exception final execution environment env execution environment get execution environment final datum set tuple2 tuple2 long long long datum set env generate sequence map new map function long tuple2 tuple2 long long long override public tuple2 tuple2 long long long map long value throw exception return new tuple2 new tuple2 value value value final tuple2 comparator long tuple2 comparator new tuple2 comparator new long comparator true new long comparator true min max selector tuple2 long long min max selector new min max selector tuple2 comparator final list tuple2 tuple2 long long tuple2 long long collect datum set partition by range with order order ascend map partition new map partition function tuple2 tuple2 long long long tuple2 long long override public void map partition iterable tuple2 tuple2 long long long value collector tuple2 long long out throw exception for tuple2 tuple2 long long long value value out collect value f0 map partition min max selector collect collection sort collect new tuple2 comparator tuple2 comparator tuple2 long long previous max null for tuple2 tuple2 long long tuple2 long long tuple2 collect assert true min element in each partition should be smaller than max tuple2 comparator compare tuple2 f0 tuple2 f1 if previous max null previous max tuple2 f1 else assert true partition overlap previous max should be smaller than current min tuple2 comparator compare previous max tuple2 f0 if previous max f0 equal tuple2 f0 f0 assert equal order on the second field should be continous previous max f1 tuple2 f0 f1 long value previous max tuple2 f1 test public void test range partitioner with key selector on sequence nest datum with order throw exception final execution environment env execution environment get execution environment final datum set tuple2 comparable pojo long datum set env generate sequence map new map function long tuple2 comparable pojo long override public tuple2 comparable pojo long map long value throw exception return new tuple2 new comparable pojo value value value final list tuple2 comparable pojo comparable pojo collect datum set partition by range new key selector tuple2 comparable pojo long comparable pojo override public comparable pojo get key tuple2 comparable pojo long value throw exception return value f0 with order order ascend map partition new min max selector new comparable pojo comparator map partition new extract comparable pojo collect final comparator tuple2 comparable pojo comparable pojo pojo comparator new comparator tuple2 comparable pojo comparable pojo override public int compare tuple2 comparable pojo comparable pojo o1 tuple2 comparable pojo comparable pojo o2 return o1 f0 compare to o2 f1 collection sort collect pojo comparator comparable pojo previous max null for tuple2 comparable pojo comparable pojo element collect assert true min element in each partition should be smaller than max element f0 compare to element f1 if previous max null previous max element f1 else assert true partition overlap previous max should be smaller than current min previous max compare to element f0 if previous max first equal element f0 first assert equal order on the second field should be continous previous max second element f0 second long value previous max element f1 private static class extract comparable pojo implement map partition function tuple2 tuple2 comparable pojo long tuple2 comparable pojo long tuple2 comparable pojo comparable pojo override public void map partition iterable tuple2 tuple2 comparable pojo long tuple2 comparable pojo long value collector tuple2 comparable pojo comparable pojo out throw exception for tuple2 tuple2 comparable pojo long tuple2 comparable pojo long value value out collect new tuple2 value f0 f0 value f1 f0 private static class comparable pojo comparator implement comparator tuple2 comparable pojo long serializable override public int compare tuple2 comparable pojo long o1 tuple2 comparable pojo long o2 return o1 f0 compare to o2 f0 private static class comparable pojo implement comparable comparable pojo private long first private long second public long get first return first public void set first long first this first first public long get second return second public void set second long second this second second public comparable pojo long first long second this first first this second second public comparable pojo override public int compare to comparable pojo o final int first result long compare this first o first if first result return long compare this second o second return first result private static class object self key selector implement key selector long long override public long get key long value throw exception return value private static class min max selector t implement map partition function t tuple2 t t private final comparator t comparator public min max selector comparator t comparator this comparator comparator override public void map partition iterable t value collector tuple2 t t out throw exception iterator t itr value iterator t min itr next t max min t value while itr have next value itr next if comparator compare value min min value if comparator compare value max max value tuple2 t t result new tuple2 min max out collect result private static class tuple2 comparator t implement comparator tuple2 t t serializable private final comparator t first comparator private final comparator t second comparator public tuple2 comparator comparator t comparator this comparator comparator public tuple2 comparator comparator t first comparator comparator t second comparator this first comparator first comparator this second comparator second comparator override public int compare tuple2 t t first tuple2 t t second long result first comparator compare first f0 second f0 if result return else if result return result second comparator compare first f1 second f1 if result return else if result return return private static class long comparator implement comparator long serializable private final boolean ascend public long comparator boolean ascend this ascend ascend override public int compare long o1 long o2 if ascend return long compare o1 o2 else return long compare o1 o2 
reduce i t case suppress warning serial run with parameterized class public class reduce i t case extend multiple program test base public reduce i t case test execution mode mode super mode test public void test reduce on tuple with key field selector throw exception reduce on tuple with key field selector final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by reduce new tuple3 reduce b list tuple3 integer long string result reduce d collect string expect 1,1 hi n 5,2 b n 15,3 b n 34,4 b n 65,5 b n 111,6 b n compare result as tuple result expect test public void test reduce on tuple with multiple key field selector throw exception reduce on tuple with multiple key field selector final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long reduce d d group by reduce in1 in2 tuple5 integer long integer string long out new tuple5 out set field in1 f0 in1 f1 in2 f1 p in1 f4 return out list tuple5 integer long integer string long result reduce d collect string expect 1,1 hallo n 2,3 hallo welt wie n 2,2 hallo welt n 3,9 p n 3,6 bcd n 4,17 p n 4,17 p n 5,11 ghi n 5,29 p n 5,25 p n compare result as tuple result expect test public void test reduce on tuple with key extractor throw exception reduce on tuple with key extractor final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by new key selector1 reduce new tuple3 reduce b list tuple3 integer long string result reduce d collect string expect 1,1 hi n 5,2 b n 15,3 b n 34,4 b n 65,5 b n 111,6 b n compare result as tuple result expect private static class key selector1 implement key selector tuple3 integer long string long private static final long serial version u i d 1 l override public long get key tuple3 integer long string in return in f1 test public void test reduce on custom type with key extractor throw exception reduce on custom type with key extractor final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type reduce d d group by new key selector2 reduce new custom type reduce list custom type result reduce d collect string expect 1,0 hi n 2,3 hello n 3,12 hello n 4,30 hello n 5,60 hello n 6,105 hello n compare result as text result expect private static class key selector2 implement key selector custom type integer private static final long serial version u i d 1 l override public integer get key custom type in return in my int test public void test all reduce for tuple throw exception all reduce for tuple final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d reduce new all add tuple3 reduce list tuple3 integer long string result reduce d collect string expect 231,91 hello world n compare result as tuple result expect test public void test all reduce for custom type throw exception all reduce for custom type final execution environment env execution environment get execution environment datum set custom type d collection data set get custom type datum set env datum set custom type reduce d d reduce new all add custom type reduce list custom type result reduce d collect string expect 91,210 hello compare result as text result expect test public void test reduce with broadcast set throw exception reduce with broadcast set final execution environment env execution environment get execution environment datum set integer int d collection data set get integer datum set env datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string reduce d d group by reduce new b c tuple3 reduce with broadcast set int d int list tuple3 integer long string result reduce d collect string expect 1,1 hi n 5,2 n 15,3 n 34,4 n 65,5 n 111,6 n compare result as tuple result expect test public void test reduce a tuple return key selector throw exception reduce with a tuple return key selector final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long reduce d d group by new key selector3 reduce new tuple5 reduce list tuple5 integer long integer string long result reduce d collect string expect 1,1 hallo n 2,3 hallo welt wie n 2,2 hallo welt n 3,9 p n 3,6 bcd n 4,17 p n 4,17 p n 5,11 ghi n 5,29 p n 5,25 p n compare result as tuple result expect private static class key selector3 implement key selector tuple5 integer long integer string long tuple2 integer long private static final long serial version u i d 1 l override public tuple2 integer long get key tuple5 integer long integer string long t return new tuple2 integer long t f0 t f4 test public void test reduce on tuple with multiple key expression throw exception case with string base field expression final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long reduce d d group by f4 f0 reduce new tuple5 reduce list tuple5 integer long integer string long result reduce d collect string expect 1,1 hallo n 2,3 hallo welt wie n 2,2 hallo welt n 3,9 p n 3,6 bcd n 4,17 p n 4,17 p n 5,11 ghi n 5,29 p n 5,25 p n compare result as tuple result expect test public void test reduce on tuple with multiple key expression with hash hint throw exception case with string base field expression final execution environment env execution environment get execution environment datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env datum set tuple5 integer long integer string long reduce d d group by f4 f0 reduce new tuple5 reduce set combine hint combine hint hash list tuple5 integer long integer string long result reduce d collect string expect 1,1 hallo n 2,3 hallo welt wie n 2,2 hallo welt n 3,9 p n 3,6 bcd n 4,17 p n 4,17 p n 5,11 ghi n 5,29 p n 5,25 p n compare result as tuple result expect test public void test support for datum and enum serialization throw exception test support for date and enum serialization final execution environment env execution environment get execution environment datum set pojo with date and enum d env generate sequence map new mapper1 d d union collection data set get pojo with date and enum env datum set string re d group by group reduce group new group reducer1 list string result re collect string expect ok nok compare result as text result expect private static class mapper1 implement map function long pojo with date and enum override public pojo with date and enum map long value throw exception int l value int value switch l case pojo with date and enum one new pojo with date and enum one group a one date new date one cat collection datum set category cat a return one case pojo with date and enum two new pojo with date and enum two group a two date new date two cat collection datum set category cat a return two case pojo with date and enum three new pojo with date and enum three group b three date new date three cat collection datum set category cat b return three throw new runtime exception unexpected value for l l private static class group reducer1 implement group reduce function collection datum set pojo with date and enum string private static final long serial version u i d 1 l override public void reduce iterable pojo with date and enum value collector string out throw exception for pojo with date and enum val value if val cat collection datum set category cat a assert assert equal a val group else if val cat collection datum set category cat b assert assert equal b val group else assert fail error cat val cat assert assert equal val date get time out collect ok private static class tuple3 reduce implement reduce function tuple3 integer long string private static final long serial version u i d 1 l private final tuple3 integer long string out new tuple3 integer long string private final string f2 replace public tuple3 reduce this f2 replace null public tuple3 reduce string f2 replace this f2 replace f2 replace override public tuple3 integer long string reduce tuple3 integer long string in1 tuple3 integer long string in2 throw exception if f2 replace null out set field in1 f0 in2 f0 in1 f1 in1 f2 else out set field in1 f0 in2 f0 in1 f1 this f2 replace return out private static class tuple5 reduce implement reduce function tuple5 integer long integer string long private static final long serial version u i d 1 l private final tuple5 integer long integer string long out new tuple5 integer long integer string long override public tuple5 integer long integer string long reduce tuple5 integer long integer string long in1 tuple5 integer long integer string long in2 throw exception out set field in1 f0 in1 f1 in2 f1 p in1 f4 return out private static class custom type reduce implement reduce function custom type private static final long serial version u i d 1 l private final custom type out new custom type override public custom type reduce custom type in1 custom type in2 throw exception out my int in1 my int out my long in1 my long in2 my long out my string hello return out private static class all add tuple3 reduce implement reduce function tuple3 integer long string private static final long serial version u i d 1 l private final tuple3 integer long string out new tuple3 integer long string override public tuple3 integer long string reduce tuple3 integer long string in1 tuple3 integer long string in2 throw exception out set field in1 f0 in2 f0 in1 f1 in2 f1 hello world return out private static class all add custom type reduce implement reduce function custom type private static final long serial version u i d 1 l private final custom type out new custom type override public custom type reduce custom type in1 custom type in2 throw exception out my int in1 my int in2 my int out my long in1 my long in2 my long out my string hello return out private static class b c tuple3 reduce extend rich reduce function tuple3 integer long string private static final long serial version u i d 1 l private final tuple3 integer long string out new tuple3 integer long string private string f2 replace override public void open configuration config collection integer int this get runtime context get broadcast variable int int sum for integer i int sum i f2 replace sum override public tuple3 integer long string reduce tuple3 integer long string in1 tuple3 integer long string in2 throw exception out set field in1 f0 in2 f0 in1 f1 this f2 replace return out 
reduce with combiner i t case suppress warning serial run with parameterized class public class reduce with combiner i t case extend multiple program test base public reduce with combiner i t case test execution mode mode super test execution mode cluster test public void test reduce on non key dataset throw exception final execution environment env execution environment get execution environment env set parallelism create the input datum and distribute they evenly among the available downstream task datum set tuple2 integer boolean input create non key input env list tuple2 integer boolean actual input reduce group new non key comb reducer collect string expect true n compare result as tuple actual expected test public void test fork reduce on non key dataset throw exception set up the execution environment final execution environment env execution environment get execution environment env set parallelism create the input datum and distribute they evenly among the available downstream task datum set tuple2 integer boolean input create non key input env datum set tuple2 integer boolean r1 input reduce group new non key comb reducer datum set tuple2 integer boolean r2 input reduce group new non key group comb reducer list tuple2 integer boolean actual r1 union r2 collect string expect true n10 true n compare result as tuple actual expected test public void test reduce on keyed dataset throw exception set up the execution environment final execution environment env execution environment get execution environment env set parallelism create the input datum and distribute they evenly among the available downstream task datum set tuple3 string integer boolean input create key input env list tuple3 string integer boolean actual input group by reduce group new keyed comb reducer collect string expect k1 true nk2 true n compare result as tuple actual expected test public void test reduce on keyed dataset with selector throw exception set up the execution environment final execution environment env execution environment get execution environment env set parallelism create the input datum and distribute they evenly among the available downstream task datum set tuple3 string integer boolean input create key input env list tuple3 string integer boolean actual input group by new key selector x reduce group new keyed comb reducer collect string expect k1 true nk2 true n compare result as tuple actual expected test public void test fork reduce on keyed dataset throw exception final execution environment env execution environment get execution environment env set parallelism create the input datum and distribute they evenly among the available downstream task datum set tuple3 string integer boolean input create key input env unsorted grouping tuple3 string integer boolean count input group by datum set tuple3 string integer boolean r1 count reduce group new keyed comb reducer datum set tuple3 string integer boolean r2 count reduce group new keyed group comb reducer list tuple3 string integer boolean actual r1 union r2 collect string expect k1 true n k2 true n k1 true n k2 true n compare result as tuple actual expected test public void test fork reduce on keyed dataset with selection throw exception final execution environment env execution environment get execution environment env set parallelism create the input datum and distribute they evenly among the available downstream task datum set tuple3 string integer boolean input create key input env unsorted grouping tuple3 string integer boolean count input group by new key selector x datum set tuple3 string integer boolean r1 count reduce group new keyed comb reducer datum set tuple3 string integer boolean r2 count reduce group new keyed group comb reducer list tuple3 string integer boolean actual r1 union r2 collect string expect k1 true n k2 true n k1 true n k2 true n compare result as tuple actual expected private datum set tuple2 integer boolean create non key input execution environment env return env from collection array as list new tuple2 false new tuple2 false new tuple2 false new tuple2 false new tuple2 false new tuple2 false new tuple2 false new tuple2 false new tuple2 false new tuple2 false rebalance private static class non key comb reducer implement combine function tuple2 integer boolean tuple2 integer boolean group reduce function tuple2 integer boolean tuple2 integer boolean override public tuple2 integer boolean combine iterable tuple2 integer boolean value throw exception int sum boolean flag true for tuple2 integer boolean tuple value sum tuple f0 flag tuple f1 return new tuple2 sum flag override public void reduce iterable tuple2 integer boolean value collector tuple2 integer boolean out throw exception int sum boolean flag true for tuple2 integer boolean tuple value sum tuple f0 flag tuple f1 out collect new tuple2 sum flag private static class non key group comb reducer implement group combine function tuple2 integer boolean tuple2 integer boolean group reduce function tuple2 integer boolean tuple2 integer boolean override public void reduce iterable tuple2 integer boolean value collector tuple2 integer boolean out throw exception int sum boolean flag true for tuple2 integer boolean tuple value sum tuple f0 flag tuple f1 out collect new tuple2 sum flag override public void combine iterable tuple2 integer boolean value collector tuple2 integer boolean out throw exception int sum boolean flag true for tuple2 integer boolean tuple value sum tuple f0 flag tuple f1 out collect new tuple2 sum flag private datum set tuple3 string integer boolean create keyed input execution environment env return env from collection array as list new tuple3 k1 false new tuple3 k1 false new tuple3 k1 false new tuple3 k2 false new tuple3 k1 false new tuple3 k1 false new tuple3 k2 false new tuple3 k2 false new tuple3 k1 false new tuple3 k2 false rebalance private static class key selector x implement key selector tuple3 string integer boolean string private static final long serial version u i d 1 l override public string get key tuple3 string integer boolean in return in f0 private class key comb reducer implement combine function tuple3 string integer boolean tuple3 string integer boolean group reduce function tuple3 string integer boolean tuple3 string integer boolean override public tuple3 string integer boolean combine iterable tuple3 string integer boolean value throw exception string key null int sum boolean flag true for tuple3 string integer boolean tuple value key key null tuple f0 key sum tuple f1 flag tuple f2 return new tuple3 key sum flag override public void reduce iterable tuple3 string integer boolean value collector tuple3 string integer boolean out throw exception string key null int sum boolean flag true for tuple3 string integer boolean tuple value key key null tuple f0 key sum tuple f1 flag tuple f2 out collect new tuple3 key sum flag private class key group comb reducer implement group combine function tuple3 string integer boolean tuple3 string integer boolean group reduce function tuple3 string integer boolean tuple3 string integer boolean override public void combine iterable tuple3 string integer boolean value collector tuple3 string integer boolean out throw exception string key null int sum boolean flag true for tuple3 string integer boolean tuple value key key null tuple f0 key sum tuple f1 flag tuple f2 out collect new tuple3 key sum flag override public void reduce iterable tuple3 string integer boolean value collector tuple3 string integer boolean out throw exception string key null int sum boolean flag true for tuple3 string integer boolean tuple value key key null tuple f0 key sum tuple f1 flag tuple f2 out collect new tuple3 key sum flag 
replicate datum source i t case run with parameterized class public class replicate datum source i t case extend multiple program test base public replicate datum source i t case test execution mode mode super mode test public void test replicate source to join throw exception test replicate source go into join final execution environment env execution environment get execution environment datum set tuple1 long source1 env create input new replicate input format long generic input split new parallel iterator input format long new number sequence iterator 0 l l basic type info long type info map new to tuple datum set tuple1 long source2 env generate sequence 0 l l map new to tuple datum set tuple pair source1 join source2 where equal to project first sum list tuple result pair collect string expected result compare result as text result expect result test public void test replicate source to cross throw exception test replicate source go into cross final execution environment env execution environment get execution environment datum set tuple1 long source1 env create input new replicate input format long generic input split new parallel iterator input format long new number sequence iterator 0 l l basic type info long type info map new to tuple datum set tuple1 long source2 env generate sequence 0 l l map new to tuple datum set tuple1 long pair source1 cross source2 filter new filter function tuple2 tuple1 long tuple1 long override public boolean filter tuple2 tuple1 long tuple1 long value throw exception return value f0 f0 equal value f1 f0 map new map function tuple2 tuple1 long tuple1 long tuple1 long override public tuple1 long map tuple2 tuple1 long tuple1 long value throw exception return value f0 sum list tuple1 long result pair collect string expected result compare result as text result expect result private static class to tuple implement map function long tuple1 long override public tuple1 long map long value throw exception return new tuple1 long value 
sample i t case suppress warning serial run with parameterized class public class sample i t case extend multiple program test base private static final random rng new random public sample i t case test execution mode mode super mode before public void initiate execution environment get execution environment set parallelism test public void test sampler with fraction without replacement throw exception verify sampler with fraction without replacement 0d verify sampler with fraction without replacement 0.2 d verify sampler with fraction without replacement 1.0 d test public void test sampler with fraction with replacement throw exception verify sampler with fraction with replacement 0d verify sampler with fraction with replacement 0.2 d verify sampler with fraction with replacement 1.0 d verify sampler with fraction with replacement 2.0 d test public void test sampler with size without replacement throw exception verify sampler with fix size without replacement verify sampler with fix size without replacement verify sampler with fix size without replacement test public void test sampler with size with replacement throw exception verify sampler with fix size with replacement verify sampler with fix size with replacement verify sampler with fix size with replacement private void verify sampler with fraction without replacement double fraction throw exception verify sampler with fraction without replacement fraction rng next long private void verify sampler with fraction without replacement double fraction long seed throw exception verify sampler with fraction false fraction seed private void verify sampler with fraction with replacement double fraction throw exception verify sampler with fraction with replacement fraction rng next long private void verify sampler with fraction with replacement double fraction long seed throw exception verify sampler with fraction true fraction seed private void verify sampler with fraction boolean with replacement double fraction long seed throw exception final execution environment env execution environment get execution environment flat map operator tuple3 integer long string string d get source datum set env map partition operator string string sample datum set util sample d with replacement fraction seed list string result sample collect contain result as text result get source string private void verify sampler with fix size without replacement int num sample throw exception verify sampler with fix size without replacement num sample rng next long private void verify sampler with fix size without replacement int num sample long seed throw exception verify sampler with fix size false num sample seed private void verify sampler with fix size with replacement int num sample throw exception verify sampler with fix size with replacement num sample rng next long private void verify sampler with fix size with replacement int num sample long seed throw exception verify sampler with fix size true num sample seed private void verify sampler with fix size boolean with replacement int num sample long seed throw exception final execution environment env execution environment get execution environment flat map operator tuple3 integer long string string d get source datum set env datum set string sample datum set util sample with size d with replacement num sample seed list string result sample collect assert equal num sample result size contain result as text result get source string private flat map operator tuple3 integer long string string get source datum set execution environment env return collection data set get3 tuple datum set env flat map new flat map function tuple3 integer long string string override public void flat map tuple3 integer long string value collector string out throw exception out collect value f2 private string get source string return hi n hello n hello world n hello world how be you n i be fine n luke skywalker n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n comment n 
sort partition i t case run with parameterized class public class sort partition i t case extend multiple program test base public sort partition i t case test execution mode mode super mode test public void test sort partition by key field throw exception test sort partition on key field final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env list tuple1 boolean result d map new id mapper tuple3 integer long string set parallelism parallelize input sort partition order descend map partition new order check mapper new tuple3 checker distinct collect string expect true n compare result as text result expect test public void test sort partition by two key field throw exception test sort partition on two key field final execution environment env execution environment get execution environment env set parallelism datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env list tuple1 boolean result d map new id mapper tuple5 integer long integer string long set parallelism parallelize input sort partition order ascend sort partition order descend map partition new order check mapper new tuple5 checker distinct collect string expect true n compare result as text result expect suppress warning rawtype unchecked test public void test sort partition by field expression throw exception test sort partition on field expression final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env list tuple1 boolean result d map new id mapper set parallelism parallelize input sort partition f1 order descend map partition new order check mapper new tuple3 checker distinct collect string expect true n compare result as text result expect test public void test sort partition by two field expression throw exception test sort partition on two field expression final execution environment env execution environment get execution environment env set parallelism datum set tuple5 integer long integer string long d collection data set get5 tuple datum set env list tuple1 boolean result d map new id mapper tuple5 integer long integer string long set parallelism parallelize input sort partition f4 order ascend sort partition f2 order descend map partition new order check mapper new tuple5 checker distinct collect string expect true n compare result as text result expect test public void test sort partition by nest field expression throw exception test sort partition on nest field expression final execution environment env execution environment get execution environment env set parallelism datum set tuple2 tuple2 integer integer string d collection data set get group sort nest tuple datum set env list tuple1 boolean result d map new id mapper tuple2 tuple2 integer integer string set parallelism parallelize input sort partition f0 f1 order ascend sort partition f1 order descend map partition new order check mapper new nest tuple checker distinct collect string expect true n compare result as text result expect test public void test sort partition pojo by nest field expression throw exception test sort partition on field expression final execution environment env execution environment get execution environment env set parallelism datum set pojo d collection data set get mixed pojo datum set env list tuple1 boolean result d map new id mapper pojo set parallelism parallelize input sort partition nest tuple with custom f1 my string order ascend sort partition number order descend map partition new order check mapper new pojo checker distinct collect string expect true n compare result as text result expect test public void test sort partition parallelism change throw exception test sort partition with parallelism change final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env list tuple1 boolean result d sort partition order descend set parallelism change parallelism map partition new order check mapper new tuple3 checker distinct collect string expect true n compare result as text result expect test public void test sort partition with key selector1 throw exception test sort partition on a extract key final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env list tuple1 boolean result d map new id mapper tuple3 integer long string set parallelism parallelize input sort partition new key selector tuple3 integer long string long override public long get key tuple3 integer long string value throw exception return value f1 order ascend map partition new order check mapper new tuple3 ascend checker distinct collect string expect true n compare result as text result expect test public void test sort partition with key selector2 throw exception test sort partition on a extract key final execution environment env execution environment get execution environment env set parallelism datum set tuple3 integer long string d collection data set get3 tuple datum set env list tuple1 boolean result d map new id mapper tuple3 integer long string set parallelism parallelize input sort partition new key selector tuple3 integer long string tuple2 integer long override public tuple2 integer long get key tuple3 integer long string value throw exception return new tuple2 value f0 value f1 order descend map partition new order check mapper new tuple3 checker distinct collect string expect true n compare result as text result expect private interface order checker t extend serializable boolean in order t t1 t t2 suppress warning serial private static class tuple3 checker implement order checker tuple3 integer long string override public boolean in order tuple3 integer long string t1 tuple3 integer long string t2 return t1 f1 t2 f1 suppress warning serial private static class tuple3 ascend checker implement order checker tuple3 integer long string override public boolean in order tuple3 integer long string t1 tuple3 integer long string t2 return t1 f1 t2 f1 suppress warning serial private static class tuple5 checker implement order checker tuple5 integer long integer string long override public boolean in order tuple5 integer long integer string long t1 tuple5 integer long integer string long t2 return t1 f4 t2 f4 t1 f4 equal t2 f4 t1 f2 t2 f2 suppress warning serial private static class nest tuple checker implement order checker tuple2 tuple2 integer integer string override public boolean in order tuple2 tuple2 integer integer string t1 tuple2 tuple2 integer integer string t2 return t1 f0 f1 t2 f0 f1 t1 f0 f1 equal t2 f0 f1 t1 f1 compare to t2 f1 suppress warning serial private static class pojo checker implement order checker pojo override public boolean in order pojo t1 pojo t2 return t1 nest tuple with custom f1 my string compare to t2 nest tuple with custom f1 my string t1 nest tuple with custom f1 my string compare to t2 nest tuple with custom f1 my string t1 number t2 number suppress warning unused serial private static class order check mapper t implement map partition function t tuple1 boolean order checker t checker public order check mapper public order check mapper order checker t checker this checker checker override public void map partition iterable t value collector tuple1 boolean out throw exception iterator t it value iterator if it have next out collect new tuple1 true else t last it next while it have next t next it next if checker in order last next out collect new tuple1 false return last next out collect new tuple1 true suppress warning serial private static class id mapper t implement map function t t override public t map t value throw exception return value 
sum min max i t case run with parameterized class public class sum min max i t case extend multiple program test base public sum min max i t case test execution mode mode super mode test public void test sum max and project throw exception final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 integer long sum d d sum and max project list tuple2 integer long result sum d collect string expect 231,6 n compare result as tuple result expect test public void test group aggregate throw exception group aggregate final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple2 long integer aggregate d d group by sum project list tuple2 long integer result aggregate d collect string expect 1,1 n 2,5 n 3,15 n 4,34 n 5,65 n 6,111 n compare result as tuple result expect test public void test nest aggregate throw exception nest aggregate final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple1 integer aggregate d d group by min min project list tuple1 integer result aggregate d collect string expect n compare result as tuple result expect 
union i t case run with parameterized class public class union i t case extend multiple program test base private static final string full tuple string 1,1 hi n 2,2 hello n 3,2 hello world n 4,3 hello world how be you n 5,3 i be fine n 6,3 luke skywalker n 7,4 comment n 8,4 comment n 9,4 comment n 10,4 comment n 11,5 comment n 12,5 comment n 13,5 comment n 14,5 comment n 15,5 comment n 16,6 comment n 17,6 comment n 18,6 comment n 19,6 comment n 20,6 comment n 21,6 comment n public union i t case test execution mode mode super mode test public void test union2 identical data set throw exception union of same datum set final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string union d d union collection data set get3 tuple datum set env list tuple3 integer long string result union d collect string expect full tuple string full tuple string compare result as tuple result expect test public void test union5 identical data set throw exception union of same datum set with multiple union final execution environment env execution environment get execution environment datum set tuple3 integer long string d collection data set get3 tuple datum set env datum set tuple3 integer long string union d d union collection data set get3 tuple datum set env union collection data set get3 tuple datum set env union collection data set get3 tuple datum set env union collection data set get3 tuple datum set env list tuple3 integer long string result union d collect string expect full tuple string full tuple string full tuple string full tuple string full tuple string compare result as tuple result expect test public void test union with empty datum set throw exception test on union with empty dataset final execution environment env execution environment get execution environment don t know how to make a empty result in a other way than filter it datum set tuple3 integer long string empty collection datum set get3 tuple datum set env filter new rich filter1 datum set tuple3 integer long string union d collection data set get3 tuple datum set env union empty list tuple3 integer long string result union d collect string expect full tuple string compare result as tuple result expect private static class rich filter1 extend rich filter function tuple3 integer long string private static final long serial version u i d 1 l override public boolean filter tuple3 integer long string value throw exception return false 
job manager h a process failure recovery i t case suppress warning serial run with parameterized class public class job manager h a process failure recovery i t case extend test logger private static zoo keeper test environment zoo keeper private static final duration test timeout duration of minute rule public final temporary folder temporary folder new temporary folder before class public static void setup zoo keeper new zoo keeper test environment before public void clean up throw exception zoo keeper delete all after class public static void tear down throw exception if zoo keeper null zoo keeper shutdown protect static final string ready marker file prefix ready protect static final string finish marker file prefix finish protect static final string proceed marker file proceed protect static final int parallelism parametrization run pipelined and batch private final execution mode execution mode public job manager h a process failure recovery i t case execution mode execution mode this execution mode execution mode parameterized parameter name execution mode public static collection object execution mode return array as list new object execution mode pipelined execution mode batch test program with job manager failure param zk quorum zoo keeper quorum to connect to param coordinate dir coordination directory throw exception private void test job manager failure string zk quorum final file coordinate dir final file zookeeper storage path throw exception configuration config new configuration config set string high availability option ha mode zookeeper config set string high availability option ha zookeeper quorum zk quorum config set string high availability option ha storage path zookeeper storage path get absolute path execution environment env execution environment create remote environment leader config env set parallelism parallelism env set restart strategy restart strategy fix delay restart 0 l env get config set execution mode execution mode final long num element l final datum set long result env generate sequence num element make sure every mapper be involve no one be skip because of lazy split assignment rebalance the majority of the behavior be in the map function map new rich map function long long private final file proceed file new file coordinate dir proceed marker file private boolean marker create false private boolean check for proceed file true override public long map long value throw exception if marker create int task index get runtime context get index of this subtask abstract task manager process failure recovery test touch file new file coordinate dir ready marker file prefix task index marker create true check if the proceed file exist if check for proceed file if proceed file exist check for proceed file false else otherwise wait so that we make slow progress thread sleep return value reduce new reduce function long override public long reduce long value1 long value2 return value1 value2 the check be do in the mapper because the client can currently not handle job manager loss reconnect flat map new rich flat map function long long override public void flat map long value collector long out throw exception assert equal num element num element 1 l 2 l long value int task index get runtime context get index of this subtask abstract task manager process failure recovery test touch file new file coordinate dir finish marker file prefix task index result output new discard output format long env execute test public void test dispatcher process failure throw exception final time timeout time seconds 30 l final file zookeeper storage path temporary folder new folder config final int number of job manager final int number of task manager final int number of slot per task manager assert equal parallelism number of task manager number of slot per task manager job manager final dispatcher process dispatcher process new dispatcher process number of job manager task manager task manager runner task manager runner new task manager runner number of task manager high availability service high availability service null leader retrieval service leader retrieval service null coordination between the process go through a directory file coordinate temp dir null cluster config configuration config zoo keeper test util create zoo keeper h a config zoo keeper get connect string zookeeper storage path get path task manager configuration config set task manager option manage memory size memory size parse 4m config set task manager option network memory min memory size parse k config set task manager option network memory max memory size parse k config set integer task manager option num task slot config set task manager option task heap memory memory size parse m config set task manager option cpu core 1.0 final rpc service rpc service akka rpc service util remote service builder config localhost create and start try final deadline deadline deadline from now test timeout coordination directory coordinate temp dir temporary folder new folder start first process dispatcher process new dispatcher process config dispatcher process start process high availability service high availability service util create available or embed service config testing util default executor final plugin manager plugin manager plugin util create plugin manager from root folder config start the task manager process for int i i number of task manager i task manager runner i new task manager runner config plugin manager task manager runner i start leader listener testing listener leader listener new testing listener leader retrieval service high availability service get dispatcher leader retriever leader retrieval service start leader listener initial submission leader listener wait for new leader deadline time leave to millis string leader address leader listener get address uuid leader id leader listener get leader session i d final completable future dispatcher gateway dispatcher gateway future rpc service connect leader address dispatcher id from uuid leader id dispatcher gateway class final dispatcher gateway dispatcher gateway dispatcher gateway future get wait for all task manager to connect to the lead job manager wait for task manager number of task manager dispatcher gateway deadline time leave final file coordinate dir closure coordinate temp dir final throwable error ref new throwable we trigger program execution in a separate thread thread program trigger new thread program trigger override public void run try test job manager failure zoo keeper get connect string coordinate dir closure zookeeper storage path catch throwable t t print stack trace error ref t start the test program program trigger start wait until all marker file be in place indicate that all task have start abstract task manager process failure recovery test wait for marker file coordinate temp dir ready marker file prefix parallelism deadline time leave to milli kill one of the job manager and trigger recovery dispatcher process destroy dispatcher process new dispatcher process config dispatcher process start process we create the marker file which signal the program function task that they can complete abstract task manager process failure recovery test touch file new file coordinate temp dir proceed marker file program trigger join deadline time leave to millis we wait for the finish marker file we don t wait for the program trigger because we submit in detach mode abstract task manager process failure recovery test wait for marker file coordinate temp dir finish marker file prefix deadline time leave to milli check that the program really finish assert false the program do not finish in time program trigger be alive check whether the program encounter a error if error ref null throwable error error ref error print stack trace fail the program encounter a error get class get simple name error get message catch throwable t print early in some situation the process log get too big for travis and the root problem be not show t print stack trace for dispatcher process p dispatcher process if p null p print process log throw t finally for int i i number of task manager i if task manager runner i null task manager runner i close if leader retrieval service null leader retrieval service stop for dispatcher process dispatcher process dispatcher process if dispatcher process null dispatcher process destroy if high availability service null high availability service close and cleanup all datum rpc util terminate rpc service rpc service timeout delete coordination directory if coordinate temp dir null try file util delete directory coordinate temp dir catch throwable ignore private void wait for task manager int number of task manager dispatcher gateway dispatcher gateway duration time leave throw execution exception interrupt exception future util retry successful with delay dispatcher gateway request cluster overview time millisecond time leave to millis time millisecond 50 l org apache flink api common time deadline from now duration of millis time leave to millis cluster overview cluster overview get num task manager connect number of task manager new schedule executor service adapter executor new single thread schedule executor get 
task manager process failure batch recovery i t case suppress warning serial run with parameterized class public class task manager process failure batch recovery i t case extend abstract task manager process failure recovery test parametrization run pipelined and batch private final execution mode execution mode public task manager process failure batch recovery i t case execution mode execution mode this execution mode execution mode parameterize parameter public static collection object execution mode return array as list new object execution mode pipelined execution mode batch test the program override public void test task manager failure configuration configuration final file coordinate dir throw exception execution environment env execution environment create remote environment localhost configuration env set parallelism parallelism env set restart strategy restart strategy fix delay restart 0 l env get config set execution mode execution mode final long num element l final datum set long result env generate sequence num element make sure every mapper be involve no one be skip because of lazy split assignment rebalance the majority of the behavior be in the map function map new rich map function long long private final file proceed file new file coordinate dir proceed marker file private boolean marker create false private boolean check for proceed file true override public long map long value throw exception if marker create int task index get runtime context get index of this subtask touch file new file coordinate dir ready marker file prefix task index marker create true check if the proceed file exist if check for proceed file if proceed file exist check for proceed file false else otherwise wait so that we make slow progress thread sleep return value reduce new reduce function long override public long reduce long value1 long value2 return value1 value2 long sum result collect get assert equal num element num element 1 l 2 l sum 
register type with kryo serializer i t case run with parameterized class public class register type with kryo serializer i t case extend multiple program test base public register type with kryo serializer i t case test execution mode mode super mode test whether the kryo serializer be forward via the execution config throw exception test public void test register type with kryo serializer throw exception int num element execution environment env execution environment get execution environment env register type with kryo serializer test class class new test class serializer datum set long input env generate sequence num element datum set test class map input map new map function long test class private static final long serial version u i d l override public test class map long value throw exception return new test class value list test class expect new array list num element for int i i num element i expect add new test class compare result collection expect map collect new comparator test class override public int compare test class o1 test class o2 return int o1 get value o2 get value static class test class private final long value private object obj new object public test class long value this value value public long get value return value override public string to string return test class value override public boolean equal object obj if obj instanceof test class test class other test class obj return value other value else return false override public int hash code return int value static class test class serializer extend serializer test class implement serializable private static final long serial version u i d l override public void write kryo kryo output output test class test class output write long override public test class read kryo kryo input input class test class a class return new test class input read long 
shuffle compression i t case run with parameterized class public class shuffle compression i t case private static final int num buffer to send private static final int buffer size private static final int byte per record we plus to guarantee that the last buffer contain no more than one record and can not be compress private static final int num record to send num buffer to send buffer size byte per record private static final int num taskmanager private static final int num slot private static final int parallelism num taskmanager num slot private static final long value record to send new long value l parameterize parameter public static boolean use broadcast partitioner false parameterized parameter name use broadcast partitioner public static boolean param return new boolean true false test public void test datum compression for block shuffle throw exception execute test create job graph schedule mode lazy from source result partition type block execution mode batch private void execute test job graph job graph throw exception configuration configuration new configuration configuration set task manager option total flink memory memory size parse 1g configuration set boolean netty shuffle environment option block shuffle compression enable true final mini cluster configuration mini cluster configuration new mini cluster configuration builder set configuration configuration set num task manager num taskmanager set num slot per task manager num slot build try mini cluster mini cluster new mini cluster mini cluster configuration mini cluster start mini cluster client mini cluster client new mini cluster client configuration mini cluster wait for the submission to succeed job i d job i d mini cluster client submit job job graph get completable future job result result future mini cluster client request job result job i would assert false result future get get serialize throwable be present private static job graph create job graph schedule mode schedule mode result partition type result partition type execution mode execution mode throw i o exception slot sharing group slot sharing group new slot sharing group job vertex source new job vertex source source set invokable class long value source class source set parallelism parallelism source set slot sharing group slot sharing group job vertex sink new job vertex sink sink set invokable class result verify sink class sink set parallelism parallelism sink set slot sharing group slot sharing group sink connect new datum set as input source distribution pattern all to all result partition type job graph job graph new job graph source sink job graph set schedule mode schedule mode execution config execution config new execution config execution config set execution mode execution mode job graph set execution config execution config return job graph test source that emit link long value to downstream public static final class long value source extend abstract invokable public long value source environment environment super environment override public void invoke throw exception result partition writer result partition writer get environment get writer record writer builder long value record writer builder new record writer builder if get environment get execution config get execution mode execution mode pipelined enable output flush for pipeline mode record writer builder set timeout if use broadcast partitioner record writer builder set channel selector new broadcast partitioner record writer long value writer record writer builder build result partition writer for int i i num record to send i writer broadcast emit record to send writer flush all writer clear buffer test sink that receive link long value and verify the receive record public static final class result verify sink extend abstract invokable public result verify sink environment environment super environment override public void invoke throw exception mutable record reader long value reader new mutable record reader get environment get input gate new string environment information get temporary file directory long value value new long value for int i i parallelism num record to send i reader next value assert equal record to send get value value get value 
abstract keyed operator restore test base run with parameterized class public abstract class abstract keyed operator restore test base extend abstract operator restore test base private final migration version migration version parameterize parameter name migrate savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 public abstract keyed operator restore test base migration version migration version this migration version migration version override public void create migration job stream execution environment env source key by c window stateful map1 stateful map2 single output stream operator tuple2 integer integer source key job create integer tuple source env execution mode migrate single output stream operator integer window key job create window function execution mode migrate source single output stream operator integer first keyed job create first stateful map execution mode migrate window single output stream operator integer second keyed job create second stateful map execution mode migrate first override protect string get migration savepoint name return complex keyed flink migration version 
stream operator snapshot restore test run with parameterized class public class stream operator snapshot restore test extend test logger private static final int only jm recovery private static final int tm and jm recovery private static final int tm remove jm recovery private static final int jm remove tm recovery private static final int max parallelism protect static temporary folder temporary folder parameterize parameter public state backend enum state backend enum enum state backend enum file rocksdb fully async rocksdb incremental parameterized parameter name statebackend type public static collection state backend enum parameter return array as list state backend enum value before class public static void before class throw i o exception temporary folder new temporary folder temporary folder create after class public static void after class temporary folder delete test restore a operator from a snapshot local recovery deactivate test public void test operator state snapshot restore throw exception test operator state snapshot restore internal only jm recovery test restore a operator from a snapshot local recovery activate test public void test operator state snapshot restore with local state throw exception test operator state snapshot restore internal tm and jm recovery test restore a operator from a snapshot local recovery activate jm snapshot delete p this case do not really simulate a practical scenario but we make sure that restore happen from the local state here because we discard the jm state test public void test operator state snapshot restore with local state delete j m throw exception test operator state snapshot restore internal tm remove jm recovery test restore a operator from a snapshot local recovery activate local tm snapshot delete p this test discard the local state to simulate corruption and check that we still recover from the fallback jm state test public void test operator state snapshot restore with local state delete t m throw exception test operator state snapshot restore internal jm remove tm recovery private void test operator state snapshot restore internal final int mode throw exception snapshot state backend state backend f state backend fsstate backend create state backend internal switch state backend enum case file state backend fsstate backend break case rocksdb fully async state backend new rock d b state backend fsstate backend false break case rocksdb incremental state backend new rock d b state backend fsstate backend true break default throw new illegal state exception string format do not support statebackend type s state backend enum test one input stream operator op new test one input stream operator false job i d job i d new job i d job vertex i d job vertex i d new job vertex i d int subtask idx local recovery directory provider directory provider new local recovery directory provider impl temporary folder new folder job i d job vertex i d subtask idx local recovery config local recovery config new local recovery config mode only jm recovery directory provider mock environment mock environment new mock environment builder set job i d job i d set job vertex i d job vertex i d set task name test set manage memory size l l set input split provider new mock input split provider set buffer size set task state manager new test task state manager local recovery config set max parallelism max parallelism set subtask index subtask idx set user code class loader get class get class loader build key one input stream operator test harness integer integer integer test harness new keyed one input stream operator test harness op key selector integer integer value value type information of integer class mock environment test harness set state backend state backend test harness open for int i i i test harness process element new stream record i operator snapshot finalizer snapshot with local state test harness snapshot with local state 1 l 1 l test harness close restore op new test one input stream operator true test harness new keyed one input stream operator test harness integer integer integer op key selector integer integer value value type information of integer class max parallelism num subtask subtask index override protect stream task state initializer create stream task state manager environment env state backend state backend ttl time provider ttl time provider return new stream task state initializer impl env state backend override protect k internal time service manager k internal time service manager abstract key state backend k keyed state backend key context key context processing time service processing time service iterable key group state partition stream provider raw keyed state throw exception return null test harness set state backend state backend operator subtask state job manager own state snapshot with local state get job manager own state operator subtask state task local state snapshot with local state get task local state we check if local state be create when we enable local recovery assert assert true mode only jm recovery task local state null task local state have state if mode tm remove jm recovery job manager own state get manage keyed state discard state else if mode jm remove tm recovery task local state get manage keyed state discard state test harness initialize state job manager own state task local state test harness open for int i i i test harness process element new stream record i test harness close private f state backend create state backend internal throw i o exception file checkpoint dir temporary folder new folder return new f state backend checkpoint dir to u be i static class test one input stream operator extend abstract stream operator integer implement one input stream operator integer integer private static final long serial version u i d l test one input stream operator boolean verify restore this verify restore verify restore private boolean verify restore private value state integer key state private list state integer op state override public void process element stream record integer element throw exception if verify restore check restore manage key state long exp element get value long act key state value assert assert equal exp act else write manage key state that go into snapshot key state update element get value write manage operator state that go into snapshot op state add element get value override public void process watermark watermark mark override public void snapshot state state snapshot context context throw exception key state checkpoint output stream out context get raw keyed operator state output datum output view dov new datum output view stream wrapper out write raw key state that go into snapshot int count for int kg out get key group list out start new key group kg dov write int kg count assert assert equal max parallelism count write raw operator state that go into snapshot operator state checkpoint output stream out op context get raw operator state output dov new datum output view stream wrapper out op for int i i i out op start new partition dov write int i override public void initialize state state initialization context context throw exception assert assert equal verify restore context be restore key state context get key state store get state new value state descriptor manage keyed integer class op state context get operator state store get list state new list state descriptor manage op state int serializer instance if context be restore check restore raw key state int count for key group state partition stream provider stream provider context get raw key state input try input stream in stream provider get stream datum input view div new datum input view stream wrapper in assert assert equal stream provider get key group id div read int count assert assert equal max parallelism count check restore manage operator state bit set check new bit set for int v op state get check set v assert assert equal check cardinality check restore raw operator state check new bit set for state partition stream provider stream provider context get raw operator state input try input stream in stream provider get stream datum input view div new datum input view stream wrapper in check set div read int assert assert equal check cardinality 
abstract non key operator restore test base run with parameterized class public abstract class abstract non key operator restore test base extend abstract operator restore test base private final migration version migration version parameterize parameter name migrate savepoint public static collection migration version parameter return array as list migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 migration version v1 protect abstract non key operator restore test base migration version migration version this migration version migration version protect abstract non key operator restore test base migration version migration version boolean allow non restore state super allow non restore state this migration version migration version override public void create migration job stream execution environment env source stateful map1 chain stateful map2 map stateful map3 datum stream integer source create source env execution mode migrate single output stream operator integer first create first stateful map execution mode migrate source first start new chain single output stream operator integer second create second stateful map execution mode migrate first second start new chain single output stream operator integer stateless create stateless map second single output stream operator integer third create third stateful map execution mode migrate stateless override protect string get migration savepoint name return non key flink migration version 
stream task timer i t case run with parameterized class public class stream task timer i t case extend abstract test base private final time characteristic time characteristic public stream task timer i t case time characteristic characteristic time characteristic characteristic note this test fail if we don t check for exception in the source context and do not synchronize in the source context test public void test operator chain to source throw exception stream execution environment env stream execution environment get execution environment env set stream time characteristic time characteristic env set parallelism datum stream string source env add source new infinite test source source transform custom operator basic type info string type info new timer operator chain strategy always try env execute timer test catch job execution exception e verify job execution exception e private void verify job execution exception job execution exception e throw job execution exception final optional timer exception optional timer exception exception util find throwable e timer exception class assert true optional timer exception be present timer exception te optional timer exception get if te get cause instanceof runtime exception runtime exception re runtime exception te get cause if re get message equal test success throw e else throw e note this test fail if we don t check for exception in the source context and do not synchronize in the source context test public void test one input operator without chain throw exception stream execution environment env stream execution environment get execution environment env set stream time characteristic time characteristic env set parallelism datum stream string source env add source new infinite test source source transform custom operator basic type info string type info new timer operator chain strategy never try env execute timer test catch job execution exception e verify job execution exception e test public void test two input operator without chain throw exception stream execution environment env stream execution environment get execution environment env set stream time characteristic time characteristic env set parallelism datum stream string source env add source new infinite test source source connect source transform custom operator basic type info string type info new two input timer operator chain strategy never try env execute timer test catch job execution exception e verify job execution exception e private static class timer operator extend abstract stream operator string implement one input stream operator string string processing time callback private static final long serial version u i d 1 l int num timer int num element private boolean first true private semaphore semaphore new semaphore public timer operator chain strategy chain strategy set chain strategy chain strategy override public void process element stream record string element throw exception if semaphore try acquire assert fail concurrent invocation of operator function if first get processing time service register timer system current time millis this first false num element semaphore release override public void on processing time long time throw exception if semaphore try acquire assert fail concurrent invocation of operator function try num timer throw if do get processing time service register timer system current time millis this finally semaphore release private void throw if do if num timer num element throw new runtime exception test success override public void process watermark watermark mark throw exception if semaphore try acquire assert fail concurrent invocation of operator function semaphore release private static class two input timer operator extend abstract stream operator string implement two input stream operator string string string processing time callback private static final long serial version u i d 1 l int num timer int num element private boolean first true private semaphore semaphore new semaphore public two input timer operator chain strategy chain strategy set chain strategy chain strategy override public void process element1 stream record string element throw exception if semaphore try acquire assert fail concurrent invocation of operator function if first get processing time service register timer system current time millis this first false num element semaphore release override public void process element2 stream record string element throw exception if semaphore try acquire assert fail concurrent invocation of operator function if first get processing time service register timer system current time millis this first false num element semaphore release override public void on processing time long time throw exception if semaphore try acquire assert fail concurrent invocation of operator function try num timer throw if do get processing time service register timer system current time millis this finally semaphore release private void throw if do if num timer num element throw new runtime exception test success override public void process watermark1 watermark mark throw exception ignore override public void process watermark2 watermark mark throw exception ignore private static class infinite test source implement source function string private static final long serial version u i d 1 l private volatile boolean running true override public void run source context string ctx throw exception while run ctx collect hello override public void cancel run false parametrization parameterized parameter name time characteristic public static collection object execution mode return array as list new object time characteristic processing time new object time characteristic ingestion time new object time characteristic event time 
pojo serializer upgrade test run with parameterized class public class pojo serializer upgrade test extend test logger parameterize parameter name state backend public static collection string parameter return array as list state backend loader memory state backend name state backend loader f state backend name state backend loader rocksdb state backend name class rule public static temporary folder temporary folder new temporary folder private state backend state backend public pojo serializer upgrade test string backend type throw i o exception dynamic code loading exception configuration config new configuration config set string checkpointing option state backend backend type config set string checkpointing option checkpoint directory temporary folder new folder to u be i to string state backend state backend loader load state backend from config config thread current thread get context class loader null private static final string pojo name pojo private static final string source a import java util object public class pojo private long a private string b public long get a return a public void set a long value a value public string get b return b public void set b string value b value override public boolean equal object obj if obj instanceof pojo pojo other pojo obj return a other a b equal other b else return false override public int hash code return object hash a b override public string to string return a b change order of field which should be recoverable private static final string source b import java util object public class pojo private string b private long a public long get a return a public void set a long value a value public string get b return b public void set b string value b value override public boolean equal object obj if obj instanceof pojo pojo other pojo obj return a other a b equal other b else return false override public int hash code return object hash a b override public string to string return a b change type of a field which should not be recoverable private static final string source c import java util object public class pojo private double a private string b public double get a return a public void set a double value a value public string get b return b public void set b string value b value override public boolean equal object obj if obj instanceof pojo pojo other pojo obj return a other a b equal other b else return false override public int hash code return object hash a b override public string to string return a b additional field which should not be recoverable private static final string source d import java util object public class pojo private long a private string b private double c public long get a return a public void set a long value a value public string get b return b public void set b string value b value public double get c return c public void set c double value c value override public boolean equal object obj if obj instanceof pojo pojo other pojo obj return a other a b equal other b c other c else return false override public int hash code return object hash a b c override public string to string return a b c miss field which should not be recoverable private static final string source e import java util object public class pojo private long a public long get a return a public void set a long value a value override public boolean equal object obj if obj instanceof pojo pojo other pojo obj return a other a else return false override public int hash code return object hash a override public string to string return a we should be able to handle a changed field order of a pojo as keyed state test public void test change field order with key state throw exception test pojo serializer upgrade source a source b true true we should be able to handle a changed field order of a pojo as operator state test public void test change field order with operator state throw exception test pojo serializer upgrade source a source b true false change field type of a pojo as keyed state should require a state migration test public void test change field type with key state throw exception try test pojo serializer upgrade source a source c true true fail expect a state migration exception catch exception e if common test util contain cause e state migration exception class state migration exception expect else throw e change field type of a pojo as operator state should require a state migration test public void test change field type with operator state throw exception try test pojo serializer upgrade source a source c true false fail expect a state migration exception catch exception e if common test util contain cause e state migration exception class state migration exception expect else throw e add field to a pojo as keyed state should succeed test public void test additional field with key state throw exception test pojo serializer upgrade source a source d true true add field to a pojo as operator state should succeed test public void test additional field with operator state throw exception test pojo serializer upgrade source a source d true false remove field from a pojo as keyed state should succeed test public void test miss field with key state throw exception test pojo serializer upgrade source a source e false true remove field from a pojo as operator state should succeed test public void test miss field with operator state throw exception test pojo serializer upgrade source a source e false false private void test pojo serializer upgrade string class source a string class source b boolean have b field boolean be key state throw exception final configuration task configuration new configuration final execution config execution config new execution config final key selector long long key selector new identity key selector final collection long input array as list 1 l 2 l 45 l 67 l l run the program with class source a file root path temporary folder new folder file source file write source file root path pojo name java class source a compile class source file final class loader class loader u r l class loader new instance new url root path to u be i to u be l thread current thread get context class loader operator subtask state state handle run operator task configuration execution config new stream map new stateful mapper be key state false have b field key selector be key state state backend class loader null input run the program with class source b root path temporary folder new folder source file write source file root path pojo name java class source b compile class source file final class loader class loader b u r l class loader new instance new url root path to u be i to u be l thread current thread get context class loader run operator task configuration execution config new stream map new stateful mapper be key state true have b field key selector be key state state backend class loader b state handle input private operator subtask state run operator configuration task configuration execution config execution config one input stream operator long long operator key selector long long key selector boolean be key state state backend state backend class loader class loader operator subtask state operator subtask state iterable long input throw exception try final mock environment environment new mock environment builder set task name test task set manage memory size set input split provider new mock input split provider set buffer size set task configuration task configuration set execution config execution config set max parallelism set user code class loader class loader build one input stream operator test harness long long harness null try if be key state harness new keyed one input stream operator test harness operator key selector basic type info long type info environment else harness new one input stream operator test harness operator long serializer instance environment harness set state backend state backend harness setup harness initialize state operator subtask state harness open long timestamp 0 l for long value input harness process element value timestamp long checkpoint id 1 l long checkpoint timestamp timestamp 1 l return harness snapshot checkpoint id checkpoint timestamp finally i o util close quietly harness private static file write source file file root string name string source throw i o exception file source file new file root name source file get parent file mkdir try file writer writer new file writer source file writer write source return source file private static int compile class file source file java compiler compiler tool provider get system java compiler return compiler run null null null proc none source file get path private static final class stateful mapper extend rich map function long long implement checkpointed function private static final long serial version u i d l private final boolean keyed private final boolean verify private final boolean have b field key state private transient value state object key value state private transient list state object key list state private transient reduce state object key reduce state operator state private transient list state object partitionable list state private transient list state object union list state private transient class pojo class private transient field field a private transient field field b stateful mapper boolean keyed boolean verify boolean have b field this key key this verify verify this have b field have b field override public long map long value throw exception object pojo pojo class new instance field a set pojo value if have b field field b set pojo value if verify if key assert equal pojo key value state value iterator object list iterator key list state get iterator boolean element find false while list iterator have next element find pojo equal list iterator next assert true element find assert equal pojo key reduce state get else boolean element find false iterator object list iterator partitionable list state get iterator while list iterator have next element find pojo equal list iterator next assert true element find element find false list iterator union list state get iterator while list iterator have next element find pojo equal list iterator next assert true element find else if key keyed value state update pojo key list state add pojo keyed reduce state add pojo else partitionable list state add pojo union list state add pojo return value override public void snapshot state function snapshot context context throw exception suppress warning unchecked override public void initialize state function initialization context context throw exception pojo class get runtime context get user code class loader load class pojo name field a pojo class get declare field a field a set accessible true if have b field field b pojo class get declare field b field b set accessible true if key keyed value state context get key state store get state new value state descriptor key value state class object pojo class key list state context get key state store get list state new list state descriptor key list state class object pojo class reduce function object reduce function new first value reducer key reduce state context get key state store get reduce state new reduce state descriptor key reduce state reduce function class object pojo class else partitionable list state context get operator state store get list state new list state descriptor partitionable list state class object pojo class union list state context get operator state store get union list state new list state descriptor union list state class object pojo class private static final class first value reducer t implement reduce function t private static final long serial version u i d l override public t reduce t value1 t value2 throw exception return value1 private static final class identity key selector t implement key selector t t private static final long serial version u i d l override public t get key t value throw exception return value 
datum set util i t case run with parameterized class public class datum set util i t case extend multiple program test base public datum set util i t case test execution mode mode super mode test public void test count element per partition throw exception execution environment env execution environment get execution environment long expect size l datum set long number env generate sequence expect size datum set tuple2 integer long d datum set util count element per partition number assert assert equal env get parallelism d count assert assert equal expect size d sum collect get f1 long value test public void test zip with index throw exception execution environment env execution environment get execution environment long expect size l datum set long number env generate sequence expect size list tuple2 long long result new array list datum set util zip with index number collect assert assert equal expect size result size sort result by create index collection sort result new comparator tuple2 long long override public int compare tuple2 long long o1 tuple2 long long o2 return o1 f0 compare to o2 f0 test if index be consecutive for int i i expect size i assert assert equal i result get i f0 long value test public void test zip with unique id throw exception execution environment env execution environment get execution environment long expect size l datum set long number env generate sequence 1 l expect size datum set long id datum set util zip with unique id number map new map function tuple2 long long long override public long map tuple2 long long value throw exception return value f0 set long result new hash set id collect assert assert equal expect size result size test public void test integer datum set checksum hash code throw exception final execution environment env execution environment get execution environment datum set integer d collection data set get integer datum set env util checksum hash code checksum datum set util checksum hash code d assert assert equal checksum get count assert assert equal checksum get checksum test public void test summarize throw exception final execution environment env execution environment get execution environment list tuple8 short integer long float double string boolean double value datum new array list datum add new tuple8 short l 0.1 f 1.012376 hello false new double value 50.0 datum add new tuple8 short l 0.2 f 2.003453 hello true new double value 50.0 datum add new tuple8 short l 0.2 f 75.00005 null true new double value 50.0 datum add new tuple8 short l 0.9 f 79.5 true new double value 50.0 datum add new tuple8 short l 0.2 f 10.0000001 a false new double value 50.0 datum add new tuple8 short 10 l 0.1 f 0.0000000000023 true new double value 100.0 datum add new tuple8 short 1 l 0.2 f double positive infinity abcdefghijklmnop true new double value 100.0 datum add new tuple8 short l 0.001 f double na n abcdefghi true new double value 100.0 collection shuffle datum datum set tuple8 short integer long float double string boolean double value d env from collection datum call method under test tuple result datum set util summarize d assert assert equal result get arity numeric column summary short col0 summary result get field assert assert equal col0 summary get non miss count assert assert equal col0 summary get min short value assert assert equal col0 summary get max short value assert assert equal 5.375 col0 summary get mean double value 0.0 numeric column summary integer col1 summary result get field assert assert equal col1 summary get min int value assert assert equal col1 summary get max int value assert assert equal 5.375 col1 summary get mean double value 0.0 numeric column summary long col2 summary result get field assert assert equal l col2 summary get min long value assert assert equal l col2 summary get max long value numeric column summary float col3 summary result get field assert assert equal col3 summary get total count assert assert equal 0.001000 col3 summary get min double value 0.0000001 assert assert equal 0.89999999 col3 summary get max double value 0.0000001 assert assert equal 0.2376249988883501 col3 summary get mean double value 0.000000000001 assert assert equal 0.0768965488108089 col3 summary get variance double value 0.00000001 assert assert equal 0.27730226975415995 col3 summary get standard deviation double value 0.000000000001 numeric column summary double col4 summary result get field assert assert equal col4 summary get non miss count assert assert equal col4 summary get miss count assert assert equal 0.0000000000023 col4 summary get min double value 0.0 assert assert equal 79.5 col4 summary get max double value 0.000000000001 string column summary col5 summary result get field assert assert equal col5 summary get total count assert assert equal col5 summary get null count assert assert equal col5 summary get non null count assert assert equal col5 summary get empty count assert assert equal col5 summary get min length int value assert assert equal col5 summary get max length int value assert assert equal 5.0 col5 summary get mean length double value 0.0001 boolean column summary col6 summary result get field assert assert equal col6 summary get total count assert assert equal col6 summary get false count assert assert equal col6 summary get true count assert assert equal col6 summary get null count numeric column summary double col7 summary result get field assert assert equal 100.0 col7 summary get max double value 0.00001 assert assert equal 50.0 col7 summary get min double value 0.00001 
