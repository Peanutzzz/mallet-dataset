sy generator service impl slf4j service public class sy generator service impl extend service impl implement sy generator service autowire private sy generator mapper sy generator mapper override public page result map string object query list map string object map page map string object page new page map util get integer map page map util get integer map limit list map string object list sy generator mapper query list page map return page result map string object builder datum list code count page get total build override public map string string query table string table name return sy generator mapper query table table name override public list map string string query column string table name return sy generator mapper query column table name override public byte generator code string table name byte array output stream output stream new byte array output stream try zip output stream zip new zip output stream output stream for string table name table name map string string table query table table name list map string string column query column table name gen util generator code table column zip catch i o exception e log error generator code error e return output stream to byte array 
gen util slf4j public class gen util private gen util throw new illegal state exception utility class private final static string file name model model java vm private final static string file name mapper mapper java vm private final static string file name mapperxml mapper xml vm private final static string file name service service java vm private final static string file name serviceimpl service impl java vm private final static string file name controller controller java vm private final static string file name page index html vm private final static string template path template private final static string package package private final static string module name module name public static list string get template list string template new array list template add template path file name model template add template path file name mapper template add template path file name mapperxml template add template path file name service template add template path file name serviceimpl template add template path file name controller template add template path file name page return template public static void generator code map string string table list map string string column zip output stream zip configuration config get config boolean have big decimal false table entity table entity new table entity table entity set table name table get table name table entity set comment table get table comment java string class name table to java table entity get table name config get string table prefix table entity set class name class name table entity set classname string util uncapitalize class name list column entity colum list new array list for map string string column column column entity column entity new column entity column entity set column name column get column name column entity set datum type column get datum type column entity set comment column get column comment column entity set extra column get extra java string attr name column to java column entity get column name column entity set attr name attr name column entity set attrname string util uncapitalize attr name java string attr type config get string column entity get datum type unknow type column entity set attr type attr type if have big decimal big decimal equal attr type have big decimal true if pri equal ignore case column get column key table entity get pk null table entity set pk column entity colum list add column entity table entity set column colum list if table entity get pk null table entity set pk table entity get column get velocity property prop new property prop put file resource loader class org apache velocity runtime resource loader classpath resource loader velocity init prop string main path config get string main path main path string util be blank main path io renren main path map string object map new hash map map put table name table entity get table name map put comment table entity get comment map put pk table entity get pk map put class name table entity get class name map put classname table entity get classname map put path name table entity get classname to lower case map put column table entity get column map put have big decimal have big decimal map put main path main path map put package config get string package map put module name config get string module name map put author config get string author map put email config get string email map put datetime date util format new date common constant datetime format velocity context context new velocity context map list string template get template for string template template try string writer sw new string writer template tpl velocity get template template utf tpl merge context sw zip zip put next entry new zip entry get file name template table entity get class name config get string package config get string module name i o util write sw to string zip standard charset utf zip close entry catch i o exception e log error generator code error e java public static string column to java string column name return word util capitalize fully column name new char replace java public static string table to java string table name string table prefix if string util be not blank table prefix table name table name substring table prefix length return column to java table name public static configuration get config try return new property configuration generator property catch configuration exception e throw new runtime exception e public static string get file name string template string class name string package name string module name string package path main file separator java file separator if string util be not blank package name package path package name replace file separator file separator module name file separator if template contain file name model return package path model file separator class name java if template contain file name mapper return package path mapper file separator class name mapper java if template contain file name service return package path service file separator i class name service java if template contain file name serviceimpl return package path service file separator impl file separator class name service impl java if template contain file name controller return package path controller file separator class name controller java if template contain file name mapperxml return main file separator resource file separator mapper file separator class name mapper xml if template contain file name page return main file separator view file separator page file separator module name file separator index html return null 
abstract i file service slf4j public abstract class abstract i file service extend service impl file mapper file info implement i file service private static final string file split override public file info upload multipart file file throw exception file info file info file util get file info file if file info get name contain file split throw new illegal argument exception upload file file file info file info set source file type base mapper insert file info return file info return protect abstract string file type param file param file info protect abstract void upload file multipart file file file info file info throw exception param id id override public void delete string id file info file info base mapper select by id id if file info null base mapper delete by id file info get id this delete file file info param file info return protect abstract boolean delete file file info file info override public page result file info find list map string object param page file info page new page map util get integer param page map util get integer param limit list file info list base mapper find list page param return page result file info builder datum list code count page get total build 
file util slf4j public class file util private file util throw new illegal state exception utility class public static file info get file info multipart file file file info file info new file info file info set id id util fast simple u u i d file info set name file get original filename file info set content type file get content type file info set be img file info get content type start with image file info set size file get size file info set create time new date return file info md5 param input stream return public static string file md5 input stream input stream try return digest util md5 hex input stream catch i o exception e log error file md5 error e return null public static string save file multipart file file string path try file target file new file path if target file exist return path if target file get parent file exist target file get parent file mkdir file transfer to target file return path catch exception e log error save file error e return null public static boolean delete file string pathname file file new file pathname if file exist boolean flag file delete if flag file file file get parent file list file if file null file length file get parent file delete return flag return false 
aggregation service fallback factory slf4j component public class aggregation service fallback factory implement fallback factory aggregation service override public aggregation service create throwable throwable return index name route log error index name throwable return map util new hash map 
search service fallback factory slf4j public class search service fallback factory implement fallback factory search service override public search service create throwable throwable return index name search dto log error index name throwable return page result j s o n object builder build 
index controller slf4j rest controller api tag api request mapping admin public class index controller autowire private i index service index service autowire private index property index property post map index public result create index request body index dto index dto throw i o exception if index dto get number of shard null index dto set number of shard if index dto get number of replica null index dto set number of replica index service create index dto return result succeed get map index public page result map string string list request param require false string query str throw i o exception return index service list query str index property get show get map index public result map string object show index string index name throw i o exception map string object result index service show index name return result succeed result delete mapping index public result delete index string index name throw i o exception index service delete index name return result succeed 
aggregation controller slf4j rest controller api tag api request mapping agg public class aggregation controller private final i aggregation service aggregation service public aggregation controller i aggregation service aggregation service this aggregation service aggregation service param index name param routing e get map request stat index name route public map string object request stat agg path variable string index name path variable string routing throw i o exception return aggregation service request stat agg index name routing 
search controller slf4j rest controller api tag api request mapping search public class search controller private final i search service search service public search controller i search service search service this search service search service param index name param search dto dto post mapping index name public page result j s o n object str query path variable string index name request body require false search dto search dto throw i o exception if search dto null search dto new search dto return search service str query index name search dto 
sy menu controller rest controller api tag api slf4j request mapping menu public class sy menu controller autowire private i sy menu service menu service param sy menu return public static list sy menu tree builder list sy menu sy menu list sy menu menu new array list for sy menu sy menu sys menu if object util equal 1 l sy menu get parent id menu add sy menu for sy menu menu sy menu if menu get parent id equal sy menu get id if sy menu get sub menu null sy menu set sub menu new array list sy menu get sub menu add menu return menu param id api operation value delete mapping id public result delete path variable long id try menu service remove by id id return result succeed catch exception ex log error memu delete error ex return result fail api operation value role id get map role id menu public list map string object find menu by role id path variable long role id set long role id new hash set role id add role id list sy menu role menu menu service find by role role id list sy menu all menu menu service find all list map string object auth tree new array list map long sy menu role menu map role menu stream collect collector to map sy menu get id sy menu sy menu for sy menu sy menu all menu map string object auth tree new hash map auth tree put id sy menu get id auth tree put name sy menu get name auth tree put p id sy menu get parent id auth tree put open true auth tree put check false if role menu map get sy menu get id null auth tree put check true auth tree add auth tree return auth tree api operation value role code suppress warning unchecked cacheable value menu key role code get map role code public list sy menu find menu by role path variable string role code list sy menu result null if string util be not empty role code set string role set set string convert to collection hash set class string class role code result menu service find by role code role set common constant permission return result api operation value post mapping grant public result set menu to role request body sy menu sy menu menu service set menu to role sy menu get role id sy menu get menu id return result succeed api operation value get map find all public page result sy menu find all list sy menu list menu service find all return page result sy menu builder datum list code count long list size build api operation value get mapping find one public page result sy menu find one list sy menu list menu service find one return page result sy menu builder datum list code count long list size build param menu return api operation value post mapping save or update public result save or update request body sy menu menu try menu service save or update menu return result succeed catch exception ex log error memu save or update error ex return result fail return get map current api operation value public list sy menu find my menu login user sy user user list sy role role user get role if collection util be empty role return collection empty list list sy menu menu menu service find by role code role parallel stream map sy role get code collect collector to set common constant menu return tree builder menu 
sy role controller slf4j rest controller api tag api public class sy role controller autowire private i sy role service sy role service param param return api operation value get map role public page result sy role find role request param map string object param return sy role service find role param return api operation value get map all role public result list sy role find all list sy role result sy role service find all return result succeed result param sy role return post mapping role save or update public result save or update request body sy role sy role throw exception return sy role service save or update role sy role delete role param id api operation value delete mapping role id public result delete role path variable long id try if id 1 l return result fail sy role service delete role id return result succeed catch exception e log error role delete role error e return result fail 
sy user controller slf4j rest controller api tag api public class sy user controller private static final string admin change msg dto private static final logic del dto search logic del dto new logic del dto be del autowired private i sy user service app user service autowire private i query service query service login app user return api operation value access token get map user current public result login app user get login app user login user be full true sy user user return result succeed app user service get login app user user sy user get map value user name username api operation value cacheable value user key username public sy user select by username path variable string username return app user service select by username username login app user get mapping value user anon login param username api operation value public login app user find by username string username return app user service find by username username param mobile get mapping value user anon mobile param mobile api operation value public sy user find by mobile string mobile return app user service find by mobile mobile open id param open id open id get mapping value user anon open id param open id api operation value open id public sy user find by open id string open id return app user service find by open id open id get map user id public sy user find user by id path variable long id return app user service get by id id param sy user put mapping user cache put value user key sy user username unless result null audit log operation sy user public void update sy user request body sy user sy user app user service update by id sy user param id param role id post map user id role public void set role to user path variable long id request body set long role id app user service set role to user id role id param return get map user id role public list sy role find role by user id path variable long id return app user service find role by user id id param param return api operation value api implicit param api implicit param name page value require true datum type integer api implicit param name limit value require true datum type integer get map user public page result sy user find user request param map string object param return app user service find user param param param return api operation value get map user update enable api implicit param api implicit param name id value id require true datum type integer api implicit param name enable value require true datum type boolean public result update enable request param map string object param long id map util get long param id if check admin id return result fail admin change msg return app user service update enable param param id put mapping value user id password audit log operation id public result reset password path variable long id if check admin id return result fail admin change msg app user service update password id null null return result succeed put mapping value user password public result reset password request body sy user sy user if check admin sy user get id return result fail admin change msg app user service update password sy user get id sy user get old password sy user get new password return result succeed param id delete mapping value user id audit log operation id public result delete path variable long id if check admin id return result fail admin change msg app user service del user id return result succeed or param sy user return cache evict value user key sy user username post map user save or update audit log operation sy user username public result save or update request body sy user sy user throw exception return app user service save or update user sy user excel return post map user export public void export user request param map string object param http servlet response response throw i o exception list sy user excel result app user service find all user param excel util export excel result null sy user excel class user response post mapping value user import public result import excl request param file multipart file excl throw exception int row num if excl be empty list sy user excel list excel util import excel excl sy user excel class row num list size if row num list sy user user new array list row num list for each u sy user user new sy user bean util copy property u user user set password common constant def user password user set type user type backend name user add user app user service save batch user return result succeed row num api operation value api implicit param api implicit param name page value require true datum type integer api implicit param name limit value require true datum type integer api implicit param name query str value datum type string get map user search public page result j s o n object search search dto search dto search dto set be highlighter true search dto set sort col create time return query service str query sy user search dto search logic del dto private boolean check admin long id return id 1 l 
sy menu service impl slf4j service public class sy menu service impl extend super service impl sy menu mapper sy menu implement i sy menu service resource private i sy role menu service role menu service transactional rollback for exception class override public void set menu to role long role id set long menu id role menu service delete role id null if collection util be empty menu id list sy role menu role menu new array list menu id size menu id for each menu id role menu add new sy role menu role id menu id role menu service save batch role menu param role id return override public list sy menu find by role set long role id return role menu service find menu by role id role id null param role id id param role id return override public list sy menu find by role set long role id integer type return role menu service find menu by role id role id type override public list sy menu find by role code set string role code integer type return role menu service find menu by role code role code type override public list sy menu find all return base mapper select list new query wrapper sy menu order by asc sort override public list sy menu find one return base mapper select list new query wrapper sy menu eq type order by asc sort 
sy role menu service impl slf4j service public class sy role menu service impl extend super service impl sy role menu mapper sy role menu implement i sy role menu service resource private sy role menu mapper sy role menu mapper override public int save long role id long menu id return sy role menu mapper save role id menu id override public int delete long role id long menu id return sy role menu mapper delete role id menu id override public list sy menu find menu by role id set long role id integer type return sy role menu mapper find menu by role id role id type override public list sy menu find menu by role code set string role code integer type return sy role menu mapper find menu by role code role code type 
sy role service impl slf4j service public class sy role service impl extend super service impl sy role mapper sy role implement i sy role service private final static string lock key rolecode rolecode resource private sy user role mapper user role mapper resource private sy role menu mapper role menu mapper autowire private distribute lock lock transactional rollback for exception class override public void save role sy role sy role throw exception string role code sy role get code super save idempotency sy role lock lock key rolecode role code new query wrapper sy role eq code role code code transactional rollback for exception class override public void delete role long id base mapper delete by id id role menu mapper delete id null user role mapper delete user role null id override public page result sy role find role map string object param integer cur page map util get integer param page integer limit map util get integer param limit page sy role page new page cur page null cur page limit null limit list sy role list base mapper find list page param return page result sy role builder datum list code count page get total build override transactional public result save or update role sy role sy role throw exception if sy role get id null this save role sy role else base mapper update by id sy role return result succeed override public list sy role find all return base mapper find all 
sy role user service impl slf4j service public class sy role user service impl extend super service impl sy user role mapper sy role user implement i sy role user service resource private sy user role mapper sy user role mapper override public int delete user role long user id long role id return sy user role mapper delete user role user id role id override public int save user role long user id long role id return sy user role mapper save user role user id role id override public list sy role find role by user id long user id return sy user role mapper find role by user id user id override public list sy role find role by user id list long user id return sy user role mapper find role by user id user id 
sy user service impl slf4j service public class sy user service impl extend super service impl sy user mapper sy user implement i sy user service private final static string lock key username username autowire private password encoder password encoder resource private i sy role user service role user service resource private sy role menu mapper role menu mapper autowire private distribute lock lock override public login app user find by username string username sy user sy user this select by username username return get login app user sy user override public login app user find by open id string username sy user sy user this select by open id username return get login app user sy user override public login app user find by mobile string username sy user sy user this select by mobile username return get login app user sy user override public login app user get login app user sy user sy user if sy user null login app user login app user new login app user bean util copy property sy user login app user list sy role sy role role user service find role by user id sy user get id login app user set role sy role if collection util be empty sy role set long role id sy role parallel stream map super entity get id collect collector to set list sy menu menu role menu mapper find menu by role id role id common constant permission if collection util be empty menu set string permission menu parallel stream map p p get path collect collector to set login app user set permission permission return login app user return null param username return override public sy user select by username string username list sy user user base mapper select list new query wrapper sy user eq username username return get user user param mobile return override public sy user select by mobile string mobile list sy user user base mapper select list new query wrapper sy user eq mobile mobile return get user user open id param open id return override public sy user select by open id string open id list sy user user base mapper select list new query wrapper sy user eq open id open id return get user user private sy user get user list sy user user sy user user null if user null user be empty user user get return user transactional rollback for exception class override public void set role to user long id set long role id sy user sy user base mapper select by id id if sy user null throw new illegal argument exception role user service delete user role id null if collection util be empty role id list sy role user role user new array list role id size role id for each role id role user add new sy role user id role id role user service save batch role user transactional override public result update password long id string old password string new password sy user sy user base mapper select by id id if str util be not blank old password if password encoder match old password sy user get password return result fail if str util be blank new password new password common constant def user password sy user user new sy user user set id id user set password password encoder encode new password base mapper update by id user return result succeed override public page result sy user find user map string object param page sy user page new page map util get integer param page map util get integer param limit list sy user list base mapper find list page param long total page get total if total list long user id list stream map sy user get id collect collector to list list sy role sy role role user service find role by user id user id list for each u u set role sy role stream filter r object util not equal u get id r get user id collect collector to list return page result sy user builder datum list code count total build override public list sy role find role by user id long user id return role user service find role by user id user id override public result update enable map string object param long id map util get long param id boolean enable map util get boolean param enable sy user app user base mapper select by id id if app user null return result fail app user set enable enable app user set update time new date int i base mapper update by id app user log info app user return i result succeed app user result fail transactional rollback for exception class override public result save or update user sy user sy user throw exception if sy user get id null if string util be blank sy user get type sy user set type user type backend name sy user set password password encoder encode common constant def user password sy user set enable boolean true string username sy user get username boolean result super save or update idempotency sy user lock lock key username username new query wrapper sy user eq username username username if result str util be not empty sy user get role id role user service delete user role sy user get id null list role id array as list sy user get role id split if collection util be empty role id list sy role user role user new array list role id size role id for each role id role user add new sy role user sy user get id long parse long role id to string role user service save batch role user return result result succeed sy user result fail transactional rollback for exception class override public boolean del user long id role user service delete user role id null return base mapper delete by id id override public list sy user excel find all user map string object param list sy user excel sy user excel new array list list sy user list base mapper find list new page param for sy user sy user list sy user excel sy user excel new sy user excel bean util copy property sy user sy user excel sy user excel add sy user excel return sy user excel 
default permission service impl slf4j public abstract class default permission service impl autowire private security property security property private ant path matcher ant path matcher new ant path matcher param role code code return public abstract list sy menu find menu by role code string role code public boolean have permission authentication authentication string request method string request u be i option if http method option name equal ignore case request method return true if authentication instanceof anonymous authentication token url if security property get auth get url permission get enable return true admin string username auth util get username authentication if common constant admin user name equal username return true o auth2 authentication auth2 authentication o auth2 authentication authentication if be need auth auth2 authentication get o auth2 request get client id return true url api url for string path security property get auth get url permission get ignore url if ant path matcher match path request u r i return true list simple grant authority grant authority list list simple grant authority authentication get authority if collection util be empty grant authority list log warn authentication get principal return false string client id auth2 authentication get o auth2 request get client id tenant context holder set tenant client id string role code grant authority list stream map simple grant authority get authority collect collector join list sy menu menu list find menu by role code role code for sy menu menu menu list if string util be not empty menu get url ant path matcher match menu get url request u r i if str util be not empty menu get path method return request method equal ignore case menu get path method else return true return false param client id id return true false private boolean be need auth string client id boolean result true list string include client id security property get auth get url permission get include client id list string exclusive client id security property get auth get url permission get exclusive client id if include client id size result include client id contain client id else if exclusive client id size result exclusive client id contain client id return result 
auth util slf4j public class auth util private auth util throw new illegal state exception utility class private static final string basic basic requet head param token param request return public static string extract token http servlet request request string token extract header token request if token null token request get parameter o auth2 access token access token if token null log debug token not find in request parameter not a o auth2 request return token head token param request return private static string extract header token http servlet request request enumeration string header request get header common constant token header while header have more element string value header next element if value start with o auth2 access token bearer type string auth header value value substr o auth2 access token bearer type length trim int comma index auth header value index of if comma index auth header value auth header value substr comma index return auth header value return null header client id client secret public static string extract client http servlet request request string header request get header authorization if header null header start with basic throw new unapproved client authentication exception client return extract header client header header client id client secret param header header public static string extract header client string header byte base64 client header substr basic length get byte standard charset utf byte decode base64 get decoder decode base64 client string client str new string decode standard charset utf string client arr client str split if client arr length throw new runtime exception invalid basic authentication token return client arr public static string get username authentication authentication object principal authentication get principal string username null if principal instanceof sy user username sy user principal get username else if principal instanceof string username string principal return username 
default exception advice response body slf4j public class default exception advice illegal argument exception json response status http status bad request exception handler illegal argument exception class public result bad request exception illegal argument exception e return def handler e access deny exception json response status http status forbid exception handler access deny exception class public result bad method express exception access deny exception e return def handler e response status http status method not allow exception handler http request method not support exception class public result handle http request method not support exception http request method not support exception e return def handler e response status http status unsupported media type exception handler http media type not support exception class public result handle http media type not support exception http media type not support exception e return def handler e s q l exception sql response status http status internal server error exception handler s q l exception class public result handle s q l exception s q l exception e return def handler s q l exception e business exception response status http status internal server error exception handler business exception class public result handle exception business exception e return def handler e idempotency exception response status http status ok exception handler idempotency exception class public result handle exception idempotency exception e return result fail e get message response status http status internal server error exception handler exception class public result handle exception exception e return def handler e private result def handler string msg exception e log error msg e return result fail msg 
user service fallback factory slf4j public class user service fallback factory implement fallback factory user service override public user service create throwable throwable return new user service override public sy user select by username string username log error username throwable return new sy user override public login app user find by username string username log error username throwable return new login app user override public login app user find by mobile string mobile log error mobile throwable return new login app user override public login app user find by open id string open id log error open id open id throwable return new login app user 
lock aspect slf4j aspect public class lock aspect autowired require false private distribute lock locker sp e l private spel expression parser spel expression parser new spel expression parser private default parameter name discoverer name discoverer new default parameter name discoverer around within lock annotation lock public object around lock proceeding join point point lock lock throw throwable object lock obj null if lock null lock point get target get class get declare annotation lock class string lock key lock key if locker null throw new lock exception distribute lock be null if str util be empty lock key throw new lock exception lock key be null if lock key contain method signature method signature method signature point get signature object arg point get arg lock key get val by sp e l lock key method signature arg try if lock wait time lock obj locker try lock lock key lock wait time lock lease time lock unit lock be fair else lock obj locker lock lock key lock lease time lock unit lock be fair if lock obj null return point proceed else throw new lock exception finally locker unlock lock obj sp e l private string get val by sp e l string sp e l method signature method signature object arg string param name name discoverer get parameter name method signature get method if param name null param name length expression expression spel expression parser parse expression sp e l spring evaluation context context new standard evaluation context for int i i arg length i context set variable param name i args i return expression get value context to string return null 
client argument resolver slf4j public class client argument resolver implement handler method argument resolver param method parameter return override public boolean support parameter method parameter method parameter return method parameter have parameter annotation login client class method parameter get parameter type equal string class param method parameter param model and view container model view param native web request web param web datum binder factory return override public object resolve argument method parameter method parameter model and view container model and view container native web request native web request web datum binder factory web datum binder factory http servlet request request native web request get native request http servlet request class string client id request get header security constant tenant header if str util be blank client id log warn resolve argument error client id be empty return client id 
token argument resolver slf4j public class token argument resolver implement handler method argument resolver private user service user service public token argument resolver user service user service this user service user service param method parameter return override public boolean support parameter method parameter method parameter return method parameter have parameter annotation login user class method parameter get parameter type equal sy user class param method parameter param model and view container model view param native web request web param web datum binder factory return override public object resolve argument method parameter method parameter model and view container model and view container native web request native web request web datum binder factory web datum binder factory login user login user method parameter get parameter annotation login user class boolean be full login user be full http servlet request request native web request get native request http servlet request class string user id request get header security constant user id header string username request get header security constant user header string role request get header security constant role header if str util be blank username log warn resolve argument error username be empty return null sy user user if be full user user service select by username username else user new sy user user set id long value of user id user set username username list sy role sy role list new array list array stream role split for each role sy role sy role new sy role sy role set code role sy role list add sy role user set role sy role list return user 
addr util slf4j public class addr util private final static string unknown str unknown ip public static string get remote addr http servlet request request string ip request get header x forward for if be empty i p ip ip request get header proxy client ip if be empty i p ip ip request get header wl proxy client ip if be empty i p ip ip request get header http client ip if be empty i p ip ip request get header http x forward for if be empty i p ip ip request get remote addr if 127.0 0.1 equal ip 0:0 0:0 0:0 0:1 equal ip ip ip get local addr else if ip length string ip ip split for int index index ip length index string str ip ip index if be empty i p ip ip str ip break return ip private static boolean be empty i p string ip if str util be empty ip unknown str equal ignore case ip return true return false ip public static string get local addr try return inet address get local host get host address catch unknown host exception e log error inet address get local host error e return 
sequence slf4j public class sequence private final long twepoch l private final long worker id bit 5 l private final long datacenter id bit 5 l private final long max worker id 1 l 1 l worker id bit private final long max datacenter id 1 l 1 l datacenter id bit private final long sequence bit 12 l private final long worker id shift sequence bit private final long datacenter id shift sequence bit worker id bit private final long timestamp leave shift sequence bit worker id bit datacenter id bit private final long sequence mask 1 l 1 l sequence bit private final long worker id id private final long datacenter id private long sequence 0 l id private long last timestamp 1 l m private long timestamp offset 5 l public sequence this datacenter id get datacenter id max datacenter id this worker id get max worker id datacenter id max worker id p p param worker id id param datacenter id public sequence long worker id long datacenter id assert be false worker id max worker id worker id string format worker id can t be greater than d or less than max worker id assert be false datacenter id max datacenter id datacenter id string format datacenter id can t be greater than d or less than max datacenter id this worker id worker id this datacenter id datacenter id p max worker id p protect static long get max worker id long datacenter id long max worker id string builder mpid new string builder mpid append datacenter id string name management factory get runtime m x bean get name if str util be not empty name get jvm pid mpid append name split string pool at mac pid hashcode return mpid to string hash code 0xffff max worker id p id p protect static long get datacenter id long max datacenter id long id 0 l try inet address ip inet address get local host network interface network network interface get by inet address ip if network null id 1 l else byte mac network get hardware address if null mac id 0x000000 ff long mac mac length 0x0000 f f00 long mac mac length id id max datacenter id catch exception e log warn get datacenter id e get message return id id return public synchronize long next id long timestamp time gen if timestamp last timestamp long offset last timestamp timestamp if offset timestamp offset try wait offset timestamp time gen if timestamp last timestamp throw new runtime exception string format clock move backwards refuse to generate id for d millisecond offset catch exception e throw new runtime exception e else throw new runtime exception string format clock move backwards refuse to generate id for d millisecond offset if last timestamp timestamp sequence sequence sequence mask if sequence timestamp til next millis last timestamp else sequence thread local random current next long last timestamp timestamp return timestamp twepoch timestamp leave shift datacenter id datacenter id shift worker id worker id shift sequence protect long til next milli long last timestamp long timestamp time gen while timestamp last timestamp timestamp time gen return timestamp protect long time gen return system clock now 
audit log aspect slf4j aspect conditional on class http servlet request class request context holder class public class audit log aspect value spring application name private string application name private audit log property audit log property private i audit service audit service public audit log aspect audit log property audit log property i audit service audit service this audit log property audit log property this audit service audit service sp e l private spel expression parser spel expression parser new spel expression parser private default parameter name discoverer name discoverer new default parameter name discoverer before within audit log annotation audit log public void before method join point join point audit log audit log if audit log property get enable if audit service null log warn audit log aspect audit service be null return if audit log null audit log join point get target get class get declare annotation audit log class audit audit get audit audit log join point audit service save audit sp e l private string get val by sp e l string sp e l method signature method signature object arg string param name name discoverer get parameter name method signature get method if param name null param name length expression expression spel expression parser parse expression sp e l spring evaluation context context new standard evaluation context for int i i arg length i context set variable param name i args i return expression get value context to string return null private audit get audit audit log audit log join point join point audit audit new audit audit set timestamp local date time now audit set application name application name method signature method signature method signature join point get signature audit set class name method signature get declare type name audit set method name method signature get name servlet request attribute attribute servlet request attribute request context holder get request attribute http servlet request request attribute get request string user id request get header x userid header string user name request get header x user header string client id request get header x tenant header audit set user id user id audit set user name user name audit set client id client id string operation audit log operation if operation contain object arg join point get arg operation get val by sp e l operation method signature arg audit set operation operation return audit 
point util slf4j public class point util private static final string msg pattern private point util throw new illegal state exception utility class id 1 ： 2016 07 - 27 23:37 business center user login ip xxx xxx xx user name user type 2 ： 2016 07 - 27 23:37 file center c0a895e114526786450161001d1ed9 file upload file name xxx file path xxx param id id param type param message public static void info string id string type string message log info msg pattern id type message public static void debug string id string type string message log debug msg pattern id type message 
db audit service impl slf4j conditional on property name zlt audit log log type have value db conditional on class jdbc template class public class db audit service impl implement i audit service private static final string insert sql insert into sys logger application name class name method name user id user name client id operation timestamp value private final jdbc template jdbc template public db audit service impl autowired require false log db property log db property datum source datum source if log db property null string util be not empty log db property get jdbc url datum source new hikari datum source log db property this jdbc template new jdbc template datum source post construct public void init string sql create table if not exist sys logger n id int not null auto increment n application name varchar character set utf8 collate utf8 general ci null comment n class name varchar character set utf8 collate utf8 general ci not null comment n method name varchar character set utf8 collate utf8 general ci not null comment n user id int null comment id n user name varchar character set utf8 collate utf8 general ci null comment n client id varchar character set utf8 collate utf8 general ci null comment id n operation varchar character set utf8 collate utf8 general ci not null comment n timestamp varchar character set utf8 collate utf8 general ci not null comment n primary key id use btree n engine inno d b character set utf8 collate utf8 general ci row format dynamic this jdbc template execute sql async override public void save audit audit this jdbc template update insert sql audit get application name audit get class name audit get method name audit get user id audit get user name audit get client id audit get operation audit get timestamp 
logger audit service impl slf4j conditional on property name zlt audit log log type have value logger match if missing true public class logger audit service impl implement i audit service private static final string msg pattern id id 2020 - 02 04 09 13:34 user center com central user controller sy user controller save or update admin web app admin override public void save audit audit log debug msg pattern audit get timestamp format date time formatter of pattern yyyy mm dd hh mm ss sss audit get application name audit get class name audit get method name audit get user id audit get user name audit get client id audit get operation 
redus distribute lock slf4j conditional on class redis template class deprecate public class redis distribute lock autowired private redis template string object redis template private thread local string lock flag new thread local private static final string unlock lua lua static unlock lua if redi call get key argv then return redi call del key else return end public redis distribute lock redis template string object redis template super this redi template redis template param key key param expire param retry time param sleep millis return public boolean lock string key long expire int retry time long sleep millis boolean result set redis key expire while result retry time try log debug get redi distribute lock fail retry retry time thread sleep sleep milli catch interrupted exception e log warn interrupted e thread current thread interrupt result set redis key expire return result private boolean set redis final string key final long expire try boolean status redis template execute redis callback boolean connection string uuid uuid random u u i d to string lock flag set uuid byte key byte redis template get string serializer serialize key byte uuid byte redis template get string serializer serialize uuid boolean result connection set key byte uuid byte expiration from expire time unit millisecond redi string command set option if absent return result return status catch exception e log error set redis distribute lock occur a exception e return false param key key return public boolean release lock string key try lua redis value key redis spring redis connection boolean result redis template execute redis callback boolean connection byte script byte redis template get string serializer serialize unlock lua return connection eval script byte return type boolean redis template get string serializer serialize key redis template get string serializer serialize lock flag get return result catch exception e log error release redis distribute lock occur a exception e finally lock flag remove return false 
redis repository slf4j public class redis repository spring redis template private redis template string object redis template public redis repository redis template string object redis template this redis template redis template public redis connection factory get connection factory return this redis template get connection factory redis template public redis template string object get redis template return redi template db param node redi public void flush d b redis cluster node node this redis template op for cluster flush db node param key redis param value param time public void set expire final byte key final byte value final long time redis template execute redis callback long connection connection set ex key time value return 1 l param key redis param value param time public void set expire final string key final object value final long time redis template op for value set key value time time unit seconds param key redi param value param time public void set expire final string key final object value final long time for int i i key length i redi template op for value set key i value i time time unit seconds param key the key param value the value public void set final string key final object value for int i i key length i redi template op for value set key i value i param key the key param value the value public void set final string key final object value redi template op for value set key value key patten key param key patten the key patten return the set public set string key final string key patten return redi template key key patten key param key the key return the byte public byte get final byte key return redi template execute redis callback byte connection connection get key key param key the key return the string public object get final string key return redis template op for value get key op for hash hash operation return the hash operation public hash operation string string object op for hash return redi template op for hash hash map param key the key param hash key the hash key param hash value the hash value public void put hash value string key string hash key object hash value op for hash put key hash key hash value field param key the key param hash key the hash key return the hash value public object get hash value string key string hash key return op for hash get key hash key key param key the key param hash key the hash key public void del hash value string key object hash key op for hash delete key hash key key map param key the key return the hash value public map string object get hash value string key return op for hash entry key param key the key param map the map public void put hash value string key map string object map op for hash put all key map return the long public long db size return redi template execute redis server command db size redis return the string public string flush d b return redi template execute redis callback string connection connection flush db return ok param key the key return the boolean public boolean exist final string key return redi template have key key key param key the key return the long public boolean del final string key boolean result false for string key key result redis template delete key return result value param key the key return the long public long incr final string key return redis template op for value increment key redis list return the list operation public list operation string object op for list return redi template op for list redis list value key param key the key param value the value return the long public long leave push string key object value return op for list leave push key value redi list key param key the key return the string public object leave pop string key return op for list leave pop key redis list value key param key the key param value the value return the long public long in string key object value return op for list right push key value redi list key param key the key return the string public object right pop string key return op for list right pop key redis list key key key key param key the key return the long public long length string key return op for list size key redis list i value param key the key param i the param value the value public void remove string key long i object value op for list remove key i value redi list key index value param key the key param index the index param value the value public void set string key long index object value op for list set key index value redi list key start end param key the key param start the start param end the end return the list public list object get list string key int start int end return op for list range key start end redis list param key the key param list the list return the long public long leave push all string key list string list return op for list leave push all key list redis list value key index param key the key param index the index param value the value public void insert string key long index object value op for list set key index value 
order service impl slf4j service public class order service impl implement i order service override public void save order order system out println order get order id 
account controller slf4j rest controller public class account controller resource private account service account service post mapping value account reduce public boolean reduce string user id integer money account service reduce user id money return true 
account service slf4j service public class account service resource private account mapper account mapper transactional rollback for exception class public void reduce string user id int money if u002 equal user id throw new runtime exception this be a mock exception query wrapper account wrapper new query wrapper wrapper set entity new account set user id user id account account account mapper select one wrapper account set money account get money money account mapper update by id account 
business service slf4j service public class business service private static final string commodity code p001 private static final int order count resource private order feign client order feign client resource private storage feign client storage feign client global transactional public void place order string user id storage feign client deduct commodity code order count order feign client create user id commodity code order count 
order service slf4j service public class order service resource private account feign client account feign client resource private order mapper order mapper transactional rollback for exception class public void create string user id string commodity code integer count integer order money count order order new order set user id user id set commodity code commodity code set count count set money order money order mapper insert order account feign client reduce user id order money 
storage service slf4j service public class storage service resource private storage mapper storage mapper param commodity code param count transactional rollback for exception class public void deduct string commodity code int count query wrapper storage wrapper new query wrapper wrapper set entity new storage set commodity code commodity code storage storage storage mapper select one wrapper storage set count storage get count count storage mapper update by id storage 
user service impl slf4j service public class user service impl extend super service impl user mapper user implement i user service 
demo service impl service slf4j public class demo service impl implement demo service resource private demo mapper demo mapper resource private service b client service b client resource private service c client service c client lcn transaction transactional rollback for exception class override public string execute string value string ex flag string flag string d resp service b client rpc value step2 call remote service b string e resp service c client rpc value step3 execute local transaction demo demo new demo demo set group id trace context trace group id demo set demo field value demo set create time new date demo set app name transaction get application id demo mapper save demo dtx if object non null ex flag throw new illegal state exception by ex flag return d resp e resp ok service a 
demo service impl service slf4j public class demo service impl implement demo service resource private demo mapper demo mapper override lcn transaction transactional rollback for exception class public string rpc string value demo demo new demo demo set group id trace context trace group id demo set demo field value demo set app name transaction get application id demo set create time new date demo mapper save demo return ok service b 
demo service impl service slf4j public class demo service impl implement demo service resource private demo mapper demo mapper override lcn transaction transactional rollback for exception class public string rpc string value demo demo new demo demo set demo field value demo set create time new date demo set app name transaction get application id demo set group id trace context trace group id demo mapper save demo if equal value throw new illegal state exception by test return ok service c 
json access deny handler slf4j public class json access deny handler implement server access deny handler override public mono void handle server web exchange exchange access deny exception e return webflux response util response fail exchange http status forbid value e get message 
json authentication entry point slf4j public class json authentication entry point implement server authentication entry point override public mono void commence server web exchange exchange authentication exception e return webflux response util response fail exchange http status unauthorized value e get message 
permission auth manager slf4j component public class permission auth manager extend default permission service impl implement reactive authorization manager authorization context resource private menu service menu service override public mono authorization decision check mono authentication authentication authorization context authorization context return authentication map auth server web exchange exchange authorization context get exchange server http request request exchange get request boolean be permission super have permission auth request get method value request get u r i get path return new authorization decision be permission default if empty new authorization decision false override public list sy menu find menu by role code string role code return menu service find by role code role code 
menu service fallback factory slf4j component public class menu service fallback factory implement fallback factory menu service override public menu service create throwable throwable return role id log error find by role code role id throwable return collection util new array list 
naco route definition repository slf4j public class naco route definition repository implement route definition repository private static final string scg datum id scg route private static final string scg group id scg gateway private application event publisher publisher private naco config property naco config property public naco route definition repository application event publisher publisher naco config property naco config property this publisher publisher this naco config property naco config property add listener override public flux route definition get route definition try string content naco config property config service instance get config scg datum id scg group id list route definition route definition get list by str content return flux from iterable route definition catch naco exception e log error get route definition by naco error e return flux from iterable coll util new array list naco private void add listener try naco config property config service instance add listener scg datum id scg group id new listener override public executor get executor return null override public void receive config info string config info publisher publish event new refresh route event this catch nacos exception e log error naco add listener error e override public mono void save mono route definition route return null override public mono void delete mono string route id return null private list route definition get list by str string content if str util be not empty content return j s o n object parse array content route definition class return new array list 
reactive addr util slf4j public class reactive addr util private final static string unknown str unknown ip public static string get remote addr server http request request map string string header request get header to single value map string ip header get x forward for if be empty i p ip ip header get proxy client ip if be empty i p ip ip header get wl proxy client ip if be empty i p ip ip header get http client ip if be empty i p ip ip header get http x forward for if be empty i p ip ip request get remote address get address get host address if 127.0 0.1 equal ip 0:0 0:0 0:0 0:1 equal ip ip ip get local addr else if ip length string ip ip split for int index index ip length index string str ip ip index if be empty i p ip ip str ip break return ip private static boolean be empty i p string ip if str util be empty ip unknown str equal ignore case ip return true return false ip public static string get local addr try return inet address get local host get host address catch unknown host exception e log error inet address get local host error e return 
menu service fallback factory slf4j component public class menu service fallback factory implement fallback factory menu service override public menu service create throwable throwable return role id log error find by role code role id throwable return collection util new array list 
request statistics filter slf4j component public class request statistics filter extend zuul filter override public string filter type return filter constant pre type override public int filter order return override public boolean should filter return true override public object run request context ctx request context get current context http servlet request req ctx get request user agent user agent user agent parse user agent string req get header user agent point util debug request statistics ip addr util get remote addr req browser get browser user agent get browser get name operating system get operate system user agent get operate system get name return null private string get browser string browser if str util be not empty browser if browser contain chrome return chrome else if browser contain firefox return firefox else if browser contain safari return safari else if browser contain edge return edge return browser private string get operate system string operate system if str util be not empty operating system if operate system contain mac os x return mac os x else if operate system contain android return android return operate system 
naco dyn route locator slf4j public class naco dyn route locator extend abstract dyn route locator private static final string zuul datum id zuul route private static final string zuul group id zuul gateway private naco config property naco config property private application event publisher publisher private naco dyn route locator locator setter private list zuul route entity zuul route entity public naco dyn route locator naco config property naco config property application event publisher publisher string servlet path zuul property property super servlet path property this naco config property naco config property this publisher publisher this locator this add listener naco private void add listener try naco config property config service instance add listener zuul datum id zuul group id new listener override public executor get executor return null override public void receive config info string config info locator set zuul route entity get list by str config info route refresh event route refresh event new route refresh event locator publisher publish event route refresh event catch nacos exception e log error naco add listener error e override public map string zuul property zuul route load dynamic route map string zuul route route new link hash map if zuul route entity null zuul route entity get naco config for zuul route entity result zuul route entity if str util be blank result get path result be enable continue zuul route zuul route new zuul route bean util copy property result zuul route route put zuul route get path zuul route return route zuul private list zuul route entity get naco config try string content naco config property config service instance get config zuul datum id zuul group id return get list by str content catch nacos exception e log error listener naco error e return new array list public list zuul route entity get list by str string content if str util be not empty content return j s o n object parse array content zuul route entity class return new array list 
permission service impl slf4j service permission service public class permission service impl extend default permission service impl resource private menu service menu service override public list sy menu find menu by role code string role code return menu service find by role code role code public boolean have permission http servlet request request authentication authentication return have permission authentication request get method request get request u be i 
security handler config slf4j configuration public class security handler config bean public oauth logout handler oauth logout handler return new oauth logout handler bean public web response exception translator web response exception translator return new default web response exception translator public static final string bad msg override public response entity o auth2 exception translate exception e throw exception o auth2 exception o auth2 exception if e get message null e get message equal bad msg o auth2 exception new invalid grant exception e else if e instanceof internal authentication service exception o auth2 exception new invalid grant exception e get message e else if e instanceof redirect mismatch exception o auth2 exception new invalid grant exception e get message e else if e instanceof invalid scope exception o auth2 exception new invalid grant exception e get message e else o auth2 exception new unsupported response type exception e response entity o auth2 exception response super translate o auth2 exception response entity status o auth2 exception get http error code response get body add additional information resp code o auth2 exception get http error code response get body add additional information resp msg o auth2 exception get message return response bean public authentication success handler login success handler return new save request aware authentication success handler override public void on authentication success http servlet request request http servlet response response authentication authentication throw i o exception servlet exception super on authentication success request response authentication 
oauth token aspect slf4j component aspect public class oauth token aspect around execution org springframework security oauth2 provider endpoint token endpoint post access token public object handle controller method proceeding join point join point throw throwable try object arg join point get arg principal principal principal arg if principal instanceof authentication throw new insufficient authentication exception there be no client authentication try add a appropriate authentication filter string client id get client id principal map string string parameter map string string arg string grant type parameter get o auth2 util grant type id tenant context holder set tenant client id object proceed join point proceed if security constant authorization code equal grant type enable o auth2 sso sso demo ss sso enable o auth2 sso token return proceed else response entity o auth2 access token response entity response entity o auth2 access token proceed o auth2 access token body response entity get body return response entity status http status ok body result succeed body catch exception e log error e return response entity status http status bad request body result fail e get message finally tenant context holder clear private string get client id principal principal authentication client authentication principal if client be authenticate throw new insufficient authentication exception the client be not authenticate string client id client get name if client instanceof o auth2 authentication client id o auth2 authentication client get o auth2 request get client id return client id 
oauth logout handler slf4j public class oauth logout handler implement logout handler autowire private token store token store override public void logout http servlet request request http servlet response response authentication authentication assert not null token store token store must be set string token request get parameter token if str util be empty token token auth util extract token request if str util be not empty token o auth2 access token exist access token token store read access token token o auth2 refresh token refresh token if exist access token null if exist access token get refresh token null log info remove refresh token exist access token get refresh token refresh token exist access token get refresh token token store remove refresh token refresh token log info remove exist access token exist access token token store remove access token exist access token 
oauth logout success handler slf4j public class oauth logout success handler implement logout success handler private redirect strategy redirect strategy new default redirect strategy override public void on logout success http servlet request request http servlet response response authentication authentication throw i o exception string redirect uri request get parameter redirect uri if str util be not empty redirect uri redirect strategy send redirect request response redirect uri else response set status http status ok value response set character encode utf response set content type media type application json u t f8 value print writer writer response get writer string json str json to j s o n string result succeed writer write json str writer flush 
client service impl slf4j service public class client service impl extend super service impl client mapper client implement i client service private final static string lock key clientid client id autowire private redis repository redis repository autowire private password encoder password encoder autowire private distribute lock lock override public result save client client client throw exception client set client secret password encoder encode client get client secret str string client id client get client id super save or update idempotency client lock lock key clientid client id new query wrapper client eq client id client id client id return result succeed override public page result client list client map string object param boolean be page page client page if be page page new page map util get integer param page map util get integer param limit else page new page list client list base mapper find list page param page set record list return page result client builder datum list code count page get total build override public void del client long id string client id base mapper select by id id get client id base mapper delete by id id redis repository del client redi key client id private string client redi key string client id return security constant cache client key client id 
redis client detail service slf4j service public class redis client detail service extend jdbc client detail service private redis template string object redis template public redis client detail service datum source datum source redi template string object redi template super datum source this redis template redis template override public client detail load client by client id string client id redis client detail client detail client detail redi template op for value get client redi key client id if client detail null client detail cache and get client client id return client detail client client param client id return private client detail cache and get client string client id client detail client detail null try client detail super load client by client id client id if client detail null redis redis template op for value set client redis key client id client detail log info client id client id client detail catch no such client exception e log error client id client id client id catch invalid client exception e log error cache and get client invalid client client id e return client detail override public void update client detail client detail client detail super update client detail client detail cache and get client client detail get client id override public void update client secret string client id string secret super update client secret client id secret cache and get client client id override public void remove client detail string client id super remove client detail client id remove redis cache client id redis param client id private void remove redis cache string client id redi template delete client redi key client id oauth client detail redi public void load all client to cache list client detail list super list client detail if collection util be empty list log error oauth client detail return list parallel stream for each client redi template op for value set client redis key client get client id client private string client redi key string client id return security constant cache client key client id 
redis token service impl slf4j service public class redis token service impl implement i token service autowire private redis repository redis repository override public page result token vo list token map string object param string client id integer page map util get integer param page integer limit map util get integer param limit int start end page util trans to start end page limit redi key string redis key get redis key param client id long size redis repository length redi key list token vo result new array list limit token list object token objs redis repository get list redis key start end start end if token objs null for object obj token obj default o auth2 access token access token default o auth2 access token obj token token vo token vo new token vo token vo set token value access token get value token vo set expiration access token get expiration object auth obj redis repository get security constant redi token auth access token get value o auth2 authentication authentication o auth2 authentication auth obj if authentication null o auth2 request request authentication get o auth2 request token vo set username authentication get name token vo set client id request get client id token vo set grant type request get grant type result add token vo return page result token vo builder datum result code count size build redis key private string get redis key map string object param string client id string result string username map util get string param username if str util be not empty username result security constant redi uname to access client id username else result security constant redi client id to access client id return result 
user detail service impl slf4j service public class user detail service impl implement zlt user detail service social user detail service resource private user service user service override public user detail load user by username string username login app user login app user user service find by username username if login app user null throw new internal authentication service exception return check user login app user override public social user detail load user by user id string open id login app user login app user user service find by open id open id return check user login app user override public user detail load user by mobile string mobile login app user login app user user service find by mobile mobile return check user login app user private login app user check user login app user login app user if login app user null login app user be enable throw new disabled exception return login app user 
validate code service impl slf4j service public class validate code service impl implement i validate code service autowire private redis repository redis repository resource private user service user service random str param device id param image code override public void save image code string device id string image code redis repository set expire build key device id image code security constant default image expire p redis 60 s false redis param mobile return true false override public result send sm code string mobile object temp code redis repository get build key mobile if temp code null log error mobile temp code return result fail sy user user user service find by mobile mobile if user null log error mobile return result fail string code random util random number log info mobile code redis repository set expire build key mobile code security constant default image expire return result succeed true param device id override public string get code string device id return string redis repository get build key device id param device id override public void remove string device id redis repository del build key device id override public void validate string device id string valid code if string util be blank device id throw new validate code exception device id string code this get code device id if string util be blank valid code throw new validate code exception if code null throw new validate code exception if string util equal code valid code to lower case throw new validate code exception this remove device id private string build key string device id return security constant default code key device id 
oauth authorize aspect slf4j component aspect public class oauth authorize aspect autowired private user service user service around execution org springframework security oauth2 provider endpoint authorization endpoint authorize public object do around method proceeding join point join point throw throwable object arg join point get arg map string string parameter map string string arg principal principal principal arg if principal instanceof tenant username password authentication token tenant username password authentication token tenant token tenant username password authentication token principal string client id tenant token get client id string request client id parameter get o auth2 util client id if request client id equal client id try tenant context holder set tenant request client id login app user user user service find by username tenant token get name tenant token new tenant username password authentication token user tenant token get credentials user get authority request client id arg tenant token finally tenant context holder clear return join point proceed arg 
