foo service sentinel resource bind value api foo block handler foo block handler exception to trace illegal argument exception class public string foo int i throw exception if i throw new illegal access exception if i throw new illegal argument exception return hello for i 
foo service sentinel resource bind value api foo with fallback block handler foo block handler fallback foo fallback func exception to trace illegal argument exception class public string foo with fallback int i throw exception if i throw new illegal access exception if i throw new illegal argument exception return hello for i 
foo service sentinel resource bind value api another foo with default fallback default fallback global default fallback fallback class foo util class public string another foo int i if i throw new illegal argument exception oops return hello for i 
foo service sentinel resource bind block handler global block handler block handler class foo util class public int random return thread local random current next int 
foo service sentinel resource bind value api baz block handler baz block handler exception to ignore illegal monitor state exception class public string baz string name if name equal fail throw new illegal monitor state exception boom return cheer name 
test service impl override sentinel resource bind value test block handler handle exception block handler class exception util class public void test system out println test 
test service impl override sentinel resource bind value hello fallback hello fallback public string hello long s if s throw new illegal argument exception invalid arg return string format hello at d s 
test service impl override sentinel resource bind value hello another default fallback default fallback exception to ignore illegal state exception class public string hello another string name if name null bad equal name throw new illegal argument exception oops if foo equal name throw new illegal state exception oops return hello name 
greet service sentinel resource bind value greeting1 fallback global default fallback fallback class greet fallback class block handler global block handler block handler class greet fallback class public string greet string name if degrade equal name throw new runtime exception test sentinel fallback return hello name 
greet service sentinel resource bind value greeting2 fallback greet fallback public string greet with fallback name string name if degrade equal name throw new runtime exception test sentinel fallback return hello name 
sentinel resource interceptor interceptor sentinel resource bind priority public class sentinel resource interceptor extend abstract sentinel interceptor support around invoke object around invoke invocation context ctx throw throwable sentinel resource bind annotation ctx get method get annotation sentinel resource bind class if annotation null should not go through here throw new illegal state exception wrong state for sentinel resource annotation string resource name get resource name annotation value ctx get method entry type entry type annotation entry type int resource type annotation resource type entry entry null try entry sph u entry resource name resource type entry type ctx get parameter object result ctx proceed return result catch block exception ex return handle block exception ctx annotation ex catch throwable ex class extend throwable exception to ignore annotation exception to ignore the ignore list will be check first if exception to ignore length exception belong to ex exception to ignore throw ex if exception belong to ex annotation exception to trace trace exception ex return handle fallback ctx annotation ex no fallback function can handle the exception so throw it out throw ex finally if entry null entry exit ctx get parameter 
foo service sentinel resource bind value api foo block handler foo block handler exception to trace illegal argument exception class public string foo int i throw exception if i throw new illegal access exception if i throw new illegal argument exception return hello for i 
foo service sentinel resource bind value api foo with fallback block handler foo block handler fallback foo fallback func exception to trace illegal argument exception class public string foo with fallback int i throw exception if i throw new illegal access exception if i throw new illegal argument exception return hello for i 
foo service sentinel resource bind value api another foo with default fallback default fallback global default fallback fallback class foo util class public string another foo int i if i throw new illegal argument exception oops return hello for i 
foo service sentinel resource bind block handler global block handler block handler class foo util class public int random return thread local random current next int 
foo service sentinel resource bind value api baz block handler baz block handler exception to ignore illegal monitor state exception class public string baz string name if name equal fail throw new illegal monitor state exception boom return cheer name 
